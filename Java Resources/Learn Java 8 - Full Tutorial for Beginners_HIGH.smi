<sami>
<head>
<Title>Learn Java 8 - Full Tutorial for Beginners_HIGH</Title>
<style type='text/css'><!--
.en { Name:English; lang:en; SAMIType:CC; }
.tr { Name:Turkish; lang:tr; SAMIType:CC; }
--></style>
</head>
<body>
<SYNC Start=130><P class='en'>Hi, welcome to my free Java video course.
Lesson One. My name is Marcos B. I&#39;m a software
<SYNC Start=16579><P class='en'>&nbsp;
<SYNC Start=16579><P class='en'>Craftsman with 14 years of experience in Java.
My goal is to teach you Java in the easiest
<SYNC Start=23349><P class='en'>&nbsp;
<SYNC Start=23349><P class='en'>possible way. Okay, we will start with a briefing,
which is basically a lot of theory in the
<SYNC Start=29309><P class='en'>&nbsp;
<SYNC Start=29309><P class='en'>beginning. Second, we will do a practice session,
where we will actually write our first Java
<SYNC Start=36090><P class='en'>&nbsp;
<SYNC Start=36090><P class='en'>program. Finally, we will do a short key briefing,
where we will recap what we learned so far,
<SYNC Start=43400><P class='en'>&nbsp;
<SYNC Start=43400><P class='en'>and add some more theory were needed. In this
first lesson, I&#39;m going to introduce you to
<SYNC Start=52010><P class='en'>&nbsp;
<SYNC Start=52010><P class='en'>the following 15 Java key words or concepts,
which you will need to understand your first
<SYNC Start=58100><P class='en'>&nbsp;
<SYNC Start=58100><P class='en'>coding session later on. Please note, especially
if you already know some programming, I really
<SYNC Start=64859><P class='en'>&nbsp;
<SYNC Start=64859><P class='en'>focus on not using any term before I officially
introduced it, getting a keyword explained
<SYNC Start=71880><P class='en'>&nbsp;
<SYNC Start=71880><P class='en'>using concepts I don&#39;t know, something that
always ticks me off in classes, so I aim to
<SYNC Start=77479><P class='en'>&nbsp;
<SYNC Start=77479><P class='en'>do better in this aspect. Therefore, intentionally,
I might explain a few things, not 100% academically
<SYNC Start=85820><P class='en'>&nbsp;
<SYNC Start=85820><P class='en'>correct in the beginning. When necessary,
I will add the academically correct later
<SYNC Start=91369><P class='en'>&nbsp;
<SYNC Start=91369><P class='en'>on. As stated earlier, my goal is to teach
you Java in the easiest possible way. If I
<SYNC Start=100100><P class='en'>&nbsp;
<SYNC Start=100100><P class='en'>can achieve this by looking just a bit stupid,
that&#39;s fine with me. Last but not least, this
<SYNC Start=107509><P class='en'>&nbsp;
<SYNC Start=107509><P class='en'>is really only a first introduction. It&#39;s
okay if you don&#39;t directly grasp everything.
<SYNC Start=113340><P class='en'>&nbsp;
<SYNC Start=113340><P class='en'>We will go in more detail and recap the important
parts later on.
<SYNC Start=120670><P class='en'>&nbsp;
<SYNC Start=120670><P class='en'>A package or better package structure is like
the file structure on your computer. It helps
<SYNC Start=130190><P class='en'>&nbsp;
<SYNC Start=130190><P class='en'>to organize the different files of your program.
The top root folder of a package structure
<SYNC Start=137520><P class='en'>&nbsp;
<SYNC Start=137520><P class='en'>is usually the organization&#39;s domain name
in a reverse order. In my case, that would
<SYNC Start=145080><P class='en'>&nbsp;
<SYNC Start=145080><P class='en'>become Marco spiele. For example, if you don&#39;t
have a domain for the program you&#39;re writing,
<SYNC Start=152420><P class='en'>&nbsp;
<SYNC Start=152420><P class='en'>it&#39;s okay to invent your own domain name,
but make sure it&#39;s a unique name. The reason
<SYNC Start=159430><P class='en'>&nbsp;
<SYNC Start=159430><P class='en'>for this is that the name of a program file
is actually a combination of its own name,
<SYNC Start=164630><P class='en'>&nbsp;
<SYNC Start=164630><P class='en'>plus the full package structure of the package.
It recites and there are millions of other
<SYNC Start=171110><P class='en'>&nbsp;
<SYNC Start=171110><P class='en'>programs out there, and chances are high that
someone else has already used exactly the
<SYNC Start=176730><P class='en'>&nbsp;
<SYNC Start=176730><P class='en'>same program file name before you. As Java
code is heavily shared worldwide, a strategy
<SYNC Start=184970><P class='en'>&nbsp;
<SYNC Start=184970><P class='en'>was needed to come up with a unique name to
prevent name clashes. Each domain names can
<SYNC Start=191740><P class='en'>&nbsp;
<SYNC Start=191740><P class='en'>technically exist only once. Therefore, using
a domain name as the prefix for your package
<SYNC Start=199980><P class='en'>&nbsp;
<SYNC Start=199980><P class='en'>name as the default. Think of the package
name, like an absolute file name of your program
<SYNC Start=205780><P class='en'>&nbsp;
<SYNC Start=205780><P class='en'>file. Using your package name is optional,
but I highly recommend you to do so even for
<SYNC Start=215440><P class='en'>&nbsp;
<SYNC Start=215440><P class='en'>the simplest program. When used, the package
must be declared on the first line of your
<SYNC Start=220690><P class='en'>&nbsp;
<SYNC Start=220690><P class='en'>Java program. The package name is starting
with a domain name in reverse order. As stated
<SYNC Start=230950><P class='en'>&nbsp;
<SYNC Start=230950><P class='en'>before. The reason for this is that the package
name from left to right gets more and more
<SYNC Start=236960><P class='en'>&nbsp;
<SYNC Start=236960><P class='en'>specific. Using lowercase and singular for
package names is the recommended default.
<SYNC Start=243710><P class='en'>&nbsp;
<SYNC Start=243710><P class='en'>Last but not least, the package name also
serves as a high level description of all
<SYNC Start=250620><P class='en'>&nbsp;
<SYNC Start=250620><P class='en'>the Program Files related to a certain topic.
code written for less than one of this Java
<SYNC Start=256840><P class='en'>&nbsp;
<SYNC Start=256840><P class='en'>course would end up in a package called con
Marco spiele. java course lesson one for example.
<SYNC Start=264080><P class='en'>&nbsp;
<SYNC Start=264080><P class='en'>Please choose package names for fully. It&#39;s
not just a stupid name. The package names
<SYNC Start=271460><P class='en'>&nbsp;
<SYNC Start=271460><P class='en'>reflect the internal structure of your entire
program. Last but not least, I recommend you
<SYNC Start=277970><P class='en'>&nbsp;
<SYNC Start=277970><P class='en'>to choose package names related to your specific
business topic. Rather than just using technical
<SYNC Start=284560><P class='en'>&nbsp;
<SYNC Start=284560><P class='en'>terms. Good names are key. To simplify programming.
Every program file will reuse existing code.
<SYNC Start=296370><P class='en'>&nbsp;
<SYNC Start=296370><P class='en'>To do so you have to import the code into
your program file. In our program file, the
<SYNC Start=303840><P class='en'>&nbsp;
<SYNC Start=303840><P class='en'>import statement or import statements will
follow directly after the package declaration.
<SYNC Start=309680><P class='en'>&nbsp;
<SYNC Start=309680><P class='en'>Here you can also see how the package name
must be included in the import statement,
<SYNC Start=315680><P class='en'>&nbsp;
<SYNC Start=315680><P class='en'>as it is actually part of the programs falling.
You may import specific files, or all files
<SYNC Start=324440><P class='en'>&nbsp;
<SYNC Start=324440><P class='en'>of a certain package using the star symbol.
Besides regular import statements, they are
<SYNC Start=333390><P class='en'>&nbsp;
<SYNC Start=333390><P class='en'>also static imports, which we will cover in
detail at a later time. A simple program can
<SYNC Start=341050><P class='en'>&nbsp;
<SYNC Start=341050><P class='en'>easily consist of 1000s if not 10s of 1000s
of code lines, it&#39;s very easy to get lost
<SYNC Start=347639><P class='en'>&nbsp;
<SYNC Start=347639><P class='en'>in such a big pile of information. Therefore,
it&#39;s really important to impose a structure
<SYNC Start=353639><P class='en'>&nbsp;
<SYNC Start=353639><P class='en'>on the program code besides using packages,
as explained before, in Java, the program
<SYNC Start=360590><P class='en'>&nbsp;
<SYNC Start=360590><P class='en'>code is classified into different units of
code. Such a unit we call a class.
<SYNC Start=369860><P class='en'>&nbsp;
<SYNC Start=369860><P class='en'>The programmer is the one who may decide how
to name and structure packages, as well as
<SYNC Start=377010><P class='en'>&nbsp;
<SYNC Start=377010><P class='en'>classes. One aspect of Java is to improve
cooperation between business clients and programmers.
<SYNC Start=383000><P class='en'>&nbsp;
<SYNC Start=383000><P class='en'>The client is able or should be able to tell
what he wants, the program is able or should
<SYNC Start=390330><P class='en'>&nbsp;
<SYNC Start=390330><P class='en'>be able to know how this can be expressed
in code. The closer this code is related to
<SYNC Start=396460><P class='en'>&nbsp;
<SYNC Start=396460><P class='en'>the business easier, the cooperation between
programmers and business people will be forming
<SYNC Start=403210><P class='en'>&nbsp;
<SYNC Start=403210><P class='en'>a common language related to the business
and use throughout the code is therefore of
<SYNC Start=408900><P class='en'>&nbsp;
<SYNC Start=408900><P class='en'>utmost importance. By convention, the name
of a class in Java should be a noun, starting
<SYNC Start=416320><P class='en'>&nbsp;
<SYNC Start=416320><P class='en'>with a capital letter. opening curly brace
defines the beginning of the definition of
<SYNC Start=422250><P class='en'>&nbsp;
<SYNC Start=422250><P class='en'>the class, where we will later write all our
code related to a car. The closing curly brace
<SYNC Start=431580><P class='en'>&nbsp;
<SYNC Start=431580><P class='en'>defines the end of the definition of the class,
a class should be focused on only one topic.
<SYNC Start=438560><P class='en'>&nbsp;
<SYNC Start=438560><P class='en'>As a recommendation, keep your classes as
small as possible to improve reusability as
<SYNC Start=444540><P class='en'>&nbsp;
<SYNC Start=444540><P class='en'>well as readability. A class usually consists
of one or more methods. As the name implies,
<SYNC Start=456530><P class='en'>&nbsp;
<SYNC Start=456530><P class='en'>it defines a method of how to achieve a certain
thing, like a method double could be defined
<SYNC Start=464290><P class='en'>&nbsp;
<SYNC Start=464290><P class='en'>to calculate the double amount of an input
given methods are sometimes also called functions.
<SYNC Start=470970><P class='en'>&nbsp;
<SYNC Start=470970><P class='en'>For now, one at 100%. Academically correct,
it&#39;s okay to use the terms interchangeably.
<SYNC Start=477730><P class='en'>&nbsp;
<SYNC Start=477730><P class='en'>By convention, the name of a method should
be a verb that best describes the purpose
<SYNC Start=483050><P class='en'>&nbsp;
<SYNC Start=483050><P class='en'>of the method. Methods define the actions
you can execute on classes, so they further
<SYNC Start=490419><P class='en'>&nbsp;
<SYNC Start=490419><P class='en'>refine the structure of our program code.
methods can do pretty much everything for
<SYNC Start=496360><P class='en'>&nbsp;
<SYNC Start=496360><P class='en'>us. methods can operate not only in numbers,
but also on text, colors, sounds, you name
<SYNC Start=503770><P class='en'>&nbsp;
<SYNC Start=503770><P class='en'>it. A book would have chapters, every chapter
would have paragraphs and every paragraph
<SYNC Start=511590><P class='en'>&nbsp;
<SYNC Start=511590><P class='en'>would have sentences structuring your Java
code in a similar way. Packaging name would
<SYNC Start=518500><P class='en'>&nbsp;
<SYNC Start=518500><P class='en'>be like a chapter, a class would be like a
paragraph, and a method would be like a sentence.
<SYNC Start=525000><P class='en'>&nbsp;
<SYNC Start=525000><P class='en'>For example, methods internally can call other
methods, which will then form a hierarchy
<SYNC Start=531770><P class='en'>&nbsp;
<SYNC Start=531770><P class='en'>of methods calling each other. As a programmer.
It&#39;s up to you of how you want to structure
<SYNC Start=539120><P class='en'>&nbsp;
<SYNC Start=539120><P class='en'>your code, how long you want a method to be,
which method will use which sub methods. I
<SYNC Start=546010><P class='en'>&nbsp;
<SYNC Start=546010><P class='en'>would recommend however, to always think of
the current level of abstraction, just as
<SYNC Start=551360><P class='en'>&nbsp;
<SYNC Start=551360><P class='en'>if you would write a book. For example, a
method prepared dinner could internally call
<SYNC Start=557740><P class='en'>&nbsp;
<SYNC Start=557740><P class='en'>a method prepare appetizer, followed by a
method called prepare main course, followed
<SYNC Start=565110><P class='en'>&nbsp;
<SYNC Start=565110><P class='en'>again by a method called prepper. Desert.
The prepare main course method for instance,
<SYNC Start=571640><P class='en'>&nbsp;
<SYNC Start=571640><P class='en'>could internally call a method called boil
water. Mixing the levels of abstraction work
<SYNC Start=579070><P class='en'>&nbsp;
<SYNC Start=579070><P class='en'>for example mean to have a method prepare
dinner, internally calling a method prepare
<SYNC Start=584981><P class='en'>&nbsp;
<SYNC Start=584981><P class='en'>appetizer 30 followed by a method called warm
water without having a proper main course
<SYNC Start=592810><P class='en'>&nbsp;
<SYNC Start=592810><P class='en'>method surrounding it. Coming up with clean
structure is key in programming. Make your
<SYNC Start=600260><P class='en'>&nbsp;
<SYNC Start=600260><P class='en'>Code speak to you. Today with problems of
millions of lines of code. The most important
<SYNC Start=606950><P class='en'>&nbsp;
<SYNC Start=606950><P class='en'>part of programming is structure and readability
for humans. As soon as you start to lose focus
<SYNC Start=613910><P class='en'>&nbsp;
<SYNC Start=613910><P class='en'>and have difficulties in understanding what
a program does, chances are high you will
<SYNC Start=618950><P class='en'>&nbsp;
<SYNC Start=618950><P class='en'>misunderstand some concept of the code. And
so you might introduce an error. Keep your
<SYNC Start=625130><P class='en'>&nbsp;
<SYNC Start=625130><P class='en'>methods as short as possible. As a rule of
thumb, I would recommend 123 lines with 20
<SYNC Start=632899><P class='en'>&nbsp;
<SYNC Start=632899><P class='en'>lines as a maximum.
<SYNC Start=638880><P class='en'>&nbsp;
<SYNC Start=638880><P class='en'>The definition of a method follows a similar
concept of that of a class. First, we define
<SYNC Start=644830><P class='en'>&nbsp;
<SYNC Start=644830><P class='en'>the name of the method. As stated before,
he was a word and start with a lowercase letter.
<SYNC Start=651310><P class='en'>&nbsp;
<SYNC Start=651310><P class='en'>The name of a method is followed by an opening
and closing bracket. This is the place where
<SYNC Start=657200><P class='en'>&nbsp;
<SYNC Start=657200><P class='en'>we mainly find the names of zero to an unlimited
amount of input fields. When using the method
<SYNC Start=663300><P class='en'>&nbsp;
<SYNC Start=663300><P class='en'>later on, you will need to choose a value
for those values. These values are called
<SYNC Start=669240><P class='en'>&nbsp;
<SYNC Start=669240><P class='en'>method parameters. In order to further improve
the structure and readability of your code,
<SYNC Start=675520><P class='en'>&nbsp;
<SYNC Start=675520><P class='en'>I recommend you to use as few as possible
method parameters, with three to five parameters
<SYNC Start=682830><P class='en'>&nbsp;
<SYNC Start=682830><P class='en'>as a maximum, everything more than that will
not be readable. The opening curly brace defines
<SYNC Start=690979><P class='en'>&nbsp;
<SYNC Start=690980><P class='en'>the beginning of the method definition. closing
curly brace defines the end of the method
<SYNC Start=697431><P class='en'>&nbsp;
<SYNC Start=697431><P class='en'>definition. Later, we will define the actual
code of the method that will go into the space
<SYNC Start=704360><P class='en'>&nbsp;
<SYNC Start=704360><P class='en'>between the curly braces. As the name implies,
a variable is a variable value, a placeholder
<SYNC Start=716300><P class='en'>&nbsp;
<SYNC Start=716300><P class='en'>for a value that you can set. The value of
a variable may change while the program is
<SYNC Start=722730><P class='en'>&nbsp;
<SYNC Start=722730><P class='en'>running. For example, when the third value
is calculated over the lifetime of your program.
<SYNC Start=730350><P class='en'>&nbsp;
<SYNC Start=730350><P class='en'>variables can be used as input or output values
of methods. For example, variables can be
<SYNC Start=736730><P class='en'>&nbsp;
<SYNC Start=736730><P class='en'>of different data types, like numbers or text.
data types we will cover in detail at a later
<SYNC Start=743120><P class='en'>&nbsp;
<SYNC Start=743120><P class='en'>time. Just for example, possible variable
names for a car could be my old car, my pushy,
<SYNC Start=753850><P class='en'>&nbsp;
<SYNC Start=753850><P class='en'>or mom&#39;s car. There are different types of
variables, like instance variables, static
<SYNC Start=762039><P class='en'>&nbsp;
<SYNC Start=762040><P class='en'>variables, local variables, parameters or
arguments, we will cover the differences in
<SYNC Start=768220><P class='en'>&nbsp;
<SYNC Start=768220><P class='en'>a later session.
<SYNC Start=774760><P class='en'>&nbsp;
<SYNC Start=774760><P class='en'>Public is an access modifier that defines
that any class from any package may use the
<SYNC Start=780660><P class='en'>&nbsp;
<SYNC Start=780660><P class='en'>class or method with public access modifier.
Besides public, there are also other access
<SYNC Start=786200><P class='en'>&nbsp;
<SYNC Start=786200><P class='en'>modifiers like private default or protected.
Here we are only skimming a topic. In a later
<SYNC Start=792630><P class='en'>&nbsp;
<SYNC Start=792630><P class='en'>session we are going to cover access modifiers
in detail. Here you can see the access modifier
<SYNC Start=802120><P class='en'>&nbsp;
<SYNC Start=802120><P class='en'>public in action. The class as well as the
method now posts have public access defined.
<SYNC Start=812360><P class='en'>&nbsp;
<SYNC Start=812360><P class='en'>For every method, you actually have to define
our return value. Ironically, even when you
<SYNC Start=818870><P class='en'>&nbsp;
<SYNC Start=818870><P class='en'>don&#39;t want to return any value at all. In
this case, you will send void as return value
<SYNC Start=824700><P class='en'>&nbsp;
<SYNC Start=824700><P class='en'>of the method to explicitly define that the
method will not return a value. Besides void,
<SYNC Start=831209><P class='en'>&nbsp;
<SYNC Start=831209><P class='en'>a method can actually return any kind of data
type. Here you can see the void return type
<SYNC Start=838290><P class='en'>&nbsp;
<SYNC Start=838290><P class='en'>in action or drive method suppose to make
the car drive which is expected to execute
<SYNC Start=845040><P class='en'>&nbsp;
<SYNC Start=845040><P class='en'>an action but not to return any value to us.
As a rule of thumb, it&#39;s good design to differentiate
<SYNC Start=852480><P class='en'>&nbsp;
<SYNC Start=852480><P class='en'>between query methods, which will return a
value but do not alter the state and command
<SYNC Start=859220><P class='en'>&nbsp;
<SYNC Start=859220><P class='en'>methods which offer the state but do not return
a value. In respect to this best practice
<SYNC Start=865800><P class='en'>&nbsp;
<SYNC Start=865800><P class='en'>rule. Drive is a command method and therefore
does not return any value. The Add symbol
<SYNC Start=877550><P class='en'>&nbsp;
<SYNC Start=877550><P class='en'>indicates an annotation. We will cover annotations
in detail in a later session. Just for now,
<SYNC Start=884510><P class='en'>&nbsp;
<SYNC Start=884510><P class='en'>I want you to know that with ADD test, we
indicate that a given method will be used
<SYNC Start=890010><P class='en'>&nbsp;
<SYNC Start=890010><P class='en'>as a test. When a class a variable or method
name consists of more than one word In Java,
<SYNC Start=900880><P class='en'>&nbsp;
<SYNC Start=900880><P class='en'>you use an uppercase letter to indicate the
beginning of a new word. This is called camel
<SYNC Start=907980><P class='en'>&nbsp;
<SYNC Start=907980><P class='en'>case, as the ups and downs of upper and lowercase
letters look like camel humps. In other programming
<SYNC Start=918120><P class='en'>&nbsp;
<SYNC Start=918120><P class='en'>languages, and underscore is used to separate
two words from each other inside a variable
<SYNC Start=924390><P class='en'>&nbsp;
<SYNC Start=924390><P class='en'>name. In Java, however, camel case is used
instead. To indicate the end of a sentence,
<SYNC Start=933310><P class='en'>&nbsp;
<SYNC Start=933310><P class='en'>we use a thought in English sentences. In
Java, however, the DOT has a completely different
<SYNC Start=939769><P class='en'>&nbsp;
<SYNC Start=939769><P class='en'>meaning. The dot between the variable car
and the method drive indicates that we want
<SYNC Start=947351><P class='en'>&nbsp;
<SYNC Start=947351><P class='en'>to execute or we will alter. Alternatively,
say call the method drive on car. As the.is
<SYNC Start=956790><P class='en'>&nbsp;
<SYNC Start=956790><P class='en'>already used to indicate a method being called
a colon is used to indicate the end of a statement
<SYNC Start=962610><P class='en'>&nbsp;
<SYNC Start=962610><P class='en'>in Java. Here we can see an example of a test
method that is expected to test that our car
<SYNC Start=970519><P class='en'>&nbsp;
<SYNC Start=970519><P class='en'>drives. The method drive is executed on car
with the value of 100. Colin says I want this
<SYNC Start=979510><P class='en'>&nbsp;
<SYNC Start=979510><P class='en'>to be executed period. I talked about classes
already. I said that a class is a way of structuring
<SYNC Start=990269><P class='en'>&nbsp;
<SYNC Start=990269><P class='en'>code in Java, a unit of code. This is perfectly
true. However, it&#39;s only part of the magic.
<SYNC Start=997240><P class='en'>&nbsp;
<SYNC Start=997240><P class='en'>A class is like a template, like a definition
of what you want the class to do for you later
<SYNC Start=1003550><P class='en'>&nbsp;
<SYNC Start=1003550><P class='en'>on when the program is running. The class
car for example, defines the behavior of a
<SYNC Start=1009480><P class='en'>&nbsp;
<SYNC Start=1009480><P class='en'>car. However, when your program is running,
we say at runtime, there will usually be a
<SYNC Start=1016350><P class='en'>&nbsp;
<SYNC Start=1016350><P class='en'>number of cars, each car may have its own
unique set of values, one car might leak oil,
<SYNC Start=1024390><P class='en'>&nbsp;
<SYNC Start=1024390><P class='en'>so the value of oil could drop to zero while
the program is running. So our classes like
<SYNC Start=1030589><P class='en'>&nbsp;
<SYNC Start=1030589><P class='en'>the human DNA, a definition of how something
should be created when the program is running.
<SYNC Start=1040750><P class='en'>&nbsp;
<SYNC Start=1040750><P class='en'>When a Java program is running, it would usually
create a certain number of objects that will
<SYNC Start=1045600><P class='en'>&nbsp;
<SYNC Start=1045600><P class='en'>exist as a set of values in the computer&#39;s
memory. And those values might change while
<SYNC Start=1051590><P class='en'>&nbsp;
<SYNC Start=1051590><P class='en'>the program is running.
<SYNC Start=1058000><P class='en'>&nbsp;
<SYNC Start=1058000><P class='en'>Each program language for certain concept,
Java is an object oriented language. Everything
<SYNC Start=1064581><P class='en'>&nbsp;
<SYNC Start=1064581><P class='en'>is focused around objects in Java. In Java
writing classes is a way of defining a model,
<SYNC Start=1071610><P class='en'>&nbsp;
<SYNC Start=1071610><P class='en'>which focuses on necessary aspects to solve
a specific problem. It needs the brain powers
<SYNC Start=1077610><P class='en'>&nbsp;
<SYNC Start=1077610><P class='en'>of a clever Java programmer to fully understand
the problem and to extract a theoretical model
<SYNC Start=1083860><P class='en'>&nbsp;
<SYNC Start=1083860><P class='en'>from it and transfer this model into classes.
The skills of the programmer will have high
<SYNC Start=1090700><P class='en'>&nbsp;
<SYNC Start=1090700><P class='en'>impact on how precisely a problem is transferred
into a class model. Simply speaking, the more
<SYNC Start=1098169><P class='en'>&nbsp;
<SYNC Start=1098169><P class='en'>accurate this is done, the less code has to
be written and maintained. The fossils or
<SYNC Start=1103962><P class='en'>&nbsp;
<SYNC Start=1103962><P class='en'>program will run, the less errors it will
have. The power of Java is to be able to define
<SYNC Start=1110700><P class='en'>&nbsp;
<SYNC Start=1110700><P class='en'>an execute table model, like a virtual machine
on your computer. With concepts and names
<SYNC Start=1117419><P class='en'>&nbsp;
<SYNC Start=1117419><P class='en'>taken from the real world, which heavily improves
the communication of the programmer, and the
<SYNC Start=1123150><P class='en'>&nbsp;
<SYNC Start=1123150><P class='en'>business client, programmer and business client
can both talk of a car. While the one is talking
<SYNC Start=1129410><P class='en'>&nbsp;
<SYNC Start=1129410><P class='en'>of a real car, and the other of the representation
of this car on the computer, they will understand
<SYNC Start=1136890><P class='en'>&nbsp;
<SYNC Start=1136890><P class='en'>each other. Here we see a simplified definition
of a class car. Now imagine a game where each
<SYNC Start=1147420><P class='en'>&nbsp;
<SYNC Start=1147420><P class='en'>player creates a car when the game starts.
The program in this example, might create
<SYNC Start=1153730><P class='en'>&nbsp;
<SYNC Start=1153730><P class='en'>three different cars at runtime. Now I talked
about classes and objects that will be created
<SYNC Start=1163870><P class='en'>&nbsp;
<SYNC Start=1163870><P class='en'>from those classes. But how will these objects
be actually created? We will need a method
<SYNC Start=1170610><P class='en'>&nbsp;
<SYNC Start=1170610><P class='en'>that will create the objects for us. This
is a very special method. It is called on
<SYNC Start=1176641><P class='en'>&nbsp;
<SYNC Start=1176641><P class='en'>a class and we&#39;ll create an object each time
we call this method. But as soon as the object
<SYNC Start=1184280><P class='en'>&nbsp;
<SYNC Start=1184280><P class='en'>exists, we cannot call this method anymore.
The special method is called a constructor,
<SYNC Start=1190260><P class='en'>&nbsp;
<SYNC Start=1190260><P class='en'>as it is used to construct objects from class
files 
<SYNC Start=1198449><P class='en'>&nbsp;
<SYNC Start=1198450><P class='en'>to create a new object of time car, you write
new car. For example, the constructor in this
<SYNC Start=1205660><P class='en'>&nbsp;
<SYNC Start=1205660><P class='en'>case, just like a method is given two different
numbers, one for the age of the car and one
<SYNC Start=1212251><P class='en'>&nbsp;
<SYNC Start=1212251><P class='en'>for the maximum speed. In our example, when
the program is running and executes this line,
<SYNC Start=1219580><P class='en'>&nbsp;
<SYNC Start=1219580><P class='en'>a new object will be created in your computer&#39;s
memory. We will, we talked about variables
<SYNC Start=1227570><P class='en'>&nbsp;
<SYNC Start=1227570><P class='en'>already. However, before we can use a variable,
we need to define it beforehand. Call my Porsche
<SYNC Start=1237960><P class='en'>&nbsp;
<SYNC Start=1237960><P class='en'>Colin is an example of a variable declaration,
we declare the variable which we called my
<SYNC Start=1244050><P class='en'>&nbsp;
<SYNC Start=1244050><P class='en'>portion of the type car. Now that we have
a variable declared, we have to allocate the
<SYNC Start=1253320><P class='en'>&nbsp;
<SYNC Start=1253320><P class='en'>object we created a variable declaration,
object creation, and allocation can all be
<SYNC Start=1261710><P class='en'>&nbsp;
<SYNC Start=1261710><P class='en'>done in one single line. So this line reads
as when the program is running, and when this
<SYNC Start=1267620><P class='en'>&nbsp;
<SYNC Start=1267620><P class='en'>line of code is executed, create an object
of type car with first of all you won, and
<SYNC Start=1273919><P class='en'>&nbsp;
<SYNC Start=1273919><P class='en'>a second volume of 320. Then create a variable
of type car and give it a name my portion.
<SYNC Start=1281840><P class='en'>&nbsp;
<SYNC Start=1281840><P class='en'>Last but not least, assign the car object
to the variable named my portion. After this
<SYNC Start=1287990><P class='en'>&nbsp;
<SYNC Start=1287990><P class='en'>line, whenever we use my portion, we actually
referenced the object created in memory. Also,
<SYNC Start=1295220><P class='en'>&nbsp;
<SYNC Start=1295220><P class='en'>you might notice when looking at this line
of code, we put two values into the constructor
<SYNC Start=1300360><P class='en'>&nbsp;
<SYNC Start=1300360><P class='en'>of car. But without looking into the code
of the class car, we wouldn&#39;t even know what
<SYNC Start=1306370><P class='en'>&nbsp;
<SYNC Start=1306370><P class='en'>their meaning actually is. This is one reason
why you should try to limit the number of
<SYNC Start=1312289><P class='en'>&nbsp;
<SYNC Start=1312289><P class='en'>variables used in a method as well as in a
constructor, the less the better.
<SYNC Start=1318350><P class='en'>&nbsp;
<SYNC Start=1318350><P class='en'>In session, to have this free Java video course,
we&#39;re going to write our first Java program.
<SYNC Start=1326919><P class='en'>&nbsp;
<SYNC Start=1326919><P class='en'>When we write code, we actually start by writing
a program, which is actually testing the program
<SYNC Start=1332500><P class='en'>&nbsp;
<SYNC Start=1332500><P class='en'>or class we are going to write. We do this
for two reasons. First, the test forces us
<SYNC Start=1339850><P class='en'>&nbsp;
<SYNC Start=1339850><P class='en'>to properly think our idea through which will
improve our code a lot. Second, the main effort
<SYNC Start=1347590><P class='en'>&nbsp;
<SYNC Start=1347590><P class='en'>in the lifecycle of a program is actually
not the first time effort of writing the program
<SYNC Start=1352470><P class='en'>&nbsp;
<SYNC Start=1352470><P class='en'>code, but to maintain the program, like extending
or improving the functionality or fixing arrows
<SYNC Start=1359650><P class='en'>&nbsp;
<SYNC Start=1359650><P class='en'>called bugs in your code. Whenever you write
code, there is a high risk you will introduce
<SYNC Start=1366120><P class='en'>&nbsp;
<SYNC Start=1366120><P class='en'>defects in your code. When your program is
written once with the help of a test, this
<SYNC Start=1372210><P class='en'>&nbsp;
<SYNC Start=1372210><P class='en'>test will ensure that whatever happens, your
program will continue to function as designed
<SYNC Start=1380720><P class='en'>&nbsp;
<SYNC Start=1380720><P class='en'>initially. To recap, in Lesson One of this
free Java video course, I explained the necessary
<SYNC Start=1387580><P class='en'>&nbsp;
<SYNC Start=1387580><P class='en'>theory to code our first Java program, which
we are going to do in a minute, we are going
<SYNC Start=1394080><P class='en'>&nbsp;
<SYNC Start=1394080><P class='en'>to use these 15 Java keywords and concepts
described in detail in the prior session.
<SYNC Start=1400470><P class='en'>&nbsp;
<SYNC Start=1400470><P class='en'>If you haven&#39;t done yet, I would recommend
you to start with session one before watching
<SYNC Start=1406270><P class='en'>&nbsp;
<SYNC Start=1406270><P class='en'>this practice session. Okay, so now I&#39;m in
my development environment. I&#39;ve created a
<SYNC Start=1419350><P class='en'>&nbsp;
<SYNC Start=1419350><P class='en'>folder structure of calm Marcos build Java
course, lesson two in a folder called test
<SYNC Start=1429960><P class='en'>&nbsp;
<SYNC Start=1429960><P class='en'>and also here source main. Java. com Marcos
build Java course lesson two. This is where
<SYNC Start=1439370><P class='en'>&nbsp;
<SYNC Start=1439370><P class='en'>we will write our tests have already created
the fall person test of Java. This here is
<SYNC Start=1447909><P class='en'>&nbsp;
<SYNC Start=1447909><P class='en'>where later we will have our actual program.
But okay, so let&#39;s start person test. As described
<SYNC Start=1458460><P class='en'>&nbsp;
<SYNC Start=1458460><P class='en'>in Lesson One, we have to start with a package
declaration. So I write and you see here,
<SYNC Start=1465770><P class='en'>&nbsp;
<SYNC Start=1465770><P class='en'>I actually get support by my environment,
about the development environment. I&#39;ll tell
<SYNC Start=1473100><P class='en'>&nbsp;
<SYNC Start=1473100><P class='en'>you later. For now just see that it actually
assists you. Actually, when you start learning
<SYNC Start=1479549><P class='en'>&nbsp;
<SYNC Start=1479549><P class='en'>to program, I would recommend you to start
with a regular text editor because you need
<SYNC Start=1487090><P class='en'>&nbsp;
<SYNC Start=1487090><P class='en'>to learn all these keywords. And so I guess
it&#39;s easier in the beginning. I mean not easier,
<SYNC Start=1494830><P class='en'>&nbsp;
<SYNC Start=1494830><P class='en'>but it helps you to learn the stuff from scratch.
If you really have To focus and concentrate,
<SYNC Start=1501990><P class='en'>&nbsp;
<SYNC Start=1501990><P class='en'>and you don&#39;t get assistance. But as soon
as you manage all these keywords, as soon
<SYNC Start=1508480><P class='en'>&nbsp;
<SYNC Start=1508480><P class='en'>as you know all them section environment is
really helpful. Okay, so I use package, and
<SYNC Start=1516330><P class='en'>&nbsp;
<SYNC Start=1516330><P class='en'>then I have to define it. COMM macros, we&#39;ll
see how it assists me again, it already knows
<SYNC Start=1526290><P class='en'>&nbsp;
<SYNC Start=1526290><P class='en'>the package, because I have here the folder
structure, and the folder structure, and the
<SYNC Start=1533530><P class='en'>&nbsp;
<SYNC Start=1533530><P class='en'>package declaration in my file actually have
to be the same. Otherwise, this would be an
<SYNC Start=1539580><P class='en'>&nbsp;
<SYNC Start=1539580><P class='en'>error. So actually, I don&#39;t even have to write
it anymore. I can just follow. Okay, so this
<SYNC Start=1548400><P class='en'>&nbsp;
<SYNC Start=1548400><P class='en'>is my package. And you see, before we have
an underline or red underline, which means
<SYNC Start=1555580><P class='en'>&nbsp;
<SYNC Start=1555580><P class='en'>something is wrong. Now, oh, editor seems
to be fine with what I wrote so far. Okay,
<SYNC Start=1562990><P class='en'>&nbsp;
<SYNC Start=1562990><P class='en'>here we are. Later, we&#39;ll have imports, as
described in lesson one. But we will add them
<SYNC Start=1570679><P class='en'>&nbsp;
<SYNC Start=1570679><P class='en'>later. Normally, you start defining your class
first. See, again, I wrote public and see
<SYNC Start=1577929><P class='en'>&nbsp;
<SYNC Start=1577929><P class='en'>how it&#39;s underlined red, so something is missing.
So I say class, and now I have to define the
<SYNC Start=1586870><P class='en'>&nbsp;
<SYNC Start=1586870><P class='en'>class name is a person test. So I call my
test person test, it&#39;s a test for our first
<SYNC Start=1597100><P class='en'>&nbsp;
<SYNC Start=1597100><P class='en'>program, which is the class person. Okay,
now I have to add the brackets. When I add
<SYNC Start=1606590><P class='en'>&nbsp;
<SYNC Start=1606590><P class='en'>the first one, my editor already adds the
second one. Because for every opening bracket,
<SYNC Start=1613510><P class='en'>&nbsp;
<SYNC Start=1613510><P class='en'>you always need a closing bracket.
<SYNC Start=1616289><P class='en'>&nbsp;
<SYNC Start=1616289><P class='en'>Okay, so this is the beginning. And this the
end of my person test.
<SYNC Start=1623429><P class='en'>&nbsp;
<SYNC Start=1623429><P class='en'>Okay,
<SYNC Start=1625030><P class='en'>&nbsp;
<SYNC Start=1625030><P class='en'>no at the annotation test. So that I define,
I want to write a test. And see, magically,
<SYNC Start=1636380><P class='en'>&nbsp;
<SYNC Start=1636380><P class='en'>the input appeared. Because my environment
already knows, I want to write a test. The
<SYNC Start=1644909><P class='en'>&nbsp;
<SYNC Start=1644909><P class='en'>test also, I mean, it&#39;s actually a class.
And it even has package. And this is all three
<SYNC Start=1652419><P class='en'>&nbsp;
<SYNC Start=1652419><P class='en'>unit test. We&#39;ll talk much more about j unit
in later lessons. But for now, we just know
<SYNC Start=1661520><P class='en'>&nbsp;
<SYNC Start=1661520><P class='en'>this is a test magically somehow. Okay, and
we need to test the method. test method will
<SYNC Start=1666980><P class='en'>&nbsp;
<SYNC Start=1666980><P class='en'>be public. It won&#39;t return any value, so it
will be void. And I will give it a name what
<SYNC Start=1675179><P class='en'>&nbsp;
<SYNC Start=1675179><P class='en'>I want it to do should return hello world.
Hello World is actually like a running gag
<SYNC Start=1684800><P class='en'>&nbsp;
<SYNC Start=1684800><P class='en'>of programmers. Someone I don&#39;t know who once
started. That first program you write in a
<SYNC Start=1694530><P class='en'>&nbsp;
<SYNC Start=1694530><P class='en'>language should return hello world. So we
do that to write a test. For my first HelloWorld
<SYNC Start=1706669><P class='en'>&nbsp;
<SYNC Start=1706669><P class='en'>program, I expect my person to return hello
world to me. And I&#39;m going to test this. We
<SYNC Start=1714940><P class='en'>&nbsp;
<SYNC Start=1714940><P class='en'>haven&#39;t written any actual code for person.
But we&#39;re starting reverse. So we&#39;re starting
<SYNC Start=1723529><P class='en'>&nbsp;
<SYNC Start=1723529><P class='en'>with the test, as explained before. So now
I can just assume I was done. You see, it&#39;s
<SYNC Start=1730600><P class='en'>&nbsp;
<SYNC Start=1730600><P class='en'>red, which means we don&#39;t have a class person
yet. But this doesn&#39;t matter. Now for this
<SYNC Start=1735640><P class='en'>&nbsp;
<SYNC Start=1735640><P class='en'>person, I need a variable name. And as my
name is markers, just for fun, I call it person
<SYNC Start=1741770><P class='en'>&nbsp;
<SYNC Start=1741770><P class='en'>I call the person Marcus. Okay, now I have
to create person markers. Remember, this was
<SYNC Start=1751909><P class='en'>&nbsp;
<SYNC Start=1751909><P class='en'>calling the constructor creating the object.
And so this is creating the object of person
<SYNC Start=1759799><P class='en'>&nbsp;
<SYNC Start=1759799><P class='en'>from the type from the class person. And the
equal sign assigns that object which is created
<SYNC Start=1768640><P class='en'>&nbsp;
<SYNC Start=1768640><P class='en'>in the memory of RPC to the variable, the
reference variable person because this is
<SYNC Start=1776450><P class='en'>&nbsp;
<SYNC Start=1776450><P class='en'>a reference that we can later on use referencing
the person.
<SYNC Start=1784370><P class='en'>&nbsp;
<SYNC Start=1784370><P class='en'>Okay.
<SYNC Start=1786790><P class='en'>&nbsp;
<SYNC Start=1786790><P class='en'>Now this is read, but we&#39;ll take care of this
later. We just continue. Okay, so assuming
<SYNC Start=1794750><P class='en'>&nbsp;
<SYNC Start=1794750><P class='en'>we were done, what do we want? We want to
test something And testing, we say we want
<SYNC Start=1803250><P class='en'>&nbsp;
<SYNC Start=1803250><P class='en'>to assert something, we want to assert that
a method we&#39;re going to write is returning
<SYNC Start=1811299><P class='en'>&nbsp;
<SYNC Start=1811299><P class='en'>the hello world for us. So, we want to compare
if our expectation is equal to what the method
<SYNC Start=1821540><P class='en'>&nbsp;
<SYNC Start=1821540><P class='en'>is going to return. So we say assert equals,
this also is starting as red, because we will
<SYNC Start=1829659><P class='en'>&nbsp;
<SYNC Start=1829659><P class='en'>have to import more stuff. But for now, we
just take it, I use this was again metric
<SYNC Start=1838130><P class='en'>&nbsp;
<SYNC Start=1838130><P class='en'>I add one quotation mark, and my environment
already adds a closing quotation marks. This
<SYNC Start=1847559><P class='en'>&nbsp;
<SYNC Start=1847559><P class='en'>is what we call a string. And I say hello
world, because I want my person to return
<SYNC Start=1855720><P class='en'>&nbsp;
<SYNC Start=1855720><P class='en'>HelloWorld for me, so, the first part here
is the expected return Well, you know, I add
<SYNC Start=1863260><P class='en'>&nbsp;
<SYNC Start=1863260><P class='en'>a comma. And now I have to add what is going
to be tested Marcus dot for calling a method
<SYNC Start=1876909><P class='en'>&nbsp;
<SYNC Start=1876909><P class='en'>Hello, world. So on the object, Marcos of
class person, I want to call a method, hello
<SYNC Start=1890500><P class='en'>&nbsp;
<SYNC Start=1890500><P class='en'>world, with no parameters given and what is
returned here, I want to assert that it equals
<SYNC Start=1904510><P class='en'>&nbsp;
<SYNC Start=1904510><P class='en'>to hello world. Now, this is not going to
work. Because we still have some red stuff.
<SYNC Start=1913890><P class='en'>&nbsp;
<SYNC Start=1913890><P class='en'>For example, here, we don&#39;t have actually
written the class. But here we will let our
<SYNC Start=1921710><P class='en'>&nbsp;
<SYNC Start=1921710><P class='en'>environment help us, you see. Now I just have
to say create a class person. Sorry, again,
<SYNC Start=1933799><P class='en'>&nbsp;
<SYNC Start=1933799><P class='en'>create class person. And here, it already
asked us destination package, create class
<SYNC Start=1942110><P class='en'>&nbsp;
<SYNC Start=1942110><P class='en'>person. COMM walkersville. java course lesson
two. Okay, sounds good. Because our test,
<SYNC Start=1950520><P class='en'>&nbsp;
<SYNC Start=1950520><P class='en'>and the actual class of the test will be in
the same package. This actually helps us a
<SYNC Start=1957100><P class='en'>&nbsp;
<SYNC Start=1957100><P class='en'>lot. But more about this later on. I say,
okay, and magic magically, or first class
<SYNC Start=1966240><P class='en'>&nbsp;
<SYNC Start=1966240><P class='en'>got created. You see the package, and the
class. This is actually kind of the smallest
<SYNC Start=1974630><P class='en'>&nbsp;
<SYNC Start=1974630><P class='en'>class possible, just with opening and closing
bracket. But it doesn&#39;t do anything yet. Okay,
<SYNC Start=1982090><P class='en'>&nbsp;
<SYNC Start=1982090><P class='en'>but you see, it&#39;s not red anymore. So let&#39;s
go to from next, assert equals, oh, it wants
<SYNC Start=1991720><P class='en'>&nbsp;
<SYNC Start=1991720><P class='en'>to import something statically. I said before,
I will later on tell you what means static
<SYNC Start=1999510><P class='en'>&nbsp;
<SYNC Start=1999510><P class='en'>import. But for now. Just believe me, we have
to import this. This is another import from
<SYNC Start=2011820><P class='en'>&nbsp;
<SYNC Start=2011820><P class='en'>org j unit. But this time, it&#39;s an assert.
And so this is like a method. We import the
<SYNC Start=2022260><P class='en'>&nbsp;
<SYNC Start=2022260><P class='en'>method assert equals. But, um, don&#39;t focus
too much on this. We&#39;ll go in more detail
<SYNC Start=2029650><P class='en'>&nbsp;
<SYNC Start=2029650><P class='en'>later. For now, what is important, we want
to write our first test. So we still need
<SYNC Start=2037470><P class='en'>&nbsp;
<SYNC Start=2037470><P class='en'>to define a method. And it also tells us cannot
resolve method HelloWorld. Okay, help us please
<SYNC Start=2045290><P class='en'>&nbsp;
<SYNC Start=2045290><P class='en'>create method HelloWorld. We had enough it
moved the method to the wrong place, but I&#39;ll
<SYNC Start=2052240><P class='en'>&nbsp;
<SYNC Start=2052240><P class='en'>fix that. Of course, we need to have it here.
Okay, no, nothing read anymore. And we can
<SYNC Start=2065119><P class='en'>&nbsp;
<SYNC Start=2065118><P class='en'>start calling our first test. I say run. And
this actually executed our first test, which
<SYNC Start=2077298><P class='en'>&nbsp;
<SYNC Start=2077299><P class='en'>again executed our first class that was automatically
written. And here we see we have an error.
<SYNC Start=2085980><P class='en'>&nbsp;
<SYNC Start=2085980><P class='en'>It tells us a missing return statement. So
I said we want to return a string you see
<SYNC Start=2095749><P class='en'>&nbsp;
<SYNC Start=2095749><P class='en'>string. But as you see the method is empty.
We don&#39;t return anything. So let&#39;s fix that
<SYNC Start=2101849><P class='en'>&nbsp;
<SYNC Start=2101849><P class='en'>fix that return. This is how we say it, we
have to say return. And I just have to type
<SYNC Start=2110789><P class='en'>&nbsp;
<SYNC Start=2110789><P class='en'>Hello, world. exactly as I was expecting it,
I get the column to say yes to it return hello
<SYNC Start=2117829><P class='en'>&nbsp;
<SYNC Start=2117829><P class='en'>world. Okay, now we switch over to the test.
And I&#39;ll execute the test again. And that&#39;s
<SYNC Start=2130480><P class='en'>&nbsp;
<SYNC Start=2130480><P class='en'>green, all tests passed. This is our first
test. And it worked on in our first class,
<SYNC Start=2140240><P class='en'>&nbsp;
<SYNC Start=2140240><P class='en'>Tara. Okay. Thank you. That said, lesson three
debriefing. For debriefing, we will go back
<SYNC Start=2153670><P class='en'>&nbsp;
<SYNC Start=2153670><P class='en'>to our development environment, and have a
look what we learned so far. Okay, now we&#39;re
<SYNC Start=2162519><P class='en'>&nbsp;
<SYNC Start=2162519><P class='en'>back in our development environment. And now
let&#39;s repeat what we learned so far. The first
<SYNC Start=2169950><P class='en'>&nbsp;
<SYNC Start=2169950><P class='en'>line of our program is the package declaration.
It must be unique. And it usually consists
<SYNC Start=2181559><P class='en'>&nbsp;
<SYNC Start=2181559><P class='en'>of your domain name in reverse order. So in
my case, calm, Marcos, bu Java course, lesson
<SYNC Start=2188259><P class='en'>&nbsp;
<SYNC Start=2188259><P class='en'>two, and we ended with a color. Actually,
it&#39;s not mandatory, it&#39;s optional. But please,
<SYNC Start=2198150><P class='en'>&nbsp;
<SYNC Start=2198150><P class='en'>I really recommend you to use a package name.
Later on, you will probably see why you just
<SYNC Start=2205519><P class='en'>&nbsp;
<SYNC Start=2205519><P class='en'>need to have some practice. But for now, just
believe me treat this as if it was mandatory.
<SYNC Start=2212619><P class='en'>&nbsp;
<SYNC Start=2212619><P class='en'>And always define a package name. After the
package declaration, we can have one or more
<SYNC Start=2219509><P class='en'>&nbsp;
<SYNC Start=2219509><P class='en'>import statements. This just for our lesson,
now I made up I created a new class called
<SYNC Start=2227890><P class='en'>&nbsp;
<SYNC Start=2227890><P class='en'>name. And this is an A sub package called
lesson three. Actually, all classes that are
<SYNC Start=2236279><P class='en'>&nbsp;
<SYNC Start=2236279><P class='en'>in the same package. So person has an a package
called macro spiel Java course lesson two,
<SYNC Start=2243799><P class='en'>&nbsp;
<SYNC Start=2243799><P class='en'>for all classes that are in the exactly same
package, lesson two at the end, we don&#39;t need
<SYNC Start=2250980><P class='en'>&nbsp;
<SYNC Start=2250980><P class='en'>to import them, Java will find them automatically.
But here I made this lesson three. So if we
<SYNC Start=2259450><P class='en'>&nbsp;
<SYNC Start=2259450><P class='en'>want to use the name class that I just wrote,
we have to import it. Okay. Next thing is
<SYNC Start=2269400><P class='en'>&nbsp;
<SYNC Start=2269400><P class='en'>class definition public class person. And
with these brackets, that says the class begins,
<SYNC Start=2277609><P class='en'>&nbsp;
<SYNC Start=2277609><P class='en'>this says the class ends. Public means all
other classes, for example, my new class name,
<SYNC Start=2287029><P class='en'>&nbsp;
<SYNC Start=2287029><P class='en'>in any package can see the class person. What
this can see means is still a bit work. For
<SYNC Start=2296819><P class='en'>&nbsp;
<SYNC Start=2296819><P class='en'>now, just take it as it is, I don&#39;t expect
you to fully understand it yet. This will
<SYNC Start=2302819><P class='en'>&nbsp;
<SYNC Start=2302819><P class='en'>need some practice. And here for now, some
new stuff, I added the class that I defined
<SYNC Start=2313619><P class='en'>&nbsp;
<SYNC Start=2313619><P class='en'>name, and I made it private, which is also
best practice to have we call this a reference
<SYNC Start=2320530><P class='en'>&nbsp;
<SYNC Start=2320530><P class='en'>variable, because it is a reference to later
on an object of type name. And I made it private,
<SYNC Start=2328660><P class='en'>&nbsp;
<SYNC Start=2328660><P class='en'>which means other objects that get created
will not be able to see. See again, I say
<SYNC Start=2336520><P class='en'>&nbsp;
<SYNC Start=2336520><P class='en'>See, or access this field here directly. If
they want to use it, they have to go using
<SYNC Start=2347069><P class='en'>&nbsp;
<SYNC Start=2347069><P class='en'>this method I also just created this one is
public and it returns personally. So when
<SYNC Start=2355480><P class='en'>&nbsp;
<SYNC Start=2355480><P class='en'>they call person dot name, the method you
can give it any name I just call it salt,
<SYNC Start=2363329><P class='en'>&nbsp;
<SYNC Start=2363329><P class='en'>but you could also call it I don&#39;t know.
<SYNC Start=2370119><P class='en'>&nbsp;
<SYNC Start=2370119><P class='en'>Return the name. So this can be anything um,
and it will return the person&#39;s name. So here
<SYNC Start=2383040><P class='en'>&nbsp;
<SYNC Start=2383040><P class='en'>again we see return, which means I want this
to be returned to whoever calls that method
<SYNC Start=2390150><P class='en'>&nbsp;
<SYNC Start=2390150><P class='en'>and the colon which means do it execute it.
Okay. What else did we learn? We learned that
<SYNC Start=2401440><P class='en'>&nbsp;
<SYNC Start=2401440><P class='en'>this stream, and that having a class, returning
HelloWorld is like a running gag in programming
<SYNC Start=2411009><P class='en'>&nbsp;
<SYNC Start=2411009><P class='en'>for the first program that you do. So this
is why I made class person return hello world.
<SYNC Start=2418190><P class='en'>&nbsp;
<SYNC Start=2418190><P class='en'>I mean, actually, it might not make sense.
But yeah, just was all made up. Then also,
<SYNC Start=2424969><P class='en'>&nbsp;
<SYNC Start=2424969><P class='en'>going to the test, we learned, we actually
start with writing a test. When we wrote the
<SYNC Start=2432540><P class='en'>&nbsp;
<SYNC Start=2432540><P class='en'>test, we hadn&#39;t defined the class person yet.
We hadn&#39;t defined the method HelloWorld yet.
<SYNC Start=2442359><P class='en'>&nbsp;
<SYNC Start=2442359><P class='en'>We did all this on the fly. In our development
environment assisted us with some auto completion,
<SYNC Start=2450119><P class='en'>&nbsp;
<SYNC Start=2450119><P class='en'>it was able to create the class as well as
the method. So this is really a handy way
<SYNC Start=2454910><P class='en'>&nbsp;
<SYNC Start=2454910><P class='en'>of programming. First of all, you define the
test. So this gives you an opportunity to
<SYNC Start=2462140><P class='en'>&nbsp;
<SYNC Start=2462140><P class='en'>think about the property sign. And then you
define what you need, and you don&#39;t have to
<SYNC Start=2470890><P class='en'>&nbsp;
<SYNC Start=2470890><P class='en'>actually even write it yourself. And when
you did everything correctly, you can simply
<SYNC Start=2476349><P class='en'>&nbsp;
<SYNC Start=2476349><P class='en'>execute the test. And when it returns, okay,
and it screen, you will see that you did a
<SYNC Start=2486930><P class='en'>&nbsp;
<SYNC Start=2486930><P class='en'>proper job. Okay, see, here, you&#39;ll see a
green bar, which means the test executed successfully.
<SYNC Start=2498849><P class='en'>&nbsp;
<SYNC Start=2498849><P class='en'>So when testing we often speak of green or
red bar, because the green bar is such a good
<SYNC Start=2509319><P class='en'>&nbsp;
<SYNC Start=2509319><P class='en'>signal that you understand your test passed
successfully, that people got used to just
<SYNC Start=2516390><P class='en'>&nbsp;
<SYNC Start=2516390><P class='en'>speak of green and red bars. Okay, so we learned
some more stuff, for example, that this is
<SYNC Start=2524230><P class='en'>&nbsp;
<SYNC Start=2524230><P class='en'>an annotation. And I told you, you don&#39;t need
to know more details about it yet. We will
<SYNC Start=2529410><P class='en'>&nbsp;
<SYNC Start=2529410><P class='en'>go into details later. Besides on top of input
static, and also, I just want you for now
<SYNC Start=2540619><P class='en'>&nbsp;
<SYNC Start=2540619><P class='en'>to know that something static exists, but
we will go into details later. Okay. I think
<SYNC Start=2550769><P class='en'>&nbsp;
<SYNC Start=2550769><P class='en'>that&#39;s it. It&#39;s okay, if you don&#39;t understand
everything perfectly yet, I don&#39;t expect you
<SYNC Start=2558920><P class='en'>&nbsp;
<SYNC Start=2558920><P class='en'>to. Um, so we&#39;ll go in more details later.
And we will repeat all this stuff. So it&#39;s
<SYNC Start=2568589><P class='en'>&nbsp;
<SYNC Start=2568589><P class='en'>fine. I mean, the start is really tough. I
know that I don&#39;t expect you to be an expert
<SYNC Start=2574380><P class='en'>&nbsp;
<SYNC Start=2574380><P class='en'>in Java yet. Um, this is just an introduction,
and you will grasp it soon. lesson four. Okay,
<SYNC Start=2584730><P class='en'>&nbsp;
<SYNC Start=2584730><P class='en'>we&#39;re back in my ID E. Id is actually the
short form for integrated development environment.
<SYNC Start=2592529><P class='en'>&nbsp;
<SYNC Start=2592529><P class='en'>And as this is much shorter, usually you just
say ID e. m, let&#39;s recap what we learned so
<SYNC Start=2600059><P class='en'>&nbsp;
<SYNC Start=2600059><P class='en'>far. And the first one, you have the package.
And the second line, you might have import
<SYNC Start=2610489><P class='en'>&nbsp;
<SYNC Start=2610489><P class='en'>statements, you don&#39;t necessarily need something
I didn&#39;t tell you so far is here we use name.
<SYNC Start=2618890><P class='en'>&nbsp;
<SYNC Start=2618890><P class='en'>And we use the classes short name, because
actually, the classes real full name includes
<SYNC Start=2627109><P class='en'>&nbsp;
<SYNC Start=2627109><P class='en'>always the package name, so that the name
is of the class is unique. So we could also
<SYNC Start=2635019><P class='en'>&nbsp;
<SYNC Start=2635019><P class='en'>use its full name, including the package name,
and then we would not need to import the class.
<SYNC Start=2642549><P class='en'>&nbsp;
<SYNC Start=2642549><P class='en'>But I mean, as you see, this is much more
readable, much shorter, so also much more
<SYNC Start=2647099><P class='en'>&nbsp;
<SYNC Start=2647099><P class='en'>handy. So this is what you normally do. There&#39;s
only one exception, which is a bit more advanced.
<SYNC Start=2653670><P class='en'>&nbsp;
<SYNC Start=2653670><P class='en'>So I will just shortly mention it. Sometimes
it rarely happens that you would have two
<SYNC Start=2661230><P class='en'>&nbsp;
<SYNC Start=2661230><P class='en'>classes of the exact same short name
<SYNC Start=2666239><P class='en'>&nbsp;
<SYNC Start=2666239><P class='en'>but have different packages. And so to define
which one you mean, then you would have to
<SYNC Start=2673580><P class='en'>&nbsp;
<SYNC Start=2673580><P class='en'>use one with the full package name. Okay.
So next, we define the class. The class starts
<SYNC Start=2684209><P class='en'>&nbsp;
<SYNC Start=2684209><P class='en'>with a curly opening brace and ends for the
curly closing brace. Um, we have here, we
<SYNC Start=2692829><P class='en'>&nbsp;
<SYNC Start=2692829><P class='en'>say it&#39;s an instance variable actually. And
this is an instance method instance variable.
<SYNC Start=2700309><P class='en'>&nbsp;
<SYNC Start=2700309><P class='en'>And instance methods could be, of course,
much more. But those together we call the
<SYNC Start=2705259><P class='en'>&nbsp;
<SYNC Start=2705259><P class='en'>members of the class, because they belong
to the class. An instance is just like an
<SYNC Start=2715779><P class='en'>&nbsp;
<SYNC Start=2715779><P class='en'>object. So of one class, you can create various
instances, like, one person could be Marcos,
<SYNC Start=2723819><P class='en'>&nbsp;
<SYNC Start=2723819><P class='en'>another person could be, could have the name
of Peter. And you could have hundreds of hundreds
<SYNC Start=2729540><P class='en'>&nbsp;
<SYNC Start=2729540><P class='en'>of class of objects, sorry. And each one of
these objects is an instance. And for the
<SYNC Start=2737640><P class='en'>&nbsp;
<SYNC Start=2737640><P class='en'>instance variables, this means that each instance
has their own version of this variable, which
<SYNC Start=2747369><P class='en'>&nbsp;
<SYNC Start=2747369><P class='en'>each might have a different value does not
need to. But it&#39;s like a duplicate version.
<SYNC Start=2755539><P class='en'>&nbsp;
<SYNC Start=2755539><P class='en'>There&#39;s also another thing, which is called
a class variable. And a class method, which
<SYNC Start=2762770><P class='en'>&nbsp;
<SYNC Start=2762770><P class='en'>we do when we add static to it, we can add
static here, as well as to the here. In this
<SYNC Start=2770699><P class='en'>&nbsp;
<SYNC Start=2770699><P class='en'>case, now when we create different instances,
and we change the person name of one instance,
<SYNC Start=2778269><P class='en'>&nbsp;
<SYNC Start=2778269><P class='en'>this means that all other instances will also
have the name change to the new value. This
<SYNC Start=2785170><P class='en'>&nbsp;
<SYNC Start=2785170><P class='en'>is a bit more advanced and static. We should
talk about this in detail later. So I just
<SYNC Start=2792920><P class='en'>&nbsp;
<SYNC Start=2792920><P class='en'>shortly, just to be complete, wanted to mention
it. For now, it&#39;s totally enough, if you know,
<SYNC Start=2800009><P class='en'>&nbsp;
<SYNC Start=2800009><P class='en'>this is an instance variable, and this is
an instance method, okay. Besides that, I
<SYNC Start=2811349><P class='en'>&nbsp;
<SYNC Start=2811349><P class='en'>would want to add a constructor, I think I
talked about constructors already.
<SYNC Start=2816890><P class='en'>&nbsp;
<SYNC Start=2816890><P class='en'>Okay.
<SYNC Start=2818650><P class='en'>&nbsp;
<SYNC Start=2818650><P class='en'>Opening and closing curly brace. This is what
we call a default constructor. It does not
<SYNC Start=2829699><P class='en'>&nbsp;
<SYNC Start=2829699><P class='en'>have any parameter here, not any variable.
And so this is the default constructor. When
<SYNC Start=2835799><P class='en'>&nbsp;
<SYNC Start=2835799><P class='en'>we want to create an object of type person
of class person, this constructor will be
<SYNC Start=2842760><P class='en'>&nbsp;
<SYNC Start=2842760><P class='en'>called and everything that we would do in
here would also be executed. So this constructor
<SYNC Start=2850640><P class='en'>&nbsp;
<SYNC Start=2850640><P class='en'>is actually used to initialize an object.
Because for example, let&#39;s do something else.
<SYNC Start=2858170><P class='en'>&nbsp;
<SYNC Start=2858170><P class='en'>Now let&#39;s add a parameter, prison name. So
this now gets a bit more dynamic, more interesting,
<SYNC Start=2868229><P class='en'>&nbsp;
<SYNC Start=2868229><P class='en'>because we could try to set the inner person
name to the given person name. Now, you see
<SYNC Start=2879609><P class='en'>&nbsp;
<SYNC Start=2879609><P class='en'>something is wrong. Variable person name is
assigned to itself. Well, of course, how should
<SYNC Start=2886680><P class='en'>&nbsp;
<SYNC Start=2886680><P class='en'>our ID or Java know? What do you mean? Here,
we need something to differentiate to tell
<SYNC Start=2893449><P class='en'>&nbsp;
<SYNC Start=2893449><P class='en'>Java, what we want is we want to set this
instance variable to the value of the parameter
<SYNC Start=2902130><P class='en'>&nbsp;
<SYNC Start=2902130><P class='en'>person name. One thing we can do to fix that,
we could just rename the variable to see it
<SYNC Start=2909859><P class='en'>&nbsp;
<SYNC Start=2909859><P class='en'>works. Now we can automatically automatically
resolve the problem. But usually you don&#39;t
<SYNC Start=2915809><P class='en'>&nbsp;
<SYNC Start=2915809><P class='en'>want that I mean, person name is better name,
of course. And now what we have to do, we
<SYNC Start=2923069><P class='en'>&nbsp;
<SYNC Start=2923069><P class='en'>have to add this to one of them. And as we
want to set the value of person name to the
<SYNC Start=2931469><P class='en'>&nbsp;
<SYNC Start=2931469><P class='en'>instance variable person name, we add this
dot person name. And so Java knows that we
<SYNC Start=2939859><P class='en'>&nbsp;
<SYNC Start=2939859><P class='en'>mean this one here. And now, when someone
calls the constructor to create an object
<SYNC Start=2946900><P class='en'>&nbsp;
<SYNC Start=2946900><P class='en'>of type person, it&#39;ll also have to add the
person&#39;s name. And then the person named darts
<SYNC Start=2955349><P class='en'>&nbsp;
<SYNC Start=2955349><P class='en'>directly gets set at the time the object is
created. Okay, one more thing that you should
<SYNC Start=2963780><P class='en'>&nbsp;
<SYNC Start=2963780><P class='en'>know is now that we have created our own constructor
that has the parameter person name, this means
<SYNC Start=2973059><P class='en'>&nbsp;
<SYNC Start=2973059><P class='en'>this class does not does not have a default
constructor, an empty constructor like I showed
<SYNC Start=2978700><P class='en'>&nbsp;
<SYNC Start=2978700><P class='en'>you before this one has gone. Java will automatically
created when there is no constructor defined
<SYNC Start=2985559><P class='en'>&nbsp;
<SYNC Start=2985559><P class='en'>by us. But as soon as we have defined one,
General will not do that. Now if you remember
<SYNC Start=2993289><P class='en'>&nbsp;
<SYNC Start=2993289><P class='en'>our test from the last version, we use the
constructor without any parameter. So this
<SYNC Start=3000680><P class='en'>&nbsp;
<SYNC Start=3000680><P class='en'>will later on fail, but I want to show you
so I will let it as it is. Okay, so, um, remember
<SYNC Start=3009339><P class='en'>&nbsp;
<SYNC Start=3009339><P class='en'>we had that method here HelloWorld, I told
you that in the first program in every programming
<SYNC Start=3017339><P class='en'>&nbsp;
<SYNC Start=3017339><P class='en'>language has like a running gag, you return
hello world. Hello World is actually a string.
<SYNC Start=3024079><P class='en'>&nbsp;
<SYNC Start=3024079><P class='en'>And here we say the method should return a
string. Now, I want to do some more advanced
<SYNC Start=3031740><P class='en'>&nbsp;
<SYNC Start=3031740><P class='en'>on, I would like to have a method, I can give
a parameter of string. And then I want to
<SYNC Start=3039960><P class='en'>&nbsp;
<SYNC Start=3039960><P class='en'>say hello, the person&#39;s name. Um, okay. And
as you also might remember, usually we start
<SYNC Start=3048880><P class='en'>&nbsp;
<SYNC Start=3048880><P class='en'>with a test. So let&#39;s write a test for what
I&#39;m planning. Okay, so how do we write the
<SYNC Start=3056229><P class='en'>&nbsp;
<SYNC Start=3056229><P class='en'>test? So we have to first of all at the end
here, and then say test. This is what we call
<SYNC Start=3065180><P class='en'>&nbsp;
<SYNC Start=3065180><P class='en'>it a notation. Much more. We don&#39;t know yet.
And you don&#39;t need to know for the moment.
<SYNC Start=3071019><P class='en'>&nbsp;
<SYNC Start=3071019><P class='en'>I mean, this is all confusing. So relax. I&#39;ll
repeat everything various times, you will
<SYNC Start=3078549><P class='en'>&nbsp;
<SYNC Start=3078549><P class='en'>understand that very soon. For now, let&#39;s
just write the test. So I say should we turn
<SYNC Start=3088720><P class='en'>&nbsp;
<SYNC Start=3088720><P class='en'>Marcos.
<SYNC Start=3090259><P class='en'>&nbsp;
<SYNC Start=3090259><P class='en'>Okay, because this is what I want the method
to do. Okay, now I have the opening and closing
<SYNC Start=3099059><P class='en'>&nbsp;
<SYNC Start=3099059><P class='en'>brackets for the method. Okay, so we need
to create an object of type person. Last time
<SYNC Start=3107369><P class='en'>&nbsp;
<SYNC Start=3107369><P class='en'>I called it, Marcos. This time, I want to
show you how we can use any name we want.
<SYNC Start=3112880><P class='en'>&nbsp;
<SYNC Start=3112880><P class='en'>So it&#39;s called person, new person. So with
that new person, and the regular brackets,
<SYNC Start=3121900><P class='en'>&nbsp;
<SYNC Start=3121900><P class='en'>I call the constructor. And this is like a
method that is being initially executed at
<SYNC Start=3129599><P class='en'>&nbsp;
<SYNC Start=3129599><P class='en'>the time when the object is created in our
memory, and see something is read here. Because
<SYNC Start=3138189><P class='en'>&nbsp;
<SYNC Start=3138189><P class='en'>I told you the default constructor is gone.
So if we want to do that, we have to go back
<SYNC Start=3143529><P class='en'>&nbsp;
<SYNC Start=3143529><P class='en'>to our class. And we have to add the default
constructor again. We can add it at any place,
<SYNC Start=3153549><P class='en'>&nbsp;
<SYNC Start=3153549><P class='en'>put it here. Okay, and now this is empty,
and it&#39;ll work. But having an empty method
<SYNC Start=3165630><P class='en'>&nbsp;
<SYNC Start=3165630><P class='en'>or an empty constructor might be confusing
for a colleague. So usually what we do in
<SYNC Start=3171519><P class='en'>&nbsp;
<SYNC Start=3171519><P class='en'>this case, we leave a comment. To mention
we haven&#39;t forgotten anything. We have done
<SYNC Start=3176859><P class='en'>&nbsp;
<SYNC Start=3176859><P class='en'>this on purpose. So let&#39;s see how do we do
a comment actually.
<SYNC Start=3187329><P class='en'>&nbsp;
<SYNC Start=3187329><P class='en'>So I say empty. On purpose, default constructor.
So what I have here is a multi line comment.
<SYNC Start=3201769><P class='en'>&nbsp;
<SYNC Start=3201769><P class='en'>There&#39;s also also a single line comment, which
you do just like this single line, comment.
<SYNC Start=3213160><P class='en'>&nbsp;
<SYNC Start=3213160><P class='en'>But I really recommend you should prefer the
multi line comment for various reasons. I
<SYNC Start=3220019><P class='en'>&nbsp;
<SYNC Start=3220019><P class='en'>will go in detail about comments in a later
session. So for now, this is all I want to
<SYNC Start=3226059><P class='en'>&nbsp;
<SYNC Start=3226059><P class='en'>show you. Okay, so we have fixed the test.
Yes, the red thing is gone. Great. We have
<SYNC Start=3236440><P class='en'>&nbsp;
<SYNC Start=3236440><P class='en'>created an object of type person, let me copy
this to show you one thing. You can actually
<SYNC Start=3245539><P class='en'>&nbsp;
<SYNC Start=3245539><P class='en'>create various objects one after the other.
But now, we already have one object that we
<SYNC Start=3254900><P class='en'>&nbsp;
<SYNC Start=3254900><P class='en'>called person. So this will not work. So we
would have to give this for example, person
<SYNC Start=3260839><P class='en'>&nbsp;
<SYNC Start=3260839><P class='en'>two. And so like this, we could continue.
We could create any number of objects, just
<SYNC Start=3267779><P class='en'>&nbsp;
<SYNC Start=3267779><P class='en'>so that you see. We have one class of type
person. And we have two objects created calling
<SYNC Start=3275009><P class='en'>&nbsp;
<SYNC Start=3275009><P class='en'>the default constructor. And so we have two
objects when this is executed later on. I
<SYNC Start=3283179><P class='en'>&nbsp;
<SYNC Start=3283180><P class='en'>will delete this again. I mean, this was just
a short demonstration. Because we should remember
<SYNC Start=3288199><P class='en'>&nbsp;
<SYNC Start=3288199><P class='en'>what we want to achieve actually is we want
the method to return Marcos. Well, actually
<SYNC Start=3293509><P class='en'>&nbsp;
<SYNC Start=3293509><P class='en'>I was wrong. I want to say hello, Marcos.
Okay, so now let&#39;s assert again. assert equals,
<SYNC Start=3301709><P class='en'>&nbsp;
<SYNC Start=3301709><P class='en'>I want Hello, Marcos. And I want to say person
dot Hello. And I want to give it here, when
<SYNC Start=3315209><P class='en'>&nbsp;
<SYNC Start=3315209><P class='en'>we use a variable here, we call it an argument.
This is just to make it more confusing, and
<SYNC Start=3322029><P class='en'>&nbsp;
<SYNC Start=3322029><P class='en'>people use this interchangeably. But to be
correct here, it&#39;s called an argument. But
<SYNC Start=3328700><P class='en'>&nbsp;
<SYNC Start=3328700><P class='en'>it&#39;s all about variables. So we add a string.
And I add markers. Okay, and see something
<SYNC Start=3335940><P class='en'>&nbsp;
<SYNC Start=3335940><P class='en'>is missing our ID, he tells us something right
here, we need to call him to finish this.
<SYNC Start=3342400><P class='en'>&nbsp;
<SYNC Start=3342400><P class='en'>So I want on the object of person we created
in the line before, I want to call a method
<SYNC Start=3349589><P class='en'>&nbsp;
<SYNC Start=3349589><P class='en'>Hello. And you see it&#39;s red. And it also our
Id even already tells us cannot resolve method
<SYNC Start=3355900><P class='en'>&nbsp;
<SYNC Start=3355900><P class='en'>Hello. It doesn&#39;t exist. But we are programming
in a test driven style. And so we will have
<SYNC Start=3365660><P class='en'>&nbsp;
<SYNC Start=3365660><P class='en'>to create a method right now. Okay, I&#39;m actually,
with some magic, I can automatically make
<SYNC Start=3376309><P class='en'>&nbsp;
<SYNC Start=3376309><P class='en'>my array he created for us. Well, there are
different IDs, and I will speak about it specifically
<SYNC Start=3383729><P class='en'>&nbsp;
<SYNC Start=3383729><P class='en'>later on. So for now, I just did this to speed
up it up. Just believe me. I mean, you. I&#39;m
<SYNC Start=3391220><P class='en'>&nbsp;
<SYNC Start=3391220><P class='en'>sure you could create that by yourself. Now
and he did something it said return now about
<SYNC Start=3398890><P class='en'>&nbsp;
<SYNC Start=3398890><P class='en'>now this is something special. I don&#39;t want
to talk now. I&#39;ll tell you later. Okay. Sorry,
<SYNC Start=3404209><P class='en'>&nbsp;
<SYNC Start=3404209><P class='en'>I don&#39;t want to confuse you. But I also don&#39;t
want to tell you too much. So one after the
<SYNC Start=3411339><P class='en'>&nbsp;
<SYNC Start=3411339><P class='en'>other. And now, I would add well Marcus&#39;s
a bit. Let&#39;s say name. Name, because it could
<SYNC Start=3423789><P class='en'>&nbsp;
<SYNC Start=3423789><P class='en'>be any name, not necessarily has to be Marcos,
we could add any name we want. And what I
<SYNC Start=3429440><P class='en'>&nbsp;
<SYNC Start=3429440><P class='en'>want is I want to add name to Hello. What
we say here we want to concatenate hello and
<SYNC Start=3437140><P class='en'>&nbsp;
<SYNC Start=3437140><P class='en'>name. And something is missing. Oh, it doesn&#39;t
like it. What is missing is a plus. This is
<SYNC Start=3445079><P class='en'>&nbsp;
<SYNC Start=3445079><P class='en'>how you concatenate two strings together.
So a new bigger string is created. And you
<SYNC Start=3452089><P class='en'>&nbsp;
<SYNC Start=3452089><P class='en'>can do this any number of time. But for now,
I mean, all we wanted to say is Hello, and
<SYNC Start=3460439><P class='en'>&nbsp;
<SYNC Start=3460439><P class='en'>the given name. So this should be fine. Actually,
there&#39;s a little back hidden, which you will
<SYNC Start=3465939><P class='en'>&nbsp;
<SYNC Start=3465939><P class='en'>see very soon. Which I did on purpose, because
I want our test to fail.
<SYNC Start=3473440><P class='en'>&nbsp;
<SYNC Start=3473440><P class='en'>Let&#39;s execute it. Ah, so you see expected
Hello, Marcos. But actual Hello, Marcus. So
<SYNC Start=3485819><P class='en'>&nbsp;
<SYNC Start=3485819><P class='en'>there&#39;s a space missing. So see, this is one
reason why tests are really handy to help
<SYNC Start=3491539><P class='en'>&nbsp;
<SYNC Start=3491539><P class='en'>you to think about the stuff you code. But
also when you do introduce a back an arrow,
<SYNC Start=3500140><P class='en'>&nbsp;
<SYNC Start=3500140><P class='en'>then you will directly spot it and you&#39;re
able to fix it before it goes on production
<SYNC Start=3506589><P class='en'>&nbsp;
<SYNC Start=3506589><P class='en'>and destroy something. And yeah, this can
be really expensive. So let&#39;s fix this. Let&#39;s
<SYNC Start=3515150><P class='en'>&nbsp;
<SYNC Start=3515150><P class='en'>go down to our method. And here was a space
missing. Let&#39;s add it. We go back to the test.
<SYNC Start=3524630><P class='en'>&nbsp;
<SYNC Start=3524630><P class='en'>executed again. And now the bar is green.
It&#39;s works. Oh, that&#39;s great. Okay. Um, yeah,
<SYNC Start=3538359><P class='en'>&nbsp;
<SYNC Start=3538359><P class='en'>I think that&#39;s it for now. Lesson five. So
now, I would like to talk about modifiers
<SYNC Start=3547410><P class='en'>&nbsp;
<SYNC Start=3547410><P class='en'>first of all about visibility modifiers. Actually,
we already talked about them a bit. One visibility
<SYNC Start=3555529><P class='en'>&nbsp;
<SYNC Start=3555529><P class='en'>modifier is private. Another one is public.
So public, I think I already said this class
<SYNC Start=3563059><P class='en'>&nbsp;
<SYNC Start=3563059><P class='en'>is visible or usable. From all other classes
in all other packages. This class now resides
<SYNC Start=3572049><P class='en'>&nbsp;
<SYNC Start=3572049><P class='en'>on the package comm Mako speelde. java course
lesson two. So here, for example, name is
<SYNC Start=3579289><P class='en'>&nbsp;
<SYNC Start=3579289><P class='en'>in lesson three. So if we would go in the
code of the name class, it could easily use
<SYNC Start=3585640><P class='en'>&nbsp;
<SYNC Start=3585640><P class='en'>person as long as it&#39;s public. A private class,
we can try that. No, it says modifier private
<SYNC Start=3597390><P class='en'>&nbsp;
<SYNC Start=3597390><P class='en'>not allowed here. And of course how That makes
sense. I mean, a class that&#39;s not usable anywhere.
<SYNC Start=3605140><P class='en'>&nbsp;
<SYNC Start=3605140><P class='en'>But just in this class. This doesn&#39;t make
sense. But actually, there is one more option,
<SYNC Start=3612809><P class='en'>&nbsp;
<SYNC Start=3612809><P class='en'>we can leave the modifier away. And this will
give us the default modifier. This is also
<SYNC Start=3619729><P class='en'>&nbsp;
<SYNC Start=3619729><P class='en'>why it&#39;s called default modifier, also package
level modifier, because now, person can only
<SYNC Start=3627230><P class='en'>&nbsp;
<SYNC Start=3627230><P class='en'>be used from other classes within this package.
And we can do the same for the variables,
<SYNC Start=3637549><P class='en'>&nbsp;
<SYNC Start=3637549><P class='en'>the constructors, we can even have a private
constructor, we could have that public, we
<SYNC Start=3646069><P class='en'>&nbsp;
<SYNC Start=3646069><P class='en'>could have that method private. And this one
default. And we can even call, let&#39;s use this
<SYNC Start=3656339><P class='en'>&nbsp;
<SYNC Start=3656339><P class='en'>one. Let&#39;s call HelloWorld. From this method
here, all this is working. And this actually
<SYNC Start=3665059><P class='en'>&nbsp;
<SYNC Start=3665059><P class='en'>even makes sense. Because especially when
your methods are growing, I personally would
<SYNC Start=3671089><P class='en'>&nbsp;
<SYNC Start=3671089><P class='en'>say not more than three or 10 lines. Then
to break things up, you can split a long method
<SYNC Start=3677759><P class='en'>&nbsp;
<SYNC Start=3677759><P class='en'>into smaller private methods, and then calling
the private method. Like, I mean, here, we
<SYNC Start=3687859><P class='en'>&nbsp;
<SYNC Start=3687859><P class='en'>have only two methods. So to make things up,
you can call one method three times. But of
<SYNC Start=3695059><P class='en'>&nbsp;
<SYNC Start=3695059><P class='en'>course, I could define further methods. We
don&#39;t have this now. And then you can call
<SYNC Start=3701199><P class='en'>&nbsp;
<SYNC Start=3701199><P class='en'>any number of methods later on. Okay, so to
recap, visibility modifiers, we learned so
<SYNC Start=3716999><P class='en'>&nbsp;
<SYNC Start=3716999><P class='en'>far is public, private, and default or package
level. Besides there are other visibility
<SYNC Start=3724410><P class='en'>&nbsp;
<SYNC Start=3724410><P class='en'>modifiers, one, for example, is protected.
But we don&#39;t need this at the moment. So you
<SYNC Start=3732890><P class='en'>&nbsp;
<SYNC Start=3732890><P class='en'>should be perfectly coming alone, along with
just public, private and default. So for now,
<SYNC Start=3742960><P class='en'>&nbsp;
<SYNC Start=3742960><P class='en'>let&#39;s just concentrate on these few. Let me
fix the class shortly. Because very soon,
<SYNC Start=3750979><P class='en'>&nbsp;
<SYNC Start=3750979><P class='en'>we are going to need it in our test. And I
don&#39;t want to adjust the test, I want to have
<SYNC Start=3758679><P class='en'>&nbsp;
<SYNC Start=3758679><P class='en'>the code as it was before. Okay, because now
I want to show you a new concept. I have this
<SYNC Start=3770609><P class='en'>&nbsp;
<SYNC Start=3770609><P class='en'>idea. I have prepared the test should return
number of persons. Let me create a few objects
<SYNC Start=3779369><P class='en'>&nbsp;
<SYNC Start=3779369><P class='en'>of type person, one person, person to
<SYNC Start=3788849><P class='en'>&nbsp;
<SYNC Start=3788849><P class='en'>person,
<SYNC Start=3793339><P class='en'>&nbsp;
<SYNC Start=3793339><P class='en'>we could also use the other constructor, but
then I would have to create an object of name,
<SYNC Start=3798529><P class='en'>&nbsp;
<SYNC Start=3798529><P class='en'>as this at the moment is just too much work
for me, I&#39;m not doing it. And I can also give
<SYNC Start=3804959><P class='en'>&nbsp;
<SYNC Start=3804959><P class='en'>it a different name, like my person, just
to show you, we can have any name for the
<SYNC Start=3811429><P class='en'>&nbsp;
<SYNC Start=3811429><P class='en'>variables. So what this means is when the
test will be created here, after this line
<SYNC Start=3819089><P class='en'>&nbsp;
<SYNC Start=3819089><P class='en'>is executed, which is just after the column,
we will have one object and memory two objects
<SYNC Start=3825929><P class='en'>&nbsp;
<SYNC Start=3825929><P class='en'>in memory. And after this line three objects
in memory. So what I want now I want to test
<SYNC Start=3837019><P class='en'>&nbsp;
<SYNC Start=3837019><P class='en'>on a number of objects. Now I should have
three objects created. And I want to create
<SYNC Start=3844289><P class='en'>&nbsp;
<SYNC Start=3844289><P class='en'>a method that tells me exactly that. Just
dynamically, my person thought number of persons.
<SYNC Start=3854179><P class='en'>&nbsp;
<SYNC Start=3854179><P class='en'>Okay, still read, remember, we&#39;ll create it.
And today Ah, int appeared. Because I mean
<SYNC Start=3866819><P class='en'>&nbsp;
<SYNC Start=3866819><P class='en'>three is a number. And a number in Java is
an integer, or he In short, an int an int
<SYNC Start=3874769><P class='en'>&nbsp;
<SYNC Start=3874769><P class='en'>this actually a primitive. And the default
of this is zero. So this is why my ID he put
<SYNC Start=3881020><P class='en'>&nbsp;
<SYNC Start=3881020><P class='en'>zero here. So it&#39;s not red anymore. We can
have a first run. But this will not work of
<SYNC Start=3889519><P class='en'>&nbsp;
<SYNC Start=3889519><P class='en'>course, because it statically returns zero
we expect three. So this is not what we want.
<SYNC Start=3896369><P class='en'>&nbsp;
<SYNC Start=3896369><P class='en'>Well of course we could say three statically.
So, now this should work. It&#39;s a bit cheating,
<SYNC Start=3909549><P class='en'>&nbsp;
<SYNC Start=3909549><P class='en'>of course, greenbar Tada. But, I mean, I want
this to dynamically work. So why not only
<SYNC Start=3918499><P class='en'>&nbsp;
<SYNC Start=3918499><P class='en'>have two persons, I want this to be two. And
well, of course, I have to rename a variable.
<SYNC Start=3926799><P class='en'>&nbsp;
<SYNC Start=3926799><P class='en'>Let&#39;s copy it. And now when I execute it,
of course, this is not going to work expected
<SYNC Start=3934669><P class='en'>&nbsp;
<SYNC Start=3934669><P class='en'>to, but it&#39;s still three. So my first approach
the static one, always returning three. Nice
<SYNC Start=3942880><P class='en'>&nbsp;
<SYNC Start=3942880><P class='en'>gag, but yeah, not what we need. So what we
need is, at the specific time, when each object
<SYNC Start=3950309><P class='en'>&nbsp;
<SYNC Start=3950309><P class='en'>is created, we need to count each object that
is created. So what would be the place where
<SYNC Start=3958799><P class='en'>&nbsp;
<SYNC Start=3958799><P class='en'>the object is created, there is one thing,
similar to a method that is called and this
<SYNC Start=3967059><P class='en'>&nbsp;
<SYNC Start=3967059><P class='en'>is, you might guess it, the constructor, we
used the default constructor for creation.
<SYNC Start=3975439><P class='en'>&nbsp;
<SYNC Start=3975439><P class='en'>So we would have to do something in here.
Now, I want to invent a variable, an instance
<SYNC Start=3982660><P class='en'>&nbsp;
<SYNC Start=3982660><P class='en'>variable, I also call it or let&#39;s call it
person counter, person counter equals two.
<SYNC Start=3995239><P class='en'>&nbsp;
<SYNC Start=3995239><P class='en'>And now I say person counter, because I want
the value it had before. And then I want to
<SYNC Start=4002369><P class='en'>&nbsp;
<SYNC Start=4002369><P class='en'>add one to the last value of person counter
to have the new value dynamic. So on the left
<SYNC Start=4011119><P class='en'>&nbsp;
<SYNC Start=4011119><P class='en'>side, is the new value. On the right side
is still the value from the prior calculation.
<SYNC Start=4020429><P class='en'>&nbsp;
<SYNC Start=4020429><P class='en'>And I add one to it. Now, this is a lot of
code again. And this incrementation by one
<SYNC Start=4029529><P class='en'>&nbsp;
<SYNC Start=4029529><P class='en'>is used so often, that they invented short
form for that, which is plus plus. So with
<SYNC Start=4037870><P class='en'>&nbsp;
<SYNC Start=4037870><P class='en'>plus plus, we say take the current value of
person counter incremented by one and save
<SYNC Start=4044109><P class='en'>&nbsp;
<SYNC Start=4044109><P class='en'>it again into the value of person counter,
it&#39;s still red, because we still have to create
<SYNC Start=4049380><P class='en'>&nbsp;
<SYNC Start=4049380><P class='en'>it. Let&#39;s do that. Make it private, of course,
it&#39;s an int. I call the person counter and
<SYNC Start=4058760><P class='en'>&nbsp;
<SYNC Start=4058760><P class='en'>column. Because I don&#39;t have to say zero,
I could also say equals to zero. But the default
<SYNC Start=4067289><P class='en'>&nbsp;
<SYNC Start=4067289><P class='en'>for end is zero anyway, so what we usually
do is, we just put it here as is. So the idea
<SYNC Start=4074589><P class='en'>&nbsp;
<SYNC Start=4074589><P class='en'>would be it starts with zero. The first time
this constructor is called, it&#39;s incremented
<SYNC Start=4081029><P class='en'>&nbsp;
<SYNC Start=4081029><P class='en'>by one, and so on. So that my method now should
not statically returns three, but person counter
<SYNC Start=4090970><P class='en'>&nbsp;
<SYNC Start=4090970><P class='en'>instead. Okay, let&#39;s try that. Execute the
method. Still not working it returned one.
<SYNC Start=4104989><P class='en'>&nbsp;
<SYNC Start=4104988><P class='en'>It didn&#39;t return zero. It didn&#39;t return three
it returned one. How is that? We didn&#39;t say
<SYNC Start=4111068><P class='en'>&nbsp;
<SYNC Start=4111068><P class='en'>one anywhere. Maybe you guessed it already.
So we started with zero, we incremented by
<SYNC Start=4118499><P class='en'>&nbsp;
<SYNC Start=4118500><P class='en'>one. Now I told you something in the prior
session, which is this constructor is part
<SYNC Start=4127130><P class='en'>&nbsp;
<SYNC Start=4127130><P class='en'>of the instance. So each object has their
own constructor has their own method. So this
<SYNC Start=4136150><P class='en'>&nbsp;
<SYNC Start=4136150><P class='en'>is called for each of the objects. So in the
end, both objects would have the counters
<SYNC Start=4142980><P class='en'>&nbsp;
<SYNC Start=4142980><P class='en'>set to one. So what we need is more like a
global counter. That is not on the instance
<SYNC Start=4151359><P class='en'>&nbsp;
<SYNC Start=4151359><P class='en'>level. But we say on the class level, because
for all the objects of type person, there&#39;s
<SYNC Start=4157299><P class='en'>&nbsp;
<SYNC Start=4157298><P class='en'>only one class person and this we achieve
with a modifier called static. Okay. However,
<SYNC Start=4171308><P class='en'>&nbsp;
<SYNC Start=4171309><P class='en'>as a recommendation because this will help
you in the future, I won&#39;t go on details Why
<SYNC Start=4179099><P class='en'>&nbsp;
<SYNC Start=4179099><P class='en'>just believe me. As we have the variable of
types of static, you should also have the
<SYNC Start=4185969><P class='en'>&nbsp;
<SYNC Start=4185969><P class='en'>method of type static, it would work also
without that, it just better believe me. Okay,
<SYNC Start=4194969><P class='en'>&nbsp;
<SYNC Start=4194969><P class='en'>so now let&#39;s execute it. And this work Great.
Let&#39;s try another thing. Let&#39;s add this time
<SYNC Start=4209039><P class='en'>&nbsp;
<SYNC Start=4209039><P class='en'>for
<SYNC Start=4210039><P class='en'>&nbsp;
<SYNC Start=4210039><P class='en'>free
<SYNC Start=4214320><P class='en'>&nbsp;
<SYNC Start=4214320><P class='en'>for for an exit executed and it works, I said
actually person to why not saying person one.
<SYNC Start=4232489><P class='en'>&nbsp;
<SYNC Start=4232489><P class='en'>And it works? Well as you see this might be
confusing I mean which variable to decide
<SYNC Start=4237559><P class='en'>&nbsp;
<SYNC Start=4237559><P class='en'>on. And also there is a recommendation. Actually
what Java does is Java sees that number of
<SYNC Start=4250070><P class='en'>&nbsp;
<SYNC Start=4250070><P class='en'>persons as a static method, it sees that you
have an instance variable off type person.
<SYNC Start=4258320><P class='en'>&nbsp;
<SYNC Start=4258320><P class='en'>And as this is a static method, it doesn&#39;t
call the method on the object. Because as
<SYNC Start=4266030><P class='en'>&nbsp;
<SYNC Start=4266030><P class='en'>this method is static, it&#39;s not part of the
object anymore. This is like moving it out
<SYNC Start=4271800><P class='en'>&nbsp;
<SYNC Start=4271800><P class='en'>of the object. This method now is part of
the class. So Java does some magic here, is
<SYNC Start=4279460><P class='en'>&nbsp;
<SYNC Start=4279460><P class='en'>trying to be smart and is smart, and calls
the right method of the class. So what we&#39;re
<SYNC Start=4289119><P class='en'>&nbsp;
<SYNC Start=4289119><P class='en'>doing here is working because Java knows how
to do it properly, but it&#39;s not so nice. What
<SYNC Start=4296500><P class='en'>&nbsp;
<SYNC Start=4296500><P class='en'>is better is darkly saying person, so that
everyone knows you&#39;re not going to any specific
<SYNC Start=4303150><P class='en'>&nbsp;
<SYNC Start=4303150><P class='en'>instance, we&#39;re just calling a static static
method. On the person class, let&#39;s execute
<SYNC Start=4311450><P class='en'>&nbsp;
<SYNC Start=4311450><P class='en'>that again. And it&#39;s working. Thank you. So
in lesson six of this Java course, I&#39;m going
<SYNC Start=4322610><P class='en'>&nbsp;
<SYNC Start=4322610><P class='en'>to talk about the tools which I&#39;m using. So
first of all, let&#39;s start with this computer.
<SYNC Start=4327989><P class='en'>&nbsp;
<SYNC Start=4327989><P class='en'>It&#39;s an apple MacBook Pro. This ID that I&#39;m
using here is IntelliJ IDEA, which actually
<SYNC Start=4337830><P class='en'>&nbsp;
<SYNC Start=4337830><P class='en'>at the moment is my favorite ID. Before I
was using many, many years, Eclipse clips
<SYNC Start=4344719><P class='en'>&nbsp;
<SYNC Start=4344719><P class='en'>is open source is also very popular at the
moment, especially with companies because
<SYNC Start=4351780><P class='en'>&nbsp;
<SYNC Start=4351780><P class='en'>it&#39;s open source and free. However, I think
intelligence here is really getting better
<SYNC Start=4358099><P class='en'>&nbsp;
<SYNC Start=4358099><P class='en'>and better every year. So I really like it
and recommended. And they&#39;re not paying me
<SYNC Start=4363230><P class='en'>&nbsp;
<SYNC Start=4363230><P class='en'>for saying that. But I mean, this is your
personal preference, and every person is different.
<SYNC Start=4370690><P class='en'>&nbsp;
<SYNC Start=4370690><P class='en'>So I would say just try it out yourself. There&#39;s
also NetBeans. NetBeans is also very popular,
<SYNC Start=4378420><P class='en'>&nbsp;
<SYNC Start=4378420><P class='en'>and it&#39;s also for free. I&#39;ll just in a second,
I&#39;ll show you where to get them. But let&#39;s
<SYNC Start=4387550><P class='en'>&nbsp;
<SYNC Start=4387550><P class='en'>have a closer look at my tests before. So
in the tests, might have seen it already.
<SYNC Start=4393570><P class='en'>&nbsp;
<SYNC Start=4393570><P class='en'>I&#39;m using j unit, which is a testing framework.
framework means it&#39;s like a tool set. It&#39;s
<SYNC Start=4401130><P class='en'>&nbsp;
<SYNC Start=4401130><P class='en'>a set of tools to set of classes. And it&#39;s
open source. So it&#39;s free to use. And I mean,
<SYNC Start=4409770><P class='en'>&nbsp;
<SYNC Start=4409770><P class='en'>writing such a framework, it&#39;s not really
hard work. But why doing it if it&#39;s already
<SYNC Start=4415820><P class='en'>&nbsp;
<SYNC Start=4415820><P class='en'>done. So this makes it really easy to start
with testing. J unit also is only one of a
<SYNC Start=4422530><P class='en'>&nbsp;
<SYNC Start=4422530><P class='en'>few testing frameworks. The second one I would
tell you about is test and G, I think they&#39;re
<SYNC Start=4428739><P class='en'>&nbsp;
<SYNC Start=4428739><P class='en'>pretty much the same. And really depends on
the company that you work in some use j unit,
<SYNC Start=4435590><P class='en'>&nbsp;
<SYNC Start=4435590><P class='en'>some use testing G or any other framework,
I think between j unit and test ng g there
<SYNC Start=4442010><P class='en'>&nbsp;
<SYNC Start=4442010><P class='en'>knows not so much big differences. So it doesn&#39;t
really matter. I just decided to use j unit
<SYNC Start=4448070><P class='en'>&nbsp;
<SYNC Start=4448070><P class='en'>in here. IntelliJ IDEA actually supports both
of them out of the box. So you can easily
<SYNC Start=4454550><P class='en'>&nbsp;
<SYNC Start=4454550><P class='en'>try them. Um, I&#39;m not going in much more details,
by the way. I mean, this is a Java tutorial.
<SYNC Start=4462300><P class='en'>&nbsp;
<SYNC Start=4462300><P class='en'>So I focus really on Java. Just to be complete,
I wanted to mention what I&#39;m using here. But
<SYNC Start=4469949><P class='en'>&nbsp;
<SYNC Start=4469949><P class='en'>I do this in less than six because at the
beginning, I think learning a new language
<SYNC Start=4474909><P class='en'>&nbsp;
<SYNC Start=4474909><P class='en'>is already quite difficult. So I wanted to
focus on Java, but not that you puzzled. What
<SYNC Start=4482870><P class='en'>&nbsp;
<SYNC Start=4482870><P class='en'>the heck is that here? What are you doing?
I wanted to mention this is J unit. And there
<SYNC Start=4487980><P class='en'>&nbsp;
<SYNC Start=4487980><P class='en'>is lots of documentation on the internet.
Yeah, so you can read a lot about it. Okay,
<SYNC Start=4495479><P class='en'>&nbsp;
<SYNC Start=4495479><P class='en'>so maybe we just go to the browser now. and
have a look. So first of all, I told you about
<SYNC Start=4504369><P class='en'>&nbsp;
<SYNC Start=4504369><P class='en'>intelli j idea for you pops up.
<SYNC Start=4510850><P class='en'>&nbsp;
<SYNC Start=4510850><P class='en'>So you can download, I would first of all,
go with the free edition, and then see if
<SYNC Start=4518560><P class='en'>&nbsp;
<SYNC Start=4518560><P class='en'>you like it or not. Besides, of course, there&#39;s
Eclipse. This one is open source anyway. And
<SYNC Start=4528949><P class='en'>&nbsp;
<SYNC Start=4528949><P class='en'>then you can choose your operating system,
and 32 or 64 bit, whatever you need. Last
<SYNC Start=4539701><P class='en'>&nbsp;
<SYNC Start=4539701><P class='en'>but not least NetBeans. Just press the download
button, choose your language, and operating
<SYNC Start=4555719><P class='en'>&nbsp;
<SYNC Start=4555719><P class='en'>system. And then also j unit, let&#39;s have a
look on that. In most It is these days, you
<SYNC Start=4568260><P class='en'>&nbsp;
<SYNC Start=4568260><P class='en'>won&#39;t have to install it, because it would
come pre installed anyway. But just for the
<SYNC Start=4573510><P class='en'>&nbsp;
<SYNC Start=4573510><P class='en'>record, I mean, this also has lots of documentation.
So yeah, he you can download the most current
<SYNC Start=4581110><P class='en'>&nbsp;
<SYNC Start=4581110><P class='en'>version. Let&#39;s check documentation. Here.
It also talks about Maven, which, by the way,
<SYNC Start=4588960><P class='en'>&nbsp;
<SYNC Start=4588960><P class='en'>also using so this way, you can define in
Maven that you want to use the current version
<SYNC Start=4595440><P class='en'>&nbsp;
<SYNC Start=4595440><P class='en'>for 12 of j unit, which I actually did, because
I&#39;m also using Maven, which we&#39;re going to
<SYNC Start=4601719><P class='en'>&nbsp;
<SYNC Start=4601719><P class='en'>in a second. But after j unit, let&#39;s also
have a look on tests and G
<SYNC Start=4615210><P class='en'>&nbsp;
<SYNC Start=4615210><P class='en'>test ng g on this page just provides the false
for Eclipse. But as I told you in IntelliJ
<SYNC Start=4622250><P class='en'>&nbsp;
<SYNC Start=4622250><P class='en'>IDEA, it&#39;s included anyway. And I checked
for NetBeans. I mean, I&#39;m not so familiar
<SYNC Start=4628119><P class='en'>&nbsp;
<SYNC Start=4628119><P class='en'>with NetBeans, I have to admit that beans,
but I saw there is a plugin, which you can
<SYNC Start=4639340><P class='en'>&nbsp;
<SYNC Start=4639340><P class='en'>download and install. So probably works just
as well. Now let&#39;s talk a bit about Maven.
<SYNC Start=4647170><P class='en'>&nbsp;
<SYNC Start=4647170><P class='en'>Maven, there&#39;s what&#39;s called a build management
tool. So as the name implies, it manages your
<SYNC Start=4657690><P class='en'>&nbsp;
<SYNC Start=4657690><P class='en'>build. Now, what&#39;s a build? Well, when you
program your programming consists of hundreds
<SYNC Start=4664099><P class='en'>&nbsp;
<SYNC Start=4664099><P class='en'>of classes, and then you would want to release
them on production or send them to a client.
<SYNC Start=4670590><P class='en'>&nbsp;
<SYNC Start=4670590><P class='en'>And then of course, you would not want to
send each file separately. So the so you would
<SYNC Start=4675570><P class='en'>&nbsp;
<SYNC Start=4675570><P class='en'>usually do a package a single file out of
all the tasks together. And in former times,
<SYNC Start=4682400><P class='en'>&nbsp;
<SYNC Start=4682400><P class='en'>and say in prehistoric times, this was done
manually. And this is really not a funny job.
<SYNC Start=4688480><P class='en'>&nbsp;
<SYNC Start=4688480><P class='en'>So people very soon started to program, some
little scripts to make this task easier. The
<SYNC Start=4697619><P class='en'>&nbsp;
<SYNC Start=4697619><P class='en'>first tool that I know of is probably make
it&#39;s a Unix tool. And often make they came
<SYNC Start=4705500><P class='en'>&nbsp;
<SYNC Start=4705500><P class='en'>up with and and Maven again is the successor
of Maven of m sorry. And Maven currently exists
<SYNC Start=4715940><P class='en'>&nbsp;
<SYNC Start=4715940><P class='en'>in version three. Besides Maven, there&#39;s also
Gradle and other build tools, I&#39;m using Maven,
<SYNC Start=4725659><P class='en'>&nbsp;
<SYNC Start=4725659><P class='en'>here you see it find that I&#39;m using j unit
412. And also the find that my source encoding
<SYNC Start=4733270><P class='en'>&nbsp;
<SYNC Start=4733270><P class='en'>is UTF eight, because what this bill two also
can do for you. I mean, it can do so many
<SYNC Start=4738639><P class='en'>&nbsp;
<SYNC Start=4738639><P class='en'>things is environment specific settings. So
that I tell that my source encoding is UTF
<SYNC Start=4747869><P class='en'>&nbsp;
<SYNC Start=4747869><P class='en'>eight, I can do it here. And so much more.
So also about Maven, you can visit the website,
<SYNC Start=4757489><P class='en'>&nbsp;
<SYNC Start=4757489><P class='en'>Maven. There, you can download it. They also
have a free book, which is really a great
<SYNC Start=4766619><P class='en'>&nbsp;
<SYNC Start=4766619><P class='en'>book. You can download all the files, even
the sources that you would need. And also
<SYNC Start=4775139><P class='en'>&nbsp;
<SYNC Start=4775139><P class='en'>check Maven book. I really recommend that.
As far as I remember. It&#39;s available as HTML.
<SYNC Start=4784520><P class='en'>&nbsp;
<SYNC Start=4784520><P class='en'>And also there should be a PDF somewhere.
All this is just too long. Anyway, I know
<SYNC Start=4793170><P class='en'>&nbsp;
<SYNC Start=4793170><P class='en'>there is also a PDF available which you can
download. And so you can read all about Maven
<SYNC Start=4802179><P class='en'>&nbsp;
<SYNC Start=4802179><P class='en'>Last but not least, let&#39;s also talk about
bit about text editors. Because I think in
<SYNC Start=4807730><P class='en'>&nbsp;
<SYNC Start=4807730><P class='en'>at least one of the lessons I did so far,
I told you, you should start not with an ID.
<SYNC Start=4815409><P class='en'>&nbsp;
<SYNC Start=4815409><P class='en'>But you should start with a text editor instead,
well, there are two that I would recommend,
<SYNC Start=4821869><P class='en'>&nbsp;
<SYNC Start=4821869><P class='en'>first of all testbed for Windows, I really
like it using Windows. for Mac, it&#39;s unfortunately
<SYNC Start=4830840><P class='en'>&nbsp;
<SYNC Start=4830840><P class='en'>not available. In this, you can write your
code, then you would save it. And then assuming
<SYNC Start=4840179><P class='en'>&nbsp;
<SYNC Start=4840179><P class='en'>you have already downloaded the Java JDK,
which I have also not talked about, because
<SYNC Start=4845739><P class='en'>&nbsp;
<SYNC Start=4845739><P class='en'>I assume I should be easy, but maybe we could
first, shortly go there. So for the JDK, so
<SYNC Start=4855429><P class='en'>&nbsp;
<SYNC Start=4855429><P class='en'>that you can download your code, you can just
go here, say download, by the way that was
<SYNC Start=4859989><P class='en'>&nbsp;
<SYNC Start=4859989><P class='en'>NetBeans, if it was soiled, and you can choose
your operating system and download it. I assume
<SYNC Start=4867969><P class='en'>&nbsp;
<SYNC Start=4867969><P class='en'>you have already done that. And so when you
have installed a text editor, or like text
<SYNC Start=4873179><P class='en'>&nbsp;
<SYNC Start=4873179><P class='en'>pad, or sublime, you&#39;re on. Mac, I&#39;m using
sublime, which is also a great editor. Download
<SYNC Start=4883869><P class='en'>&nbsp;
<SYNC Start=4883869><P class='en'>button. It&#39;s also available for Windows and
Linux. So using this text editor, here, I&#39;ve
<SYNC Start=4893420><P class='en'>&nbsp;
<SYNC Start=4893420><P class='en'>loaded the class person that we saw before.
I mean, it helps you a bit like see, I click
<SYNC Start=4900119><P class='en'>&nbsp;
<SYNC Start=4900119><P class='en'>on person&#39;s name, it highlights the variable
person name and all forms, but it would not
<SYNC Start=4905800><P class='en'>&nbsp;
<SYNC Start=4905800><P class='en'>so heavily assist you, like you might have
seen when I was in my ID, which for the beginning
<SYNC Start=4911780><P class='en'>&nbsp;
<SYNC Start=4911780><P class='en'>is actually good, I think. Because when your
ID is too smart, then you don&#39;t have to use
<SYNC Start=4919969><P class='en'>&nbsp;
<SYNC Start=4919969><P class='en'>your brain cells too much. I mean, after some
time, when you have coded too much, this is
<SYNC Start=4927030><P class='en'>&nbsp;
<SYNC Start=4927030><P class='en'>really welcome. But for the beginning, I really
recommend to use your brain cells and so that
<SYNC Start=4932830><P class='en'>&nbsp;
<SYNC Start=4932830><P class='en'>you get used and familiar with all these keywords,
public class, private static, should really
<SYNC Start=4939539><P class='en'>&nbsp;
<SYNC Start=4939539><P class='en'>get familiar with that. And so for the beginning,
just use a text editor, then you can also
<SYNC Start=4945469><P class='en'>&nbsp;
<SYNC Start=4945469><P class='en'>go on the console and called Java arc and
compile the class. Also, this is one show
<SYNC Start=4952870><P class='en'>&nbsp;
<SYNC Start=4952870><P class='en'>you because in this course really I only focus
on the theory of Java. So yes, I think that&#39;s
<SYNC Start=4961530><P class='en'>&nbsp;
<SYNC Start=4961530><P class='en'>it really short introduction of the tools
that I&#39;m using.
<SYNC Start=4965199><P class='en'>&nbsp;
<SYNC Start=4965199><P class='en'>If you have any questions, send me an email
as always, um, yeah. Lesson seven. So now
<SYNC Start=4975730><P class='en'>&nbsp;
<SYNC Start=4975730><P class='en'>let&#39;s start with the topic of this video,
which is conditional statements, and of course,
<SYNC Start=4981340><P class='en'>&nbsp;
<SYNC Start=4981340><P class='en'>conditional statements, and Boolean. So a
Boolean is a new data type. This one is actually
<SYNC Start=4990699><P class='en'>&nbsp;
<SYNC Start=4990699><P class='en'>a primitive and it can have two values, Boolean,
true or false. And this is all there is to
<SYNC Start=4999801><P class='en'>&nbsp;
<SYNC Start=4999801><P class='en'>it. So conditional statements, I mean, there
is a condition and it can hold true or not.
<SYNC Start=5010460><P class='en'>&nbsp;
<SYNC Start=5010460><P class='en'>And that is something is executed or not.
I think, already from the wording, it makes
<SYNC Start=5015900><P class='en'>&nbsp;
<SYNC Start=5015900><P class='en'>sense, and you might easily understand it.
But what exactly is a Boolean? Why is it called
<SYNC Start=5021699><P class='en'>&nbsp;
<SYNC Start=5021699><P class='en'>Boolean? I mean, this is a bit weird, I think,
well, at least this is what I found. So I
<SYNC Start=5027870><P class='en'>&nbsp;
<SYNC Start=5027870><P class='en'>just looked it up on the internet. Here on
Wikipedia, we have Boolean algebra, and I&#39;m
<SYNC Start=5038040><P class='en'>&nbsp;
<SYNC Start=5038040><P class='en'>really not a big fan of mathematics. So let&#39;s
go over this really fast. The only thing that
<SYNC Start=5044309><P class='en'>&nbsp;
<SYNC Start=5044309><P class='en'>matters to me is Boolean algebra was introduced
by George Boole in his first book, blah, blah,
<SYNC Start=5051480><P class='en'>&nbsp;
<SYNC Start=5051480><P class='en'>blah whatsoever. So it turns out that the
Boolean is called all the end because of this
<SYNC Start=5057559><P class='en'>&nbsp;
<SYNC Start=5057559><P class='en'>guy here. Um, I leave this as your homework,
read everything about George Boole and Boolean
<SYNC Start=5065750><P class='en'>&nbsp;
<SYNC Start=5065750><P class='en'>algebra, of course, this is again a big topic
by itself. We have folk focusing again on
<SYNC Start=5073300><P class='en'>&nbsp;
<SYNC Start=5073300><P class='en'>Java, I just wanted to help you that you get
a feeling why Boolean is called a Boolean.
<SYNC Start=5082670><P class='en'>&nbsp;
<SYNC Start=5082670><P class='en'>So this thing here is really helpful when
we want to say if something happens or something
<SYNC Start=5089889><P class='en'>&nbsp;
<SYNC Start=5089889><P class='en'>exists, some condition, then only execute
a specific area of code. And then you can
<SYNC Start=5097070><P class='en'>&nbsp;
<SYNC Start=5097070><P class='en'>also say else if this condition does not hold
true execute something else. So this is really
<SYNC Start=5104849><P class='en'>&nbsp;
<SYNC Start=5104849><P class='en'>the if statement is probably the most important
statement, not only in Java probably in all
<SYNC Start=5111640><P class='en'>&nbsp;
<SYNC Start=5111640><P class='en'>programming languages, at least the ones I
know of, because it allows us to, like really
<SYNC Start=5118309><P class='en'>&nbsp;
<SYNC Start=5118309><P class='en'>have a different execution flow each time.
For example, we could say, I mean, B is a
<SYNC Start=5124260><P class='en'>&nbsp;
<SYNC Start=5124260><P class='en'>bit boring. Let&#39;s call this Monday. And let&#39;s
add all the raining. I was raining. Let&#39;s
<SYNC Start=5136820><P class='en'>&nbsp;
<SYNC Start=5136820><P class='en'>also have Monday. Okay, so in this little
example, it&#39;s Monday, and it&#39;s raining. And
<SYNC Start=5145300><P class='en'>&nbsp;
<SYNC Start=5145300><P class='en'>nobody could say if it&#39;s Monday, and percent
twice,
<SYNC Start=5154120><P class='en'>&nbsp;
<SYNC Start=5154120><P class='en'>raining.
<SYNC Start=5155489><P class='en'>&nbsp;
<SYNC Start=5155489><P class='en'>So what these two M percent mean is, and so
this tells Java to check on this boolean value,
<SYNC Start=5164690><P class='en'>&nbsp;
<SYNC Start=5164690><P class='en'>check if it&#39;s true, and only if the first
boolean value. Or he could also be a function,
<SYNC Start=5173119><P class='en'>&nbsp;
<SYNC Start=5173119><P class='en'>like, is it Monday, which would have to return
a Boolean. And if it does, only then Java
<SYNC Start=5184840><P class='en'>&nbsp;
<SYNC Start=5184840><P class='en'>would execute, go here. And check if this
is also true. Which also could of course,
<SYNC Start=5190100><P class='en'>&nbsp;
<SYNC Start=5190100><P class='en'>be a function if Is it raining or whatever,
right. And if both here are true, then this
<SYNC Start=5206218><P class='en'>&nbsp;
<SYNC Start=5206219><P class='en'>block here, starting with the curly braces,
is going to be executed. Now. I mean, I don&#39;t
<SYNC Start=5212719><P class='en'>&nbsp;
<SYNC Start=5212719><P class='en'>want to implement the functions. So let&#39;s
make this Monday again. And simply raining.
<SYNC Start=5221190><P class='en'>&nbsp;
<SYNC Start=5221190><P class='en'>Just to keep it simple, and then drink beer.
Because rain. I mean, what else can you do?
<SYNC Start=5230580><P class='en'>&nbsp;
<SYNC Start=5230580><P class='en'>Um, but now let&#39;s make this more easy to drink
beer. I&#39;m from Munich, so I&#39;m really a beer
<SYNC Start=5239550><P class='en'>&nbsp;
<SYNC Start=5239550><P class='en'>lover. So on Mac, I mean, as depends which
platform you use. On Mac, you press just out
<SYNC Start=5249250><P class='en'>&nbsp;
<SYNC Start=5249250><P class='en'>and seven, twice. This is called the pipe
symbol. And the pipe symbol symbolizes or,
<SYNC Start=5258289><P class='en'>&nbsp;
<SYNC Start=5258289><P class='en'>um, yeah, I know this is a bit weird. This,
you just have to know by heart that this means
<SYNC Start=5265550><P class='en'>&nbsp;
<SYNC Start=5265550><P class='en'>or, again, as before with the two ampersands.
When you repeat it twice, it&#39;s called the
<SYNC Start=5274139><P class='en'>&nbsp;
<SYNC Start=5274139><P class='en'>short circuit operator, which means if the
first condition is already not true, for the
<SYNC Start=5285000><P class='en'>&nbsp;
<SYNC Start=5285000><P class='en'>end, at least, then it&#39;s not going to execute
the rest. So whenever In a statement, it sees
<SYNC Start=5293480><P class='en'>&nbsp;
<SYNC Start=5293480><P class='en'>that a condition will cannot hold true anymore.
It will stop at the beginning and they will
<SYNC Start=5299190><P class='en'>&nbsp;
<SYNC Start=5299190><P class='en'>not execute the rest, which is very handy.
Because I mean, if before we had a method
<SYNC Start=5305590><P class='en'>&nbsp;
<SYNC Start=5305590><P class='en'>here, is it raining. Now imagine this method
takes like two hours to execute, we could
<SYNC Start=5315671><P class='en'>&nbsp;
<SYNC Start=5315671><P class='en'>really save that time if we already see. This
is only true if both are true. So this is
<SYNC Start=5323230><P class='en'>&nbsp;
<SYNC Start=5323230><P class='en'>why you use the ampersand twice. And the pipe
symbol wise, this is I would say the default.
<SYNC Start=5333000><P class='en'>&nbsp;
<SYNC Start=5333000><P class='en'>So I want to even spend time to talk about
the other alternative. But now this is so
<SYNC Start=5338849><P class='en'>&nbsp;
<SYNC Start=5338849><P class='en'>much nicer. If I have an orange here, if it&#39;s
Monday, or if it&#39;s raining, I drink a beer.
<SYNC Start=5348800><P class='en'>&nbsp;
<SYNC Start=5348800><P class='en'>So this really increases my chance my chance
to get a beer. So I personally liked the statement
<SYNC Start=5355750><P class='en'>&nbsp;
<SYNC Start=5355750><P class='en'>so much more. I&#39;m just kidding. Um, so this
is the difference. Or, and, and, and of course
<SYNC Start=5366650><P class='en'>&nbsp;
<SYNC Start=5366650><P class='en'>you can further combine that led so I don&#39;t
know what to do. Let&#39;s say raining and let&#39;s
<SYNC Start=5378500><P class='en'>&nbsp;
<SYNC Start=5378500><P class='en'>say Tuesday and sunny. So we have to introduce
these Boolean variables first. So Tuesday.
<SYNC Start=5392659><P class='en'>&nbsp;
<SYNC Start=5392659><P class='en'>Well, if it&#39;s Monday, it can&#39;t be Tuesday.
So we will say false here. And Boolean, if
<SYNC Start=5403500><P class='en'>&nbsp;
<SYNC Start=5403500><P class='en'>it&#39;s raining, it can&#39;t be sunny. So sunny
will be false. But of course, let&#39;s change
<SYNC Start=5411110><P class='en'>&nbsp;
<SYNC Start=5411110><P class='en'>this. Now it&#39;s not Monday. It&#39;s Tuesday. So
this will be true. And I misspelled that sunny.
<SYNC Start=5421010><P class='en'>&nbsp;
<SYNC Start=5421010><P class='en'>Okay, now they&#39;re not red anymore. So now
what do we have here? Monday is false. So
<SYNC Start=5428139><P class='en'>&nbsp;
<SYNC Start=5428139><P class='en'>if Monday is raining, but it&#39;s not Monday
at the moment. So this is the whole thing
<SYNC Start=5433540><P class='en'>&nbsp;
<SYNC Start=5433540><P class='en'>here is not true. But here we have an or true
Tuesday, this is true, Sunny is still false.
<SYNC Start=5442590><P class='en'>&nbsp;
<SYNC Start=5442590><P class='en'>So this is also false, which means the whole
if statement is false. And we cannot drink
<SYNC Start=5449139><P class='en'>&nbsp;
<SYNC Start=5449139><P class='en'>a beer. But let&#39;s make this true. And now
it&#39;s Tuesday. And it&#39;s sunny, and we can drink
<SYNC Start=5457870><P class='en'>&nbsp;
<SYNC Start=5457870><P class='en'>a beer Ray. Of course, I mean, when it gets
more complicated, I&#39;d recommend you to introduce
<SYNC Start=5463889><P class='en'>&nbsp;
<SYNC Start=5463889><P class='en'>more brackets to really tell Java first execute
this. And the result when you have it, then
<SYNC Start=5473100><P class='en'>&nbsp;
<SYNC Start=5473100><P class='en'>only execute the next statement. I mean, if
you go more in more detail on the algebraic
<SYNC Start=5480290><P class='en'>&nbsp;
<SYNC Start=5480290><P class='en'>logic, you will see there are preferences.
And they&#39;re really rules on that. But if you
<SYNC Start=5486969><P class='en'>&nbsp;
<SYNC Start=5486969><P class='en'>don&#39;t know them, and if you always just add
the brackets, you&#39;re on the safe side to show
<SYNC Start=5491940><P class='en'>&nbsp;
<SYNC Start=5491940><P class='en'>what you want. Okay, now, let&#39;s make this
not so complicated. Because let&#39;s introduce
<SYNC Start=5502079><P class='en'>&nbsp;
<SYNC Start=5502079><P class='en'>something, something else. And this else is
the else statement. Because if it&#39;s not money,
<SYNC Start=5512630><P class='en'>&nbsp;
<SYNC Start=5512630><P class='en'>we can do something else. And this is the
new keyword that I&#39;m introducing the else.
<SYNC Start=5520470><P class='en'>&nbsp;
<SYNC Start=5520470><P class='en'>statement. So here, we can say drink, milk.
might also be nice. Okay, so, only on Monday,
<SYNC Start=5532519><P class='en'>&nbsp;
<SYNC Start=5532519><P class='en'>we drink beer. And on all other days, we drink
milk. So that means we have to drink a lot
<SYNC Start=5538820><P class='en'>&nbsp;
<SYNC Start=5538820><P class='en'>of milk. So if you I mean, milk is really
healthy. So I recommend you to drink milk
<SYNC Start=5544079><P class='en'>&nbsp;
<SYNC Start=5544079><P class='en'>like this. It&#39;s much better. But of course,
let&#39;s introduce some more variation. If no
<SYNC Start=5553000><P class='en'>&nbsp;
<SYNC Start=5553000><P class='en'>sorry, else if, um, as you introduce a new
day, let&#39;s say Friday. So we have to introduce
<SYNC Start=5566099><P class='en'>&nbsp;
<SYNC Start=5566099><P class='en'>Friday. At the moment, it&#39;s Tuesday, Tuesday.
So we&#39;ll change that in a moment. Make this
<SYNC Start=5577670><P class='en'>&nbsp;
<SYNC Start=5577670><P class='en'>false. So else a Friday.
<SYNC Start=5585909><P class='en'>&nbsp;
<SYNC Start=5585909><P class='en'>Sorry.
<SYNC Start=5587800><P class='en'>&nbsp;
<SYNC Start=5587800><P class='en'>Drink water. Okay, so what do we have now?
And I mean, you can format this in any way,
<SYNC Start=5598580><P class='en'>&nbsp;
<SYNC Start=5598580><P class='en'>but usually, you formatted like this, too,
so that you can see this all this whole construct
<SYNC Start=5605309><P class='en'>&nbsp;
<SYNC Start=5605309><P class='en'>belongs together? Because it starts with if
money. And if this is not true. Java has to
<SYNC Start=5614610><P class='en'>&nbsp;
<SYNC Start=5614610><P class='en'>check else is it Friday? If so, then call
this function. And in all other cases, we
<SYNC Start=5623039><P class='en'>&nbsp;
<SYNC Start=5623039><P class='en'>still drink milk. So, okay, and you can have
any number of L&#39;s if statements here.
<SYNC Start=5638570><P class='en'>&nbsp;
<SYNC Start=5638570><P class='en'>Else if I don&#39;t know some other condition,
we could just say sunny. Um, if it&#39;s sunny,
<SYNC Start=5649170><P class='en'>&nbsp;
<SYNC Start=5649170><P class='en'>um, what should we do? go swimming, go swimming.
Yeah, we can do anything here. Okay, so you
<SYNC Start=5663119><P class='en'>&nbsp;
<SYNC Start=5663119><P class='en'>can have any number of L&#39;s if statements.
And you can have just one l statement, of
<SYNC Start=5669929><P class='en'>&nbsp;
<SYNC Start=5669929><P class='en'>course, but you don&#39;t have to, I mean, this
is not obligatory. You can also leave it away.
<SYNC Start=5676850><P class='en'>&nbsp;
<SYNC Start=5676850><P class='en'>You just you cannot have AIDS if by itself
because else what I mean, there has to be
<SYNC Start=5684590><P class='en'>&nbsp;
<SYNC Start=5684590><P class='en'>the whole statement has to start with some
Eve. I&#39;m okay. I think this pretty much is
<SYNC Start=5694559><P class='en'>&nbsp;
<SYNC Start=5694559><P class='en'>enough for if else if and else. Now let&#39;s
do some more cool stuff. Let me Remove all
<SYNC Start=5700489><P class='en'>&nbsp;
<SYNC Start=5700489><P class='en'>that. Because normally, you evaluate some
condition. And then when the condition is
<SYNC Start=5711070><P class='en'>&nbsp;
<SYNC Start=5711070><P class='en'>evaluated, this returns a Boolean. Under the,
under the covers, I would say, for example,
<SYNC Start=5717139><P class='en'>&nbsp;
<SYNC Start=5717139><P class='en'>you could say in E equals to four. And then
we could say end. j equals to three, omit
<SYNC Start=5731179><P class='en'>&nbsp;
<SYNC Start=5731179><P class='en'>that. Okay, so we have two primitive data
types of the end, which are introduced in
<SYNC Start=5739110><P class='en'>&nbsp;
<SYNC Start=5739110><P class='en'>a form of video. And then I can compare those
values. I can say, I mean, of course, as well
<SYNC Start=5747730><P class='en'>&nbsp;
<SYNC Start=5747730><P class='en'>as with the Boolean is it&#39;s obvious. But I
mean, in a big program, it&#39;s not so easy.
<SYNC Start=5753449><P class='en'>&nbsp;
<SYNC Start=5753449><P class='en'>Normally, one function calls the other, and
he would like have the user typing in nature.
<SYNC Start=5759949><P class='en'>&nbsp;
<SYNC Start=5759949><P class='en'>And then you don&#39;t know if the user typed
in four, three, some in this is a really stupid
<SYNC Start=5765210><P class='en'>&nbsp;
<SYNC Start=5765210><P class='en'>example. I think we know that four is bigger
than three. But let&#39;s assume that we don&#39;t
<SYNC Start=5770349><P class='en'>&nbsp;
<SYNC Start=5770349><P class='en'>know. And then I could say, if i greater than
j, then do something. Else. Do something else.
<SYNC Start=5789599><P class='en'>&nbsp;
<SYNC Start=5789599><P class='en'>I mean, here, it&#39;s again, you can say ELLs,
if you could say if j greater than I, what
<SYNC Start=5807270><P class='en'>&nbsp;
<SYNC Start=5807270><P class='en'>else can we say, oh, if i equal to j, which
at the moment, of course does not hold true.
<SYNC Start=5819000><P class='en'>&nbsp;
<SYNC Start=5819000><P class='en'>This, by the way, you see there are two equal
signs. The reason is this equal sign we use
<SYNC Start=5828300><P class='en'>&nbsp;
<SYNC Start=5828300><P class='en'>here when we assign the value of four to i,
or j, so we can&#39;t use that again. Instead,
<SYNC Start=5836920><P class='en'>&nbsp;
<SYNC Start=5836920><P class='en'>in Java, here use two equal symbols to express
I want to have a Boolean check. And what you
<SYNC Start=5848030><P class='en'>&nbsp;
<SYNC Start=5848030><P class='en'>also can do so so you see the result of this
will be a boolean value, you can assign that
<SYNC Start=5854520><P class='en'>&nbsp;
<SYNC Start=5854520><P class='en'>boolean value are equal to a boolean variable.
And this is actually quite often very smart.
<SYNC Start=5865940><P class='en'>&nbsp;
<SYNC Start=5865940><P class='en'>I mean, here, it&#39;s very easy to understand.
But sometimes you have way more complex terms.
<SYNC Start=5873400><P class='en'>&nbsp;
<SYNC Start=5873400><P class='en'>And then if you give it a name, your code
will be much more easy to read, because now
<SYNC Start=5879249><P class='en'>&nbsp;
<SYNC Start=5879249><P class='en'>you can say are equal. Okay. And then there
is also greater or equal, smaller or equal.
<SYNC Start=5892290><P class='en'>&nbsp;
<SYNC Start=5892290><P class='en'>And then also unequal, which I will usually
I&#39;m typing like this, but it&#39;s actually the
<SYNC Start=5904780><P class='en'>&nbsp;
<SYNC Start=5904780><P class='en'>same. So not equal, you can say with the exclamation
mark equal, or with greater, smaller, like
<SYNC Start=5913090><P class='en'>&nbsp;
<SYNC Start=5913090><P class='en'>this, it&#39;s both the same thing.
<SYNC Start=5917510><P class='en'>&nbsp;
<SYNC Start=5917510><P class='en'>I really prefer that one. I think it&#39;s more
readable. Because this is like, exclamation
<SYNC Start=5923429><P class='en'>&nbsp;
<SYNC Start=5923429><P class='en'>mark, really easy to read. And with this,
you can also whatever condition you have,
<SYNC Start=5932920><P class='en'>&nbsp;
<SYNC Start=5932920><P class='en'>if this no holds true, when you put the exclamation
mark in front of it, that is false. If this
<SYNC Start=5940440><P class='en'>&nbsp;
<SYNC Start=5940440><P class='en'>before was holes. Now it&#39;s true. Thank you
can even Yes, you can, you can add any number,
<SYNC Start=5950119><P class='en'>&nbsp;
<SYNC Start=5950119><P class='en'>exclamation marks, and every time the value
is inverted. So from to false than true again,
<SYNC Start=5956661><P class='en'>&nbsp;
<SYNC Start=5956661><P class='en'>and false again, and so on. I mean, this is
not really readable. So I wouldn&#39;t do it.
<SYNC Start=5963840><P class='en'>&nbsp;
<SYNC Start=5963840><P class='en'>Just to be complete. I wanted to mention this
as possible. Okay, on. I think this pretty
<SYNC Start=5973420><P class='en'>&nbsp;
<SYNC Start=5973420><P class='en'>much wraps it up. We talked about Boolean.
This is a condition. If it&#39;s true, we execute
<SYNC Start=5981500><P class='en'>&nbsp;
<SYNC Start=5981500><P class='en'>code that is in here. You see it can also
be empty. I mean, it doesn&#39;t really make sense.
<SYNC Start=5987889><P class='en'>&nbsp;
<SYNC Start=5987889><P class='en'>I mean, I would really recommend you to write
something, execute some method. You can also
<SYNC Start=5997981><P class='en'>&nbsp;
<SYNC Start=5997981><P class='en'>of course, you don&#39;t have to have an method
in here, while again, I would recommend it
<SYNC Start=6002789><P class='en'>&nbsp;
<SYNC Start=6002789><P class='en'>because it might be much more readable. But
in here, you can also do crazy stuff like
<SYNC Start=6009110><P class='en'>&nbsp;
<SYNC Start=6009110><P class='en'>i equals to eight, for example. J equals 299.
So you see, now we have actually some code
<SYNC Start=6025719><P class='en'>&nbsp;
<SYNC Start=6025719><P class='en'>or plus class, the increment operator that
I talked about, I think it was in less than
<SYNC Start=6032499><P class='en'>&nbsp;
<SYNC Start=6032499><P class='en'>five. So if j with three before, when this
is executed will be four, or minus minus,
<SYNC Start=6044409><P class='en'>&nbsp;
<SYNC Start=6044409><P class='en'>it was three before it will be two. Okay,
so you can have 30 Booleans. And here, what
<SYNC Start=6055010><P class='en'>&nbsp;
<SYNC Start=6055010><P class='en'>you cannot do is compare a Boolean to another
data type like int, amin, this wouldn&#39;t really
<SYNC Start=6062370><P class='en'>&nbsp;
<SYNC Start=6062370><P class='en'>make sense what you can do, but, and this
really, a lot of beginners do like to compare
<SYNC Start=6072420><P class='en'>&nbsp;
<SYNC Start=6072420><P class='en'>a boolean value let&#39;s make this Monday again.
Monday. True. And now you could say, if Monday
<SYNC Start=6084929><P class='en'>&nbsp;
<SYNC Start=6084929><P class='en'>equals to true, what does this mean? I mean,
this means if true, equals to true. Of course,
<SYNC Start=6093739><P class='en'>&nbsp;
<SYNC Start=6093739><P class='en'>this works. And if this was false, if false
equals to true, false does not equal to true.
<SYNC Start=6101969><P class='en'>&nbsp;
<SYNC Start=6101969><P class='en'>So the whole thing is false. But I mean, this
is one comparison too much. To say, if Monday,
<SYNC Start=6109130><P class='en'>&nbsp;
<SYNC Start=6109130><P class='en'>this is enough. Yeah. But really, comparisons
like this false or true. I really see very
<SYNC Start=6118050><P class='en'>&nbsp;
<SYNC Start=6118050><P class='en'>often in code. So if you see that, you&#39;re
free to refactor the code, and just shorten
<SYNC Start=6126860><P class='en'>&nbsp;
<SYNC Start=6126860><P class='en'>it. If it&#39;s true, then just say, if Monday,
if it was, if Monday false use just say, if
<SYNC Start=6132530><P class='en'>&nbsp;
<SYNC Start=6132530><P class='en'>not Monday. So, see, this is not. Okay. Lesson
eight, I would like to introduce you to loops.
<SYNC Start=6145820><P class='en'>&nbsp;
<SYNC Start=6145820><P class='en'>This is really exciting, because it&#39;s a very
cool feature. It allows you to execute a repetitive
<SYNC Start=6153300><P class='en'>&nbsp;
<SYNC Start=6153300><P class='en'>task much faster than any human could do.
So this really makes our programming very
<SYNC Start=6160519><P class='en'>&nbsp;
<SYNC Start=6160519><P class='en'>powerful. So it&#39;s very important to know how
to program loops. So there are certain different
<SYNC Start=6167550><P class='en'>&nbsp;
<SYNC Start=6167550><P class='en'>types of loops. The first one is a for loop
for because it says like, for a number of
<SYNC Start=6178389><P class='en'>&nbsp;
<SYNC Start=6178389><P class='en'>times, execute something. So this is why for
and then sorry, this writing here will be
<SYNC Start=6186989><P class='en'>&nbsp;
<SYNC Start=6186989><P class='en'>a bit cryptic. I&#39;m sorry. The reason is because
this loop is really also a very old loop.
<SYNC Start=6194829><P class='en'>&nbsp;
<SYNC Start=6194829><P class='en'>That was also introduced before Java, actually,
I think it&#39;s, for example, is part of C and
<SYNC Start=6201929><P class='en'>&nbsp;
<SYNC Start=6201929><P class='en'>c++, which are much older than Java, actually.
So and when they invented Java, they just
<SYNC Start=6209300><P class='en'>&nbsp;
<SYNC Start=6209300><P class='en'>took over the same style. So this is why it&#39;s
a bit cryptic. So
<SYNC Start=6216800><P class='en'>&nbsp;
<SYNC Start=6216800><P class='en'>we have three sections here. Let me first
of all, type it and then explain. So this
<SYNC Start=6228139><P class='en'>&nbsp;
<SYNC Start=6228139><P class='en'>the three sections that this first loop usually
has, which means First of all, introduce an
<SYNC Start=6237760><P class='en'>&nbsp;
<SYNC Start=6237760><P class='en'>int, and assign it a value of zero. calling
this variable II, I sorry, is like the default,
<SYNC Start=6249789><P class='en'>&nbsp;
<SYNC Start=6249789><P class='en'>because I just for integer because the guys
that invented programming, are sometimes also
<SYNC Start=6258980><P class='en'>&nbsp;
<SYNC Start=6258980><P class='en'>mathematics, mathematicians. So yeah, they
really like short variables like AI. And it&#39;s
<SYNC Start=6266420><P class='en'>&nbsp;
<SYNC Start=6266420><P class='en'>so it&#39;s so common. I also used AI, but you
could also call it like culture. It just that
<SYNC Start=6274219><P class='en'>&nbsp;
<SYNC Start=6274219><P class='en'>people would expect you to call it AI. In
this type of loop. It&#39;s mostly always called
<SYNC Start=6281039><P class='en'>&nbsp;
<SYNC Start=6281039><P class='en'>AI or just why are some some variables short,
just one letter. Okay, anyway. So this is
<SYNC Start=6288940><P class='en'>&nbsp;
<SYNC Start=6288940><P class='en'>our counter variable that defines how many
times we want to execute a certain statement.
<SYNC Start=6297039><P class='en'>&nbsp;
<SYNC Start=6297039><P class='en'>Our statement that we want to execute is actually
that Create a person object. And we want to
<SYNC Start=6302590><P class='en'>&nbsp;
<SYNC Start=6302590><P class='en'>do this four times. In programming languages,
again, mathematicians, they&#39;re to blame. They
<SYNC Start=6312400><P class='en'>&nbsp;
<SYNC Start=6312400><P class='en'>don&#39;t start with one, but they start with
zero. So if we want to execute it four times,
<SYNC Start=6319139><P class='en'>&nbsp;
<SYNC Start=6319139><P class='en'>we have to make sure that we stay that I stay
smaller than four, because from zero to three,
<SYNC Start=6328239><P class='en'>&nbsp;
<SYNC Start=6328239><P class='en'>this is four times. And each time when we
are finished at the end of the loop, I is
<SYNC Start=6335639><P class='en'>&nbsp;
<SYNC Start=6335639><P class='en'>incremented by one, see, this is the plus
plus. So afterwards, it&#39;s incremented by one,
<SYNC Start=6343130><P class='en'>&nbsp;
<SYNC Start=6343130><P class='en'>and then the next round, it will be one, one
is smaller than four. next one will be two,
<SYNC Start=6350969><P class='en'>&nbsp;
<SYNC Start=6350969><P class='en'>two is smaller than four, three is smaller
than four, and four is not smaller than four.
<SYNC Start=6357630><P class='en'>&nbsp;
<SYNC Start=6357630><P class='en'>So for the fifth time, the loop will be exited.
And so afterwards, the court will be here,
<SYNC Start=6369250><P class='en'>&nbsp;
<SYNC Start=6369250><P class='en'>the cursor kind of, and we will not execute
it a fifth time. So I copied this into the
<SYNC Start=6376730><P class='en'>&nbsp;
<SYNC Start=6376730><P class='en'>for loop.
<SYNC Start=6383370><P class='en'>&nbsp;
<SYNC Start=6383370><P class='en'>And then this should make sure that four persons
on the fly are created. Actually, because
<SYNC Start=6392591><P class='en'>&nbsp;
<SYNC Start=6392591><P class='en'>this variable is defined within the block,
we cannot access the person object anymore
<SYNC Start=6402210><P class='en'>&nbsp;
<SYNC Start=6402210><P class='en'>in here, I think I showed you this, see it&#39;s
red. This is about the visibility, what we
<SYNC Start=6412389><P class='en'>&nbsp;
<SYNC Start=6412389><P class='en'>could do is we could put the definition of
the variable up here. This way, we can still
<SYNC Start=6425650><P class='en'>&nbsp;
<SYNC Start=6425650><P class='en'>access person one, but actually only the last
one because the variable person will always
<SYNC Start=6432159><P class='en'>&nbsp;
<SYNC Start=6432159><P class='en'>be overwritten by the next one. I mean, for
this little test here, this is okay. Because
<SYNC Start=6438480><P class='en'>&nbsp;
<SYNC Start=6438480><P class='en'>all we want is we want to calculate the number
of times the constructor was called. So this
<SYNC Start=6447789><P class='en'>&nbsp;
<SYNC Start=6447789><P class='en'>works, as well as we could also define person
in here doesn&#39;t make a difference. In our
<SYNC Start=6455429><P class='en'>&nbsp;
<SYNC Start=6455429><P class='en'>case, because this is a static method. We
talked about this in the earlier lesson. So
<SYNC Start=6461349><P class='en'>&nbsp;
<SYNC Start=6461349><P class='en'>now, let&#39;s try that code. And it&#39;s green.
Now let&#39;s try it to put the time here. This
<SYNC Start=6479969><P class='en'>&nbsp;
<SYNC Start=6479969><P class='en'>darkness does not work. Because see we expected
for but actually, there was 10 times the person
<SYNC Start=6487880><P class='en'>&nbsp;
<SYNC Start=6487880><P class='en'>constructor was called because this is 10
a year. So this is how the first loop The
<SYNC Start=6495349><P class='en'>&nbsp;
<SYNC Start=6495349><P class='en'>for loop. The regular for loop usually looks
to define an end, you give it a one letter
<SYNC Start=6502679><P class='en'>&nbsp;
<SYNC Start=6502679><P class='en'>name like I, you assign it zero, and then
you compare it to some max value. In this
<SYNC Start=6514010><P class='en'>&nbsp;
<SYNC Start=6514010><P class='en'>case, 10. Before we head for so that the test
is green again, you always have to separate
<SYNC Start=6523719><P class='en'>&nbsp;
<SYNC Start=6523719><P class='en'>these blocks with a colon. And then you increment
i by one. You can also do any other statement
<SYNC Start=6533749><P class='en'>&nbsp;
<SYNC Start=6533749><P class='en'>in here. Like you could say, I equals i plus
two. Which will then let&#39;s see. So I&#39;ll assume
<SYNC Start=6548499><P class='en'>&nbsp;
<SYNC Start=6548499><P class='en'>something. See now we only created two persons,
because each time it was incremented by two,
<SYNC Start=6558190><P class='en'>&nbsp;
<SYNC Start=6558190><P class='en'>which means the number of times that we were
going through the loop was only half the number
<SYNC Start=6566269><P class='en'>&nbsp;
<SYNC Start=6566269><P class='en'>of course. And if we add four or even I don&#39;t
know 10 we will probably only executed once.
<SYNC Start=6574319><P class='en'>&nbsp;
<SYNC Start=6574320><P class='en'>Let&#39;s try that. Yeah, see actual one. Okay,
so usually you could put any statement here,
<SYNC Start=6587599><P class='en'>&nbsp;
<SYNC Start=6587599><P class='en'>but the default is to just increment a counter
variable by one. So, release. Try to stay
<SYNC Start=6598199><P class='en'>&nbsp;
<SYNC Start=6598199><P class='en'>with the default and do it like This, I could
even further tell you crazy stuff. Like you
<SYNC Start=6605730><P class='en'>&nbsp;
<SYNC Start=6605730><P class='en'>don&#39;t even have to do all this can have this
empty. This now would be an infinitive loop,
<SYNC Start=6618440><P class='en'>&nbsp;
<SYNC Start=6618440><P class='en'>you can try this at home, because this will,
like probably crash your PC because it will
<SYNC Start=6624989><P class='en'>&nbsp;
<SYNC Start=6624989><P class='en'>create lots of objects.
<SYNC Start=6628249><P class='en'>&nbsp;
<SYNC Start=6628249><P class='en'>Um,
<SYNC Start=6631030><P class='en'>&nbsp;
<SYNC Start=6631030><P class='en'>but it is valid. Okay. But this is how it
should usually look. So anyway, let&#39;s go to
<SYNC Start=6642570><P class='en'>&nbsp;
<SYNC Start=6642570><P class='en'>the second loop, which is the while loop,
while some condition holds true, execute.
<SYNC Start=6652820><P class='en'>&nbsp;
<SYNC Start=6652820><P class='en'>And each of these loops have their specific
reason to be used. I mean, actually, in theory,
<SYNC Start=6667409><P class='en'>&nbsp;
<SYNC Start=6667409><P class='en'>you could use always just the one loop like
this loop or that loop, it just that when
<SYNC Start=6673210><P class='en'>&nbsp;
<SYNC Start=6673210><P class='en'>you want to count something, I mean, this
really is helpful. Because it does all everything
<SYNC Start=6679210><P class='en'>&nbsp;
<SYNC Start=6679210><P class='en'>at once, if you want to do exactly the same
code, we have to do it like this int i equals
<SYNC Start=6686349><P class='en'>&nbsp;
<SYNC Start=6686349><P class='en'>to zero. Well, I smaller than four. And then
you have to say, at the end, I plus plus.
<SYNC Start=6699239><P class='en'>&nbsp;
<SYNC Start=6699239><P class='en'>So this is exactly the same. And you see,
it&#39;s not so nice and short anymore. So this
<SYNC Start=6706570><P class='en'>&nbsp;
<SYNC Start=6706570><P class='en'>while loop, you would usually do one, for
example, you have some condition that gets
<SYNC Start=6712829><P class='en'>&nbsp;
<SYNC Start=6712829><P class='en'>dynamically calculated, like we had the function
here should drink beer. So if you had some
<SYNC Start=6726610><P class='en'>&nbsp;
<SYNC Start=6726610><P class='en'>function here, like should drink beer. This
is when you would use a while loop. I mean,
<SYNC Start=6734799><P class='en'>&nbsp;
<SYNC Start=6734800><P class='en'>I have not defined those variables here. But
I hope you get the idea. If you have some
<SYNC Start=6740430><P class='en'>&nbsp;
<SYNC Start=6740430><P class='en'>function that is always calculated, you will
use the while loop. And then in here. You
<SYNC Start=6747989><P class='en'>&nbsp;
<SYNC Start=6747989><P class='en'>could also create person, and you don&#39;t have
to do this now. Because we assume that this
<SYNC Start=6759420><P class='en'>&nbsp;
<SYNC Start=6759420><P class='en'>method sometimes would return false. And when
returns false, this loop would be exited.
<SYNC Start=6767609><P class='en'>&nbsp;
<SYNC Start=6767610><P class='en'>Okay, but let&#39;s go back because actually want
to run it once. And there is a bracket missing.
<SYNC Start=6782650><P class='en'>&nbsp;
<SYNC Start=6782650><P class='en'>Because I promise you we can do exactly the
same thing. So let&#39;s try that. Okay, well,
<SYNC Start=6796610><P class='en'>&nbsp;
<SYNC Start=6796610><P class='en'>this probably will not hold true anymore,
because then we have done it eight times.
<SYNC Start=6806510><P class='en'>&nbsp;
<SYNC Start=6806510><P class='en'>So let me remove that code. Okay. Let&#39;s check.
Seems Okay. Let&#39;s see what j unit says. Okay,
<SYNC Start=6823099><P class='en'>&nbsp;
<SYNC Start=6823099><P class='en'>seems like this is okay. So it&#39;s the same
one. And then last but not least, there&#39;s
<SYNC Start=6831639><P class='en'>&nbsp;
<SYNC Start=6831639><P class='en'>also another loop, which is called This is
the newest loop because it was introduced
<SYNC Start=6837280><P class='en'>&nbsp;
<SYNC Start=6837280><P class='en'>as far as I remember, with Java five, this
is the most simple and the coolest loop. However
<SYNC Start=6844619><P class='en'>&nbsp;
<SYNC Start=6844619><P class='en'>I&#39;m sorry I cannot show you this one. Because
for this I need to introduce you to arrays
<SYNC Start=6850579><P class='en'>&nbsp;
<SYNC Start=6850579><P class='en'>and collection which I will do in one of the
next lessons. So for now just know there is
<SYNC Start=6863290><P class='en'>&nbsp;
<SYNC Start=6863290><P class='en'>another loop the coolest one actually. But
yeah, so this was a very short introduction
<SYNC Start=6869920><P class='en'>&nbsp;
<SYNC Start=6869920><P class='en'>to two different loops. Well actually yeah,
I could also show you the while loop you can
<SYNC Start=6875699><P class='en'>&nbsp;
<SYNC Start=6875699><P class='en'>also do it kind of let&#39;s say backwards. So
you can say do while some condition um the
<SYNC Start=6890330><P class='en'>&nbsp;
<SYNC Start=6890330><P class='en'>regular while and the for loop I showed you
that very common bows, but this one you will
<SYNC Start=6897690><P class='en'>&nbsp;
<SYNC Start=6897690><P class='en'>hardly ever see because Again, it&#39;s a bit
more difficult to understand. What it does
<SYNC Start=6905429><P class='en'>&nbsp;
<SYNC Start=6905429><P class='en'>is it executes this statement the first time,
sorry, without even checking a condition.
<SYNC Start=6912829><P class='en'>&nbsp;
<SYNC Start=6912829><P class='en'>So the condition is checked only afterwards.
Of course, we also need to increment.
<SYNC Start=6921890><P class='en'>&nbsp;
<SYNC Start=6921890><P class='en'>Okay.
<SYNC Start=6926090><P class='en'>&nbsp;
<SYNC Start=6926090><P class='en'>So what we do here is we assert that number
of persons equals to four, well, no, this
<SYNC Start=6937019><P class='en'>&nbsp;
<SYNC Start=6937019><P class='en'>is, this won&#39;t work, we have to sort it afterwards,
sorry. So now we create the first person without
<SYNC Start=6952099><P class='en'>&nbsp;
<SYNC Start=6952099><P class='en'>even knowing how many times we have created,
then we increment i. And at the end, we check
<SYNC Start=6958769><P class='en'>&nbsp;
<SYNC Start=6958769><P class='en'>that I is smaller than four. Let&#39;s try this
and remove that.
<SYNC Start=6968360><P class='en'>&nbsp;
<SYNC Start=6968360><P class='en'>See, this also works. Um, this depends on
the logic that you need. Sometimes you may
<SYNC Start=6982229><P class='en'>&nbsp;
<SYNC Start=6982229><P class='en'>use that. But actually, all the three different
loops I showed you, they are like equivalent,
<SYNC Start=6989729><P class='en'>&nbsp;
<SYNC Start=6989729><P class='en'>you can do everything with each of those loops.
So it&#39;s just the different style. And this
<SYNC Start=6999019><P class='en'>&nbsp;
<SYNC Start=6999019><P class='en'>depends on what you want to express what&#39;s
easier for you to use. This you will get used
<SYNC Start=7005300><P class='en'>&nbsp;
<SYNC Start=7005300><P class='en'>when you&#39;re like, did a few months of programming,
and you use each of them, you will get the
<SYNC Start=7012159><P class='en'>&nbsp;
<SYNC Start=7012159><P class='en'>hang of it. What&#39;s like usable in which situation.
Lesson nine, I would like to introduce you
<SYNC Start=7020710><P class='en'>&nbsp;
<SYNC Start=7020710><P class='en'>to arrays. Arrays are also a very cool feature
of many programming languages. And they also
<SYNC Start=7029610><P class='en'>&nbsp;
<SYNC Start=7029610><P class='en'>appear in Java. I kind of unofficially introduced
them already in the last video, where I mainly
<SYNC Start=7039610><P class='en'>&nbsp;
<SYNC Start=7039610><P class='en'>talked about loops. And we stopped when I
said there is one more loop the for each loop
<SYNC Start=7048729><P class='en'>&nbsp;
<SYNC Start=7048729><P class='en'>that is specifically designed for arrays and
collections. So today I&#39;m going to introduce
<SYNC Start=7055389><P class='en'>&nbsp;
<SYNC Start=7055389><P class='en'>you to areas at least. And so we can also
see the for each loop. And so an array is
<SYNC Start=7062960><P class='en'>&nbsp;
<SYNC Start=7062960><P class='en'>really like container, a box, or let&#39;s say
a list. So an array isn&#39;t is also an object
<SYNC Start=7071289><P class='en'>&nbsp;
<SYNC Start=7071289><P class='en'>is a data construct that can hold a number
of primitive data types or objects. And as
<SYNC Start=7081539><P class='en'>&nbsp;
<SYNC Start=7081539><P class='en'>I already said, box, so far person, the way
we define it is with these were brackets,
<SYNC Start=7094789><P class='en'>&nbsp;
<SYNC Start=7094789><P class='en'>which symbolizes something like a box, I think,
which is easy to remember, because we will
<SYNC Start=7101809><P class='en'>&nbsp;
<SYNC Start=7101809><P class='en'>put our persons kind of in in here we could
think and because this container will hold
<SYNC Start=7109280><P class='en'>&nbsp;
<SYNC Start=7109280><P class='en'>a number of persons, I will call this variable
persons. Okay, now I say new person. But now
<SYNC Start=7121880><P class='en'>&nbsp;
<SYNC Start=7121880><P class='en'>there comes something new again. I don&#39;t use
the regular brackets, or again use the square
<SYNC Start=7128489><P class='en'>&nbsp;
<SYNC Start=7128489><P class='en'>brackets. This does not call the person constructor.
This would be done like this, and should not
<SYNC Start=7136860><P class='en'>&nbsp;
<SYNC Start=7136860><P class='en'>be working yet there&#39;s already a thread on
the line. So I&#39;m not calling any constructor
<SYNC Start=7143699><P class='en'>&nbsp;
<SYNC Start=7143699><P class='en'>here. This is a specific syntax that says
Create me an array of type person that can
<SYNC Start=7155749><P class='en'>&nbsp;
<SYNC Start=7155749><P class='en'>hold a number of persons. And we have to now
give the number which is four. That was still
<SYNC Start=7162600><P class='en'>&nbsp;
<SYNC Start=7162600><P class='en'>a red underline now it&#39;s gone. So now Java
knows we want an array of type person that
<SYNC Start=7169869><P class='en'>&nbsp;
<SYNC Start=7169869><P class='en'>can hold four persons same thing we can do
with it. And by the way, on a Mac, you have
<SYNC Start=7180691><P class='en'>&nbsp;
<SYNC Start=7180691><P class='en'>to press out five and six for the square brackets.
So in that same way is equals to new end,
<SYNC Start=7194949><P class='en'>&nbsp;
<SYNC Start=7194949><P class='en'>which is also you know in this primitive but
now I say new ends because I&#39;m not creating
<SYNC Start=7201420><P class='en'>&nbsp;
<SYNC Start=7201420><P class='en'>again, I&#39;m not creating an end, I&#39;m creating
an object, an end airy object. Okay. And you
<SYNC Start=7212519><P class='en'>&nbsp;
<SYNC Start=7212519><P class='en'>can also see that it&#39;s an object, because
when I put it here, and I&#39;ll put down the
<SYNC Start=7219620><P class='en'>&nbsp;
<SYNC Start=7219620><P class='en'>button, I see a number of methods that I can
call. And we are this is actually not a method,
<SYNC Start=7226479><P class='en'>&nbsp;
<SYNC Start=7226479><P class='en'>this is an attribute, which I can directly
access. So if you remember, I think you I
<SYNC Start=7233679><P class='en'>&nbsp;
<SYNC Start=7233679><P class='en'>said you should have your attributes private,
this is accessible, it&#39;s not private. So this
<SYNC Start=7239999><P class='en'>&nbsp;
<SYNC Start=7239999><P class='en'>actually violates that rule. And yeah, so
this is also a very old construct, and shows
<SYNC Start=7247010><P class='en'>&nbsp;
<SYNC Start=7247010><P class='en'>us one place where Java itself violates the
rules of good object oriented design, but
<SYNC Start=7256289><P class='en'>&nbsp;
<SYNC Start=7256289><P class='en'>we just have to live with it anyway. So what
this does, and we will use it very soon as
<SYNC Start=7262969><P class='en'>&nbsp;
<SYNC Start=7262969><P class='en'>it gives us the number of
<SYNC Start=7268570><P class='en'>&nbsp;
<SYNC Start=7268570><P class='en'>like the the length of the array than the
like, in this case for, okay, if this is three
<SYNC Start=7277050><P class='en'>&nbsp;
<SYNC Start=7277050><P class='en'>year, why intz dot length should return three.
And in a minute, you will see what we use
<SYNC Start=7288600><P class='en'>&nbsp;
<SYNC Start=7288600><P class='en'>it for, let&#39;s remove the end. Because I want
to continue with a person&#39;s I want to feel
<SYNC Start=7297559><P class='en'>&nbsp;
<SYNC Start=7297559><P class='en'>this error. And the way this is done, again,
we need to break it we need a lot of times
<SYNC Start=7304539><P class='en'>&nbsp;
<SYNC Start=7304539><P class='en'>is I say zero here, oh, I said person, of
course this is wrong, we don&#39;t have a person,
<SYNC Start=7311349><P class='en'>&nbsp;
<SYNC Start=7311349><P class='en'>we have only this one object, persons. And
the type is person airy. So it&#39;s not a person,
<SYNC Start=7322719><P class='en'>&nbsp;
<SYNC Start=7322719><P class='en'>it&#39;s a person airy object. Okay, and here
we can say new capslock. person. What this
<SYNC Start=7332980><P class='en'>&nbsp;
<SYNC Start=7332980><P class='en'>does is it creates a new person object in
memory, and puts a reference to this person,
<SYNC Start=7346800><P class='en'>&nbsp;
<SYNC Start=7346800><P class='en'>which is like a remote control a way to access
the person into the array at position zero,
<SYNC Start=7356909><P class='en'>&nbsp;
<SYNC Start=7356909><P class='en'>which is the first position. Let&#39;s copy and
paste that four times. Three, four. So position
<SYNC Start=7368710><P class='en'>&nbsp;
<SYNC Start=7368710><P class='en'>one, position two, position three. Okay. If
I would say position four, what you don&#39;t
<SYNC Start=7380030><P class='en'>&nbsp;
<SYNC Start=7380030><P class='en'>have, I would again, get an error, which we&#39;ll
talk about in detail when I introduce exceptions,
<SYNC Start=7387659><P class='en'>&nbsp;
<SYNC Start=7387659><P class='en'>which is again, a new big topic. Oh, okay.
So, and when you have done that, what you
<SYNC Start=7396210><P class='en'>&nbsp;
<SYNC Start=7396210><P class='en'>can also do is, you can do crazy stuff like
at position three, put the object that is
<SYNC Start=7413360><P class='en'>&nbsp;
<SYNC Start=7413360><P class='en'>in the person&#39;s array, at position, whatever,
zero or one or whatever. Right, because whenever
<SYNC Start=7427289><P class='en'>&nbsp;
<SYNC Start=7427289><P class='en'>you write on every ad position, as it contains
a person, it&#39;s exactly the same as if you
<SYNC Start=7437040><P class='en'>&nbsp;
<SYNC Start=7437040><P class='en'>would say, person, my person equals to a new
person. So now I created a person. And this
<SYNC Start=7455570><P class='en'>&nbsp;
<SYNC Start=7455570><P class='en'>object was assigned to this variable to this
reference variable. And can also do it like
<SYNC Start=7464749><P class='en'>&nbsp;
<SYNC Start=7464749><P class='en'>this. So now, this variable can access that
object, as well as all there&#39;s title. Persons
<SYNC Start=7476409><P class='en'>&nbsp;
<SYNC Start=7476409><P class='en'>at position three, can also access the same
object. So we have like two references to
<SYNC Start=7483559><P class='en'>&nbsp;
<SYNC Start=7483559><P class='en'>like remote controls to this one object. Yeah,
and you can do also the opposite. You can
<SYNC Start=7493170><P class='en'>&nbsp;
<SYNC Start=7493170><P class='en'>say, my person equals to I don&#39;t know something
Let&#39;s take two persons at position two, which
<SYNC Start=7506409><P class='en'>&nbsp;
<SYNC Start=7506409><P class='en'>means the object that is at this position,
the reference to it will be assigned to the
<SYNC Start=7515889><P class='en'>&nbsp;
<SYNC Start=7515889><P class='en'>reference variable, my person. So this, my
person object now
<SYNC Start=7523619><P class='en'>&nbsp;
<SYNC Start=7523619><P class='en'>should still be here, if I&#39;m not wrong, I
mean, this really gets confusing. So, I mean,
<SYNC Start=7529070><P class='en'>&nbsp;
<SYNC Start=7529070><P class='en'>I&#39;m just explaining this so that you get the
hang of it. But in reality, don&#39;t make it
<SYNC Start=7534420><P class='en'>&nbsp;
<SYNC Start=7534420><P class='en'>too complex, because you see, the more complex
the more box packs you could introduce. Okay,
<SYNC Start=7541510><P class='en'>&nbsp;
<SYNC Start=7541510><P class='en'>so I hope you get the hang of it. Um, one
more thing I might mention. Of course, no
<SYNC Start=7549780><P class='en'>&nbsp;
<SYNC Start=7549780><P class='en'>one forces you to, to really define to set
an object at each position. Now, when I left
<SYNC Start=7557969><P class='en'>&nbsp;
<SYNC Start=7557969><P class='en'>out position one, this position is empty.
So what does that mean? What we say is at
<SYNC Start=7566510><P class='en'>&nbsp;
<SYNC Start=7566510><P class='en'>position one, there is now because knowledge
the word like for nothing. So there is nothing,
<SYNC Start=7574869><P class='en'>&nbsp;
<SYNC Start=7574869><P class='en'>there is no reference. If we access it, we
get an exception, because Java will not know
<SYNC Start=7581030><P class='en'>&nbsp;
<SYNC Start=7581030><P class='en'>what to do. Okay. So that much about now,
which we could also specifically do, by the
<SYNC Start=7590020><P class='en'>&nbsp;
<SYNC Start=7590020><P class='en'>way, we could also now it, it&#39;s called, the
wrong button. Sorry. Yeah, so now you can
<SYNC Start=7610639><P class='en'>&nbsp;
<SYNC Start=7610639><P class='en'>also write, so this is like, put nothing here.
Or, here, that would mean that the beginning,
<SYNC Start=7619300><P class='en'>&nbsp;
<SYNC Start=7619300><P class='en'>you have the new person object at position
two, later on, you kind of throw the reference
<SYNC Start=7627420><P class='en'>&nbsp;
<SYNC Start=7627420><P class='en'>away. And if no reference exists to an object
anymore. In Java, there is something called
<SYNC Start=7636329><P class='en'>&nbsp;
<SYNC Start=7636329><P class='en'>a garbage collector, I will talk specifically
about the garbage collector very soon, in
<SYNC Start=7641800><P class='en'>&nbsp;
<SYNC Start=7641800><P class='en'>a specific lesson only about the garbage collector.
So this one is smart, and we&#39;ll throw away
<SYNC Start=7647340><P class='en'>&nbsp;
<SYNC Start=7647340><P class='en'>that object, we&#39;ll clean up the memory. For
us, this is really a cool feature of Java.
<SYNC Start=7652349><P class='en'>&nbsp;
<SYNC Start=7652349><P class='en'>In other languages like c++, this doesn&#39;t
exist. And so you have to take care of cleaning
<SYNC Start=7658780><P class='en'>&nbsp;
<SYNC Start=7658780><P class='en'>up the memory by yourself, which is really
not fun. So this is really one of the coolest
<SYNC Start=7665090><P class='en'>&nbsp;
<SYNC Start=7665090><P class='en'>features of Java. But anyway, I guess I&#39;m
going too far, let&#39;s make this more simple
<SYNC Start=7670340><P class='en'>&nbsp;
<SYNC Start=7670340><P class='en'>again. Because what I actually want to do
is now I want to take the for loop, and combine
<SYNC Start=7680860><P class='en'>&nbsp;
<SYNC Start=7680860><P class='en'>that with the arrays and introduce the for
each loop. But let&#39;s start easy, let&#39;s first
<SYNC Start=7687070><P class='en'>&nbsp;
<SYNC Start=7687070><P class='en'>of all, go to the regular for loop, take that
put it here. And now we have let&#39;s remove
<SYNC Start=7704979><P class='en'>&nbsp;
<SYNC Start=7704979><P class='en'>all that all we have is an object of person
array called persons. And we have this for
<SYNC Start=7718420><P class='en'>&nbsp;
<SYNC Start=7718420><P class='en'>loop that may create for whatever in this
case persons. And so we will use that dynamically,
<SYNC Start=7732070><P class='en'>&nbsp;
<SYNC Start=7732070><P class='en'>so because I will change while we go through
loop, we&#39;ll start with zero will be 123. So,
<SYNC Start=7743709><P class='en'>&nbsp;
<SYNC Start=7743709><P class='en'>we can say persons at position I this is really
a cool thing now, because this means this
<SYNC Start=7753979><P class='en'>&nbsp;
<SYNC Start=7753979><P class='en'>one line Let me clean this up. So we create
each time an object of type person and we
<SYNC Start=7766539><P class='en'>&nbsp;
<SYNC Start=7766539><P class='en'>put it into the array dynamically add position
I. So this will on the fly fill the whole
<SYNC Start=7774719><P class='en'>&nbsp;
<SYNC Start=7774719><P class='en'>array with persons. And what we can also do
is in a different loop but also just in the
<SYNC Start=7785369><P class='en'>&nbsp;
<SYNC Start=7785369><P class='en'>same loop. We can access this object by saying
persons at position I and call some method
<SYNC Start=7794059><P class='en'>&nbsp;
<SYNC Start=7794059><P class='en'>on it like hello world that we created in
an earlier lesson.
<SYNC Start=7803050><P class='en'>&nbsp;
<SYNC Start=7803050><P class='en'>Um, okay, I think I have not introduced you
how to print something on the console. But
<SYNC Start=7811519><P class='en'>&nbsp;
<SYNC Start=7811519><P class='en'>maybe I should not do this now, because I
guess I feel it gets confusing with all this
<SYNC Start=7817119><P class='en'>&nbsp;
<SYNC Start=7817119><P class='en'>stuff with Aries, but would be handy now to
show you that this can print all the name
<SYNC Start=7823389><P class='en'>&nbsp;
<SYNC Start=7823389><P class='en'>of something for each person. But maybe I
will do this in a later lesson. Okay, so just
<SYNC Start=7831580><P class='en'>&nbsp;
<SYNC Start=7831580><P class='en'>believe me, if we would print that, we could
like print, hello, and then a person name
<SYNC Start=7839860><P class='en'>&nbsp;
<SYNC Start=7839860><P class='en'>for each person. Okay, this is already nice,
but it gets nicer with a new loop for each
<SYNC Start=7847670><P class='en'>&nbsp;
<SYNC Start=7847670><P class='en'>loop. And this is not so much different from
the regular for loop. It was introduced only
<SYNC Start=7856130><P class='en'>&nbsp;
<SYNC Start=7856130><P class='en'>in Java five. And this works like that. person,
person, and then colon and then persons. So
<SYNC Start=7875550><P class='en'>&nbsp;
<SYNC Start=7875550><P class='en'>what this does is it automatically under the
hood, it does everything that this for int
<SYNC Start=7888599><P class='en'>&nbsp;
<SYNC Start=7888599><P class='en'>it does. And now we can also access person
dot HelloWorld. Of course, this requires because
<SYNC Start=7898369><P class='en'>&nbsp;
<SYNC Start=7898369><P class='en'>now we are using it. So this requires that
this has already run? Um, let me think. Yeah,
<SYNC Start=7909949><P class='en'>&nbsp;
<SYNC Start=7909949><P class='en'>so this is only for like reading it. I&#39;m fulfilling
it. Now fulfilling it, I wouldn&#39;t use it.
<SYNC Start=7920159><P class='en'>&nbsp;
<SYNC Start=7920159><P class='en'>Because you have to specifically say what
you want to do. Because if this is empty,
<SYNC Start=7927510><P class='en'>&nbsp;
<SYNC Start=7927510><P class='en'>this would also be empty. Okay, so but we
can call person HelloWorld on it, and see
<SYNC Start=7934519><P class='en'>&nbsp;
<SYNC Start=7934519><P class='en'>how much nicer This is really condensed. So
this is the for each loop. And the for each
<SYNC Start=7941449><P class='en'>&nbsp;
<SYNC Start=7941449><P class='en'>loop is like besides areas, there&#39;s also other
constructs, other container types, which I&#39;ll
<SYNC Start=7950849><P class='en'>&nbsp;
<SYNC Start=7950849><P class='en'>also soon introduce, like collections really
a cool topic, because they&#39;re even more powerful
<SYNC Start=7959309><P class='en'>&nbsp;
<SYNC Start=7959309><P class='en'>than just arrays. And so this for each loop
also works with these collections, whatever
<SYNC Start=7968090><P class='en'>&nbsp;
<SYNC Start=7968090><P class='en'>that is. And it does whatever is required.
And it also does it in a very smart way. So
<SYNC Start=7977139><P class='en'>&nbsp;
<SYNC Start=7977139><P class='en'>it&#39;s really smart to use that for each loop,
not only because it&#39;s more condensed, but
<SYNC Start=7983420><P class='en'>&nbsp;
<SYNC Start=7983420><P class='en'>also because it&#39;s a performance and proper
way of doing it. Because Java will assist
<SYNC Start=7989489><P class='en'>&nbsp;
<SYNC Start=7989489><P class='en'>you in doing it. Okay, so I think this pretty
much wraps it Oh, no, there is I have I have
<SYNC Start=8000030><P class='en'>&nbsp;
<SYNC Start=8000030><P class='en'>a not sorry. I didn&#39;t know Have I told you.
I think I promised and then I didn&#39;t do it.
<SYNC Start=8008469><P class='en'>&nbsp;
<SYNC Start=8008469><P class='en'>Person start length. This attribute which
is not private, I think is public. Yes, should
<SYNC Start=8016469><P class='en'>&nbsp;
<SYNC Start=8016469><P class='en'>be public. This gives us dynamically the four.
So I mean, here, we know that it&#39;s four. But
<SYNC Start=8023619><P class='en'>&nbsp;
<SYNC Start=8023619><P class='en'>just imagine what can also be yours, you have
a method, which just gets a parameter. And
<SYNC Start=8031709><P class='en'>&nbsp;
<SYNC Start=8031709><P class='en'>you don&#39;t know its size. So you couldn&#39;t say
four. And so this just dynamically takes the
<SYNC Start=8040170><P class='en'>&nbsp;
<SYNC Start=8040170><P class='en'>lengths that you need. And as you see in this
loop, we don&#39;t even need it because this is
<SYNC Start=8047940><P class='en'>&nbsp;
<SYNC Start=8047940><P class='en'>dynamically calculated by Java for you. Which
of course also that&#39;s the person that links
<SYNC Start=8055219><P class='en'>&nbsp;
<SYNC Start=8055219><P class='en'>in the background. At least this is what I
assume. Okay, lesson 10. I would like to introduce
<SYNC Start=8063590><P class='en'>&nbsp;
<SYNC Start=8063590><P class='en'>you to enums. enums and Java represent an
enum eration. So they enumerate something
<SYNC Start=8074499><P class='en'>&nbsp;
<SYNC Start=8074499><P class='en'>they were introduced in Java five. Now, I
want to further extend my explanation about
<SYNC Start=8083199><P class='en'>&nbsp;
<SYNC Start=8083199><P class='en'>arrays because there is one more cool thing
and it also makes it easier for us.
<SYNC Start=8089929><P class='en'>&nbsp;
<SYNC Start=8089929><P class='en'>We can actually even on the fly out five,
aisle six, well this is autocompleted id he
<SYNC Start=8098690><P class='en'>&nbsp;
<SYNC Start=8098690><P class='en'>already PR Since two equals two, and now I
do something new, I say curly brace, this
<SYNC Start=8112090><P class='en'>&nbsp;
<SYNC Start=8112090><P class='en'>is alt eight and nine on my Mac, by the way,
and see, there is no red marking anymore.
<SYNC Start=8121829><P class='en'>&nbsp;
<SYNC Start=8121829><P class='en'>This actually also works. So what does that
mean? This actually is a shortened form. And
<SYNC Start=8129769><P class='en'>&nbsp;
<SYNC Start=8129769><P class='en'>this says there should be an array. And we
don&#39;t have to say, a specific size, because
<SYNC Start=8138599><P class='en'>&nbsp;
<SYNC Start=8138599><P class='en'>the size is automatically calculated, because
the brackets are empty. This means empty size,
<SYNC Start=8146599><P class='en'>&nbsp;
<SYNC Start=8146599><P class='en'>that would be the same as saying zero, which,
of course, doesn&#39;t make much sense. But just
<SYNC Start=8155280><P class='en'>&nbsp;
<SYNC Start=8155280><P class='en'>technically, it&#39;s possible. So and we cannot
feel this array. So and we don&#39;t have to set
<SYNC Start=8165580><P class='en'>&nbsp;
<SYNC Start=8165580><P class='en'>the size, this gets calculated automatically.
So I&#39;m just copying. I can also put your mouth
<SYNC Start=8175749><P class='en'>&nbsp;
<SYNC Start=8175749><P class='en'>if I want to, I can also create a new object.
My let&#39;s call it my personal Sorry, I can
<SYNC Start=8199420><P class='en'>&nbsp;
<SYNC Start=8199420><P class='en'>also just to show you what&#39;s possible define
a variable of type person and then assign
<SYNC Start=8209340><P class='en'>&nbsp;
<SYNC Start=8209340><P class='en'>now to it or talked about now, which is like
nothing and put it here. So this actually
<SYNC Start=8216479><P class='en'>&nbsp;
<SYNC Start=8216478><P class='en'>is the same like that. And I mean, I want
you to also see this, what this does is it
<SYNC Start=8224058><P class='en'>&nbsp;
<SYNC Start=8224058><P class='en'>does not or what is not is, it does not like
combine this array and that array. Instead,
<SYNC Start=8232178><P class='en'>&nbsp;
<SYNC Start=8232178><P class='en'>it says what you have at position zero of
this array, which in our case, is this person
<SYNC Start=8240049><P class='en'>&nbsp;
<SYNC Start=8240050><P class='en'>object. Take the reference to add and the
reference, copy it here, which means this
<SYNC Start=8252750><P class='en'>&nbsp;
<SYNC Start=8252750><P class='en'>position as well as later on, persons, zero.
So later on, after we have defined the array,
<SYNC Start=8263540><P class='en'>&nbsp;
<SYNC Start=8263540><P class='en'>if we say, person to zero, that will be exactly
the same as persons zero. Because they both
<SYNC Start=8274189><P class='en'>&nbsp;
<SYNC Start=8274189><P class='en'>point to this object in memory. All this is
a bit complicated, I&#39;m sorry, I hope you can
<SYNC Start=8281149><P class='en'>&nbsp;
<SYNC Start=8281149><P class='en'>follow me. And I will do a specific tutorial
only on memory management and show you how
<SYNC Start=8287800><P class='en'>&nbsp;
<SYNC Start=8287800><P class='en'>things look in the memory. For now, I just
hope you can follow if not, it&#39;s not so important.
<SYNC Start=8296199><P class='en'>&nbsp;
<SYNC Start=8296199><P class='en'>I mean, we&#39;re talking here about areas and
what I want you to understand is like this
<SYNC Start=8302479><P class='en'>&nbsp;
<SYNC Start=8302478><P class='en'>is an array and this is a way of defining
the array and the specifics about the memory
<SYNC Start=8309478><P class='en'>&nbsp;
<SYNC Start=8309478><P class='en'>Don&#39;t worry, we can go in more detail later.
And you will you will understand this very
<SYNC Start=8316068><P class='en'>&nbsp;
<SYNC Start=8316069><P class='en'>soon I&#39;m sure let&#39;s do the same trick again
just with a different position. You can actually
<SYNC Start=8323240><P class='en'>&nbsp;
<SYNC Start=8323240><P class='en'>even do it twice or any number of times can
take another one or it doesn&#39;t matter let&#39;s
<SYNC Start=8330309><P class='en'>&nbsp;
<SYNC Start=8330308><P class='en'>put this or we can also remove them now put
it here. So yeah, you can do what and you
<SYNC Start=8337948><P class='en'>&nbsp;
<SYNC Start=8337949><P class='en'>can also do it on the fly you can say new
person. Now there is no a little difference
<SYNC Start=8343519><P class='en'>&nbsp;
<SYNC Start=8343518><P class='en'>which is this object that defined here.
<SYNC Start=8349589><P class='en'>&nbsp;
<SYNC Start=8349590><P class='en'>It sits somewhere in the memory and might
error a person&#39;s to has a reference to it
<SYNC Start=8358349><P class='en'>&nbsp;
<SYNC Start=8358348><P class='en'>outside of my array there is no one who has
a reference to it, which we can change after
<SYNC Start=8367629><P class='en'>&nbsp;
<SYNC Start=8367630><P class='en'>we have defined it. We could also say I have
not to count 0123456 I hope I have counted
<SYNC Start=8379069><P class='en'>&nbsp;
<SYNC Start=8379069><P class='en'>correctly if not imagined I had counted correctly.
Okay, so I said six. So at position six. We
<SYNC Start=8390120><P class='en'>&nbsp;
<SYNC Start=8390120><P class='en'>cannot copy this reference and I can say my
let&#39;s call it secret person. Let&#39;s call it
<SYNC Start=8400970><P class='en'>&nbsp;
<SYNC Start=8400970><P class='en'>just VIP. So my VIP, now I have a reference
to it outside of the airy. So I created it
<SYNC Start=8415060><P class='en'>&nbsp;
<SYNC Start=8415060><P class='en'>dirty on the fly in this line together with
the definition of this array. And later on,
<SYNC Start=8424779><P class='en'>&nbsp;
<SYNC Start=8424779><P class='en'>just for the sake of it, I assigned it a variable,
which we then also can use and work on it
<SYNC Start=8432050><P class='en'>&nbsp;
<SYNC Start=8432050><P class='en'>like hello world, which you can also do is,
say, person two at position six dot HelloWorld.
<SYNC Start=8442500><P class='en'>&nbsp;
<SYNC Start=8442500><P class='en'>So you can really work with the areas at specific
positions, just as if you had a variable,
<SYNC Start=8450670><P class='en'>&nbsp;
<SYNC Start=8450670><P class='en'>it&#39;s exactly the same thing, even though it
looks a bit awkward. But yeah, you get used
<SYNC Start=8456220><P class='en'>&nbsp;
<SYNC Start=8456220><P class='en'>to it. Okay, anyway, I think this is a very
handy short definition. Because see how much
<SYNC Start=8462819><P class='en'>&nbsp;
<SYNC Start=8462819><P class='en'>shorter This is here we find just for persons
and area for persons. And this was actually
<SYNC Start=8470330><P class='en'>&nbsp;
<SYNC Start=8470330><P class='en'>five lines. Now in just one line, we have
defined an area of six positions, and we have
<SYNC Start=8477410><P class='en'>&nbsp;
<SYNC Start=8477410><P class='en'>filled it, and this is all in one line. And
I think it&#39;s still readable. I mean, readability
<SYNC Start=8483729><P class='en'>&nbsp;
<SYNC Start=8483729><P class='en'>is the most important thing. So it&#39;s not about
making something short. It&#39;s okay to make
<SYNC Start=8490439><P class='en'>&nbsp;
<SYNC Start=8490439><P class='en'>it short, if it keeps being readable, or if
it&#39;s even more readable. That is okay. Okay.
<SYNC Start=8498010><P class='en'>&nbsp;
<SYNC Start=8498010><P class='en'>And I might also already introducing new stuff,
I might also introduce you to final final
<SYNC Start=8506399><P class='en'>&nbsp;
<SYNC Start=8506399><P class='en'>is another variable modifier. We already talked
about public and private and static, not final,
<SYNC Start=8517310><P class='en'>&nbsp;
<SYNC Start=8517310><P class='en'>something new final says are like locked in
this variable, I don&#39;t want to anyone to poke
<SYNC Start=8525890><P class='en'>&nbsp;
<SYNC Start=8525890><P class='en'>around with that variable. So if I later after
saying final, say this, Java will say Oh,
<SYNC Start=8537101><P class='en'>&nbsp;
<SYNC Start=8537101><P class='en'>no cannot assign a value to a final variable
person to. So this is like a protection. As
<SYNC Start=8545529><P class='en'>&nbsp;
<SYNC Start=8545529><P class='en'>you see, I have to say final. So this is one
more keyword. And this is one key more keyword
<SYNC Start=8553229><P class='en'>&nbsp;
<SYNC Start=8553229><P class='en'>to read. This is one more keyword to write.
And so I would only do it if it makes sense
<SYNC Start=8559529><P class='en'>&nbsp;
<SYNC Start=8559529><P class='en'>for a reason. And if you have code that is
just like here, two lines. I mean, while doing
<SYNC Start=8565930><P class='en'>&nbsp;
<SYNC Start=8565930><P class='en'>that, I would assume you know what you do,
and you wouldn&#39;t like put this to now if you
<SYNC Start=8571260><P class='en'>&nbsp;
<SYNC Start=8571260><P class='en'>don&#39;t want to just one line later. Where this
does make sense is if you have something like
<SYNC Start=8580600><P class='en'>&nbsp;
<SYNC Start=8580600><P class='en'>some constant values, some status values,
for example, you could have a process a program
<SYNC Start=8587850><P class='en'>&nbsp;
<SYNC Start=8587850><P class='en'>that operates on some values. And then you
want to remember the state that your processes
<SYNC Start=8593689><P class='en'>&nbsp;
<SYNC Start=8593689><P class='en'>in Okay, let me give you an example. So for
this, we will again define an array, but we
<SYNC Start=8604130><P class='en'>&nbsp;
<SYNC Start=8604130><P class='en'>would do it in the class on the class level,
and we would not do it for the objects, but
<SYNC Start=8611949><P class='en'>&nbsp;
<SYNC Start=8611949><P class='en'>for all objects of the class. I mean, and
this, of course, is static. So static, we
<SYNC Start=8623050><P class='en'>&nbsp;
<SYNC Start=8623050><P class='en'>talked about this already means we have just
one of this type for all the objects and no
<SYNC Start=8631700><P class='en'>&nbsp;
<SYNC Start=8631700><P class='en'>final. So static and final, they&#39;re really
close friends, they are used together very
<SYNC Start=8637010><P class='en'>&nbsp;
<SYNC Start=8637010><P class='en'>often. And all that say string
<SYNC Start=8641810><P class='en'>&nbsp;
<SYNC Start=8641810><P class='en'>because I want to have a string. But actually
I want to have a string array. And I said
<SYNC Start=8647699><P class='en'>&nbsp;
<SYNC Start=8647699><P class='en'>we said the braces right after it so that
we see it&#39;s not a string. It&#39;s a string array
<SYNC Start=8657189><P class='en'>&nbsp;
<SYNC Start=8657189><P class='en'>and I call it my state values equals and then
the curly braces again. And now I can say
<SYNC Start=8674720><P class='en'>&nbsp;
<SYNC Start=8674720><P class='en'>like pending, processing and processed. I
could of course sorry, brackets missing. Add
<SYNC Start=8693960><P class='en'>&nbsp;
<SYNC Start=8693960><P class='en'>many more. Just for now. I have a short example.
So this is what we could do. Something is
<SYNC Start=8702870><P class='en'>&nbsp;
<SYNC Start=8702870><P class='en'>wrong here. Yes, comma. Okay. And this means
now, and I&#39;ve also, oh, I did something and
<SYNC Start=8710890><P class='en'>&nbsp;
<SYNC Start=8710890><P class='en'>didn&#39;t explain you why I did that. So far,
all the variables that we defined, we had
<SYNC Start=8716850><P class='en'>&nbsp;
<SYNC Start=8716850><P class='en'>in lowercase letters here, use the uppercase
letters, and the underscore. This is also,
<SYNC Start=8724109><P class='en'>&nbsp;
<SYNC Start=8724109><P class='en'>again, a best practice, because like, we would
use this static final, somewhere down here
<SYNC Start=8735390><P class='en'>&nbsp;
<SYNC Start=8735390><P class='en'>in the code. And you see, now the definition
is gone, we don&#39;t see it anymore. And so that
<SYNC Start=8742880><P class='en'>&nbsp;
<SYNC Start=8742880><P class='en'>a programmer working in here and knows what
you&#39;re working on here is static final. So
<SYNC Start=8749680><P class='en'>&nbsp;
<SYNC Start=8749680><P class='en'>I don&#39;t want you to touch it, I just want
you to read it. There, therefore, we use the
<SYNC Start=8756739><P class='en'>&nbsp;
<SYNC Start=8756739><P class='en'>capital letters, and we separate them with
the underscores so we don&#39;t use the camel
<SYNC Start=8762529><P class='en'>&nbsp;
<SYNC Start=8762529><P class='en'>case. And then we could, again, of course,
iterate through these values.
<SYNC Start=8771560><P class='en'>&nbsp;
<SYNC Start=8771560><P class='en'>For
<SYNC Start=8773560><P class='en'>&nbsp;
<SYNC Start=8773560><P class='en'>so let&#39;s do the for each loop, say, stream,
nice date, or just stayed. And then the curly
<SYNC Start=8788000><P class='en'>&nbsp;
<SYNC Start=8788000><P class='en'>braces again, we could say, if we&#39;re talking
about if state has a certain volume, will
<SYNC Start=8808500><P class='en'>&nbsp;
<SYNC Start=8808500><P class='en'>actually we can&#39;t on a stream, say equals,
this is not going to work properly. Because
<SYNC Start=8819979><P class='en'>&nbsp;
<SYNC Start=8819979><P class='en'>the equals is working on on on primitive values
like int, and it&#39;s comparing the value that
<SYNC Start=8827850><P class='en'>&nbsp;
<SYNC Start=8827850><P class='en'>is directly in the variable. Oh, no, sorry,
I&#39;m going really complicated. Um, I don&#39;t
<SYNC Start=8835919><P class='en'>&nbsp;
<SYNC Start=8835920><P class='en'>know if I, if I&#39;m making it too complicated.
But now that I already started, I might as
<SYNC Start=8841040><P class='en'>&nbsp;
<SYNC Start=8841040><P class='en'>well continue what we have to say for if we
want to compare two strings is equals. And
<SYNC Start=8850149><P class='en'>&nbsp;
<SYNC Start=8850149><P class='en'>so we can compare that to some other value.
So we can do it, state equals and then a string,
<SYNC Start=8860149><P class='en'>&nbsp;
<SYNC Start=8860149><P class='en'>some other value. So this is some that equals
is a method that is directly given to us from
<SYNC Start=8867720><P class='en'>&nbsp;
<SYNC Start=8867720><P class='en'>the string class that we haven&#39;t written,
but we&#39;re using it from Java. And the says,
<SYNC Start=8873979><P class='en'>&nbsp;
<SYNC Start=8873979><P class='en'>compare this string to some other something,
blah, blah, blah. Okay, if they&#39;re both the
<SYNC Start=8884120><P class='en'>&nbsp;
<SYNC Start=8884120><P class='en'>same, we could do something. And then we could
do this a number of times for each value.
<SYNC Start=8896140><P class='en'>&nbsp;
<SYNC Start=8896140><P class='en'>So we had, as far as I remember, something
like pending.
<SYNC Start=8901021><P class='en'>&nbsp;
<SYNC Start=8901021><P class='en'>And
<SYNC Start=8902021><P class='en'>&nbsp;
<SYNC Start=8902021><P class='en'>processing. And, of course, uppercase and
lowercase make a difference here. And I think
<SYNC Start=8918439><P class='en'>&nbsp;
<SYNC Start=8918439><P class='en'>it was processed, but I mean, this is just
an example. So it doesn&#39;t really matter that
<SYNC Start=8921979><P class='en'>&nbsp;
<SYNC Start=8921979><P class='en'>much. So, and then we could do some some something,
colo method. And here we would call a second
<SYNC Start=8937830><P class='en'>&nbsp;
<SYNC Start=8937830><P class='en'>method and the third method and so on. Okay,
but actually, this is a lot of code. So there
<SYNC Start=8952529><P class='en'>&nbsp;
<SYNC Start=8952529><P class='en'>is a faster way of doing that. And this is
the switch statement that are also promised
<SYNC Start=8958790><P class='en'>&nbsp;
<SYNC Start=8958790><P class='en'>to talk about. And second. This string here
is also not so nice, because you could change
<SYNC Start=8968350><P class='en'>&nbsp;
<SYNC Start=8968350><P class='en'>it any time. You could say in here, state
equals to love. And, of course with just a
<SYNC Start=8981220><P class='en'>&nbsp;
<SYNC Start=8981220><P class='en'>few lines. I&#39;m sure no one would ever do that
or hope. But he mentioned we only have always
<SYNC Start=8990750><P class='en'>&nbsp;
<SYNC Start=8990750><P class='en'>see a very short examples. We could have like
a very complicated code, hundreds, if not
<SYNC Start=8996020><P class='en'>&nbsp;
<SYNC Start=8996020><P class='en'>1000s of lines and we could like call other
methods For what is two other classes, and
<SYNC Start=9002479><P class='en'>&nbsp;
<SYNC Start=9002479><P class='en'>then if someone in some other class, like
changes your value, you might not notice.
<SYNC Start=9009420><P class='en'>&nbsp;
<SYNC Start=9009420><P class='en'>And you don&#39;t want that. You want actually
to have the value final. But this with final
<SYNC Start=9017850><P class='en'>&nbsp;
<SYNC Start=9017850><P class='en'>doesn&#39;t work, because final only protects
the variable. It does not protect the value
<SYNC Start=9023149><P class='en'>&nbsp;
<SYNC Start=9023149><P class='en'>in here, which you can change any time. And
for this, we have the email. The enum allows
<SYNC Start=9031949><P class='en'>&nbsp;
<SYNC Start=9031949><P class='en'>us to define an enumeration. Oh, okay, oh,
let me just remove that. Or we can keep it
<SYNC Start=9039609><P class='en'>&nbsp;
<SYNC Start=9039609><P class='en'>for the time being. But let&#39;s jump over I
have prepared here class will actually it
<SYNC Start=9046840><P class='en'>&nbsp;
<SYNC Start=9046840><P class='en'>will be our enum and it will not be a class.
Okay, so far have just said package. For less
<SYNC Start=9054000><P class='en'>&nbsp;
<SYNC Start=9054000><P class='en'>than 10, I have set less than 10. And now,
like you know it with the class, the class
<SYNC Start=9062720><P class='en'>&nbsp;
<SYNC Start=9062720><P class='en'>we would say public class, logging level,
<SYNC Start=9069170><P class='en'>&nbsp;
<SYNC Start=9069170><P class='en'>and
<SYNC Start=9070170><P class='en'>&nbsp;
<SYNC Start=9070170><P class='en'>races. But this time we&#39;re not doing a class,
we&#39;re doing something a bit smaller. And this
<SYNC Start=9077290><P class='en'>&nbsp;
<SYNC Start=9077290><P class='en'>is the enum. And now this is obligatory, you
have to start with the status definition.
<SYNC Start=9087990><P class='en'>&nbsp;
<SYNC Start=9087990><P class='en'>And it&#39;s not a string. So we don&#39;t need the
double codes that we would have for the string.
<SYNC Start=9095109><P class='en'>&nbsp;
<SYNC Start=9095109><P class='en'>Now this is really a value and enumeration
value, which we define as our email. So we
<SYNC Start=9106120><P class='en'>&nbsp;
<SYNC Start=9106120><P class='en'>like we like program our own type. And we
already program the allowed values pending,
<SYNC Start=9115660><P class='en'>&nbsp;
<SYNC Start=9115660><P class='en'>had processing. I think we had processed.
Yeah, and then we end
<SYNC Start=9127540><P class='en'>&nbsp;
<SYNC Start=9127540><P class='en'>here.
<SYNC Start=9128540><P class='en'>&nbsp;
<SYNC Start=9128540><P class='en'>And now we have defined an email. And we can
use that. Let&#39;s go back to our test. Let&#39;s
<SYNC Start=9140470><P class='en'>&nbsp;
<SYNC Start=9140470><P class='en'>say logging level logging level, or let&#39;s
call it
<SYNC Start=9153970><P class='en'>&nbsp;
<SYNC Start=9153970><P class='en'>my
<SYNC Start=9156620><P class='en'>&nbsp;
<SYNC Start=9156620><P class='en'>state equals to logging level pending. So
this is a lot looking like static. And this
<SYNC Start=9169180><P class='en'>&nbsp;
<SYNC Start=9169180><P class='en'>is already how it came. Because now we can
use these static values, we can also iterate
<SYNC Start=9178850><P class='en'>&nbsp;
<SYNC Start=9178850><P class='en'>over them. But we cannot change this. I mean,
we cannot. Of course we can change it. But
<SYNC Start=9187170><P class='en'>&nbsp;
<SYNC Start=9187170><P class='en'>we can only change it to the allowed level
allowed statuses that we have defined beforehand.
<SYNC Start=9194989><P class='en'>&nbsp;
<SYNC Start=9194989><P class='en'>We can set pending, processed and processing,
the order is different but still the same.
<SYNC Start=9202370><P class='en'>&nbsp;
<SYNC Start=9202370><P class='en'>It can only have one of the three values.
We could not say here. something crazy, because
<SYNC Start=9211710><P class='en'>&nbsp;
<SYNC Start=9211710><P class='en'>it&#39;s not a string, we can only use the values
that we have defined here. And this is really
<SYNC Start=9217720><P class='en'>&nbsp;
<SYNC Start=9217720><P class='en'>helpful and makes also our code more readable.
Now we can again, iterate through this enum.
<SYNC Start=9231729><P class='en'>&nbsp;
<SYNC Start=9231729><P class='en'>In this case, it&#39;s a bit more complicated
actually, because we have to call a method,
<SYNC Start=9238149><P class='en'>&nbsp;
<SYNC Start=9238149><P class='en'>which is called values. This method will give
us something like an array of all the allowed
<SYNC Start=9246960><P class='en'>&nbsp;
<SYNC Start=9246960><P class='en'>values in here, pending processing processed.
And then, of course, there&#39;s not a string
<SYNC Start=9253229><P class='en'>&nbsp;
<SYNC Start=9253229><P class='en'>anymore. We say let me also remove that. And
then we can do the same. Now, it&#39;s okay to
<SYNC Start=9269559><P class='en'>&nbsp;
<SYNC Start=9269560><P class='en'>say equals, see this works. Of course, it
does not make sense. I mean, a string will
<SYNC Start=9276130><P class='en'>&nbsp;
<SYNC Start=9276130><P class='en'>never be equal to an enum, but it&#39;s perfectly
fine. You may compare any object to another
<SYNC Start=9284800><P class='en'>&nbsp;
<SYNC Start=9284800><P class='en'>object. Of course it makes more sense to say
equals dot for example, pending and then here,
<SYNC Start=9299250><P class='en'>&nbsp;
<SYNC Start=9299250><P class='en'>processing and prose So 
let&#39;s put processing.
<SYNC Start=9314220><P class='en'>&nbsp;
<SYNC Start=9314220><P class='en'>Here.
<SYNC Start=9317920><P class='en'>&nbsp;
<SYNC Start=9317920><P class='en'>Let&#39;s put processed. Okay? Um, but this is
not so readable. And we don&#39;t need equals
<SYNC Start=9324910><P class='en'>&nbsp;
<SYNC Start=9324910><P class='en'>here. This is so cool. Actually, for an enum,
we can do the comparison, just with the double
<SYNC Start=9334650><P class='en'>&nbsp;
<SYNC Start=9334650><P class='en'>equals, again, this does work. Because yada
yada, yada. Java DOES MAGIC under the hood.
<SYNC Start=9345850><P class='en'>&nbsp;
<SYNC Start=9345850><P class='en'>So for now, just believe me it&#39;s working.
Because this is not an object, this is a static
<SYNC Start=9356220><P class='en'>&nbsp;
<SYNC Start=9356220><P class='en'>value. Okay. Let&#39;s just remove this. Okay.
Now, you see, I think it already got so much
<SYNC Start=9370720><P class='en'>&nbsp;
<SYNC Start=9370720><P class='en'>more readable and shorter. That However, there&#39;s
still a shorter form, which is the switch
<SYNC Start=9377939><P class='en'>&nbsp;
<SYNC Start=9377939><P class='en'>statement. However, we will not do this today.
We&#39;ll do this in the next tutorial, the switch
<SYNC Start=9386729><P class='en'>&nbsp;
<SYNC Start=9386729><P class='en'>statement, because I think otherwise, it&#39;s
just too much for one tutorial. Now we talked
<SYNC Start=9391950><P class='en'>&nbsp;
<SYNC Start=9391950><P class='en'>about arrays repeated the for each loop. Yeah,
and I introduced the enum, which has here
<SYNC Start=9402170><P class='en'>&nbsp;
<SYNC Start=9402170><P class='en'>this values method. Actually, there&#39;s much
more an enum can do. Maybe I should show you
<SYNC Start=9410250><P class='en'>&nbsp;
<SYNC Start=9410250><P class='en'>this one. We can also add these brackets here.
Let me do this for a moment. And now we can
<SYNC Start=9419819><P class='en'>&nbsp;
<SYNC Start=9419819><P class='en'>put values in here. So what is this going
to be? I&#39;m adding a constructor, which must
<SYNC Start=9430360><P class='en'>&nbsp;
<SYNC Start=9430360><P class='en'>be private. Let me check if it may be default,
but I think not. Well, let&#39;s just try it seems
<SYNC Start=9443590><P class='en'>&nbsp;
<SYNC Start=9443590><P class='en'>to be working so far, but I&#39;m sure it may
not be public, yet. This is not working. So
<SYNC Start=9449270><P class='en'>&nbsp;
<SYNC Start=9449270><P class='en'>default, visibility seems to be okay. Even
though I think it&#39;s a bit awkward. And now
<SYNC Start=9456819><P class='en'>&nbsp;
<SYNC Start=9456819><P class='en'>see this. It says the end cannot be applied
to this constructor. Because so far the constructor
<SYNC Start=9466470><P class='en'>&nbsp;
<SYNC Start=9466470><P class='en'>is empty. Because what happens is, this is
calling the constructor. So let&#39;s put in here,
<SYNC Start=9483760><P class='en'>&nbsp;
<SYNC Start=9483760><P class='en'>and now it&#39;s working. So having the constructor
here, you might also see I was kind of lying
<SYNC Start=9492000><P class='en'>&nbsp;
<SYNC Start=9492000><P class='en'>to you, of course this is an object. But it&#39;s
just that for specific reasons, I don&#39;t want
<SYNC Start=9498100><P class='en'>&nbsp;
<SYNC Start=9498100><P class='en'>to go in detail, we can still do the comparison
with the double equals here. Okay, anyway,
<SYNC Start=9505359><P class='en'>&nbsp;
<SYNC Start=9505359><P class='en'>so we have a constructor. And let&#39;s now assign
the eye to some other variable. Of course,
<SYNC Start=9514390><P class='en'>&nbsp;
<SYNC Start=9514390><P class='en'>you see, this doesn&#39;t make sense, assigning
eye to eye and we have already had that. This
<SYNC Start=9520109><P class='en'>&nbsp;
<SYNC Start=9520109><P class='en'>thought I know, of course, I have to define
it. And make let&#39;s make this private. So now
<SYNC Start=9529650><P class='en'>&nbsp;
<SYNC Start=9529650><P class='en'>it&#39;s working. I don&#39;t like it, I want this
private, this is just what he would do. Okay.
<SYNC Start=9536960><P class='en'>&nbsp;
<SYNC Start=9536960><P class='en'>And then I mean, this, this depends what this
means could be some code of some form. So
<SYNC Start=9545010><P class='en'>&nbsp;
<SYNC Start=9545010><P class='en'>let&#39;s have a method that returns public code.
And this was returned. I. So this enormous,
<SYNC Start=9558689><P class='en'>&nbsp;
<SYNC Start=9558689><P class='en'>really powerful, is allows us in dismissing
to have methods to return something. But it
<SYNC Start=9570400><P class='en'>&nbsp;
<SYNC Start=9570400><P class='en'>has these static values that we can iterate
over and that we can only choose from. You
<SYNC Start=9577270><P class='en'>&nbsp;
<SYNC Start=9577270><P class='en'>could also think of a traffic like light with
like red, yellow, and green. You can also
<SYNC Start=9584131><P class='en'>&nbsp;
<SYNC Start=9584131><P class='en'>of course have more values here any number.
<SYNC Start=9588979><P class='en'>&nbsp;
<SYNC Start=9588979><P class='en'>I&#39;m actually you don&#39;t have to have the enum
in its own file. You could directly on the
<SYNC Start=9595050><P class='en'>&nbsp;
<SYNC Start=9595050><P class='en'>fly define it in line in a class, I would
just not recommend you to do saw, I mean,
<SYNC Start=9601240><P class='en'>&nbsp;
<SYNC Start=9601240><P class='en'>forever, you&#39;re all there is an exception
and find out these exceptions for yourself.
<SYNC Start=9606950><P class='en'>&nbsp;
<SYNC Start=9606950><P class='en'>But in 99% of the cases, you would be better
off having it in your own class. So yeah,
<SYNC Start=9617020><P class='en'>&nbsp;
<SYNC Start=9617020><P class='en'>there&#39;s much, much more actually that you
can do with an enum. But I think we already
<SYNC Start=9624050><P class='en'>&nbsp;
<SYNC Start=9624050><P class='en'>this tutorials already a bit long. And I think
I want you to digest this for now. We can
<SYNC Start=9631560><P class='en'>&nbsp;
<SYNC Start=9631560><P class='en'>further extend this anytime, of course. So
that&#39;s the name. With its constructor and
<SYNC Start=9640270><P class='en'>&nbsp;
<SYNC Start=9640270><P class='en'>a public method returning the I, you can also
have more parameters in here like a string.
<SYNC Start=9649930><P class='en'>&nbsp;
<SYNC Start=9649930><P class='en'>But if you&#39;re if one of them has it, and all
of them have to have it, and every parameter
<SYNC Start=9656540><P class='en'>&nbsp;
<SYNC Start=9656540><P class='en'>appearing here has to appear in the constructor
string, some string or let&#39;s just say s. You
<SYNC Start=9664609><P class='en'>&nbsp;
<SYNC Start=9664609><P class='en'>may use it but you don&#39;t have to use it. But
usually, of course, you would use it as equals
<SYNC Start=9670510><P class='en'>&nbsp;
<SYNC Start=9670510><P class='en'>s. And then something.
<SYNC Start=9673660><P class='en'>&nbsp;
<SYNC Start=9673660><P class='en'>Yeah. Okay.
<SYNC Start=9675390><P class='en'>&nbsp;
<SYNC Start=9675390><P class='en'>So I think that&#39;s enough for now. And the
next tutorial, I&#39;m pretty sure I&#39;m going to
<SYNC Start=9685060><P class='en'>&nbsp;
<SYNC Start=9685060><P class='en'>show you the switch statement. Because this
is really cool for using for iterating over
<SYNC Start=9692020><P class='en'>&nbsp;
<SYNC Start=9692020><P class='en'>these enum values, then the code gets much
shorter. I am going to talk about the switch
<SYNC Start=9701310><P class='en'>&nbsp;
<SYNC Start=9701310><P class='en'>statement, which is another conditional statement.
Very similar to the if statement. However,
<SYNC Start=9710240><P class='en'>&nbsp;
<SYNC Start=9710240><P class='en'>first of all, let&#39;s recap what I showed you
in the last episode. Actually, in the last
<SYNC Start=9716520><P class='en'>&nbsp;
<SYNC Start=9716520><P class='en'>one, I covered a lot of ground, I think, I
hope this wasn&#39;t too fast for you. So let&#39;s
<SYNC Start=9723050><P class='en'>&nbsp;
<SYNC Start=9723050><P class='en'>shortly recap. First of all, I showed you
this new way of defining an array. So like
<SYNC Start=9732439><P class='en'>&nbsp;
<SYNC Start=9732439><P class='en'>the traditional, let&#39;s call it, the traditional
one was this one, where you just said, person,
<SYNC Start=9738260><P class='en'>&nbsp;
<SYNC Start=9738260><P class='en'>square brackets, persons equals to new person
have four chairs with the size of four. So
<SYNC Start=9746779><P class='en'>&nbsp;
<SYNC Start=9746779><P class='en'>this can hold four elements starting at zero.
Well, this needs a lot of lines. And this
<SYNC Start=9755439><P class='en'>&nbsp;
<SYNC Start=9755439><P class='en'>actually is the short form just with the curly
braces opening and closing. And with a comma
<SYNC Start=9763130><P class='en'>&nbsp;
<SYNC Start=9763130><P class='en'>separated list, you can define an array. And
my recommendation is end with a comma at the
<SYNC Start=9770930><P class='en'>&nbsp;
<SYNC Start=9770930><P class='en'>end, so that you can easily extend the array
at a later time. Also, I introduced a new
<SYNC Start=9782160><P class='en'>&nbsp;
<SYNC Start=9782160><P class='en'>modifier for variables, a final modifier,
the final modifier kind of protects a variable
<SYNC Start=9789750><P class='en'>&nbsp;
<SYNC Start=9789750><P class='en'>for us. So what it does is when in a later
line, I try to assign something new. Like
<SYNC Start=9803239><P class='en'>&nbsp;
<SYNC Start=9803239><P class='en'>let&#39;s use this area on top here, this is not
going to work cannot assign a value to final
<SYNC Start=9809970><P class='en'>&nbsp;
<SYNC Start=9809970><P class='en'>variable persons to also we can try to assign
now, which is like emptying the variable will
<SYNC Start=9818859><P class='en'>&nbsp;
<SYNC Start=9818859><P class='en'>also not work. This is nice ish. However,
I personally prefer to not use it locally
<SYNC Start=9828239><P class='en'>&nbsp;
<SYNC Start=9828239><P class='en'>in a method. But instead to use it for static
final variables that are used read only and
<SYNC Start=9837899><P class='en'>&nbsp;
<SYNC Start=9837899><P class='en'>are defined at the top of the class usually
like this here. I hadn&#39;t said any modifier.
<SYNC Start=9848430><P class='en'>&nbsp;
<SYNC Start=9848430><P class='en'>So this at the moment is default visibility.
Usually I would prefer, like having it private.
<SYNC Start=9856100><P class='en'>&nbsp;
<SYNC Start=9856100><P class='en'>And if you need other classes accessing it,
I mean, this is supposed to be read only.
<SYNC Start=9862810><P class='en'>&nbsp;
<SYNC Start=9862810><P class='en'>So it would be okayish have this public. However,
even better. If you really want to focus on
<SYNC Start=9871300><P class='en'>&nbsp;
<SYNC Start=9871300><P class='en'>clean code like I do. You could provide a
public method returning the string array.
<SYNC Start=9880479><P class='en'>&nbsp;
<SYNC Start=9880479><P class='en'>I don&#39;t know some name. Let&#39;s call it states.
And in here, first of all, let me finish this
<SYNC Start=9898250><P class='en'>&nbsp;
<SYNC Start=9898250><P class='en'>we could copy this out Because with a copy
if someone else, because the final, what it
<SYNC Start=9905449><P class='en'>&nbsp;
<SYNC Start=9905449><P class='en'>does protect is as I set the variable, what
it does not protect as the content. So it&#39;s
<SYNC Start=9912170><P class='en'>&nbsp;
<SYNC Start=9912170><P class='en'>safer if return a copy of the array. And there&#39;s
actually a helping Claus, which provides of
<SYNC Start=9921399><P class='en'>&nbsp;
<SYNC Start=9921399><P class='en'>Java, Java util, which provides some static
methods and really have a look, see, we are
<SYNC Start=9930930><P class='en'>&nbsp;
<SYNC Start=9930930><P class='en'>going to use the copy. But there&#39;s also many,
many more methods like here for doing a binary
<SYNC Start=9936230><P class='en'>&nbsp;
<SYNC Start=9936230><P class='en'>search and so on. This is really a big toolbox
of methods that you can use, play around with
<SYNC Start=9943810><P class='en'>&nbsp;
<SYNC Start=9943810><P class='en'>them. And I might show some of them at a later
time. For now let&#39;s use the copy off. And
<SYNC Start=9952330><P class='en'>&nbsp;
<SYNC Start=9952330><P class='en'>then we take the array. And we have to state
the size, which again, we take dynamically,
<SYNC Start=9961939><P class='en'>&nbsp;
<SYNC Start=9961939><P class='en'>array dot length, yeah, we also talked about
this. But this is dynamically returning the
<SYNC Start=9967040><P class='en'>&nbsp;
<SYNC Start=9967040><P class='en'>length of the array, which in this case is
three, because the array has three elements.
<SYNC Start=9975460><P class='en'>&nbsp;
<SYNC Start=9975460><P class='en'>So this is really a nice way of
<SYNC Start=9977410><P class='en'>&nbsp;
<SYNC Start=9977410><P class='en'>generating clean code and returning this array.
Also, I told you, it&#39;s all in capital letters
<SYNC Start=9986560><P class='en'>&nbsp;
<SYNC Start=9986560><P class='en'>and using the underscore and not written in
camel case, because this symbolizes that is
<SYNC Start=9995470><P class='en'>&nbsp;
<SYNC Start=9995470><P class='en'>a static final. So in short, you just talk
of a static final, because this is how you
<SYNC Start=10001319><P class='en'>&nbsp;
<SYNC Start=10001319><P class='en'>write it. Okay. Let&#39;s go back to the bottom.
I&#39;m sorry, so not much about the array. I
<SYNC Start=10014100><P class='en'>&nbsp;
<SYNC Start=10014100><P class='en'>also very shortly talked about equals, because
I had to, because for two strings, like ABC.
<SYNC Start=10023130><P class='en'>&nbsp;
<SYNC Start=10023130><P class='en'>And you if you want to compare them, you cannot
do so with the double equals. This is not
<SYNC Start=10033229><P class='en'>&nbsp;
<SYNC Start=10033229><P class='en'>going to work, even if it&#39;s the same. Because
the problem is that this comparison does not
<SYNC Start=10041640><P class='en'>&nbsp;
<SYNC Start=10041640><P class='en'>compare objects. And this is an object, instead,
it compares the reference variable. So equals
<SYNC Start=10051030><P class='en'>&nbsp;
<SYNC Start=10051030><P class='en'>does work for int three, and then you can
say three equals I, because the three is actually
<SYNC Start=10063020><P class='en'>&nbsp;
<SYNC Start=10063020><P class='en'>in here. But if you have a string, let&#39;s make
it null for now. In here is not the object
<SYNC Start=10083189><P class='en'>&nbsp;
<SYNC Start=10083189><P class='en'>or now in here is the reference, which is
something you can think of something like
<SYNC Start=10091550><P class='en'>&nbsp;
<SYNC Start=10091550><P class='en'>a number also will be saved in here. And when
you compare with the equals the two equal
<SYNC Start=10100060><P class='en'>&nbsp;
<SYNC Start=10100060><P class='en'>signs, then you compare this variable, which
means you kind of compare if it&#39;s exactly
<SYNC Start=10109970><P class='en'>&nbsp;
<SYNC Start=10109970><P class='en'>the same. So what will be true is if you would
say my string equal equal my string, but this
<SYNC Start=10121779><P class='en'>&nbsp;
<SYNC Start=10121779><P class='en'>usually is not what you want to say. And so
when you compare two strings, you have to
<SYNC Start=10128390><P class='en'>&nbsp;
<SYNC Start=10128390><P class='en'>say equals talking about equals usually in
one sentence, you should always also talk
<SYNC Start=10135659><P class='en'>&nbsp;
<SYNC Start=10135659><P class='en'>about the hashCode method. This is already
a very advanced topic. So let me keep this
<SYNC Start=10142010><P class='en'>&nbsp;
<SYNC Start=10142010><P class='en'>very short for now. It just that if you create
a new class, like I created the class person,
<SYNC Start=10151529><P class='en'>&nbsp;
<SYNC Start=10151529><P class='en'>it&#39;s often a good idea all depends, but you
might want to implement the equals method
<SYNC Start=10159779><P class='en'>&nbsp;
<SYNC Start=10159779><P class='en'>in your person object so that you can compare
two persons. But if you do, so, you also have
<SYNC Start=10166920><P class='en'>&nbsp;
<SYNC Start=10166920><P class='en'>to implement the hashCode method. What the
hashCode method is and all the details I will
<SYNC Start=10174270><P class='en'>&nbsp;
<SYNC Start=10174270><P class='en'>explain at a later time. Okay, so that much
about the string comparison. Oh, one more
<SYNC Start=10182500><P class='en'>&nbsp;
<SYNC Start=10182500><P class='en'>thing. I made this now because I also wanted
to make a point. What I see very often is
<SYNC Start=10189930><P class='en'>&nbsp;
<SYNC Start=10189930><P class='en'>people that would write equals like this,
my string dot equals and then a static value.
<SYNC Start=10197760><P class='en'>&nbsp;
<SYNC Start=10197760><P class='en'>This is not so nice, because as you see this
Might be now. And then this throws an error.
<SYNC Start=10203310><P class='en'>&nbsp;
<SYNC Start=10203310><P class='en'>And of course, we don&#39;t like arrows. So instead,
always put a value in the front, which will
<SYNC Start=10211710><P class='en'>&nbsp;
<SYNC Start=10211710><P class='en'>never be now, like this string here. I mean,
this is ACB, as a roll down, it will never
<SYNC Start=10219149><P class='en'>&nbsp;
<SYNC Start=10219149><P class='en'>be now. So ACB equals now, we&#39;ll just return
false. But now equals ACB will always throw
<SYNC Start=10233630><P class='en'>&nbsp;
<SYNC Start=10233630><P class='en'>an error. Okay. So let&#39;s stop here. Then,
actually, the biggest part of the last lesson,
<SYNC Start=10247180><P class='en'>&nbsp;
<SYNC Start=10247180><P class='en'>we talked about enums, which I introduced,
I created this enum here logging level, let&#39;s
<SYNC Start=10254760><P class='en'>&nbsp;
<SYNC Start=10254760><P class='en'>go to the class. So public enum logging level,
I do find, actually, the name is a bit awkward.
<SYNC Start=10264240><P class='en'>&nbsp;
<SYNC Start=10264240><P class='en'>Because it&#39;s not a logging level, I was thinking
of something like info, warning, and error.
<SYNC Start=10276220><P class='en'>&nbsp;
<SYNC Start=10276220><P class='en'>But then I decided we haven&#39;t talked about
logging either. So I
<SYNC Start=10283080><P class='en'>&nbsp;
<SYNC Start=10283080><P class='en'>instead took pending processing process. So
this would more be more like a status. But
<SYNC Start=10288970><P class='en'>&nbsp;
<SYNC Start=10288970><P class='en'>I don&#39;t know, let&#39;s leave the name for now
is just a stupid example. So this is the IEM
<SYNC Start=10294750><P class='en'>&nbsp;
<SYNC Start=10294750><P class='en'>that are introduced, which is a bit similar
to a class, but has some limitations, but
<SYNC Start=10300970><P class='en'>&nbsp;
<SYNC Start=10300970><P class='en'>also has some features a class does not have.
So it allows us to define these static on,
<SYNC Start=10309020><P class='en'>&nbsp;
<SYNC Start=10309020><P class='en'>let&#39;s call them labels that we can act upon
in our code. So we can say if something is
<SYNC Start=10316840><P class='en'>&nbsp;
<SYNC Start=10316840><P class='en'>pending, to this or that, so it&#39;s not only
more readable, it&#39;s also more safe. enon was
<SYNC Start=10325520><P class='en'>&nbsp;
<SYNC Start=10325520><P class='en'>introduced was Java five. And before that,
people would have taken numeric values, like
<SYNC Start=10333600><P class='en'>&nbsp;
<SYNC Start=10333600><P class='en'>if something is equal to not to zero, or one.
But then already people started to calculate
<SYNC Start=10343439><P class='en'>&nbsp;
<SYNC Start=10343439><P class='en'>these values, this really gets nasty and problematic.
And I&#39;m not showing you this because I want
<SYNC Start=10349980><P class='en'>&nbsp;
<SYNC Start=10349980><P class='en'>you to do it in the proper way. And that is
using an enum. So this is really a cool feature.
<SYNC Start=10357989><P class='en'>&nbsp;
<SYNC Start=10357989><P class='en'>You can you don&#39;t have to also introduce a
constructor, if you want to have extra values
<SYNC Start=10364479><P class='en'>&nbsp;
<SYNC Start=10364479><P class='en'>for each enum value. And you can provide methods
that would return these values, or do whatever
<SYNC Start=10374870><P class='en'>&nbsp;
<SYNC Start=10374870><P class='en'>you want, which are also like to make the
code more readable, is I often provide I mean,
<SYNC Start=10382500><P class='en'>&nbsp;
<SYNC Start=10382500><P class='en'>not always. Whenever your code and you design
your code, always think decisions through
<SYNC Start=10391370><P class='en'>&nbsp;
<SYNC Start=10391370><P class='en'>don&#39;t make a decision just because this is
never smart. So if for whatever reason, then
<SYNC Start=10398470><P class='en'>&nbsp;
<SYNC Start=10398470><P class='en'>the code you work on, for example, the pending
value, and you need to ask is it pending,
<SYNC Start=10405540><P class='en'>&nbsp;
<SYNC Start=10405540><P class='en'>that it might be nice to add this method is
pending.
<SYNC Start=10415771><P class='en'>&nbsp;
<SYNC Start=10415771><P class='en'>And then you can say return this, which is
the minimum and not only the minimum, but
<SYNC Start=10422050><P class='en'>&nbsp;
<SYNC Start=10422050><P class='en'>the current value of the enum equals equals
pending. So if in the code, you have an enum
<SYNC Start=10436069><P class='en'>&nbsp;
<SYNC Start=10436069><P class='en'>let&#39;s do this modern level, still I call it
stage or status equals logging level, not
<SYNC Start=10453399><P class='en'>&nbsp;
<SYNC Start=10453399><P class='en'>take processing. And then I could say if stayed
Dodd is pending, which now would be false.
<SYNC Start=10461659><P class='en'>&nbsp;
<SYNC Start=10461659><P class='en'>Some code would have to be executed. But what
I want you to know is only add such a method
<SYNC Start=10472770><P class='en'>&nbsp;
<SYNC Start=10472770><P class='en'>if you really need it. So it would not be
wise to always by default, provide a method
<SYNC Start=10479930><P class='en'>&nbsp;
<SYNC Start=10479930><P class='en'>for each of these values.
<SYNC Start=10484109><P class='en'>&nbsp;
<SYNC Start=10484109><P class='en'>People usually get lazy and when they see
something is working, they tend to just overuse
<SYNC Start=10493260><P class='en'>&nbsp;
<SYNC Start=10493260><P class='en'>stuff and they just like I might be I might
need this. So let&#39;s just ask Method just because
<SYNC Start=10501350><P class='en'>&nbsp;
<SYNC Start=10501350><P class='en'>no, never do that. Never add a method just
because always think think it through, I mean,
<SYNC Start=10510640><P class='en'>&nbsp;
<SYNC Start=10510640><P class='en'>code lives. And you can always change your
code later. And you always can add a method
<SYNC Start=10515110><P class='en'>&nbsp;
<SYNC Start=10515110><P class='en'>later. So only edit when you need it. Let&#39;s
say no, we don&#39;t need it. So we will also
<SYNC Start=10520890><P class='en'>&nbsp;
<SYNC Start=10520890><P class='en'>remove it. Okay, I think this pretty much
rounds it up. For enums. Actually, they allow
<SYNC Start=10529100><P class='en'>&nbsp;
<SYNC Start=10529100><P class='en'>much more crazy stuff, like each value could
have their own method implementations. I hardly
<SYNC Start=10536510><P class='en'>&nbsp;
<SYNC Start=10536510><P class='en'>ever use it. So let&#39;s not show this for now.
I think this is pretty much what you need,
<SYNC Start=10545899><P class='en'>&nbsp;
<SYNC Start=10545899><P class='en'>usually. And now, let&#39;s finally actually go
to the topic of this lesson, which is the
<SYNC Start=10552760><P class='en'>&nbsp;
<SYNC Start=10552760><P class='en'>switch statement. So I think I already a bit
introduced it. In the last lesson, I said,
<SYNC Start=10558680><P class='en'>&nbsp;
<SYNC Start=10558680><P class='en'>we want to shorten this here. So the switch
statement is also a conditional statement.
<SYNC Start=10565729><P class='en'>&nbsp;
<SYNC Start=10565729><P class='en'>And that&#39;s pretty much exactly the same, like
these ifs here, just in a shortened form.
<SYNC Start=10572100><P class='en'>&nbsp;
<SYNC Start=10572100><P class='en'>Okay, I mean, don&#39;t think about the exact
meaning here. This is just pseudocode. To
<SYNC Start=10580380><P class='en'>&nbsp;
<SYNC Start=10580380><P class='en'>explain you something. Okay, this time, I
will not use a for loop, I will directly operate
<SYNC Start=10587500><P class='en'>&nbsp;
<SYNC Start=10587500><P class='en'>on this state here. And then we can instead
of saying if we can say switch, so we are
<SYNC Start=10596439><P class='en'>&nbsp;
<SYNC Start=10596439><P class='en'>operating on that value here. And then, instead
of if we&#39;re saying case, so if it&#39;s the case
<SYNC Start=10610229><P class='en'>&nbsp;
<SYNC Start=10610229><P class='en'>that the state has this or that volume, case
pending. So this is the same as saying, If
<SYNC Start=10622130><P class='en'>&nbsp;
<SYNC Start=10622130><P class='en'>equals pending. If you just have one, then
if it&#39;s of course shorter. But the switch
<SYNC Start=10629720><P class='en'>&nbsp;
<SYNC Start=10629720><P class='en'>statement is usually used when you iterate
through all or most of them, because you have
<SYNC Start=10638260><P class='en'>&nbsp;
<SYNC Start=10638260><P class='en'>this extra of saying switch, but then the
more states you have, the easier or shorter
<SYNC Start=10645540><P class='en'>&nbsp;
<SYNC Start=10645540><P class='en'>it will get processing case process. Now I
mentioned we will have 100 different ones.
<SYNC Start=10656110><P class='en'>&nbsp;
<SYNC Start=10656110><P class='en'>Let&#39;s format this. Now what happens is, I
haven&#39;t put any method here, and I have not
<SYNC Start=10664949><P class='en'>&nbsp;
<SYNC Start=10664949><P class='en'>put a break statement here. So actually, what
would happen here, now let&#39;s put the same
<SYNC Start=10673399><P class='en'>&nbsp;
<SYNC Start=10673399><P class='en'>method call, I mean, I have not implemented
the method, just the method. Imagine this
<SYNC Start=10677659><P class='en'>&nbsp;
<SYNC Start=10677659><P class='en'>was a method. So for all these three different
states, while there is a common reason, we
<SYNC Start=10684040><P class='en'>&nbsp;
<SYNC Start=10684040><P class='en'>would call this method. If imagine we use
a switch statement within a private method,
<SYNC Start=10692930><P class='en'>&nbsp;
<SYNC Start=10692930><P class='en'>you could also like return a value. So this
depends, the difference with a return is when
<SYNC Start=10701630><P class='en'>&nbsp;
<SYNC Start=10701630><P class='en'>you return something from a method, of course,
you also leave the method, while I&#39;m pointing
<SYNC Start=10706760><P class='en'>&nbsp;
<SYNC Start=10706760><P class='en'>this out is because normally usually, what
you want is you want to do something and it
<SYNC Start=10718500><P class='en'>&nbsp;
<SYNC Start=10718500><P class='en'>might not even return something like printing
something on the console. And you would call
<SYNC Start=10725520><P class='en'>&nbsp;
<SYNC Start=10725520><P class='en'>one method. And in here, you would call a
second method or do a second something calculation
<SYNC Start=10735370><P class='en'>&nbsp;
<SYNC Start=10735370><P class='en'>or so. And here a third one. Now it gets problematic
if you forget the break, because what then
<SYNC Start=10744090><P class='en'>&nbsp;
<SYNC Start=10744090><P class='en'>happens is a fall through this will be cold,
as well as that will be cold. So this is really
<SYNC Start=10751750><P class='en'>&nbsp;
<SYNC Start=10751750><P class='en'>a big source of bugs. Very, very dangerous.
So in this case, never forget the break. And
<SYNC Start=10759130><P class='en'>&nbsp;
<SYNC Start=10759130><P class='en'>if sometimes you&#39;ll want to have them together
because you want all the three of them for
<SYNC Start=10766479><P class='en'>&nbsp;
<SYNC Start=10766479><P class='en'>example or to to call a certain method it&#39;s
recommended to leave a comment false through
<SYNC Start=10776750><P class='en'>&nbsp;
<SYNC Start=10776750><P class='en'>so that you tell the next program I know what
happens and I did this on purpose.
<SYNC Start=10785800><P class='en'>&nbsp;
<SYNC Start=10785800><P class='en'>Okay.
<SYNC Start=10790080><P class='en'>&nbsp;
<SYNC Start=10790080><P class='en'>So that much about follow through. And you
don&#39;t have to set all possible values. You
<SYNC Start=10799141><P class='en'>&nbsp;
<SYNC Start=10799141><P class='en'>can also leave One out, if nothing is found,
in this case, we will just leave the switch
<SYNC Start=10804520><P class='en'>&nbsp;
<SYNC Start=10804520><P class='en'>statement, and we&#39;ll just not do anything.
What you can also do is you always have the
<SYNC Start=10813199><P class='en'>&nbsp;
<SYNC Start=10813199><P class='en'>possibility to adding a default, which will
be called if none of the other case statements
<SYNC Start=10820790><P class='en'>&nbsp;
<SYNC Start=10820790><P class='en'>apply. And then people sometimes say, I don&#39;t
know, call default method. Well, he, I really
<SYNC Start=10835649><P class='en'>&nbsp;
<SYNC Start=10835649><P class='en'>want to warn you. And of course, again, we
had fall through would have to say, break.
<SYNC Start=10841620><P class='en'>&nbsp;
<SYNC Start=10841620><P class='en'>This is not so wise. The problem is, I mean,
code lives. And who stops the next colleague
<SYNC Start=10849540><P class='en'>&nbsp;
<SYNC Start=10849540><P class='en'>from extending your enum adding, for example,
an error state here for some text, your colleague
<SYNC Start=10863040><P class='en'>&nbsp;
<SYNC Start=10863040><P class='en'>would just do this would not know there is
this switch statement. And now, you implemented
<SYNC Start=10870551><P class='en'>&nbsp;
<SYNC Start=10870551><P class='en'>the switch statement, you didn&#39;t think of
the error case. And the error case might need
<SYNC Start=10877140><P class='en'>&nbsp;
<SYNC Start=10877140><P class='en'>a specific behavior. But now you would also
call this method for this new error flag.
<SYNC Start=10886420><P class='en'>&nbsp;
<SYNC Start=10886420><P class='en'>So usually, we don&#39;t want that. So what I
recommend you for the default statement, either
<SYNC Start=10893260><P class='en'>&nbsp;
<SYNC Start=10893260><P class='en'>you don&#39;t use it, or even better use it. But
here, you would throw an error. He say, I&#39;m
<SYNC Start=10904700><P class='en'>&nbsp;
<SYNC Start=10904700><P class='en'>not doing this now, because I haven&#39;t talked
about exceptions yet. We will do at a later
<SYNC Start=10911010><P class='en'>&nbsp;
<SYNC Start=10911010><P class='en'>time. But this is the place where you would
have like an exceptional case. And the good
<SYNC Start=10919130><P class='en'>&nbsp;
<SYNC Start=10919130><P class='en'>thing about this is when someone extends your
income, and someone forgets to extend also,
<SYNC Start=10929470><P class='en'>&nbsp;
<SYNC Start=10929470><P class='en'>one or more switch statements, you will see
this, I mean, you might say Oh, but then my
<SYNC Start=10934080><P class='en'>&nbsp;
<SYNC Start=10934080><P class='en'>program crashes. And this is so nasty. Well,
of course it is. But there is a rule in good
<SYNC Start=10941270><P class='en'>&nbsp;
<SYNC Start=10941270><P class='en'>design. And this is called fail early, it&#39;s
always better to have a high severe back on
<SYNC Start=10948899><P class='en'>&nbsp;
<SYNC Start=10948899><P class='en'>production even. And to have to fix this within
let&#39;s say, seconds or hours than to have a
<SYNC Start=10956319><P class='en'>&nbsp;
<SYNC Start=10956319><P class='en'>high severe bug. And no one notices it. Because
if it would not throw an error, it might calculate
<SYNC Start=10965180><P class='en'>&nbsp;
<SYNC Start=10965180><P class='en'>something in a wrong way. But a client might
notice this, let&#39;s say three months later,
<SYNC Start=10971739><P class='en'>&nbsp;
<SYNC Start=10971739><P class='en'>and then the problem will be so so much bigger.
So when programming, sometimes you just have
<SYNC Start=10978920><P class='en'>&nbsp;
<SYNC Start=10978920><P class='en'>to be brave. I also see people that try to
prevent arrows and like return something,
<SYNC Start=10985979><P class='en'>&nbsp;
<SYNC Start=10985979><P class='en'>for example, return now. So this is actually
just, instead of accepting I have done something
<SYNC Start=10993399><P class='en'>&nbsp;
<SYNC Start=10993399><P class='en'>wrong. And let&#39;s fix it. This is just like
putting the problem to the future and making
<SYNC Start=10999149><P class='en'>&nbsp;
<SYNC Start=10999149><P class='en'>it bigger. So I want you to be brave and throw
exceptions and handle them then this is always
<SYNC Start=11007050><P class='en'>&nbsp;
<SYNC Start=11007050><P class='en'>better. I mean, I&#39;m not saying you should
program buggy code. Of course, we should try
<SYNC Start=11012870><P class='en'>&nbsp;
<SYNC Start=11012870><P class='en'>and concentrate. But sometimes bad things
happen. And then it&#39;s always better to fail
<SYNC Start=11017439><P class='en'>&nbsp;
<SYNC Start=11017439><P class='en'>early. And so you you notice the problem and
you can fix it. This is always better than
<SYNC Start=11025479><P class='en'>&nbsp;
<SYNC Start=11025479><P class='en'>hidden bucks. Okay. I hope you got my point.
<SYNC Start=11033370><P class='en'>&nbsp;
<SYNC Start=11033370><P class='en'>Okay,
<SYNC Start=11034720><P class='en'>&nbsp;
<SYNC Start=11034720><P class='en'>so also here. Well, if you have an exception,
you don&#39;t need to break because an exception
<SYNC Start=11041520><P class='en'>&nbsp;
<SYNC Start=11041520><P class='en'>always leaves the block. But what is important
to always have a break, or, like here, we
<SYNC Start=11051270><P class='en'>&nbsp;
<SYNC Start=11051270><P class='en'>don&#39;t have to break, leave a comment for through
to tell the next programmer, I know what I&#39;m
<SYNC Start=11058109><P class='en'>&nbsp;
<SYNC Start=11058109><P class='en'>doing, I want this and Tommy about warnings.
One more thing. don&#39;t overuse switch. as well.
<SYNC Start=11068109><P class='en'>&nbsp;
<SYNC Start=11068109><P class='en'>don&#39;t overuse the if statements, these conditional
statements, you&#39;ll see how much the code grows
<SYNC Start=11073920><P class='en'>&nbsp;
<SYNC Start=11073920><P class='en'>also in combination with for loops and see
how many levels This adds to the code. You
<SYNC Start=11082149><P class='en'>&nbsp;
<SYNC Start=11082149><P class='en'>have to understand this switch. And then there
is different case statements or default. And
<SYNC Start=11088250><P class='en'>&nbsp;
<SYNC Start=11088250><P class='en'>then inside of the case statement, there might
be a method called and so on. So this really
<SYNC Start=11095300><P class='en'>&nbsp;
<SYNC Start=11095300><P class='en'>complicates the code. Same as with the if
statement. You have to See what is the condition
<SYNC Start=11101970><P class='en'>&nbsp;
<SYNC Start=11101970><P class='en'>for me to enter this blog, ha, then this method
is called, you might click to the method,
<SYNC Start=11108490><P class='en'>&nbsp;
<SYNC Start=11108490><P class='en'>you might want to check here. So this all
makes it more complicated. And actually, this
<SYNC Start=11114850><P class='en'>&nbsp;
<SYNC Start=11114850><P class='en'>is also like a, let&#39;s call it a relic from
the past. This is what we call procedural
<SYNC Start=11120960><P class='en'>&nbsp;
<SYNC Start=11120960><P class='en'>code. Because it&#39;s like a procedure, it&#39;s
like really, this makes you thinking like
<SYNC Start=11129540><P class='en'>&nbsp;
<SYNC Start=11129540><P class='en'>a machine, like a machine would switch a state.
What&#39;s a case this dude that case this do
<SYNC Start=11136670><P class='en'>&nbsp;
<SYNC Start=11136670><P class='en'>that. But humans usually don&#39;t, they don&#39;t
think like this. And the cool thing about
<SYNC Start=11142620><P class='en'>&nbsp;
<SYNC Start=11142620><P class='en'>object oriented programming is that the object
oriented programming is very close to how
<SYNC Start=11147890><P class='en'>&nbsp;
<SYNC Start=11147890><P class='en'>humans think. And this allows you to like
talk to business guys. And this really makes
<SYNC Start=11154260><P class='en'>&nbsp;
<SYNC Start=11154260><P class='en'>your code nice. And switch is not object oriented.
There are some cases, corner cases where you,
<SYNC Start=11156960><P class='en'>&nbsp;
<SYNC Start=11156960><P class='en'>it might just be easy and fast to use it,
but don&#39;t over use it. Really, I mean, there
<SYNC Start=11157960><P class='en'>&nbsp;
<SYNC Start=11157960><P class='en'>are people that would have maybe hundreds
of lines in here, this is just crazy, really
<SYNC Start=11158960><P class='en'>&nbsp;
<SYNC Start=11158960><P class='en'>hard to read. This is also why I had here
method, this is not yet perfect, but still
<SYNC Start=11159960><P class='en'>&nbsp;
<SYNC Start=11159960><P class='en'>better than just having huge switch statements.
There are techniques, for example, just shortly,
<SYNC Start=11160960><P class='en'>&nbsp;
<SYNC Start=11160960><P class='en'>you could have an object representing the
pending state, and an object representing
<SYNC Start=11161960><P class='en'>&nbsp;
<SYNC Start=11161960><P class='en'>the process state and so on. So they are at
once techniques of how to prevent a switch
<SYNC Start=11162960><P class='en'>&nbsp;
<SYNC Start=11162960><P class='en'>statement. And it always depends, like, what&#39;s
better? for very small switch statements?
<SYNC Start=11163960><P class='en'>&nbsp;
<SYNC Start=11163960><P class='en'>It might be okay. Just remember, they are
a bit like evil and should not be overused.
<SYNC Start=11164960><P class='en'>&nbsp;
<SYNC Start=11164960><P class='en'>Okay, I hope I have added enough warnings
of switch. And if statements. This is also
<SYNC Start=11165960><P class='en'>&nbsp;
<SYNC Start=11165960><P class='en'>one reason why I&#39;m only introducing it now.
Because I really want you to become a object
<SYNC Start=11166960><P class='en'>&nbsp;
<SYNC Start=11166960><P class='en'>oriented programmer. I will further continue
talking about the switch statement. So I told
<SYNC Start=11167960><P class='en'>&nbsp;
<SYNC Start=11167960><P class='en'>you that it&#39;s used to iterate over the different
values of enums enums, which are also told
<SYNC Start=11168960><P class='en'>&nbsp;
<SYNC Start=11168960><P class='en'>you were introduced with Java five, um, before
that, the switch statement also existed, but
<SYNC Start=11169960><P class='en'>&nbsp;
<SYNC Start=11169960><P class='en'>you had to emulate enums. And the way this
was done was by using int values. Um, this
<SYNC Start=11170960><P class='en'>&nbsp;
<SYNC Start=11170960><P class='en'>is not so optimal. And this is also why enums
were introduced, because they&#39;re more typesafe.
<SYNC Start=11171960><P class='en'>&nbsp;
<SYNC Start=11171960><P class='en'>And I would also not recommend you to show
to us ins in the switch statement. I think
<SYNC Start=11172960><P class='en'>&nbsp;
<SYNC Start=11172960><P class='en'>I already said that in the last episode. I
even didn&#39;t want to show you but now I realized
<SYNC Start=11173960><P class='en'>&nbsp;
<SYNC Start=11173960><P class='en'>I think I should still show you. Because you
will see it sooner or later. And so that you
<SYNC Start=11174960><P class='en'>&nbsp;
<SYNC Start=11174960><P class='en'>can understand code of others, I will show
you, but just try to avoid it. Um, okay, anyway,
<SYNC Start=11175960><P class='en'>&nbsp;
<SYNC Start=11175960><P class='en'>with that warning, I&#39;ll show you. And now
let&#39;s give it some name. Um, I call it my
<SYNC Start=11176960><P class='en'>&nbsp;
<SYNC Start=11176960><P class='en'>state.
<SYNC Start=11177960><P class='en'>&nbsp;
<SYNC Start=11177960><P class='en'>And now I give it some number 42. I mean,
this is just an example. And could mean whatever.
<SYNC Start=11178960><P class='en'>&nbsp;
<SYNC Start=11178960><P class='en'>And this is already your problem. 42. What
does it mean? Does it mean pending? Does it
<SYNC Start=11179960><P class='en'>&nbsp;
<SYNC Start=11179960><P class='en'>mean processed? How do we know? Well, to make
it a bit better, they then introduce static
<SYNC Start=11180960><P class='en'>&nbsp;
<SYNC Start=11180960><P class='en'>final values, which I&#39;ll do right now also.
So let&#39;s go to the top and on the class level.
<SYNC Start=11181960><P class='en'>&nbsp;
<SYNC Start=11181960><P class='en'>Let&#39;s introduce now this is a method. Let&#39;s
do it here. Private static, final, let&#39;s call
<SYNC Start=11182960><P class='en'>&nbsp;
<SYNC Start=11182960><P class='en'>it processed, processed. Forgot to give it
the type of the primitive type int and this
<SYNC Start=11183960><P class='en'>&nbsp;
<SYNC Start=11183960><P class='en'>is the 42. And we could also have pending
so this is like a trick. But you see this
<SYNC Start=11184960><P class='en'>&nbsp;
<SYNC Start=11184960><P class='en'>is also where a normal use case From. So this
is also why in enums, we usually use the capital
<SYNC Start=11185960><P class='en'>&nbsp;
<SYNC Start=11185960><P class='en'>letters. Okay, because it&#39;s a constant value
that will not be changed. So now I will give
<SYNC Start=11186960><P class='en'>&nbsp;
<SYNC Start=11186960><P class='en'>this the name of pending cross cutting, let&#39;s
call this processing and processed. Now, of
<SYNC Start=11187960><P class='en'>&nbsp;
<SYNC Start=11187960><P class='en'>course, we need different values, that could
be a 40, then this could be a 41. And this
<SYNC Start=11188960><P class='en'>&nbsp;
<SYNC Start=11188960><P class='en'>would be a 42. And now I can copy that, go
back down. And then I can say, my state oops,
<SYNC Start=11189960><P class='en'>&nbsp;
<SYNC Start=11189960><P class='en'>equals pending. And pending now, I think it
was 41. And then I can now switch on the end.
<SYNC Start=11190960><P class='en'>&nbsp;
<SYNC Start=11190960><P class='en'>And now this is funny before depending was
of the logging level. But Java is smart enough
<SYNC Start=11191960><P class='en'>&nbsp;
<SYNC Start=11191960><P class='en'>to realize, now we&#39;re not iterating on the
enum anymore, but on the int and s, we also
<SYNC Start=11192960><P class='en'>&nbsp;
<SYNC Start=11192960><P class='en'>have processed there, as we have named it,
it still works. Of course, I mean, just to
<SYNC Start=11193960><P class='en'>&nbsp;
<SYNC Start=11193960><P class='en'>show you, this is just because we named the
variable the variable. So if we processing
<SYNC Start=11194960><P class='en'>&nbsp;
<SYNC Start=11194960><P class='en'>is not used, called is something then of course,
we will have to use this something below here,
<SYNC Start=11195960><P class='en'>&nbsp;
<SYNC Start=11195960><P class='en'>because now you see pending as red, because
cannot resolve symbol pending. Because we&#39;re
<SYNC Start=11196960><P class='en'>&nbsp;
<SYNC Start=11196960><P class='en'>not on the interim anymore. We only int something,
the problem is that my status an end. So no
<SYNC Start=11197960><P class='en'>&nbsp;
<SYNC Start=11197960><P class='en'>one guarantees us that only these three values
that we want to use are used. anyone at any
<SYNC Start=11198960><P class='en'>&nbsp;
<SYNC Start=11198960><P class='en'>time could say my state equals to 300. And
then it will not be something it will not
<SYNC Start=11199960><P class='en'>&nbsp;
<SYNC Start=11199960><P class='en'>be processed, it will end up in the default.
See. And this is also a reason why here you
<SYNC Start=11200960><P class='en'>&nbsp;
<SYNC Start=11200960><P class='en'>should not have regular code, but throw an
exception instead. Which we&#39;ll talk about
<SYNC Start=11201960><P class='en'>&nbsp;
<SYNC Start=11201960><P class='en'>very soon, I hope. Okay, so anyway, this is
what you can do with an int. And since since
<SYNC Start=11202960><P class='en'>&nbsp;
<SYNC Start=11202960><P class='en'>Java seven, I mean, at the time I&#39;m doing
this video we are, we have Java eight. So
<SYNC Start=11203960><P class='en'>&nbsp;
<SYNC Start=11203960><P class='en'>when they introduce Java seven, you now can
also use strings on my string, give it a name,
<SYNC Start=11204960><P class='en'>&nbsp;
<SYNC Start=11204960><P class='en'>called also my string. Okay, not used yet.
and copy it. And now we can also switch on
<SYNC Start=11205960><P class='en'>&nbsp;
<SYNC Start=11205960><P class='en'>strings. Of course, something doesn&#39;t work
because it&#39;s not a string, it&#39;s an int. So
<SYNC Start=11206960><P class='en'>&nbsp;
<SYNC Start=11206960><P class='en'>now, I can of course start to use. Well, for
example, the empty string or a blank string.
<SYNC Start=11207960><P class='en'>&nbsp;
<SYNC Start=11207960><P class='en'>I can use, again, something in lowercase letters.
And of course, here also I can do a column
<SYNC Start=11208960><P class='en'>&nbsp;
<SYNC Start=11208960><P class='en'>labels, which then of course, are private,
static, final string. And now I call it I
<SYNC Start=11209960><P class='en'>&nbsp;
<SYNC Start=11209960><P class='en'>don&#39;t know. I haven&#39;t used pending because
here of change it to something.
<SYNC Start=11210960><P class='en'>&nbsp;
<SYNC Start=11210960><P class='en'>And I will call this pending. But it could
also be any anything any string 42 Yeah, whatever.
<SYNC Start=11211960><P class='en'>&nbsp;
<SYNC Start=11211960><P class='en'>So of course, using that label, I&#39;m only using
one now I think you got the point on too far.
<SYNC Start=11212960><P class='en'>&nbsp;
<SYNC Start=11212960><P class='en'>Okay, so now, that label I can also use pending
in here. Um, you might remember from the last
<SYNC Start=11213960><P class='en'>&nbsp;
<SYNC Start=11213960><P class='en'>session I talked about the fall through, which
is you don&#39;t have a brief statement here.
<SYNC Start=11214960><P class='en'>&nbsp;
<SYNC Start=11214960><P class='en'>So if it&#39;s this case statement will be the
same one as that statement, which will both
<SYNC Start=11215960><P class='en'>&nbsp;
<SYNC Start=11215960><P class='en'>then call this method and then break is called,
which will leave the switch statement. So
<SYNC Start=11216960><P class='en'>&nbsp;
<SYNC Start=11216960><P class='en'>the court will continue online 122. The default
is at the end. It could also by the way, be
<SYNC Start=11217960><P class='en'>&nbsp;
<SYNC Start=11217960><P class='en'>anywhere else. For example at the top which
would not be also a full Through. So if it&#39;s
<SYNC Start=11218960><P class='en'>&nbsp;
<SYNC Start=11218960><P class='en'>not pending or something, or pending is, I
don&#39;t even know anymore what we put there,
<SYNC Start=11219960><P class='en'>&nbsp;
<SYNC Start=11219960><P class='en'>I think it was 42. So, in this case, all the
threes different cases would call a method,
<SYNC Start=11220960><P class='en'>&nbsp;
<SYNC Start=11220960><P class='en'>which he or we could have some other method.
As always, I&#39;m not going to implement the
<SYNC Start=11221960><P class='en'>&nbsp;
<SYNC Start=11221960><P class='en'>method. And then we could say break so that
for the default, just this method would be
<SYNC Start=11222960><P class='en'>&nbsp;
<SYNC Start=11222960><P class='en'>called. And then we would end up here, leaving
the statement and ending in Wait, where&#39;s,
<SYNC Start=11223960><P class='en'>&nbsp;
<SYNC Start=11223960><P class='en'>see, if I put my cursor at the beginning of
the switch statement of the curly brace, I
<SYNC Start=11224960><P class='en'>&nbsp;
<SYNC Start=11224960><P class='en'>don&#39;t really see it ends up here. Because
if you have a method, and this is also a reason
<SYNC Start=11225960><P class='en'>&nbsp;
<SYNC Start=11225960><P class='en'>why you should keep your methods very short.
You see, the method seems to go until line
<SYNC Start=11226960><P class='en'>&nbsp;
<SYNC Start=11226960><P class='en'>141. And this method now got so big, that
it&#39;s really hard to see where it starts and
<SYNC Start=11227960><P class='en'>&nbsp;
<SYNC Start=11227960><P class='en'>where it ends. So yeah, I can&#39;t say it often
enough, keep your methods short, I would really
<SYNC Start=11228960><P class='en'>&nbsp;
<SYNC Start=11228960><P class='en'>keep them at one to 10 lines at most. I&#39;m,
I&#39;m really happy. If I&#39;m able to keep them
<SYNC Start=11229960><P class='en'>&nbsp;
<SYNC Start=11229960><P class='en'>at one to three lines. Some say I&#39;m really
on my might be too strict on that. But you
<SYNC Start=11230960><P class='en'>&nbsp;
<SYNC Start=11230960><P class='en'>will very soon see the fruits of your methods
are, the easier it is to understand them.
<SYNC Start=11231960><P class='en'>&nbsp;
<SYNC Start=11231960><P class='en'>And also, the easier it will be to reuse them.
Yeah. Okay. But now back to the topic of the
<SYNC Start=11232960><P class='en'>&nbsp;
<SYNC Start=11232960><P class='en'>switch statement. So you can use it with strings.
As of Java seven, you can use it with enums,
<SYNC Start=11233960><P class='en'>&nbsp;
<SYNC Start=11233960><P class='en'>like I showed you in the last episode, you
can use it with ins and any other number types.
<SYNC Start=11234960><P class='en'>&nbsp;
<SYNC Start=11234960><P class='en'>So far, I&#39;ve only showed you int. I&#39;m actually
there are others. I&#39;m not sure if I should
<SYNC Start=11235960><P class='en'>&nbsp;
<SYNC Start=11235960><P class='en'>really talk about the others, because they&#39;re
hardly ever used. They&#39;ve just the range of
<SYNC Start=11236960><P class='en'>&nbsp;
<SYNC Start=11236960><P class='en'>the number ranges just a bit smaller. In 99%
of the cases you would use it because I mean,
<SYNC Start=11237960><P class='en'>&nbsp;
<SYNC Start=11237960><P class='en'>it doesn&#39;t really matter these days. how large
the ranges. So it is always fine. I mean,
<SYNC Start=11238960><P class='en'>&nbsp;
<SYNC Start=11238960><P class='en'>not but maybe I still show you. For example,
this could be a bite. But now this is already
<SYNC Start=11239960><P class='en'>&nbsp;
<SYNC Start=11239960><P class='en'>not working anymore. Why is it because I have
changed it on the string. Let&#39;s fix that.
<SYNC Start=11240960><P class='en'>&nbsp;
<SYNC Start=11240960><P class='en'>So the bite here. This is just smaller than
the end. For example, if you put 3000 here,
<SYNC Start=11241960><P class='en'>&nbsp;
<SYNC Start=11241960><P class='en'>it says this is incompatible, because it&#39;s
an int because it&#39;s too small. Um, yeah, but
<SYNC Start=11242960><P class='en'>&nbsp;
<SYNC Start=11242960><P class='en'>the three works. But I really don&#39;t want to
go further in details. If you&#39;re interested,
<SYNC Start=11243960><P class='en'>&nbsp;
<SYNC Start=11243960><P class='en'>you can also read this on the internet. Because
all you really need encode in 99% of the cases
<SYNC Start=11244960><P class='en'>&nbsp;
<SYNC Start=11244960><P class='en'>is the end. So okay, I think this pretty much
rounds up the switch statement.
<SYNC Start=11245960><P class='en'>&nbsp;
<SYNC Start=11245960><P class='en'>So you can use it with a string and an int
Oh, there&#39;s one data type, which I might show
<SYNC Start=11246960><P class='en'>&nbsp;
<SYNC Start=11246960><P class='en'>you. That&#39;s also interesting. And this is
a car. A car is a string of a length of one,
<SYNC Start=11247960><P class='en'>&nbsp;
<SYNC Start=11247960><P class='en'>while it&#39;s not a string, but it&#39;s very similar.
So it uses these single quotes instead of
<SYNC Start=11248960><P class='en'>&nbsp;
<SYNC Start=11248960><P class='en'>the double quotes. So if I&#39;m using the double
quotes, it&#39;s automatically a string. And this
<SYNC Start=11249960><P class='en'>&nbsp;
<SYNC Start=11249960><P class='en'>doesn&#39;t work anymore. Here it says incompatible
types required car found string with a single
<SYNC Start=11250960><P class='en'>&nbsp;
<SYNC Start=11250960><P class='en'>quotes, it&#39;s a car. So it&#39;s a character of
length one one single character. Of course,
<SYNC Start=11251960><P class='en'>&nbsp;
<SYNC Start=11251960><P class='en'>it could also be a or b. But it cannot be
longer than one character. Because then it&#39;s
<SYNC Start=11252960><P class='en'>&nbsp;
<SYNC Start=11252960><P class='en'>not a character anymore. Too many characters
in character literal. Okay, so we can also
<SYNC Start=11253960><P class='en'>&nbsp;
<SYNC Start=11253960><P class='en'>iterate over characters. This sometimes might
be interesting. if you for example, parsing
<SYNC Start=11254960><P class='en'>&nbsp;
<SYNC Start=11254960><P class='en'>a string or what is parsing it&#39;s have a string
five string equals something. And now you
<SYNC Start=11255960><P class='en'>&nbsp;
<SYNC Start=11255960><P class='en'>can take each single character, because a
string is actually a combination of several
<SYNC Start=11256960><P class='en'>&nbsp;
<SYNC Start=11256960><P class='en'>characters. And then you can iterate over
each character. And then you can switch over
<SYNC Start=11257960><P class='en'>&nbsp;
<SYNC Start=11257960><P class='en'>this. Um, yeah. This you might need at a later
time. So I&#39;ve also introduced car now and
<SYNC Start=11258960><P class='en'>&nbsp;
<SYNC Start=11258960><P class='en'>told you there are other number types. I would
like to introduce you to logging. Well, actually,
<SYNC Start=11259960><P class='en'>&nbsp;
<SYNC Start=11259960><P class='en'>what is logging?
<SYNC Start=11260960><P class='en'>&nbsp;
<SYNC Start=11260960><P class='en'>Hmm.
<SYNC Start=11261960><P class='en'>&nbsp;
<SYNC Start=11261960><P class='en'>Well, first of all, let&#39;s tell you what my
idea is. I have prepared this little test
<SYNC Start=11262960><P class='en'>&nbsp;
<SYNC Start=11262960><P class='en'>here. I have prepared a little class car service.
I wanted to process this string, BMW, or Beamer.
<SYNC Start=11263960><P class='en'>&nbsp;
<SYNC Start=11263960><P class='en'>And in the class, this class so far is empty.
My idea is I want to be notified in some way,
<SYNC Start=11264960><P class='en'>&nbsp;
<SYNC Start=11264960><P class='en'>like a print out on the console into a file,
that database or maybe even an email or something.
<SYNC Start=11265960><P class='en'>&nbsp;
<SYNC Start=11265960><P class='en'>So I want to be notified in some way I want
to monitor if someone calls this method, so
<SYNC Start=11266960><P class='en'>&nbsp;
<SYNC Start=11266960><P class='en'>that I, like later on, can go through all
the course and can see if something happened.
<SYNC Start=11267960><P class='en'>&nbsp;
<SYNC Start=11267960><P class='en'>For example, if my system was hacked, I could
go through a file and see what time what happened.
<SYNC Start=11268960><P class='en'>&nbsp;
<SYNC Start=11268960><P class='en'>And then yeah, analyze it. So that&#39;s the idea.
And the way this is done, is by logging. So
<SYNC Start=11269960><P class='en'>&nbsp;
<SYNC Start=11269960><P class='en'>actually, logging for me this word was a bit
weird. So I looked it up. Wikipedia is your
<SYNC Start=11270960><P class='en'>&nbsp;
<SYNC Start=11270960><P class='en'>friend. So let&#39;s do this. So logging is called
logging for a ship&#39;s logbook. A logbook? Is
<SYNC Start=11271960><P class='en'>&nbsp;
<SYNC Start=11271960><P class='en'>this thing here, you know, of ancient times
when the captain in his cabin was making plans,
<SYNC Start=11272960><P class='en'>&nbsp;
<SYNC Start=11272960><P class='en'>and was writing down at what time he was at
which place and what speed the ship was going
<SYNC Start=11273960><P class='en'>&nbsp;
<SYNC Start=11273960><P class='en'>in that direction. So this is a logbook. So
this is already like monitoring the state
<SYNC Start=11274960><P class='en'>&nbsp;
<SYNC Start=11274960><P class='en'>of the ship. And but still I was asking, why
is the logbook called logbook. While this
<SYNC Start=11275960><P class='en'>&nbsp;
<SYNC Start=11275960><P class='en'>article here have a read just very fast going
through it says it. The term originally referred
<SYNC Start=11276960><P class='en'>&nbsp;
<SYNC Start=11276960><P class='en'>to a book for recording readings from the
ship lock. So what is a chip lock, let&#39;s click
<SYNC Start=11277960><P class='en'>&nbsp;
<SYNC Start=11277960><P class='en'>and ship block, also called common lock shaped
lock or just lock is a navigation tool for
<SYNC Start=11278960><P class='en'>&nbsp;
<SYNC Start=11278960><P class='en'>marinas used to estimate the speed of a vessel
through water. Interesting, so there&#39;s also
<SYNC Start=11279960><P class='en'>&nbsp;
<SYNC Start=11279960><P class='en'>an image. So this thing here is the shape
lock from the end of the ship. And here&#39;s
<SYNC Start=11280960><P class='en'>&nbsp;
<SYNC Start=11280960><P class='en'>even a picture they were throwing out the
ship luck and in equal distances they were
<SYNC Start=11281960><P class='en'>&nbsp;
<SYNC Start=11281960><P class='en'>not in this line in this long line and the
faster the boat goes the faster Of course,
<SYNC Start=11282960><P class='en'>&nbsp;
<SYNC Start=11282960><P class='en'>this chip block is taken away. And by measuring
the time they could measure the speed and
<SYNC Start=11283960><P class='en'>&nbsp;
<SYNC Start=11283960><P class='en'>this was done given by knots. So this is still
why speed of a ship is given in knots even
<SYNC Start=11284960><P class='en'>&nbsp;
<SYNC Start=11284960><P class='en'>today. So here it says ship log and associated
kit, the real of lock line is clearly seen.
<SYNC Start=11285960><P class='en'>&nbsp;
<SYNC Start=11285960><P class='en'>So it seems I don&#39;t know this, but I just
guess it that it&#39;s called lock, because this
<SYNC Start=11286960><P class='en'>&nbsp;
<SYNC Start=11286960><P class='en'>really looks like a lock, like, like a three
strong because it&#39;s this huge block. So I
<SYNC Start=11287960><P class='en'>&nbsp;
<SYNC Start=11287960><P class='en'>would guess that this is why it&#39;s called lock.
So, this is why the ship lock is called ship
<SYNC Start=11288960><P class='en'>&nbsp;
<SYNC Start=11288960><P class='en'>lock. And this is why the act of doing like
writing something into the lock is called
<SYNC Start=11289960><P class='en'>&nbsp;
<SYNC Start=11289960><P class='en'>logging. And as a programmer, you can think
of yourself of like the captain of the code.
<SYNC Start=11290960><P class='en'>&nbsp;
<SYNC Start=11290960><P class='en'>And as such when you want to write on events
that happen while your program is running,
<SYNC Start=11291960><P class='en'>&nbsp;
<SYNC Start=11291960><P class='en'>you are logging and this is what we are going
to do today. So how is logging done in 2015
<SYNC Start=11292960><P class='en'>&nbsp;
<SYNC Start=11292960><P class='en'>and 15 Well, currently you would use SL for
J. This is a framework for logging. I mean,
<SYNC Start=11293960><P class='en'>&nbsp;
<SYNC Start=11293960><P class='en'>of course, you could write your own logging.
But this is a lot of work to make it
<SYNC Start=11294960><P class='en'>&nbsp;
<SYNC Start=11294960><P class='en'>work properly. And this has been done already
for you. You can just use this framework.
<SYNC Start=11295960><P class='en'>&nbsp;
<SYNC Start=11295960><P class='en'>Well, actually, this is only for Sade, well,
FSH is a design pattern that we haven&#39;t talked
<SYNC Start=11296960><P class='en'>&nbsp;
<SYNC Start=11296960><P class='en'>about. So two, we could say it like, allows
you to use here is how it&#39;s used. you import
<SYNC Start=11297960><P class='en'>&nbsp;
<SYNC Start=11297960><P class='en'>the code, Ork SL for j logger and logger factory.
And then, within your code, you say logger,
<SYNC Start=11298960><P class='en'>&nbsp;
<SYNC Start=11298960><P class='en'>logger, logger, factory, get logger. give
it the name of the class. And you can use
<SYNC Start=11299960><P class='en'>&nbsp;
<SYNC Start=11299960><P class='en'>it with different implementation of logging.
Because for many, many years, the most prominent
<SYNC Start=11300960><P class='en'>&nbsp;
<SYNC Start=11300960><P class='en'>logging framework was log for J. Well, this
has changed. At the moment, you should probably
<SYNC Start=11301960><P class='en'>&nbsp;
<SYNC Start=11301960><P class='en'>better use lockback because it&#39;s a more powerful,
and it&#39;s author is I don&#39;t can&#39;t pronounce
<SYNC Start=11302960><P class='en'>&nbsp;
<SYNC Start=11302960><P class='en'>it properly. But I try shakey Goku, and this
is the same guy that actually implemented
<SYNC Start=11303960><P class='en'>&nbsp;
<SYNC Start=11303960><P class='en'>love for J. So he continued with lockback,
because he wanted to make logging even better.
<SYNC Start=11304960><P class='en'>&nbsp;
<SYNC Start=11304960><P class='en'>So today, therefore, we use SL for j in combination
with lockback. Because using this sl for j
<SYNC Start=11305960><P class='en'>&nbsp;
<SYNC Start=11305960><P class='en'>visade. will allow us at a later time, if
there is a new logging framework introduced
<SYNC Start=11306960><P class='en'>&nbsp;
<SYNC Start=11306960><P class='en'>that is even better than lockback, we can
easily each switch to the new framework without
<SYNC Start=11307960><P class='en'>&nbsp;
<SYNC Start=11307960><P class='en'>having to change the code. Because the code
doesn&#39;t use the code of lock bag. It uses
<SYNC Start=11308960><P class='en'>&nbsp;
<SYNC Start=11308960><P class='en'>SL for J. So how is this done? Let&#39;s jump
into the code. Okay, so first of all, I told
<SYNC Start=11309960><P class='en'>&nbsp;
<SYNC Start=11309960><P class='en'>you, I&#39;m using Maven for the configuration
of the dependencies. So here I&#39;ve configured
<SYNC Start=11310960><P class='en'>&nbsp;
<SYNC Start=11310960><P class='en'>to use the dependency org. So for j, and lockback,
classic. This is actually the implementation
<SYNC Start=11311960><P class='en'>&nbsp;
<SYNC Start=11311960><P class='en'>of SL for J. And this is the core code of
lockback. So you need these three dependencies
<SYNC Start=11312960><P class='en'>&nbsp;
<SYNC Start=11312960><P class='en'>to get logging in your code. Okay. And then
you should also have in source main resources,
<SYNC Start=11313960><P class='en'>&nbsp;
<SYNC Start=11313960><P class='en'>our file called lockback, dot XML. Here, you
can define different things. Well, first of
<SYNC Start=11314960><P class='en'>&nbsp;
<SYNC Start=11314960><P class='en'>all, you can say, how should you lock where
should you lock, in my case, I say, with giving
<SYNC Start=11315960><P class='en'>&nbsp;
<SYNC Start=11315960><P class='en'>this class console appender, that will result
that my code is locked to the console directly.
<SYNC Start=11316960><P class='en'>&nbsp;
<SYNC Start=11316960><P class='en'>There are also other appenders, or other implementations
for logging. So we can also look to the file
<SYNC Start=11317960><P class='en'>&nbsp;
<SYNC Start=11317960><P class='en'>to the database, to email. And if there&#39;s
something you want to have locked to that
<SYNC Start=11318960><P class='en'>&nbsp;
<SYNC Start=11318960><P class='en'>doesn&#39;t exist. You can also implement your
own implementation, like I don&#39;t know, maybe
<SYNC Start=11319960><P class='en'>&nbsp;
<SYNC Start=11319960><P class='en'>like logging into Twitter in some way, if
that makes sense to you. Okay, and this is
<SYNC Start=11320960><P class='en'>&nbsp;
<SYNC Start=11320960><P class='en'>the pattern, how, when a message is written,
in this case, to the console, it should look
<SYNC Start=11321960><P class='en'>&nbsp;
<SYNC Start=11321960><P class='en'>like so the patterns has, I mean, you have
to read the documentation for details, but
<SYNC Start=11322960><P class='en'>&nbsp;
<SYNC Start=11322960><P class='en'>it&#39;s like, give me the time when this event
occurred, the threat the logging level, because
<SYNC Start=11323960><P class='en'>&nbsp;
<SYNC Start=11323960><P class='en'>the logging level is like a mechanism. It&#39;s
like a grouping mechanism. You can have different
<SYNC Start=11324960><P class='en'>&nbsp;
<SYNC Start=11324960><P class='en'>levels of logging. This is like a signal of
the severity of the problem. Because debug
<SYNC Start=11325960><P class='en'>&nbsp;
<SYNC Start=11325960><P class='en'>is probably for debugging purposes, use that
sparsely.
<SYNC Start=11326960><P class='en'>&nbsp;
<SYNC Start=11326960><P class='en'>Then there is a logging level info and error.
So error you would use if there is an error
<SYNC Start=11327960><P class='en'>&nbsp;
<SYNC Start=11327960><P class='en'>in your code, info for general information,
and debug, just for you know, some debug information.
<SYNC Start=11328960><P class='en'>&nbsp;
<SYNC Start=11328960><P class='en'>But this really should be used partly because
for debugging. You can also use a debugger,
<SYNC Start=11329960><P class='en'>&nbsp;
<SYNC Start=11329960><P class='en'>like in your ID, or we haven&#39;t talked about
debuggers either. But yeah, just for now.
<SYNC Start=11330960><P class='en'>&nbsp;
<SYNC Start=11330960><P class='en'>Now there are different levels. So, in your
code, you can then say, I want to lock this
<SYNC Start=11331960><P class='en'>&nbsp;
<SYNC Start=11331960><P class='en'>on level debug. And here I have defined the
package name. And I say here, this, when I&#39;m
<SYNC Start=11332960><P class='en'>&nbsp;
<SYNC Start=11332960><P class='en'>when there&#39;s some logging of a class that
is of this package, then I want to log it,
<SYNC Start=11333960><P class='en'>&nbsp;
<SYNC Start=11333960><P class='en'>if it&#39;s debug, I could to also put your error,
that would mean only if it&#39;s an error, log
<SYNC Start=11334960><P class='en'>&nbsp;
<SYNC Start=11334960><P class='en'>it. Or I could put here info, that would mean
only login, if it&#39;s info. info, of course,
<SYNC Start=11335960><P class='en'>&nbsp;
<SYNC Start=11335960><P class='en'>also, it would include arrows, because this
is like more. So debug includes all includes
<SYNC Start=11336960><P class='en'>&nbsp;
<SYNC Start=11336960><P class='en'>debug, info and error, but error would only
log messages that are locked on level error.
<SYNC Start=11337960><P class='en'>&nbsp;
<SYNC Start=11337960><P class='en'>So you see, this is really makes it more flexible.
And you can even have here different loggers
<SYNC Start=11338960><P class='en'>&nbsp;
<SYNC Start=11338960><P class='en'>for different packages. So we could also copy
this and, like have here a different package
<SYNC Start=11339960><P class='en'>&nbsp;
<SYNC Start=11339960><P class='en'>like Java course two, and so on. And we could
then have this on the one on debug and the
<SYNC Start=11340960><P class='en'>&nbsp;
<SYNC Start=11340960><P class='en'>other one on error. So this is really flexible
and can be changed. And here, this is the
<SYNC Start=11341960><P class='en'>&nbsp;
<SYNC Start=11341960><P class='en'>root level. So like, generally lock on info
level just for this package. Log on debug
<SYNC Start=11342960><P class='en'>&nbsp;
<SYNC Start=11342960><P class='en'>level, this is what it means. Okay, this was
only very short. There&#39;s much more information,
<SYNC Start=11343960><P class='en'>&nbsp;
<SYNC Start=11343960><P class='en'>of course, on the internet. But first of all,
maybe a week go to our test. And we add the
<SYNC Start=11344960><P class='en'>&nbsp;
<SYNC Start=11344960><P class='en'>login details here into car service, I put
it. So first of all, I need to import a few.
<SYNC Start=11345960><P class='en'>&nbsp;
<SYNC Start=11345960><P class='en'>Like we saw just before in the documentation
here you see my ID, he already helps me SL
<SYNC Start=11346960><P class='en'>&nbsp;
<SYNC Start=11346960><P class='en'>for j because I said we want to import only
SL for j and SL for j by itselves. knows that
<SYNC Start=11347960><P class='en'>&nbsp;
<SYNC Start=11347960><P class='en'>it should be used, I should use lockback because
it will find the dependency of log back classic.
<SYNC Start=11348960><P class='en'>&nbsp;
<SYNC Start=11348960><P class='en'>This one here. So SL for j is really smart.
So we don&#39;t have to tell it. Okay, so we say
<SYNC Start=11349960><P class='en'>&nbsp;
<SYNC Start=11349960><P class='en'>SL for j lager and we say import org SL for
j.no. Just one dot logger factory. Okay, a
<SYNC Start=11350960><P class='en'>&nbsp;
<SYNC Start=11350960><P class='en'>factory, by the way, is another design pattern.
At a later time, I will also do probably a
<SYNC Start=11351960><P class='en'>&nbsp;
<SYNC Start=11351960><P class='en'>course, only on design patterns. design patterns
are like best practices on how you should
<SYNC Start=11352960><P class='en'>&nbsp;
<SYNC Start=11352960><P class='en'>program code. And when you know what a factory
is, you will directly know what this thing
<SYNC Start=11353960><P class='en'>&nbsp;
<SYNC Start=11353960><P class='en'>he does. Okay, more about design patterns
at a later time. Anyway, this is what we have
<SYNC Start=11354960><P class='en'>&nbsp;
<SYNC Start=11354960><P class='en'>to do. And now in our class, we would probably
say private final lager. Let&#39;s call it log,
<SYNC Start=11355960><P class='en'>&nbsp;
<SYNC Start=11355960><P class='en'>because it&#39;s all log. And then we say logger
factory. Get logger. So what this factory
<SYNC Start=11356960><P class='en'>&nbsp;
<SYNC Start=11356960><P class='en'>does like a factory. This is why it&#39;s called
a factory. It gives us a logger. And we don&#39;t
<SYNC Start=11357960><P class='en'>&nbsp;
<SYNC Start=11357960><P class='en'>know how is it created on the fly is a longer
reused, this is a smart thing and does all
<SYNC Start=11358960><P class='en'>&nbsp;
<SYNC Start=11358960><P class='en'>the necessary work for us. Now, we should
still give it the name of this class. Because
<SYNC Start=11359960><P class='en'>&nbsp;
<SYNC Start=11359960><P class='en'>this will be used car service class. That
sorry, in our log back XML XML file which
<SYNC Start=11360960><P class='en'>&nbsp;
<SYNC Start=11360960><P class='en'>is in source main resources. As I showed you,
I mean, here we have a package, but we can
<SYNC Start=11361960><P class='en'>&nbsp;
<SYNC Start=11361960><P class='en'>even extend that and lock only for specific
classes.
<SYNC Start=11362960><P class='en'>&nbsp;
<SYNC Start=11362960><P class='en'>So this is the test and this is the service.
Okay, so this is how you generally find a
<SYNC Start=11363960><P class='en'>&nbsp;
<SYNC Start=11363960><P class='en'>logger. Now, in here, you can now use it log.
Well actually, it&#39;s not static. I might just
<SYNC Start=11364960><P class='en'>&nbsp;
<SYNC Start=11364960><P class='en'>as well have this in lowercase log dot and
in former times, like With log for j, some
<SYNC Start=11365960><P class='en'>&nbsp;
<SYNC Start=11365960><P class='en'>of you might know it, you would usually say
like this is debug enabled. If it&#39;s debug
<SYNC Start=11366960><P class='en'>&nbsp;
<SYNC Start=11366960><P class='en'>enabled, only then log something, log dot
debug. And now I could say, processing, car
<SYNC Start=11367960><P class='en'>&nbsp;
<SYNC Start=11367960><P class='en'>plus input. So the input given in our case,
BMW, this will create a string, and then this
<SYNC Start=11368960><P class='en'>&nbsp;
<SYNC Start=11368960><P class='en'>will be concatenated. together. And all this
will be locked, if the debug level isn&#39;t able,
<SYNC Start=11369960><P class='en'>&nbsp;
<SYNC Start=11369960><P class='en'>at the time when the code runs, which at the
moment, as far as I remember, it is. So we
<SYNC Start=11370960><P class='en'>&nbsp;
<SYNC Start=11370960><P class='en'>can activate and deactivate this. The reason
why we need this line, I mean, we could also
<SYNC Start=11371960><P class='en'>&nbsp;
<SYNC Start=11371960><P class='en'>do it without just like this. But this is
not so good. I mean, in case of a string,
<SYNC Start=11372960><P class='en'>&nbsp;
<SYNC Start=11372960><P class='en'>it&#39;s not so bad. I mean, all that would happen
is this string, and that string would be put
<SYNC Start=11373960><P class='en'>&nbsp;
<SYNC Start=11373960><P class='en'>together. But you mentioned the string could
be really of in almost infinitive lengths.
<SYNC Start=11374960><P class='en'>&nbsp;
<SYNC Start=11374960><P class='en'>So Java in the background for you, this concatenation
might take a lot of time, especially if we
<SYNC Start=11375960><P class='en'>&nbsp;
<SYNC Start=11375960><P class='en'>have some very big object here, that might
internally consists of other objects, and
<SYNC Start=11376960><P class='en'>&nbsp;
<SYNC Start=11376960><P class='en'>so on. So this creation of a string, as stupid
as this might sound can take a lot of time.
<SYNC Start=11377960><P class='en'>&nbsp;
<SYNC Start=11377960><P class='en'>And, of course, I mean, here, we just have
a very stupid small program with just one
<SYNC Start=11378960><P class='en'>&nbsp;
<SYNC Start=11378960><P class='en'>debug line. But of course, you would log maybe
not on debug, but on info or something, or
<SYNC Start=11379960><P class='en'>&nbsp;
<SYNC Start=11379960><P class='en'>error, maybe a lot of stuff in your application.
And like, you could think of 1000s users concurrently
<SYNC Start=11380960><P class='en'>&nbsp;
<SYNC Start=11380960><P class='en'>calling this method. And then if this only
takes, like, I don&#39;t know, 200 milliseconds,
<SYNC Start=11381960><P class='en'>&nbsp;
<SYNC Start=11381960><P class='en'>200 milliseconds might not seem a lot of time.
But if this is done 1000s of times, then this
<SYNC Start=11382960><P class='en'>&nbsp;
<SYNC Start=11382960><P class='en'>can really consume a lot of performance of
your server or PC. And so we would only like
<SYNC Start=11383960><P class='en'>&nbsp;
<SYNC Start=11383960><P class='en'>to concatenate the string, prepare the string
for logging, if this will actually be logged,
<SYNC Start=11384960><P class='en'>&nbsp;
<SYNC Start=11384960><P class='en'>because if we say log info, but then the logging
framework finds out, well, this does not have
<SYNC Start=11385960><P class='en'>&nbsp;
<SYNC Start=11385960><P class='en'>to be locked, it would have to throw away
all the strings that were concatenated. So
<SYNC Start=11386960><P class='en'>&nbsp;
<SYNC Start=11386960><P class='en'>we had done this without any need. And so
this we would want to prevent. And this is
<SYNC Start=11387960><P class='en'>&nbsp;
<SYNC Start=11387960><P class='en'>why in lock for j, you would do it like is
debug enable debug. Or you can also say is
<SYNC Start=11388960><P class='en'>&nbsp;
<SYNC Start=11388960><P class='en'>info enabled is error enabled, and so on,
is info enabled. Now it&#39;s locked for j and
<SYNC Start=11389960><P class='en'>&nbsp;
<SYNC Start=11389960><P class='en'>SL for j However, there&#39;s actually even a
smarter way. Because you see, this was three
<SYNC Start=11390960><P class='en'>&nbsp;
<SYNC Start=11390960><P class='en'>lines of code. And this is you can put here,
these curly braces. And then you don&#39;t have
<SYNC Start=11391960><P class='en'>&nbsp;
<SYNC Start=11391960><P class='en'>to say plus, but you say comma. So within
the framework, the framework decides, well,
<SYNC Start=11392960><P class='en'>&nbsp;
<SYNC Start=11392960><P class='en'>the user in this case, this would be us wants
to log on debug, first of all check is debug
<SYNC Start=11393960><P class='en'>&nbsp;
<SYNC Start=11393960><P class='en'>enabled for this class. And if so, only then
take this input converted to a string if it&#39;s
<SYNC Start=11394960><P class='en'>&nbsp;
<SYNC Start=11394960><P class='en'>not a string already, and only then concatenate
this string with this string. So this is really
<SYNC Start=11395960><P class='en'>&nbsp;
<SYNC Start=11395960><P class='en'>a smart thing now. Okay, so another enough
of talking. Let&#39;s try this out. Okay, let&#39;s
<SYNC Start=11396960><P class='en'>&nbsp;
<SYNC Start=11396960><P class='en'>check. We have the input given from the process
method. And we want to say processing car,
<SYNC Start=11397960><P class='en'>&nbsp;
<SYNC Start=11397960><P class='en'>and then in our test,
<SYNC Start=11398960><P class='en'>&nbsp;
<SYNC Start=11398960><P class='en'>we put here BMW or Beemer. Okay, so let&#39;s
also recheck our configuration file, log back
<SYNC Start=11399960><P class='en'>&nbsp;
<SYNC Start=11399960><P class='en'>XML. We said comarca spiele. java course,
level is debug and the root level is info.
<SYNC Start=11400960><P class='en'>&nbsp;
<SYNC Start=11400960><P class='en'>So if we no log on debug, within this package,
and comarca spiele Java course this is the
<SYNC Start=11401960><P class='en'>&nbsp;
<SYNC Start=11401960><P class='en'>package. This means we should log it. Okay,
let&#39;s run the test.
<SYNC Start=11402960><P class='en'>&nbsp;
<SYNC Start=11402960><P class='en'>Okay, so something happened. Process finished
with exit code zero. And here you see
<SYNC Start=11403960><P class='en'>&nbsp;
<SYNC Start=11403960><P class='en'>at this time, which is now on level debug
from this class from this package car service,
<SYNC Start=11404960><P class='en'>&nbsp;
<SYNC Start=11404960><P class='en'>we wrote processing car column BMW. So this
was logged. Okay. Now, let&#39;s try to deactivate
<SYNC Start=11405960><P class='en'>&nbsp;
<SYNC Start=11405960><P class='en'>it. Let&#39;s say we only want to log on error
level for this package. Let&#39;s execute it again.
<SYNC Start=11406960><P class='en'>&nbsp;
<SYNC Start=11406960><P class='en'>Run. Process finished. On top, this is all
information from lockback. When it gets configured?
<SYNC Start=11407960><P class='en'>&nbsp;
<SYNC Start=11407960><P class='en'>Well, you see there is no BMW locked. Okay,
let&#39;s change that. We could say the root level
<SYNC Start=11408960><P class='en'>&nbsp;
<SYNC Start=11408960><P class='en'>is debug. And we could say or, let&#39;s have
this on, let&#39;s have this on debug. And now
<SYNC Start=11409960><P class='en'>&nbsp;
<SYNC Start=11409960><P class='en'>let&#39;s change the package. For example, Java
course two. Well, we&#39;re not in Java course
<SYNC Start=11410960><P class='en'>&nbsp;
<SYNC Start=11410960><P class='en'>too. But we are in the package called Marco
spiele Java course, which means we should
<SYNC Start=11411960><P class='en'>&nbsp;
<SYNC Start=11411960><P class='en'>log on the root level, which is debug. So
I would expect the test to log again. Let&#39;s
<SYNC Start=11412960><P class='en'>&nbsp;
<SYNC Start=11412960><P class='en'>try it run. And there you see it already.
debug, call marks will Java course card service,
<SYNC Start=11413960><P class='en'>&nbsp;
<SYNC Start=11413960><P class='en'>processing car BMW. So this seems to be working.
Okay. And here, again, you see the pattern.
<SYNC Start=11414960><P class='en'>&nbsp;
<SYNC Start=11414960><P class='en'>This is what&#39;s compared. Here, we have the
minus that we have set here, minus and then
<SYNC Start=11415960><P class='en'>&nbsp;
<SYNC Start=11415960><P class='en'>the message, and then this n, I think this
is for new line, so that when there&#39;s the
<SYNC Start=11416960><P class='en'>&nbsp;
<SYNC Start=11416960><P class='en'>next lowing a new line will be attached. Okay.
And this is the console appender. So this
<SYNC Start=11417960><P class='en'>&nbsp;
<SYNC Start=11417960><P class='en'>is the console that we can see here, in our
ID, if you would run this from the console
<SYNC Start=11418960><P class='en'>&nbsp;
<SYNC Start=11418960><P class='en'>with like, for example, a terminal here, you
would only see it within the terminal. Okay.
<SYNC Start=11419960><P class='en'>&nbsp;
<SYNC Start=11419960><P class='en'>So let&#39;s maybe go back to the documentation,
and check this a bit more. Okay, so here,
<SYNC Start=11420960><P class='en'>&nbsp;
<SYNC Start=11420960><P class='en'>you see, and you should really use read it.
Now, I&#39;m just really fast going through it,
<SYNC Start=11421960><P class='en'>&nbsp;
<SYNC Start=11421960><P class='en'>you can read it typical usage pattern for
this is pretty much what we did. And here
<SYNC Start=11422960><P class='en'>&nbsp;
<SYNC Start=11422960><P class='en'>with the curly braces, we locked on debug.
Well, we could also change maybe, after reading
<SYNC Start=11423960><P class='en'>&nbsp;
<SYNC Start=11423960><P class='en'>the documentation, let&#39;s also log on Arrow
and info that you see this also works. And
<SYNC Start=11424960><P class='en'>&nbsp;
<SYNC Start=11424960><P class='en'>here, it&#39;s also explained what I showed you
binding with a logging framework at deployment
<SYNC Start=11425960><P class='en'>&nbsp;
<SYNC Start=11425960><P class='en'>time. So it says here lockback Classic, you
need this. If you want lockback as the logging
<SYNC Start=11426960><P class='en'>&nbsp;
<SYNC Start=11426960><P class='en'>framework, which we used. Yeah, so really
have a look here and read this. And here you
<SYNC Start=11427960><P class='en'>&nbsp;
<SYNC Start=11427960><P class='en'>see the dependencies, this is what we did.
You can also here you see you can use it with
<SYNC Start=11428960><P class='en'>&nbsp;
<SYNC Start=11428960><P class='en'>lock for J. But lockback, as I showed you
is like the successor for for j and there
<SYNC Start=11429960><P class='en'>&nbsp;
<SYNC Start=11429960><P class='en'>is also documentation of lockback which should
also have a look, by the way again. So the
<SYNC Start=11430960><P class='en'>&nbsp;
<SYNC Start=11430960><P class='en'>author is chechi Goku, and others. Yeah, so
see they they worked on these frameworks for
<SYNC Start=11431960><P class='en'>&nbsp;
<SYNC Start=11431960><P class='en'>12 years. I mean, you wouldn&#39;t want to work
for 12 years and there are at least these
<SYNC Start=11432960><P class='en'>&nbsp;
<SYNC Start=11432960><P class='en'>three guys. So this is a lot of work and brain
power that has gone in that logging framework,
<SYNC Start=11433960><P class='en'>&nbsp;
<SYNC Start=11433960><P class='en'>which you can use just by configuring it in
your code. Okay. Yeah, and you see we have
<SYNC Start=11434960><P class='en'>&nbsp;
<SYNC Start=11434960><P class='en'>also done it import org. So for j logger,
and logger factory, here they made it static
<SYNC Start=11435960><P class='en'>&nbsp;
<SYNC Start=11435960><P class='en'>which is also fine.
<SYNC Start=11436960><P class='en'>&nbsp;
<SYNC Start=11436960><P class='en'>And here they log on info level. Okay. And
here&#39;s the configuration file. This I have
<SYNC Start=11437960><P class='en'>&nbsp;
<SYNC Start=11437960><P class='en'>also showed you Okay, and there are also other
appenders I think I have put them here. Let&#39;s
<SYNC Start=11438960><P class='en'>&nbsp;
<SYNC Start=11438960><P class='en'>see, oh, there&#39;s also the explanation you
can do it with logger is debug enabled, like
<SYNC Start=11439960><P class='en'>&nbsp;
<SYNC Start=11439960><P class='en'>I showed you, or you see better alternative
with the curly braces. Because this is I mean,
<SYNC Start=11440960><P class='en'>&nbsp;
<SYNC Start=11440960><P class='en'>basically, it&#39;s the same thing. But this is
three lines. And this like clutters your code
<SYNC Start=11441960><P class='en'>&nbsp;
<SYNC Start=11441960><P class='en'>easily. And this is only one line. So it&#39;s
nicer. Because logging, I mean, it&#39;s important
<SYNC Start=11442960><P class='en'>&nbsp;
<SYNC Start=11442960><P class='en'>that you want to focus on the domain, on the
business that you work in. And logging should
<SYNC Start=11443960><P class='en'>&nbsp;
<SYNC Start=11443960><P class='en'>just not be in the way of your business. The
business is important thing. And logging is
<SYNC Start=11444960><P class='en'>&nbsp;
<SYNC Start=11444960><P class='en'>important. Yes. But it&#39;s like not as important
as the business. So really have a look and
<SYNC Start=11445960><P class='en'>&nbsp;
<SYNC Start=11445960><P class='en'>go through all the documentation. It really
explains this really nicely. Okay. So now,
<SYNC Start=11446960><P class='en'>&nbsp;
<SYNC Start=11446960><P class='en'>I promised you, and then we should finish
already. We can also log on different levels,
<SYNC Start=11447960><P class='en'>&nbsp;
<SYNC Start=11447960><P class='en'>like you can see error. Well, as, as far as
I remember, we&#39;re still on debug level. And
<SYNC Start=11448960><P class='en'>&nbsp;
<SYNC Start=11448960><P class='en'>error is included within debug, because debug
is the finest logging level. So this should
<SYNC Start=11449960><P class='en'>&nbsp;
<SYNC Start=11449960><P class='en'>also look just here, I would expect to see
not debug but error. So that we know, well,
<SYNC Start=11450960><P class='en'>&nbsp;
<SYNC Start=11450960><P class='en'>we would use this in case an error occurred.
So that we can differentiate how important
<SYNC Start=11451960><P class='en'>&nbsp;
<SYNC Start=11451960><P class='en'>some logging event is. Now you see an error.
So we would write, oh, some error occurred?
<SYNC Start=11452960><P class='en'>&nbsp;
<SYNC Start=11452960><P class='en'>Well, in our case, this is not an error. So
we should also not log in on error. What else
<SYNC Start=11453960><P class='en'>&nbsp;
<SYNC Start=11453960><P class='en'>can we use? Let&#39;s see, we should also able
to log this on worn for a warning. So you
<SYNC Start=11454960><P class='en'>&nbsp;
<SYNC Start=11454960><P class='en'>would use a warning for something very close
to an error. But where no one has to manually
<SYNC Start=11455960><P class='en'>&nbsp;
<SYNC Start=11455960><P class='en'>interfere, then you could use one logging
level. And info you would use for example,
<SYNC Start=11456960><P class='en'>&nbsp;
<SYNC Start=11456960><P class='en'>when your server starts when your program
starts up, just so that the user of the program
<SYNC Start=11457960><P class='en'>&nbsp;
<SYNC Start=11457960><P class='en'>knows everything is fine. And like here, this
is an info level. So we are informed lockback
<SYNC Start=11458960><P class='en'>&nbsp;
<SYNC Start=11458960><P class='en'>is just starting up. Okay. And here you see
now we have one level processing car BMW.
<SYNC Start=11459960><P class='en'>&nbsp;
<SYNC Start=11459960><P class='en'>So now that we&#39;re using one level, let&#39;s put
the root level to error. And now the package
<SYNC Start=11460960><P class='en'>&nbsp;
<SYNC Start=11460960><P class='en'>that we&#39;re not using as well as the root level
are both on error. And it&#39;s printed to standard
<SYNC Start=11461960><P class='en'>&nbsp;
<SYNC Start=11461960><P class='en'>out, which is this appender the console appender
which is this console here. Okay, and now,
<SYNC Start=11462960><P class='en'>&nbsp;
<SYNC Start=11462960><P class='en'>I would not expect to see any logging. And
you see, just the info from doc back at the
<SYNC Start=11463960><P class='en'>&nbsp;
<SYNC Start=11463960><P class='en'>logging is gone. Which again, we can change.
If we say here worn or let&#39;s change this back.
<SYNC Start=11464960><P class='en'>&nbsp;
<SYNC Start=11464960><P class='en'>Here also we can say worn. So now we should
see the one locked again. Yeah, there it is.
<SYNC Start=11465960><P class='en'>&nbsp;
<SYNC Start=11465960><P class='en'>Okay, well, as I Oh, I think I promised you
to show you the appenders and I have not.
<SYNC Start=11466960><P class='en'>&nbsp;
<SYNC Start=11466960><P class='en'>So let&#39;s finally go back to Firefox. And see
I had it somewhere here found? employee No,
<SYNC Start=11467960><P class='en'>&nbsp;
<SYNC Start=11467960><P class='en'>this is not yet. But it&#39;s somewhere appenders.
There, this is easy. Chapter four appenders
<SYNC Start=11468960><P class='en'>&nbsp;
<SYNC Start=11468960><P class='en'>is really a good read. So I&#39;m really fast
going over it. So outputstream appender, console.
<SYNC Start=11469960><P class='en'>&nbsp;
<SYNC Start=11469960><P class='en'>appender. This one we used. File append Not
this one is of course very important to write
<SYNC Start=11470960><P class='en'>&nbsp;
<SYNC Start=11470960><P class='en'>into a file and go through it read it. So
there you can set the encoding and all these
<SYNC Start=11471960><P class='en'>&nbsp;
<SYNC Start=11471960><P class='en'>parameters. And there are some really cool
appenders like rolling file appender Well,
<SYNC Start=11472960><P class='en'>&nbsp;
<SYNC Start=11472960><P class='en'>that means that new files are created when
like the file is has a certain size or like
<SYNC Start=11473960><P class='en'>&nbsp;
<SYNC Start=11473960><P class='en'>for every day we could have a new file. This
is important for servers because otherwise
<SYNC Start=11474960><P class='en'>&nbsp;
<SYNC Start=11474960><P class='en'>if we&#39;re always writing into the same file,
this very soon can reach
<SYNC Start=11475960><P class='en'>&nbsp;
<SYNC Start=11475960><P class='en'>tons of gigabytes. Yeah. And therefore on
production for a server you very often use
<SYNC Start=11476960><P class='en'>&nbsp;
<SYNC Start=11476960><P class='en'>a rolling file appender so that thing is really
important. Somewhere there should also be
<SYNC Start=11477960><P class='en'>&nbsp;
<SYNC Start=11477960><P class='en'>ODP appender that is supposed to To log into
a database directly, really cool thing. And
<SYNC Start=11478960><P class='en'>&nbsp;
<SYNC Start=11478960><P class='en'>this is really very easy to be configured.
Where is it, it was down somewhere. Somewhere,
<SYNC Start=11479960><P class='en'>&nbsp;
<SYNC Start=11479960><P class='en'>somewhere somewhere, maybe I&#39;ve already missed
it, there is an SMTP appender, I would assume
<SYNC Start=11480960><P class='en'>&nbsp;
<SYNC Start=11480960><P class='en'>from the name that is used for logging, sending
an email when there is a lock event. And somewhere,
<SYNC Start=11481960><P class='en'>&nbsp;
<SYNC Start=11481960><P class='en'>that was also the DB appender. I know it is
SMTP appender, blah, blah, blah, blah, ebf.
<SYNC Start=11482960><P class='en'>&nbsp;
<SYNC Start=11482960><P class='en'>There it is. So this allows you to directly
write into a database, and you see all these
<SYNC Start=11483960><P class='en'>&nbsp;
<SYNC Start=11483960><P class='en'>databases are supported. So this is really
great stuff, and so on, I mean, this page
<SYNC Start=11484960><P class='en'>&nbsp;
<SYNC Start=11484960><P class='en'>still goes on. So there are really a lot of
appenders out of the box that you can use.
<SYNC Start=11485960><P class='en'>&nbsp;
<SYNC Start=11485960><P class='en'>And as I said, you can always extend it and
write your own appender, which allows you
<SYNC Start=11486960><P class='en'>&nbsp;
<SYNC Start=11486960><P class='en'>to lock to any other source. So that pretty
much rounds up logging. I would like to show
<SYNC Start=11487960><P class='en'>&nbsp;
<SYNC Start=11487960><P class='en'>you the main method of Java. The main method,
as the name implies, is the method that is
<SYNC Start=11488960><P class='en'>&nbsp;
<SYNC Start=11488960><P class='en'>used to start a program initially. However,
as this course, is done in test driven style,
<SYNC Start=11489960><P class='en'>&nbsp;
<SYNC Start=11489960><P class='en'>or TDD In short, so far, we actually never
used it. Because we start programming by writing
<SYNC Start=11490960><P class='en'>&nbsp;
<SYNC Start=11490960><P class='en'>a test. And so far, we use the test to execute
our code. Well, actually, as you might have
<SYNC Start=11491960><P class='en'>&nbsp;
<SYNC Start=11491960><P class='en'>guessed, at some time, when you&#39;re done with
development, you would want to run the program.
<SYNC Start=11492960><P class='en'>&nbsp;
<SYNC Start=11492960><P class='en'>And for this, you will need a class that has
a main method. So how does this main method
<SYNC Start=11493960><P class='en'>&nbsp;
<SYNC Start=11493960><P class='en'>look? Well, it&#39;s not so different from any
other method. It is a public method, so that
<SYNC Start=11494960><P class='en'>&nbsp;
<SYNC Start=11494960><P class='en'>it can be started from outside of the class.
It is a static method. Because we want to
<SYNC Start=11495960><P class='en'>&nbsp;
<SYNC Start=11495960><P class='en'>run the method without having an instance
without having an object of car selector.
<SYNC Start=11496960><P class='en'>&nbsp;
<SYNC Start=11496960><P class='en'>Because the class car selector in this case
here is only the like executer the, like the
<SYNC Start=11497960><P class='en'>&nbsp;
<SYNC Start=11497960><P class='en'>frame that we use to start our program. And
therefore, I mean, we also only need, we don&#39;t
<SYNC Start=11498960><P class='en'>&nbsp;
<SYNC Start=11498960><P class='en'>need further instances of this class. And
this is why the method is static has to be
<SYNC Start=11499960><P class='en'>&nbsp;
<SYNC Start=11499960><P class='en'>static by definition. The method is void because
it doesn&#39;t return anything. And the name must
<SYNC Start=11500960><P class='en'>&nbsp;
<SYNC Start=11500960><P class='en'>be made. So that it can be found by Java.
By the way, I might notice shortly, I always
<SYNC Start=11501960><P class='en'>&nbsp;
<SYNC Start=11501960><P class='en'>say noticed by Java. Well, actually, what
I mean is noticed by the compiler, because
<SYNC Start=11502960><P class='en'>&nbsp;
<SYNC Start=11502960><P class='en'>the compiler will compile the program to bring
it into an executable form. Well, compiler
<SYNC Start=11503960><P class='en'>&nbsp;
<SYNC Start=11503960><P class='en'>is a big topic, there are huge books, if not
even libraries about compilers that you can
<SYNC Start=11504960><P class='en'>&nbsp;
<SYNC Start=11504960><P class='en'>so you could even study compilers. So I tried
to prevent to keep you away from that topic.
<SYNC Start=11505960><P class='en'>&nbsp;
<SYNC Start=11505960><P class='en'>But maybe, if I keep talking about Java, executing
something, I maybe should now say compiler,
<SYNC Start=11506960><P class='en'>&nbsp;
<SYNC Start=11506960><P class='en'>and at a later time, I might do a dedicated
session on my bit of compiler details. So
<SYNC Start=11507960><P class='en'>&nbsp;
<SYNC Start=11507960><P class='en'>that you will know more about compilers. So
anyway.
<SYNC Start=11508960><P class='en'>&nbsp;
<SYNC Start=11508960><P class='en'>Okay, so back to the public static void Main
method. Now we add the brackets, but actually,
<SYNC Start=11509960><P class='en'>&nbsp;
<SYNC Start=11509960><P class='en'>they have to contain something, because when
we start our main method, we want to be able
<SYNC Start=11510960><P class='en'>&nbsp;
<SYNC Start=11510960><P class='en'>to give it arguments that the program might
need to run and this is obligatory. So these
<SYNC Start=11511960><P class='en'>&nbsp;
<SYNC Start=11511960><P class='en'>are arguments that come as input as strings,
but as there can be a number of strings. This
<SYNC Start=11512960><P class='en'>&nbsp;
<SYNC Start=11512960><P class='en'>is an area here. So square brackets, and all
the name of the string array. You can use
<SYNC Start=11513960><P class='en'>&nbsp;
<SYNC Start=11513960><P class='en'>any name, people usually would set here arcs.
This is what you would see in documentation
<SYNC Start=11514960><P class='en'>&nbsp;
<SYNC Start=11514960><P class='en'>I usually prefer arguments, because this is
more readable. Okay. And then of course, as
<SYNC Start=11515960><P class='en'>&nbsp;
<SYNC Start=11515960><P class='en'>always, for our method, you would have the
curly braces, the opening and the closing
<SYNC Start=11516960><P class='en'>&nbsp;
<SYNC Start=11516960><P class='en'>curly brace. Um, yeah. And that&#39;s already
it for the main method. Now, let&#39;s leave it
<SYNC Start=11517960><P class='en'>&nbsp;
<SYNC Start=11517960><P class='en'>empty for a moment. And now when you compile
this class here, on the console using a terminal,
<SYNC Start=11518960><P class='en'>&nbsp;
<SYNC Start=11518960><P class='en'>you can execute this Java class. And it will
then call this main method automatically.
<SYNC Start=11519960><P class='en'>&nbsp;
<SYNC Start=11519960><P class='en'>So this is the place where you like set up
your whole program. In the last episode, I
<SYNC Start=11520960><P class='en'>&nbsp;
<SYNC Start=11520960><P class='en'>created a car service. So we can use this
in here, car service car service. But I mean,
<SYNC Start=11521960><P class='en'>&nbsp;
<SYNC Start=11521960><P class='en'>technically, it also works to run just the
empty main method, it will just not do anything.
<SYNC Start=11522960><P class='en'>&nbsp;
<SYNC Start=11522960><P class='en'>So let me directly say new car service, no
title car service.
<SYNC Start=11523960><P class='en'>&nbsp;
<SYNC Start=11523960><P class='en'>Okay.
<SYNC Start=11524960><P class='en'>&nbsp;
<SYNC Start=11524960><P class='en'>And then you can call the method, car service
dot process. Yeah, remember, and this requires
<SYNC Start=11525960><P class='en'>&nbsp;
<SYNC Start=11525960><P class='en'>an input. By the way, just to show you what
is possible in Java. You can also do all this
<SYNC Start=11526960><P class='en'>&nbsp;
<SYNC Start=11526960><P class='en'>on the fly, you can say new car service thought
process, the only difference is that, you
<SYNC Start=11527960><P class='en'>&nbsp;
<SYNC Start=11527960><P class='en'>will then just call the method, and you will
not have any variable to access the core service.
<SYNC Start=11528960><P class='en'>&nbsp;
<SYNC Start=11528960><P class='en'>If you don&#39;t need it, that might be fine.
Well, the only thing missing now is a string.
<SYNC Start=11529960><P class='en'>&nbsp;
<SYNC Start=11529960><P class='en'>And I mean, we could use any string here,
like PVC. But I mean, to make it a bit more
<SYNC Start=11530960><P class='en'>&nbsp;
<SYNC Start=11530960><P class='en'>interesting, we could no, take the string
array. And as as this as this is an array.
<SYNC Start=11531960><P class='en'>&nbsp;
<SYNC Start=11531960><P class='en'>Of course, we need a for each loop, which
are also introduced already. So let&#39;s say
<SYNC Start=11532960><P class='en'>&nbsp;
<SYNC Start=11532960><P class='en'>string argument for one, colon arguments.
So this is iterating through our array, that
<SYNC Start=11533960><P class='en'>&nbsp;
<SYNC Start=11533960><P class='en'>will be given to us. When the program runs
at runtime, opening curly brace again, closing
<SYNC Start=11534960><P class='en'>&nbsp;
<SYNC Start=11534960><P class='en'>curly brace.
<SYNC Start=11535960><P class='en'>&nbsp;
<SYNC Start=11535960><P class='en'>Okay.
<SYNC Start=11536960><P class='en'>&nbsp;
<SYNC Start=11536960><P class='en'>That was formatting it. Okay, and now I can
take that argument. And so dynamically call
<SYNC Start=11537960><P class='en'>&nbsp;
<SYNC Start=11537960><P class='en'>the process method, dynamically creating an
object. While this is always creating a new
<SYNC Start=11538960><P class='en'>&nbsp;
<SYNC Start=11538960><P class='en'>object. So I mean, I wanted to show you that
this is possible. But of course, it would
<SYNC Start=11539960><P class='en'>&nbsp;
<SYNC Start=11539960><P class='en'>probably be smarter to just create one object
and then put a reference on this object. So
<SYNC Start=11540960><P class='en'>&nbsp;
<SYNC Start=11540960><P class='en'>this would be from the performance perspective,
probably faster. But it&#39;s really hard to talk
<SYNC Start=11541960><P class='en'>&nbsp;
<SYNC Start=11541960><P class='en'>about performance. Because the compiler these
days is really smart. It might, it often recognizes
<SYNC Start=11542960><P class='en'>&nbsp;
<SYNC Start=11542960><P class='en'>stuff. And when before a while it compiles
it can optimize your code. So talking about
<SYNC Start=11543960><P class='en'>&nbsp;
<SYNC Start=11543960><P class='en'>performance is a topic by itself. And you
would usually test for performance just by
<SYNC Start=11544960><P class='en'>&nbsp;
<SYNC Start=11544960><P class='en'>saying this will be fast or slow. You can
hardly do but again, performance. Yeah, I
<SYNC Start=11545960><P class='en'>&nbsp;
<SYNC Start=11545960><P class='en'>could also do a course only on performance
really a big topic. Um, yeah. So now I created
<SYNC Start=11546960><P class='en'>&nbsp;
<SYNC Start=11546960><P class='en'>an instance of car service. And in the main
method, I have this for each loop. And then
<SYNC Start=11547960><P class='en'>&nbsp;
<SYNC Start=11547960><P class='en'>for each argument that is given to our main
method when the program is run, we call the
<SYNC Start=11548960><P class='en'>&nbsp;
<SYNC Start=11548960><P class='en'>car service. Now let&#39;s execute this. Because
now we can run this without actually a test.
<SYNC Start=11549960><P class='en'>&nbsp;
<SYNC Start=11549960><P class='en'>Well, I mean, in this episode, I want to show
you the main method. But I mean, what I said
<SYNC Start=11550960><P class='en'>&nbsp;
<SYNC Start=11550960><P class='en'>still holds true, you should always start
programming with writing a test. But anyway,
<SYNC Start=11551960><P class='en'>&nbsp;
<SYNC Start=11551960><P class='en'>see, now I have a run car, see, like the domain.
And I can execute the main method directly.
<SYNC Start=11552960><P class='en'>&nbsp;
<SYNC Start=11552960><P class='en'>Here. This shows me the console directly in
my ID. Well, it seems like there&#39;s nothing
<SYNC Start=11553960><P class='en'>&nbsp;
<SYNC Start=11553960><P class='en'>printed. This could either be because in the
class, remember, we had the logging, the logging
<SYNC Start=11554960><P class='en'>&nbsp;
<SYNC Start=11554960><P class='en'>could be deactivated, but so far, I remember
it&#39;s still active. It should log on worn at
<SYNC Start=11555960><P class='en'>&nbsp;
<SYNC Start=11555960><P class='en'>the moment. Well, the reason this doesn&#39;t
work. Anything is a different reason. And
<SYNC Start=11556960><P class='en'>&nbsp;
<SYNC Start=11556960><P class='en'>the reason is, well, we didn&#39;t give our program
any arguments. So I mean, this is running,
<SYNC Start=11557960><P class='en'>&nbsp;
<SYNC Start=11557960><P class='en'>this is not throwing any exceptions. By the
way, we will talk about exceptions very soon.
<SYNC Start=11558960><P class='en'>&nbsp;
<SYNC Start=11558960><P class='en'>But it&#39;s empty. So the for loop will actually
not be executed at all.
<SYNC Start=11559960><P class='en'>&nbsp;
<SYNC Start=11559960><P class='en'>When the program is run, so we will directly
jump to line nine or 10, just after it so
<SYNC Start=11560960><P class='en'>&nbsp;
<SYNC Start=11560960><P class='en'>the program will directly exit. But we can
change this easily using our ID, I can click
<SYNC Start=11561960><P class='en'>&nbsp;
<SYNC Start=11561960><P class='en'>on Run, and I say Edit configurations. And
here, I can configure how my main class see
<SYNC Start=11562960><P class='en'>&nbsp;
<SYNC Start=11562960><P class='en'>this also contains always the full package
name. So how this is run, I can give it some
<SYNC Start=11563960><P class='en'>&nbsp;
<SYNC Start=11563960><P class='en'>program arguments. So on the console, that
would be car selector, and then whitespace,
<SYNC Start=11564960><P class='en'>&nbsp;
<SYNC Start=11564960><P class='en'>and then the program arguments. So let me
put here a few car names. BMW, or shi. C,
<SYNC Start=11565960><P class='en'>&nbsp;
<SYNC Start=11565960><P class='en'>Mercedes. Yeah. And then Okay. And then let
me run the main method again. And now you
<SYNC Start=11566960><P class='en'>&nbsp;
<SYNC Start=11566960><P class='en'>see, we have three warning loggings processing
car BMW processing card pushy, and processing
<SYNC Start=11567960><P class='en'>&nbsp;
<SYNC Start=11567960><P class='en'>commerce. seeders. Yeah. So that&#39;s the main
method.
<SYNC Start=11568960><P class='en'>&nbsp;
<SYNC Start=11568960><P class='en'>Um,
<SYNC Start=11569960><P class='en'>&nbsp;
<SYNC Start=11569960><P class='en'>one more thing just really slightly mentioned.
What is also possible and not many people
<SYNC Start=11570960><P class='en'>&nbsp;
<SYNC Start=11570960><P class='en'>know is you can do this. Now what does that
mean? And see, all the code is still working.
<SYNC Start=11571960><P class='en'>&nbsp;
<SYNC Start=11571960><P class='en'>This thing with the three dots here is called
a foul arcs. Like a variable argument parameter,
<SYNC Start=11572960><P class='en'>&nbsp;
<SYNC Start=11572960><P class='en'>which means when this is defined like this,
the code, the method that would call our main
<SYNC Start=11573960><P class='en'>&nbsp;
<SYNC Start=11573960><P class='en'>method, while in this case, it&#39;s directly
started by the virtual machine itself. This
<SYNC Start=11574960><P class='en'>&nbsp;
<SYNC Start=11574960><P class='en'>would have the ability to directly put in
strings that will be converted automatically
<SYNC Start=11575960><P class='en'>&nbsp;
<SYNC Start=11575960><P class='en'>by the compiler to an array. So this is very
close to an array, but it&#39;s like just more
<SYNC Start=11576960><P class='en'>&nbsp;
<SYNC Start=11576960><P class='en'>convenient for whoever calls that method.
<SYNC Start=11577960><P class='en'>&nbsp;
<SYNC Start=11577960><P class='en'>Just so that you have seen this would also
be possible. The question is, does it make
<SYNC Start=11578960><P class='en'>&nbsp;
<SYNC Start=11578960><P class='en'>sense because, well, Normally, you would not
call the main method directly.
<SYNC Start=11579960><P class='en'>&nbsp;
<SYNC Start=11579960><P class='en'>So if you don&#39;t call the main method directly,
it doesn&#39;t make a difference. But of course,
<SYNC Start=11580960><P class='en'>&nbsp;
<SYNC Start=11580960><P class='en'>you can write a test and you can call the
method directly. And in this case, it would
<SYNC Start=11581960><P class='en'>&nbsp;
<SYNC Start=11581960><P class='en'>make a difference because you could directly
call the method which just one string? Yeah,
<SYNC Start=11582960><P class='en'>&nbsp;
<SYNC Start=11582960><P class='en'>but let me talk about Fox arguments at a later
time. Okay, so let&#39;s re add. Let&#39;s make this
<SYNC Start=11583960><P class='en'>&nbsp;
<SYNC Start=11583960><P class='en'>an array again.
<SYNC Start=11584960><P class='en'>&nbsp;
<SYNC Start=11584960><P class='en'>Okay.
<SYNC Start=11585960><P class='en'>&nbsp;
<SYNC Start=11585960><P class='en'>So now, string array arguments. Okay. So that
much about the main method, now, maybe a bit
<SYNC Start=11586960><P class='en'>&nbsp;
<SYNC Start=11586960><P class='en'>of background knowledge for you. So I don&#39;t
know if my Java course is actually the first
<SYNC Start=11587960><P class='en'>&nbsp;
<SYNC Start=11587960><P class='en'>Java course you ever listened to? I guess
in most cases, you would probably already
<SYNC Start=11588960><P class='en'>&nbsp;
<SYNC Start=11588960><P class='en'>have heard another course or read the book
about Java. And in this case, you might not
<SYNC Start=11589960><P class='en'>&nbsp;
<SYNC Start=11589960><P class='en'>directly understand why didn&#39;t talk about
the main methods so far. I mean, this is Episode
<SYNC Start=11590960><P class='en'>&nbsp;
<SYNC Start=11590960><P class='en'>14 already. So let me give you the reason
for this. Because I really decided to do so
<SYNC Start=11591960><P class='en'>&nbsp;
<SYNC Start=11591960><P class='en'>specifically. Because this is really a main
a main decision for me. Okay, so the reason
<SYNC Start=11592960><P class='en'>&nbsp;
<SYNC Start=11592960><P class='en'>is, first of all, I think, in the very first
lesson, when you have never heard about Java,
<SYNC Start=11593960><P class='en'>&nbsp;
<SYNC Start=11593960><P class='en'>and its keywords, it&#39;s hard to directly be
confronted with public static, void. This
<SYNC Start=11594960><P class='en'>&nbsp;
<SYNC Start=11594960><P class='en'>is just the name of the method would be okay,
but public static void, and then even an array.
<SYNC Start=11595960><P class='en'>&nbsp;
<SYNC Start=11595960><P class='en'>All all this stuff for a very first lesson
in Java is a bit much I think. Now in our
<SYNC Start=11596960><P class='en'>&nbsp;
<SYNC Start=11596960><P class='en'>episode 14, you should by now know what public
means What static means what what means. And
<SYNC Start=11597960><P class='en'>&nbsp;
<SYNC Start=11597960><P class='en'>we have also talked about arrays. So I hope
that by now, you can easily follow my explanations,
<SYNC Start=11598960><P class='en'>&nbsp;
<SYNC Start=11598960><P class='en'>and you understand what all this means. Okay?
And then second, also, this is a static method.
<SYNC Start=11599960><P class='en'>&nbsp;
<SYNC Start=11599960><P class='en'>And I told you, I think various times, Java
is an object oriented language, where you
<SYNC Start=11600960><P class='en'>&nbsp;
<SYNC Start=11600960><P class='en'>usually focus on creating objects, but static,
this method is not object oriented. There&#39;s
<SYNC Start=11601960><P class='en'>&nbsp;
<SYNC Start=11601960><P class='en'>just one version of this method. I mean, of
course, it might make sense. But, yeah, as
<SYNC Start=11602960><P class='en'>&nbsp;
<SYNC Start=11602960><P class='en'>you should try to avoid static, wherever possible,
I think showing you a static method in the
<SYNC Start=11603960><P class='en'>&nbsp;
<SYNC Start=11603960><P class='en'>very first Java lesson might lead you to the
wrong conclusions. Yeah. And then also, next
<SYNC Start=11604960><P class='en'>&nbsp;
<SYNC Start=11604960><P class='en'>reason is, um, even though, I mean, the main
method is, on the one hand, very important,
<SYNC Start=11605960><P class='en'>&nbsp;
<SYNC Start=11605960><P class='en'>because you use it to actually execute your
program to actually get your program running.
<SYNC Start=11606960><P class='en'>&nbsp;
<SYNC Start=11606960><P class='en'>For any program at hand, you would have only
one main method. And usually programs would
<SYNC Start=11607960><P class='en'>&nbsp;
<SYNC Start=11607960><P class='en'>consists of hundreds, if not 1000s, of classes.
And just one main method. And last but not
<SYNC Start=11608960><P class='en'>&nbsp;
<SYNC Start=11608960><P class='en'>least, I mean, this counts for Java, se. But
if you like program a server application,
<SYNC Start=11609960><P class='en'>&nbsp;
<SYNC Start=11609960><P class='en'>what you usually do is you don&#39;t re implement
all the server code. But you would like use,
<SYNC Start=11610960><P class='en'>&nbsp;
<SYNC Start=11610960><P class='en'>for example, an open source server implemented
in Java, for example, Tomcat, and such a server,
<SYNC Start=11611960><P class='en'>&nbsp;
<SYNC Start=11611960><P class='en'>I mean, has already been implemented for you.
And so you use that as like an infrastructure,
<SYNC Start=11612960><P class='en'>&nbsp;
<SYNC Start=11612960><P class='en'>even though it&#39;s software. And so the Java
code you write will run within that Java software
<SYNC Start=11613960><P class='en'>&nbsp;
<SYNC Start=11613960><P class='en'>infrastructure. And therefore, when you program
code for server, you usually don&#39;t write even
<SYNC Start=11614960><P class='en'>&nbsp;
<SYNC Start=11614960><P class='en'>a main method at all. So, for example, in
my case, I mean, I have programmed in Java
<SYNC Start=11615960><P class='en'>&nbsp;
<SYNC Start=11615960><P class='en'>for pretty much 14 years now. But I have maybe,
I don&#39;t know, 10 times 20 times, well, definitely
<SYNC Start=11616960><P class='en'>&nbsp;
<SYNC Start=11616960><P class='en'>less than 100 times I have programmed a main
method, while I have programmed really 1000s
<SYNC Start=11617960><P class='en'>&nbsp;
<SYNC Start=11617960><P class='en'>of classes, I&#39;m sure. So the main method is
not so important. And, yeah, so we started
<SYNC Start=11618960><P class='en'>&nbsp;
<SYNC Start=11618960><P class='en'>with writing a test anyway. So you are also
able to run your code, at least for testing
<SYNC Start=11619960><P class='en'>&nbsp;
<SYNC Start=11619960><P class='en'>without the main method. Of course, I mean,
the tests. For example, let&#39;s look at this
<SYNC Start=11620960><P class='en'>&nbsp;
<SYNC Start=11620960><P class='en'>one. This one is based on the framework j
unit. And j unit by itself is a Java program.
<SYNC Start=11621960><P class='en'>&nbsp;
<SYNC Start=11621960><P class='en'>So j unit does have a main method. Of course
it does. But you don&#39;t see it. All you see
<SYNC Start=11622960><P class='en'>&nbsp;
<SYNC Start=11622960><P class='en'>is the test methods that we write. And his
test method, they like plug into the whole
<SYNC Start=11623960><P class='en'>&nbsp;
<SYNC Start=11623960><P class='en'>j unit mechanism, bet so we don&#39;t have to
write the main method. I mean, this is why
<SYNC Start=11624960><P class='en'>&nbsp;
<SYNC Start=11624960><P class='en'>just using a framework, like j unit is so
handy, because it saves us from writing our
<SYNC Start=11625960><P class='en'>&nbsp;
<SYNC Start=11625960><P class='en'>own main method. Yeah, and I promise you,
you can actually even execute even the main
<SYNC Start=11626960><P class='en'>&nbsp;
<SYNC Start=11626960><P class='en'>method as if it was a regular method. Now
here you see I have prepared that he is an
<SYNC Start=11627960><P class='en'>&nbsp;
<SYNC Start=11627960><P class='en'>array of string arguments, BMW and Porsche.
So this static method is called with the given
<SYNC Start=11628960><P class='en'>&nbsp;
<SYNC Start=11628960><P class='en'>arguments as execute the test. And yeah, you
see, this works just as well processing car
<SYNC Start=11629960><P class='en'>&nbsp;
<SYNC Start=11629960><P class='en'>BMW processing car pushy.
<SYNC Start=11630960><P class='en'>&nbsp;
<SYNC Start=11630960><P class='en'>And,
<SYNC Start=11631960><P class='en'>&nbsp;
<SYNC Start=11631960><P class='en'>as one last thing, maybe you&#39;ll see I could
change the signature of the method. Like I
<SYNC Start=11632960><P class='en'>&nbsp;
<SYNC Start=11632960><P class='en'>could say the method returns some end. In
this case, just as an example 42 I could even
<SYNC Start=11633960><P class='en'>&nbsp;
<SYNC Start=11633960><P class='en'>not make it static anymore. I can change it
in any way. This is okay as it&#39;s a Java method,
<SYNC Start=11634960><P class='en'>&nbsp;
<SYNC Start=11634960><P class='en'>it just will not be recognized as a regular
main method. So this will will not allow us
<SYNC Start=11635960><P class='en'>&nbsp;
<SYNC Start=11635960><P class='en'>to execute it as a Java program, but our test
can still execute it as it was before. I mean,
<SYNC Start=11636960><P class='en'>&nbsp;
<SYNC Start=11636960><P class='en'>now this is returning something. So we don&#39;t
use the return value, but we could in return
<SYNC Start=11637960><P class='en'>&nbsp;
<SYNC Start=11637960><P class='en'>use equals to Yeah. So you see, it&#39;s really,
we&#39;re calling the main method returning something.
<SYNC Start=11638960><P class='en'>&nbsp;
<SYNC Start=11638960><P class='en'>And we can still call it from the test. But
if we want this to be really a main method
<SYNC Start=11639960><P class='en'>&nbsp;
<SYNC Start=11639960><P class='en'>that will allow us to start a program, then
the signature must look like this. Okay, so
<SYNC Start=11640960><P class='en'>&nbsp;
<SYNC Start=11640960><P class='en'>I think that&#39;s pretty much all I can tell
you about the main method, I&#39;m really happy
<SYNC Start=11641960><P class='en'>&nbsp;
<SYNC Start=11641960><P class='en'>that we were finally able to have a look at
the main methods. So now, with the 14 episodes
<SYNC Start=11642960><P class='en'>&nbsp;
<SYNC Start=11642960><P class='en'>that I&#39;ve done so far, I think this course
now really has gone quite far, by now you
<SYNC Start=11643960><P class='en'>&nbsp;
<SYNC Start=11643960><P class='en'>should really know quite a lot about Java,
and should be able to write your own programs
<SYNC Start=11644960><P class='en'>&nbsp;
<SYNC Start=11644960><P class='en'>by now, I will, of course, add a few more
things. But By now, you should really be able
<SYNC Start=11645960><P class='en'>&nbsp;
<SYNC Start=11645960><P class='en'>to write your own small programs. I would
like to talk about Exception Handling in Java.
<SYNC Start=11646960><P class='en'>&nbsp;
<SYNC Start=11646960><P class='en'>So first of all, let&#39;s have a look at some
theory, and some background information about
<SYNC Start=11647960><P class='en'>&nbsp;
<SYNC Start=11647960><P class='en'>exception handling. And then later on, we
will as always, directly jump into my ID.
<SYNC Start=11648960><P class='en'>&nbsp;
<SYNC Start=11648960><P class='en'>And I&#39;ll show you how to do Exception Handling
in practice. Okay, so as you see, this is
<SYNC Start=11649960><P class='en'>&nbsp;
<SYNC Start=11649960><P class='en'>the Wikipedia article about exception handling.
So first of all, let&#39;s have a short look at
<SYNC Start=11650960><P class='en'>&nbsp;
<SYNC Start=11650960><P class='en'>the definition. So here this article says
exception handling is the process of responding
<SYNC Start=11651960><P class='en'>&nbsp;
<SYNC Start=11651960><P class='en'>to the occurrence during computation of exceptions,
and animals or exceptional conditions requiring
<SYNC Start=11652960><P class='en'>&nbsp;
<SYNC Start=11652960><P class='en'>special processing. Okay, let&#39;s stop here.
Let&#39;s digest that. So, um, I think what is
<SYNC Start=11653960><P class='en'>&nbsp;
<SYNC Start=11653960><P class='en'>very important is two things. First of all,
it is about exceptional conditions. Because
<SYNC Start=11654960><P class='en'>&nbsp;
<SYNC Start=11654960><P class='en'>in my opinion, this is something that many
programmers get wrong. I mean, an exception
<SYNC Start=11655960><P class='en'>&nbsp;
<SYNC Start=11655960><P class='en'>is called an exception, because it should
handle exceptional conditions. So the question
<SYNC Start=11656960><P class='en'>&nbsp;
<SYNC Start=11656960><P class='en'>really is what is an exceptional condition.
While in my opinion, an exceptional condition
<SYNC Start=11657960><P class='en'>&nbsp;
<SYNC Start=11657960><P class='en'>is something that really, as the name implies,
only happens exceptionally which means only
<SYNC Start=11658960><P class='en'>&nbsp;
<SYNC Start=11658960><P class='en'>really rarely, only in very specific situations.
And those situations are an animal&#39;s soul.
<SYNC Start=11659960><P class='en'>&nbsp;
<SYNC Start=11659960><P class='en'>So for example, programming errors, you when
your program, you introduce the buck, you
<SYNC Start=11660960><P class='en'>&nbsp;
<SYNC Start=11660960><P class='en'>forgot to like you have an array, and you
have one field that is empty. And I talked
<SYNC Start=11661960><P class='en'>&nbsp;
<SYNC Start=11661960><P class='en'>about that means it has a field that is set
to now. And then when you try to access this
<SYNC Start=11662960><P class='en'>&nbsp;
<SYNC Start=11662960><P class='en'>field, that, for example, can throw a so called
null pointer exception. Well, that would be
<SYNC Start=11663960><P class='en'>&nbsp;
<SYNC Start=11663960><P class='en'>really an exceptional case, which you wouldn&#39;t
have guessed it would happen. And yeah, that
<SYNC Start=11664960><P class='en'>&nbsp;
<SYNC Start=11664960><P class='en'>would be one reason for an exception. So exception
handling is really the, as it says here process
<SYNC Start=11665960><P class='en'>&nbsp;
<SYNC Start=11665960><P class='en'>of responding to the occurrence of exceptions.
So something exceptional happens. And then
<SYNC Start=11666960><P class='en'>&nbsp;
<SYNC Start=11666960><P class='en'>we need
<SYNC Start=11667960><P class='en'>&nbsp;
<SYNC Start=11667960><P class='en'>a way to react on that to handle that. Some
special processing, which is not the normal
<SYNC Start=11668960><P class='en'>&nbsp;
<SYNC Start=11668960><P class='en'>program flow. But the cool thing about Yeah,
this also sent here, often changing the normal
<SYNC Start=11669960><P class='en'>&nbsp;
<SYNC Start=11669960><P class='en'>flow of program execution. because ideally,
we want like a central place that handles
<SYNC Start=11670960><P class='en'>&nbsp;
<SYNC Start=11670960><P class='en'>the exceptions. And so we want to leave the
normal program flow and we want to just specifically
<SYNC Start=11671960><P class='en'>&nbsp;
<SYNC Start=11671960><P class='en'>take care of this exceptional case. Okay.
And here continues, it is provided by specialized
<SYNC Start=11672960><P class='en'>&nbsp;
<SYNC Start=11672960><P class='en'>programming languages, which gives us a hint,
it is not provided by all programming languages.
<SYNC Start=11673960><P class='en'>&nbsp;
<SYNC Start=11673960><P class='en'>Well, let&#39;s have a look at the history which
will tell us. Yeah, software Exception Handling
<SYNC Start=11674960><P class='en'>&nbsp;
<SYNC Start=11674960><P class='en'>developed in Lisp in the 1960s and 1970s.
Well, I think the first programming language
<SYNC Start=11675960><P class='en'>&nbsp;
<SYNC Start=11675960><P class='en'>was invented by Conrad Sousa in, like 1943,
or something. So you see, it took a while
<SYNC Start=11676960><P class='en'>&nbsp;
<SYNC Start=11676960><P class='en'>until they finally came up with the idea of
exception handling, that something like this
<SYNC Start=11677960><P class='en'>&nbsp;
<SYNC Start=11677960><P class='en'>is really necessary. And, well, maybe a bit
more about the history and Java, because again,
<SYNC Start=11678960><P class='en'>&nbsp;
<SYNC Start=11678960><P class='en'>with Java, there was some something new introduced,
and that is checked exceptions. Before all
<SYNC Start=11679960><P class='en'>&nbsp;
<SYNC Start=11679960><P class='en'>exceptions were unchecked, which means any
line of code can throw any kind of exception.
<SYNC Start=11680960><P class='en'>&nbsp;
<SYNC Start=11680960><P class='en'>And there is no mechanism that forces you
to handle it, if you don&#39;t handle it. That,
<SYNC Start=11681960><P class='en'>&nbsp;
<SYNC Start=11681960><P class='en'>for example, causes the program to stop. And
well, therefore, as soon as exceptions were
<SYNC Start=11682960><P class='en'>&nbsp;
<SYNC Start=11682960><P class='en'>like introduced, many times nasty things happened.
And so when they invented Java in like 1995,
<SYNC Start=11683960><P class='en'>&nbsp;
<SYNC Start=11683960><P class='en'>or something, they thought, well, maybe we
should do this a bit better. And well, first
<SYNC Start=11684960><P class='en'>&nbsp;
<SYNC Start=11684960><P class='en'>of all, let&#39;s have a look. Check the exceptions
here. The designers of Java device checked
<SYNC Start=11685960><P class='en'>&nbsp;
<SYNC Start=11685960><P class='en'>exceptions, which are a special set of exceptions
<SYNC Start=11686960><P class='en'>&nbsp;
<SYNC Start=11686960><P class='en'>here.
<SYNC Start=11687960><P class='en'>&nbsp;
<SYNC Start=11687960><P class='en'>Okay, and to make it short, so what&#39;s the
difference about checked exceptions, he is
<SYNC Start=11688960><P class='en'>&nbsp;
<SYNC Start=11688960><P class='en'>also already an example and i o exception,
which happens when there is a problem with
<SYNC Start=11689960><P class='en'>&nbsp;
<SYNC Start=11689960><P class='en'>an IO operation input output operation. The
difference with checked exceptions in Java
<SYNC Start=11690960><P class='en'>&nbsp;
<SYNC Start=11690960><P class='en'>is they must be declared explicitly in the
method signature, or be handled. If you don&#39;t
<SYNC Start=11691960><P class='en'>&nbsp;
<SYNC Start=11691960><P class='en'>do that, you will directly get a compile time
error, which means you&#39;re not able to even
<SYNC Start=11692960><P class='en'>&nbsp;
<SYNC Start=11692960><P class='en'>compile your program. I looked at actually
up I think it&#39;s here it&#39;s quite interesting.
<SYNC Start=11693960><P class='en'>&nbsp;
<SYNC Start=11693960><P class='en'>Like how it came with the checked exceptions.
The Java programming language introduces the
<SYNC Start=11694960><P class='en'>&nbsp;
<SYNC Start=11694960><P class='en'>concept of checked exceptions, checked exceptions
must be handled in a method, or the method
<SYNC Start=11695960><P class='en'>&nbsp;
<SYNC Start=11695960><P class='en'>must declare the exception in our throws clause.
Now it continues, I think here it&#39;s even more
<SYNC Start=11696960><P class='en'>&nbsp;
<SYNC Start=11696960><P class='en'>interesting. According to Anvil wrath, who
was there at the beginning, the credit for
<SYNC Start=11697960><P class='en'>&nbsp;
<SYNC Start=11697960><P class='en'>the Java exception scheme should mostly go
to Jim Waldo. And then they go on. And here
<SYNC Start=11698960><P class='en'>&nbsp;
<SYNC Start=11698960><P class='en'>after some consideration, Java was retooled
to have checked exceptions, only those exceptions
<SYNC Start=11699960><P class='en'>&nbsp;
<SYNC Start=11699960><P class='en'>for which there was no recovery, or reflect
application errors would be unchecked, and
<SYNC Start=11700960><P class='en'>&nbsp;
<SYNC Start=11700960><P class='en'>the world was safe again. Well, so they thought.
Now, in the meantime, it&#39;s 2015, which just
<SYNC Start=11701960><P class='en'>&nbsp;
<SYNC Start=11701960><P class='en'>like 20 years later, and it turns out, that
was not so smart. Because the problem is,
<SYNC Start=11702960><P class='en'>&nbsp;
<SYNC Start=11702960><P class='en'>and this is also why stated at the beginning,
maybe we should go back to the very top. Exception
<SYNC Start=11703960><P class='en'>&nbsp;
<SYNC Start=11703960><P class='en'>handling is the process of blah, blah, blah,
blah, blah, blah, blah, exceptional conditions.
<SYNC Start=11704960><P class='en'>&nbsp;
<SYNC Start=11704960><P class='en'>And this is the important part. Because they
had the idea to have still unchecked exceptions
<SYNC Start=11705960><P class='en'>&nbsp;
<SYNC Start=11705960><P class='en'>for something like programmer arrows for something
that is, as the name implies, exceptional,
<SYNC Start=11706960><P class='en'>&nbsp;
<SYNC Start=11706960><P class='en'>and to have the checked exceptions for everything
else. But now I ask, why have checked exceptions
<SYNC Start=11707960><P class='en'>&nbsp;
<SYNC Start=11707960><P class='en'>for these cases that can be handled? Why not?
If you if you can handle a specific situation,
<SYNC Start=11708960><P class='en'>&nbsp;
<SYNC Start=11708960><P class='en'>why not that instead validating that situation?
And not at all throwing an exception? And
<SYNC Start=11709960><P class='en'>&nbsp;
<SYNC Start=11709960><P class='en'>also, and now maybe we should already jump
into the ad because I guess it goes too far.
<SYNC Start=11710960><P class='en'>&nbsp;
<SYNC Start=11710960><P class='en'>on too much theory. Let&#39;s directly jump into
the code. So yeah, so here you see An email
<SYNC Start=11711960><P class='en'>&nbsp;
<SYNC Start=11711960><P class='en'>that I&#39;ve written car stayed with a different
states driving, waiting and parking. I&#39;ve
<SYNC Start=11712960><P class='en'>&nbsp;
<SYNC Start=11712960><P class='en'>written this public static from method that
converts a string to a car state using a switch
<SYNC Start=11713960><P class='en'>&nbsp;
<SYNC Start=11713960><P class='en'>statement. I told you, in a previous episode,
that since Java seven, it&#39;s possible to use
<SYNC Start=11714960><P class='en'>&nbsp;
<SYNC Start=11714960><P class='en'>a switch inside air to use a string inside
a switch. And I want you not to do it. This
<SYNC Start=11715960><P class='en'>&nbsp;
<SYNC Start=11715960><P class='en'>still applies. But in this case, I assume
that we are getting input from the console.
<SYNC Start=11716960><P class='en'>&nbsp;
<SYNC Start=11716960><P class='en'>And input from the user coming from the console
cannot be an enum must be a string. So this
<SYNC Start=11717960><P class='en'>&nbsp;
<SYNC Start=11717960><P class='en'>is all I mean, for every rule, there is an
exception. So this is an exception to the
<SYNC Start=11718960><P class='en'>&nbsp;
<SYNC Start=11718960><P class='en'>rule, which is here, we do have a switch,
switching on a string. But now here, we have
<SYNC Start=11719960><P class='en'>&nbsp;
<SYNC Start=11719960><P class='en'>the default case. And I also told you, I wouldn&#39;t,
I will only throw exceptions and the default
<SYNC Start=11720960><P class='en'>&nbsp;
<SYNC Start=11720960><P class='en'>case, so that it cannot happen, that someone
adds a new state. And this new state would
<SYNC Start=11721960><P class='en'>&nbsp;
<SYNC Start=11721960><P class='en'>then be handled by the default case without
anyone noticing, to have the fail early principle.
<SYNC Start=11722960><P class='en'>&nbsp;
<SYNC Start=11722960><P class='en'>And so I told you to throw an exception, but
I didn&#39;t show you yet. While we can do this
<SYNC Start=11723960><P class='en'>&nbsp;
<SYNC Start=11723960><P class='en'>now, and this is quite easy. You can just
say throw new exception, because an exception
<SYNC Start=11724960><P class='en'>&nbsp;
<SYNC Start=11724960><P class='en'>in Java is just an A class. Like almost any
other class, while it has some specific
<SYNC Start=11725960><P class='en'>&nbsp;
<SYNC Start=11725960><P class='en'>methods and stuff, but at least it&#39;s an it&#39;s
a class and we create, we can create objects
<SYNC Start=11726960><P class='en'>&nbsp;
<SYNC Start=11726960><P class='en'>from it. Now, you know, you already see a
checked exception and action. And you see
<SYNC Start=11727960><P class='en'>&nbsp;
<SYNC Start=11727960><P class='en'>how the compiler already wants me unhandled
exception. java. lang exception. So this is
<SYNC Start=11728960><P class='en'>&nbsp;
<SYNC Start=11728960><P class='en'>also the package java. lang exception. And,
yeah, this is the number one checked exception.
<SYNC Start=11729960><P class='en'>&nbsp;
<SYNC Start=11729960><P class='en'>Don&#39;t ask me why it&#39;s called exception. If
it&#39;s actually a checked exception, something
<SYNC Start=11730960><P class='en'>&nbsp;
<SYNC Start=11730960><P class='en'>like a checked exception. I mean, the name
was not used within Java Lang. So you just
<SYNC Start=11731960><P class='en'>&nbsp;
<SYNC Start=11731960><P class='en'>have to know that this exception is a checked
exception. And on top, the default, unchecked
<SYNC Start=11732960><P class='en'>&nbsp;
<SYNC Start=11732960><P class='en'>exception is an is a runtime exception. This
sorry, also not my fault. This also you have
<SYNC Start=11733960><P class='en'>&nbsp;
<SYNC Start=11733960><P class='en'>to know I mean, runtime makes sense, because
something that goes wrong at runtime. And
<SYNC Start=11734960><P class='en'>&nbsp;
<SYNC Start=11734960><P class='en'>so you would normally use a runtime exception
for things where you don&#39;t know how to handle
<SYNC Start=11735960><P class='en'>&nbsp;
<SYNC Start=11735960><P class='en'>them directly. And the idea was, as I said
before, to have checked exceptions, for cases
<SYNC Start=11736960><P class='en'>&nbsp;
<SYNC Start=11736960><P class='en'>where you know how to deal with them. But
as I said, if you know how to deal with them,
<SYNC Start=11737960><P class='en'>&nbsp;
<SYNC Start=11737960><P class='en'>why not dealing with them without throwing
an exception beforehand, using validation?
<SYNC Start=11738960><P class='en'>&nbsp;
<SYNC Start=11738960><P class='en'>But anyway, let&#39;s continue. So how can we
fix that compile time error? One reason is,
<SYNC Start=11739960><P class='en'>&nbsp;
<SYNC Start=11739960><P class='en'>at exception to method signature, let&#39;s use
our ID to help us and here it adds throws
<SYNC Start=11740960><P class='en'>&nbsp;
<SYNC Start=11740960><P class='en'>exception. Now you see the compile time error
is gone. Nothing is read anymore, it seems
<SYNC Start=11741960><P class='en'>&nbsp;
<SYNC Start=11741960><P class='en'>like we fixed the problem. So we told the
Java compiler, we know there is a checked
<SYNC Start=11742960><P class='en'>&nbsp;
<SYNC Start=11742960><P class='en'>exception. We just don&#39;t care. The color should
take care of it. And now I have this car service
<SYNC Start=11743960><P class='en'>&nbsp;
<SYNC Start=11743960><P class='en'>class here. And I made it to use the static
from method that I implemented. And you see
<SYNC Start=11744960><P class='en'>&nbsp;
<SYNC Start=11744960><P class='en'>now this class has the problem. Okay, again,
let&#39;s do the same thing. Add exception to
<SYNC Start=11745960><P class='en'>&nbsp;
<SYNC Start=11745960><P class='en'>method signature. Okay. And I guess you know,
where this leads to. Now we are the main method.
<SYNC Start=11746960><P class='en'>&nbsp;
<SYNC Start=11746960><P class='en'>And again, we have the same problem. Well,
we can notate This is all the wrong stuff.
<SYNC Start=11747960><P class='en'>&nbsp;
<SYNC Start=11747960><P class='en'>Seems like we&#39;re on the wrong line. But yeah,
I can no here appears add exception to method
<SYNC Start=11748960><P class='en'>&nbsp;
<SYNC Start=11748960><P class='en'>signature. Okay. Well, sorry, I&#39;m just lazy.
I could of course have written that myself.
<SYNC Start=11749960><P class='en'>&nbsp;
<SYNC Start=11749960><P class='en'>But whenever you write something, you have
the chance of introducing a typo like this.
<SYNC Start=11750960><P class='en'>&nbsp;
<SYNC Start=11750960><P class='en'>So whenever possible, I prefer to have my
ID he helped me and to have code written automatically
<SYNC Start=11751960><P class='en'>&nbsp;
<SYNC Start=11751960><P class='en'>by the ID that can save From introducing bugs
with typos for example. Okay, so now this
<SYNC Start=11752960><P class='en'>&nbsp;
<SYNC Start=11752960><P class='en'>will be, like fixed. But now the question
is, what did it help us, we have here throws
<SYNC Start=11753960><P class='en'>&nbsp;
<SYNC Start=11753960><P class='en'>exception, we have here throws exception,
and we have here throws exception. So three
<SYNC Start=11754960><P class='en'>&nbsp;
<SYNC Start=11754960><P class='en'>times we had to add this throws exception.
And only because Java tells us this is a checked
<SYNC Start=11755960><P class='en'>&nbsp;
<SYNC Start=11755960><P class='en'>exception. But besides, we didn&#39;t handle it,
which means what will happen when I execute
<SYNC Start=11756960><P class='en'>&nbsp;
<SYNC Start=11756960><P class='en'>the code, and the default case is chosen,
the exception will be thrown, it will be Bob,
<SYNC Start=11757960><P class='en'>&nbsp;
<SYNC Start=11757960><P class='en'>it will bubble up to the top to the main method.
And as the main method doesn&#39;t handle it,
<SYNC Start=11758960><P class='en'>&nbsp;
<SYNC Start=11758960><P class='en'>the program will stop. And we will see the
exception stack trace. Yeah, same thing we
<SYNC Start=11759960><P class='en'>&nbsp;
<SYNC Start=11759960><P class='en'>could do, for example, with a runtime exception,
throw new runtime exception. Also in in both
<SYNC Start=11760960><P class='en'>&nbsp;
<SYNC Start=11760960><P class='en'>cases, you can and you should add some meaningful
message that tells us why the exception happened.
<SYNC Start=11761960><P class='en'>&nbsp;
<SYNC Start=11761960><P class='en'>So let&#39;s say on state, and concatenate that
with a given state. Oh, okay. So now, I can
<SYNC Start=11762960><P class='en'>&nbsp;
<SYNC Start=11762960><P class='en'>still keep it. But I don&#39;t have to. It&#39;s not
obligatory anymore, because this is not a
<SYNC Start=11763960><P class='en'>&nbsp;
<SYNC Start=11763960><P class='en'>checked exception anymore.
<SYNC Start=11764960><P class='en'>&nbsp;
<SYNC Start=11764960><P class='en'>Same here, I can remove all these. And this.
So now I have exactly the same code. The only
<SYNC Start=11765960><P class='en'>&nbsp;
<SYNC Start=11765960><P class='en'>differences I mean, I&#39;m not handling the exception,
that my method signature doesn&#39;t get any longer.
<SYNC Start=11766960><P class='en'>&nbsp;
<SYNC Start=11766960><P class='en'>Because he mentioned again, I&#39;m always bringing
this example, you have a huge program of hundreds
<SYNC Start=11767960><P class='en'>&nbsp;
<SYNC Start=11767960><P class='en'>of classes. And as soon as one method has
that throws exception, this is really contagious,
<SYNC Start=11768960><P class='en'>&nbsp;
<SYNC Start=11768960><P class='en'>which means another method, sooner or later,
we&#39;ll use the method that says throws exception,
<SYNC Start=11769960><P class='en'>&nbsp;
<SYNC Start=11769960><P class='en'>will then also have to say throws exception,
this method again will be used. And sooner
<SYNC Start=11770960><P class='en'>&nbsp;
<SYNC Start=11770960><P class='en'>or later, you will have that throws exception
in each and every method. And then it doesn&#39;t
<SYNC Start=11771960><P class='en'>&nbsp;
<SYNC Start=11771960><P class='en'>help us at all. It just makes the code more
wordy, let&#39;s say. And yeah, it&#39;s not really
<SYNC Start=11772960><P class='en'>&nbsp;
<SYNC Start=11772960><P class='en'>meaningful. So anyway, let&#39;s first of all
provoke that exception that we see how such
<SYNC Start=11773960><P class='en'>&nbsp;
<SYNC Start=11773960><P class='en'>as exception stacktrace looks like for this
to happen. I have to call the main method.
<SYNC Start=11774960><P class='en'>&nbsp;
<SYNC Start=11774960><P class='en'>And I have to give it some some argument that
we don&#39;t know yet. Okay, let&#39;s go here run.
<SYNC Start=11775960><P class='en'>&nbsp;
<SYNC Start=11775960><P class='en'>I think I have prepared something already.
Edit configuration. And yeah, flying parking,
<SYNC Start=11776960><P class='en'>&nbsp;
<SYNC Start=11776960><P class='en'>driving, driving ABCD E, F, G, because also,
I wanted to show you, I mean, I&#39;ve introduced
<SYNC Start=11777960><P class='en'>&nbsp;
<SYNC Start=11777960><P class='en'>the main method only in the prior episode.
So here we have some valid states, as well
<SYNC Start=11778960><P class='en'>&nbsp;
<SYNC Start=11778960><P class='en'>as some invalid states. Also in lowercase
letters, it will should be invalid. And as
<SYNC Start=11779960><P class='en'>&nbsp;
<SYNC Start=11779960><P class='en'>we&#39;re iterating through the arguments and
a for each loop, we should see. Well, let&#39;s
<SYNC Start=11780960><P class='en'>&nbsp;
<SYNC Start=11780960><P class='en'>just let&#39;s just do it. actually still have
to run it. And let&#39;s have a look what happens.
<SYNC Start=11781960><P class='en'>&nbsp;
<SYNC Start=11781960><P class='en'>Okay, so you see, the exception happened.
I&#39;m on state flying. So I would assume the
<SYNC Start=11782960><P class='en'>&nbsp;
<SYNC Start=11782960><P class='en'>reason is that this happened for the very
first time the first argument was already
<SYNC Start=11783960><P class='en'>&nbsp;
<SYNC Start=11783960><P class='en'>flying. So this is our program stopped. This
is the reason because it&#39;s not handled. Now,
<SYNC Start=11784960><P class='en'>&nbsp;
<SYNC Start=11784960><P class='en'>we could also handle it to show you what&#39;s
the difference. Now the question is where
<SYNC Start=11785960><P class='en'>&nbsp;
<SYNC Start=11785960><P class='en'>to handle such an exception? Well, always
as early as possible, like at the class that
<SYNC Start=11786960><P class='en'>&nbsp;
<SYNC Start=11786960><P class='en'>can do something about the exception. In our
case, um, I just defined that. In the case
<SYNC Start=11787960><P class='en'>&nbsp;
<SYNC Start=11787960><P class='en'>that I get a wrong argument from from when
the program is called as an argument. I want
<SYNC Start=11788960><P class='en'>&nbsp;
<SYNC Start=11788960><P class='en'>this to be printed to the console, so that
the user knows which means I mean, I wanted
<SYNC Start=11789960><P class='en'>&nbsp;
<SYNC Start=11789960><P class='en'>to be printed here, which means the first
place where I can handle this exception is
<SYNC Start=11790960><P class='en'>&nbsp;
<SYNC Start=11790960><P class='en'>only here on the very top. And so there is
this new construct, I say, Troy, which is
<SYNC Start=11791960><P class='en'>&nbsp;
<SYNC Start=11791960><P class='en'>like telling the compiler, I know something
evil can happen. And I just want to try it.
<SYNC Start=11792960><P class='en'>&nbsp;
<SYNC Start=11792960><P class='en'>But now I can say catch. And I can catch this
runtime exception. Usually, I mean, I don&#39;t
<SYNC Start=11793960><P class='en'>&nbsp;
<SYNC Start=11793960><P class='en'>like really short variable names, because
they&#39;re not readable. But in the case of an
<SYNC Start=11794960><P class='en'>&nbsp;
<SYNC Start=11794960><P class='en'>exception, because an exception log is always
very, very short. The default is to call the
<SYNC Start=11795960><P class='en'>&nbsp;
<SYNC Start=11795960><P class='en'>exception for with E, for exception. And I
think here, this exception is okay. Because
<SYNC Start=11796960><P class='en'>&nbsp;
<SYNC Start=11796960><P class='en'>we don&#39;t want too much with the exception,
and the block will be so small that everyone
<SYNC Start=11797960><P class='en'>&nbsp;
<SYNC Start=11797960><P class='en'>knows the E is for the exception. Okay, so
curly braces. And now we can do various things.
<SYNC Start=11798960><P class='en'>&nbsp;
<SYNC Start=11798960><P class='en'>First of all, we could say e dot print stack
trace.
<SYNC Start=11799960><P class='en'>&nbsp;
<SYNC Start=11799960><P class='en'>Well, this is actually exactly what we have
here. This is the stack trace, the stack,
<SYNC Start=11800960><P class='en'>&nbsp;
<SYNC Start=11800960><P class='en'>you can think of as a list of all the methods
that were called in reverse order. So here
<SYNC Start=11801960><P class='en'>&nbsp;
<SYNC Start=11801960><P class='en'>you see main process from can also jump there.
I mean, this is not, this doesn&#39;t hold true
<SYNC Start=11802960><P class='en'>&nbsp;
<SYNC Start=11802960><P class='en'>anymore, because I&#39;ve no edits code. But at
the time, we executed this code, and the exception
<SYNC Start=11803960><P class='en'>&nbsp;
<SYNC Start=11803960><P class='en'>was thrown. This told us exactly in each class,
where the exception happened while he is still
<SYNC Start=11804960><P class='en'>&nbsp;
<SYNC Start=11804960><P class='en'>true. And he also, but in my car selector,
I have adjusted the code, by the way about
<SYNC Start=11805960><P class='en'>&nbsp;
<SYNC Start=11805960><P class='en'>this. The fact that I&#39;ve adjusted the code,
also, when you sometimes have a stack trace,
<SYNC Start=11806960><P class='en'>&nbsp;
<SYNC Start=11806960><P class='en'>and you need to analyze where it came from,
this is really often happening, that the code
<SYNC Start=11807960><P class='en'>&nbsp;
<SYNC Start=11807960><P class='en'>that is running on production is older than
the code that you develop on, because of course
<SYNC Start=11808960><P class='en'>&nbsp;
<SYNC Start=11808960><P class='en'>development continues. And then you can only
find out the exact place where the exception
<SYNC Start=11809960><P class='en'>&nbsp;
<SYNC Start=11809960><P class='en'>happened, if you keep the exact same code
that you have running on production. Yeah,
<SYNC Start=11810960><P class='en'>&nbsp;
<SYNC Start=11810960><P class='en'>but this only really, I don&#39;t want to go into
more details. Um, this would be a topic on
<SYNC Start=11811960><P class='en'>&nbsp;
<SYNC Start=11811960><P class='en'>its own, again, about revision control. And
this is really a huge topic. But yeah, just
<SYNC Start=11812960><P class='en'>&nbsp;
<SYNC Start=11812960><P class='en'>that, you know, the stack trace is really
helpful if and only if you have exactly the
<SYNC Start=11813960><P class='en'>&nbsp;
<SYNC Start=11813960><P class='en'>same code that was implemented at the time
this code was running. I mean, that they&#39;re
<SYNC Start=11814960><P class='en'>&nbsp;
<SYNC Start=11814960><P class='en'>both in sync. Okay, so print sectors here
wouldn&#39;t make sense, because in this case,
<SYNC Start=11815960><P class='en'>&nbsp;
<SYNC Start=11815960><P class='en'>it&#39;s just the default anyway. But this can
be used. And it&#39;s often used to lock for example,
<SYNC Start=11816960><P class='en'>&nbsp;
<SYNC Start=11816960><P class='en'>in I don&#39;t know, was it Episode 13? I think
I talked about logging. And so when you want
<SYNC Start=11817960><P class='en'>&nbsp;
<SYNC Start=11817960><P class='en'>to log an exception, you can do it like this.
This is usually how you do it. Well, I haven&#39;t
<SYNC Start=11818960><P class='en'>&nbsp;
<SYNC Start=11818960><P class='en'>got the log class here. And I don&#39;t want to
do log error or log one you will say and this
<SYNC Start=11819960><P class='en'>&nbsp;
<SYNC Start=11819960><P class='en'>depends error only when there is something
that has to be done. For example, a database
<SYNC Start=11820960><P class='en'>&nbsp;
<SYNC Start=11820960><P class='en'>that has to be restarted. In other cases,
probably one is also okay. Okay, message is
<SYNC Start=11821960><P class='en'>&nbsp;
<SYNC Start=11821960><P class='en'>the string that I added into the constructor
of the exception
<SYNC Start=11822960><P class='en'>&nbsp;
<SYNC Start=11822960><P class='en'>here.
<SYNC Start=11823960><P class='en'>&nbsp;
<SYNC Start=11823960><P class='en'>And I have removed the stack trace, because
this is actually done inside of the log object,
<SYNC Start=11824960><P class='en'>&nbsp;
<SYNC Start=11824960><P class='en'>which I want to add. Now. If you want to know
more about logging, have a look at my episode
<SYNC Start=11825960><P class='en'>&nbsp;
<SYNC Start=11825960><P class='en'>13 where I explain logging in detail. Okay,
so logging is one thing we can do. But in
<SYNC Start=11826960><P class='en'>&nbsp;
<SYNC Start=11826960><P class='en'>this case, I say I don&#39;t want to log it, I
want to directly printed on the console. I
<SYNC Start=11827960><P class='en'>&nbsp;
<SYNC Start=11827960><P class='en'>think also in the episode about logging, I
want you not to do it always to prefer logging.
<SYNC Start=11828960><P class='en'>&nbsp;
<SYNC Start=11828960><P class='en'>But in this case, let&#39;s assume we have just
a very small program only be used to run something
<SYNC Start=11829960><P class='en'>&nbsp;
<SYNC Start=11829960><P class='en'>from the console. And in this case, it can
be okay to just say system error dot Clinton.
<SYNC Start=11830960><P class='en'>&nbsp;
<SYNC Start=11830960><P class='en'>Which I also wanted to show you once print
ln For new line, and here, then I can say
<SYNC Start=11831960><P class='en'>&nbsp;
<SYNC Start=11831960><P class='en'>dot get message. Or I can also say e dot print
stack trace, which doesn&#39;t make sense, because
<SYNC Start=11832960><P class='en'>&nbsp;
<SYNC Start=11832960><P class='en'>we already have that. So to alter the behavior,
let&#39;s do this. Okay, let&#39;s run it again. Now,
<SYNC Start=11833960><P class='en'>&nbsp;
<SYNC Start=11833960><P class='en'>you see something else. You see the program
hasn&#39;t stopped. But instead we see unknown
<SYNC Start=11834960><P class='en'>&nbsp;
<SYNC Start=11834960><P class='en'>state flying Unknown, Unknown state driving
an unknown state abcdefg. Yeah, so all the
<SYNC Start=11835960><P class='en'>&nbsp;
<SYNC Start=11835960><P class='en'>invalid states were printed out. Without we
don&#39;t even see the exception anymore. And
<SYNC Start=11836960><P class='en'>&nbsp;
<SYNC Start=11836960><P class='en'>it&#39;s red, because I use system error Clinton,
I could also use out print on because this
<SYNC Start=11837960><P class='en'>&nbsp;
<SYNC Start=11837960><P class='en'>is a special channel, only for errors. And
this is printing in general. See, now it&#39;s
<SYNC Start=11838960><P class='en'>&nbsp;
<SYNC Start=11838960><P class='en'>white. But really, I still warn you don&#39;t
overuse system out or system error print on.
<SYNC Start=11839960><P class='en'>&nbsp;
<SYNC Start=11839960><P class='en'>Because Yeah, you can&#39;t configure it like
you can configure logging. So in 99% of the
<SYNC Start=11840960><P class='en'>&nbsp;
<SYNC Start=11840960><P class='en'>cases, using a logger is better. Anyway. So
let&#39;s have a look at the code now and think
<SYNC Start=11841960><P class='en'>&nbsp;
<SYNC Start=11841960><P class='en'>is this really nice. Now, we have a for loop,
we have a try, we have a catch. Um, you see
<SYNC Start=11842960><P class='en'>&nbsp;
<SYNC Start=11842960><P class='en'>a lot of different hierarchies and a lot of
different levels that we have to understand.
<SYNC Start=11843960><P class='en'>&nbsp;
<SYNC Start=11843960><P class='en'>And this is something I really don&#39;t like,
this makes the code quite complicated. Okay,
<SYNC Start=11844960><P class='en'>&nbsp;
<SYNC Start=11844960><P class='en'>so this is something you should try to prevent.
And, anyway, I can also, alternatively show
<SYNC Start=11845960><P class='en'>&nbsp;
<SYNC Start=11845960><P class='en'>you, we could do exactly the same.
<SYNC Start=11846960><P class='en'>&nbsp;
<SYNC Start=11846960><P class='en'>If this was throwing an exception. The only
difference is that if we&#39;re not handling it,
<SYNC Start=11847960><P class='en'>&nbsp;
<SYNC Start=11847960><P class='en'>we have to add the signature
<SYNC Start=11848960><P class='en'>&nbsp;
<SYNC Start=11848960><P class='en'>throws throws. So yeah. Maybe also, I should
now show you the alternative. If If we don&#39;t
<SYNC Start=11849960><P class='en'>&nbsp;
<SYNC Start=11849960><P class='en'>want to add the method signature, the exception
signature, we can directly in here, say catch
<SYNC Start=11850960><P class='en'>&nbsp;
<SYNC Start=11850960><P class='en'>and then handle it. And then I mean, handling
an exception does not necessarily always mean
<SYNC Start=11851960><P class='en'>&nbsp;
<SYNC Start=11851960><P class='en'>you have to print it, I mean, printing, it
doesn&#39;t really solve the exception, it might
<SYNC Start=11852960><P class='en'>&nbsp;
<SYNC Start=11852960><P class='en'>be even better to really have a method that
does something about the exception, and which
<SYNC Start=11853960><P class='en'>&nbsp;
<SYNC Start=11853960><P class='en'>I call no handle the exception. The only problem
with that is, and I&#39;m not implementing the
<SYNC Start=11854960><P class='en'>&nbsp;
<SYNC Start=11854960><P class='en'>method now. And this is what I said before,
I&#39;m the case that you&#39;re really able to do
<SYNC Start=11855960><P class='en'>&nbsp;
<SYNC Start=11855960><P class='en'>something about the exception, which in this
case, I mean, what could we do, if the user
<SYNC Start=11856960><P class='en'>&nbsp;
<SYNC Start=11856960><P class='en'>typed in something wrong? There&#39;s not much
we can do? Well, there is one thing, we could
<SYNC Start=11857960><P class='en'>&nbsp;
<SYNC Start=11857960><P class='en'>for example, ask the user to type in to fix
the state he typed in. But this we couldn&#39;t
<SYNC Start=11858960><P class='en'>&nbsp;
<SYNC Start=11858960><P class='en'>handle here. So again, if we want to, like
ask the user to do something about it, I would
<SYNC Start=11859960><P class='en'>&nbsp;
<SYNC Start=11859960><P class='en'>instead validate
<SYNC Start=11860960><P class='en'>&nbsp;
<SYNC Start=11860960><P class='en'>the state. So let&#39;s remove all that. Let&#39;s
for the time being I add the runtime exception,
<SYNC Start=11861960><P class='en'>&nbsp;
<SYNC Start=11861960><P class='en'>but I will change it very soon, because now
instead, I want a validation at it. And this
<SYNC Start=11862960><P class='en'>&nbsp;
<SYNC Start=11862960><P class='en'>can be done in the following way. I remove
all that trycatch instead, I say Valley date
<SYNC Start=11863960><P class='en'>&nbsp;
<SYNC Start=11863960><P class='en'>argument and now I can implement that method.
Create method validate my ad he helps me again.
<SYNC Start=11864960><P class='en'>&nbsp;
<SYNC Start=11864960><P class='en'>I&#39;m
<SYNC Start=11865960><P class='en'>&nbsp;
<SYNC Start=11865960><P class='en'>now well actually I want to say is valid with
a Boolean returned. Okay. Now, you see this
<SYNC Start=11866960><P class='en'>&nbsp;
<SYNC Start=11866960><P class='en'>is also interesting, by the way about the
main method because this method is static.
<SYNC Start=11867960><P class='en'>&nbsp;
<SYNC Start=11867960><P class='en'>Also, this Method automatically esthetic.
So because when this method is static, a static
<SYNC Start=11868960><P class='en'>&nbsp;
<SYNC Start=11868960><P class='en'>method cannot call a method that is not static,
because an instance method can only be called
<SYNC Start=11869960><P class='en'>&nbsp;
<SYNC Start=11869960><P class='en'>when there is an instance. But for the main
method, we won&#39;t create any instance, of course
<SYNC Start=11870960><P class='en'>&nbsp;
<SYNC Start=11870960><P class='en'>selector. So for this reason this is static,
and it&#39;s private, because we don&#39;t need to
<SYNC Start=11871960><P class='en'>&nbsp;
<SYNC Start=11871960><P class='en'>call it from outside, only the main method
will call it. Now how can we validate it?
<SYNC Start=11872960><P class='en'>&nbsp;
<SYNC Start=11872960><P class='en'>Well, for example, we could use a method directly
provided to us from the enum class, and that
<SYNC Start=11873960><P class='en'>&nbsp;
<SYNC Start=11873960><P class='en'>is value of this is not implemented by us.
But it&#39;s implemented, like automatically,
<SYNC Start=11874960><P class='en'>&nbsp;
<SYNC Start=11874960><P class='en'>when they implemented when they invented the
enum and Java, this is one method that you
<SYNC Start=11875960><P class='en'>&nbsp;
<SYNC Start=11875960><P class='en'>get for free. So this will directly try to
convert your string to an enum. So here I
<SYNC Start=11876960><P class='en'>&nbsp;
<SYNC Start=11876960><P class='en'>can say car stayed. Cars date. So this actually
does exactly the same thing. Like our switch
<SYNC Start=11877960><P class='en'>&nbsp;
<SYNC Start=11877960><P class='en'>did. So actually, we won&#39;t need it anymore.
Very soon. The difference to the method that
<SYNC Start=11878960><P class='en'>&nbsp;
<SYNC Start=11878960><P class='en'>I implemented is or bill, I did it actually
also like this, when the conversion doesn&#39;t
<SYNC Start=11879960><P class='en'>&nbsp;
<SYNC Start=11879960><P class='en'>work, this will throw a runtime exception,
I think, an in because they have different
<SYNC Start=11880960><P class='en'>&nbsp;
<SYNC Start=11880960><P class='en'>types of runtime exceptions. And I think it
will be an illegal argument exception to tell
<SYNC Start=11881960><P class='en'>&nbsp;
<SYNC Start=11881960><P class='en'>us the argument that you are giving that you
are giving to me, sorry, is invalid. But still,
<SYNC Start=11882960><P class='en'>&nbsp;
<SYNC Start=11882960><P class='en'>it&#39;s a runtime exception. So and because this
will throw an exception, we have to add the
<SYNC Start=11883960><P class='en'>&nbsp;
<SYNC Start=11883960><P class='en'>try catch block here, because we want to handle
this. Try catch. And then I say runtime exception
<SYNC Start=11884960><P class='en'>&nbsp;
<SYNC Start=11884960><P class='en'>he or I hope I&#39;m right. I can directly say
in valid on
<SYNC Start=11885960><P class='en'>&nbsp;
<SYNC Start=11885960><P class='en'>invalid
<SYNC Start=11886960><P class='en'>&nbsp;
<SYNC Start=11886960><P class='en'>human exemption, there it is. I think that
should be the one if not, we will see it because
<SYNC Start=11887960><P class='en'>&nbsp;
<SYNC Start=11887960><P class='en'>the exception will not be caught. Okay, and
then here, we can just return false without
<SYNC Start=11888960><P class='en'>&nbsp;
<SYNC Start=11888960><P class='en'>logging anything.
<SYNC Start=11889960><P class='en'>&nbsp;
<SYNC Start=11889960><P class='en'>Now,
<SYNC Start=11890960><P class='en'>&nbsp;
<SYNC Start=11890960><P class='en'>let&#39;s see, this is the wrong one, because
we can&#39;t catch an exception that is never
<SYNC Start=11891960><P class='en'>&nbsp;
<SYNC Start=11891960><P class='en'>thrown. So invalid. Let&#39;s see what the lead
catch. Now this is not what I want. Maybe
<SYNC Start=11892960><P class='en'>&nbsp;
<SYNC Start=11892960><P class='en'>it&#39;s an invalid state exception. Yeah, this
works. So see, this is also how you see this
<SYNC Start=11893960><P class='en'>&nbsp;
<SYNC Start=11893960><P class='en'>value off may throw an invalid state exception
if the argument given is unknown, in case
<SYNC Start=11894960><P class='en'>&nbsp;
<SYNC Start=11894960><P class='en'>of, for example, flying driving ABC. Okay.
<SYNC Start=11895960><P class='en'>&nbsp;
<SYNC Start=11895960><P class='en'>And
<SYNC Start=11896960><P class='en'>&nbsp;
<SYNC Start=11896960><P class='en'>to be honest,
<SYNC Start=11897960><P class='en'>&nbsp;
<SYNC Start=11897960><P class='en'>um,
<SYNC Start=11898960><P class='en'>&nbsp;
<SYNC Start=11898960><P class='en'>I think this is also not optimal, that we
only have this value off method, I think it
<SYNC Start=11899960><P class='en'>&nbsp;
<SYNC Start=11899960><P class='en'>would be much, much nicer if the IEM base
class will directly provide is valid method
<SYNC Start=11900960><P class='en'>&nbsp;
<SYNC Start=11900960><P class='en'>just returning true and false. But again,
seems like the inventors of Java doesn&#39;t didn&#39;t
<SYNC Start=11901960><P class='en'>&nbsp;
<SYNC Start=11901960><P class='en'>listen to my opinion, crap, just making a
stupid joke.
<SYNC Start=11902960><P class='en'>&nbsp;
<SYNC Start=11902960><P class='en'>So for this reason, we do have the exception,
but we are able to convert it. So because
<SYNC Start=11903960><P class='en'>&nbsp;
<SYNC Start=11903960><P class='en'>we converting it directly. The exception doesn&#39;t
be doesn&#39;t pollute our whole system, let&#39;s
<SYNC Start=11904960><P class='en'>&nbsp;
<SYNC Start=11904960><P class='en'>say like this. And we can now say here, return
true. Which we could also put at the end of
<SYNC Start=11905960><P class='en'>&nbsp;
<SYNC Start=11905960><P class='en'>the method. This is exactly the same. Yeah.
So wherever you have it. So and this is also
<SYNC Start=11906960><P class='en'>&nbsp;
<SYNC Start=11906960><P class='en'>the jump. I mean, imagine you could have lots
of other code like system out print owns and
<SYNC Start=11907960><P class='en'>&nbsp;
<SYNC Start=11907960><P class='en'>just print something. So you could have many,
many more lines. That would do lots of stuff.
<SYNC Start=11908960><P class='en'>&nbsp;
<SYNC Start=11908960><P class='en'>Let&#39;s just copy and paste that to show you
many more lines. We could even reassign car
<SYNC Start=11909960><P class='en'>&nbsp;
<SYNC Start=11909960><P class='en'>state to something else. Let&#39;s just say now.
So what happens if This line of code doesn&#39;t
<SYNC Start=11910960><P class='en'>&nbsp;
<SYNC Start=11910960><P class='en'>work out, because the argument is unknown,
for example, flying. When the code is executed,
<SYNC Start=11911960><P class='en'>&nbsp;
<SYNC Start=11911960><P class='en'>the execution will jump from here, directly
into the catch. So this is leaving the normal
<SYNC Start=11912960><P class='en'>&nbsp;
<SYNC Start=11912960><P class='en'>program flow, the normal program flow would
go from line 2122 2324 25, and so on. But
<SYNC Start=11913960><P class='en'>&nbsp;
<SYNC Start=11913960><P class='en'>here we&#39;re jumping from line 21. To line 28.
Yeah, and this is helpful, because, for example,
<SYNC Start=11914960><P class='en'>&nbsp;
<SYNC Start=11914960><P class='en'>imagine we have done this several times, for
examples here. And there, even maybe in sub
<SYNC Start=11915960><P class='en'>&nbsp;
<SYNC Start=11915960><P class='en'>methods, then we have just one catch, that
would handle all these different places where
<SYNC Start=11916960><P class='en'>&nbsp;
<SYNC Start=11916960><P class='en'>an invalid state exception could happen. That&#39;s
the idea of exception handling. Okay, just
<SYNC Start=11917960><P class='en'>&nbsp;
<SYNC Start=11917960><P class='en'>to give you some more details, actually, I
don&#39;t even need that. So I would remove it.
<SYNC Start=11918960><P class='en'>&nbsp;
<SYNC Start=11918960><P class='en'>We&#39;re only like, abusing that volume of method
to have the information. Is that valid or
<SYNC Start=11919960><P class='en'>&nbsp;
<SYNC Start=11919960><P class='en'>not? Okay, and now I can react on that. I
can say if not valid, or I can say only, like,
<SYNC Start=11920960><P class='en'>&nbsp;
<SYNC Start=11920960><P class='en'>only process it if it&#39;s valid. Yeah, maybe
let&#39;s do this. Because you saw already hold
<SYNC Start=11921960><P class='en'>&nbsp;
<SYNC Start=11921960><P class='en'>the invalid states are printed. Now let&#39;s
do something else. Let&#39;s only process valid
<SYNC Start=11922960><P class='en'>&nbsp;
<SYNC Start=11922960><P class='en'>arguments. The question, of course, is, does
that make sense? Now we wouldn&#39;t even realize
<SYNC Start=11923960><P class='en'>&nbsp;
<SYNC Start=11923960><P class='en'>we have a problem in our code. So maybe we
should also say else. Print that we have problem.
<SYNC Start=11924960><P class='en'>&nbsp;
<SYNC Start=11924960><P class='en'>system error dot print. ln M. invalid. argument
given? Or let&#39;s say ignoring, ignoring invalid
<SYNC Start=11925960><P class='en'>&nbsp;
<SYNC Start=11925960><P class='en'>argument. So this, by the way, whenever you
log, I think I&#39;m not repeating myself, because
<SYNC Start=11926960><P class='en'>&nbsp;
<SYNC Start=11926960><P class='en'>I already talked about logging, but I can&#39;t
say it often enough. Always add as many arguments
<SYNC Start=11927960><P class='en'>&nbsp;
<SYNC Start=11927960><P class='en'>as possible, so that whoever is responsible
for a problem knows why this happens. Otherwise,
<SYNC Start=11928960><P class='en'>&nbsp;
<SYNC Start=11928960><P class='en'>yeah, it&#39;s really hard to understand why something
doesn&#39;t work out. Oh, no, we still have an
<SYNC Start=11929960><P class='en'>&nbsp;
<SYNC Start=11929960><P class='en'>illegal argument exception. How is that? I
don&#39;t know. And this is interesting, because
<SYNC Start=11930960><P class='en'>&nbsp;
<SYNC Start=11930960><P class='en'>we can now check. Like, this is what I told
you. It&#39;s in car state. There&#39;s, ah, we still
<SYNC Start=11931960><P class='en'>&nbsp;
<SYNC Start=11931960><P class='en'>have the from it seems like we call it somewhere.
But no, I&#39;m wrong. Because the session line
<SYNC Start=11932960><P class='en'>&nbsp;
<SYNC Start=11932960><P class='en'>five, so this is not yet. Car state. Illegal
Aha, this is why See, I was wrong. This is
<SYNC Start=11933960><P class='en'>&nbsp;
<SYNC Start=11933960><P class='en'>the invalid state exception. And what is actually
thrown by Java is the illegal argument exception.
<SYNC Start=11934960><P class='en'>&nbsp;
<SYNC Start=11934960><P class='en'>So see, this is actually what happens most
that we see it. No, no constant flying. So
<SYNC Start=11935960><P class='en'>&nbsp;
<SYNC Start=11935960><P class='en'>this is what Java gives us. It throws an exception.
And this now we will catch. Okay, let&#39;s retry.
<SYNC Start=11936960><P class='en'>&nbsp;
<SYNC Start=11936960><P class='en'>See, this is how everyone introduces sparks.
And this is why we need tests. Today, I&#39;m
<SYNC Start=11937960><P class='en'>&nbsp;
<SYNC Start=11937960><P class='en'>not doing a test because I just want to show
you exceptions. But
<SYNC Start=11938960><P class='en'>&nbsp;
<SYNC Start=11938960><P class='en'>yeah. We do need tests. Tests are very important.
Okay, now it works. See, ignoring invalid
<SYNC Start=11939960><P class='en'>&nbsp;
<SYNC Start=11939960><P class='en'>argument flying ignoring new argument driving,
ignoring invalid argument abcdefg. And the
<SYNC Start=11940960><P class='en'>&nbsp;
<SYNC Start=11940960><P class='en'>valid argument was processed. It just didn&#39;t
lock just didn&#39;t do anything. Which of course
<SYNC Start=11941960><P class='en'>&nbsp;
<SYNC Start=11941960><P class='en'>we can change. Here we could say system out
print. ln, again, this thing here is evil.
<SYNC Start=11942960><P class='en'>&nbsp;
<SYNC Start=11942960><P class='en'>Only use it in very rare situations. Yeah.
I can say bellet. Stayed. Car stayed. executed
<SYNC Start=11943960><P class='en'>&nbsp;
<SYNC Start=11943960><P class='en'>again. Yeah, so you see three invalid states
and two valid states. Okay. So of course,
<SYNC Start=11944960><P class='en'>&nbsp;
<SYNC Start=11944960><P class='en'>I mean, this was just an issue. Sample Normally,
you would have some method doing something
<SYNC Start=11945960><P class='en'>&nbsp;
<SYNC Start=11945960><P class='en'>about the state
<SYNC Start=11946960><P class='en'>&nbsp;
<SYNC Start=11946960><P class='en'>further,
<SYNC Start=11947960><P class='en'>&nbsp;
<SYNC Start=11947960><P class='en'>do something with the car state. I mean, I&#39;m
just making this up, because all I want to
<SYNC Start=11948960><P class='en'>&nbsp;
<SYNC Start=11948960><P class='en'>explain you is exception handling, but I hope
you get the idea. So anyway, there&#39;s one more
<SYNC Start=11949960><P class='en'>&nbsp;
<SYNC Start=11949960><P class='en'>thing. And then actually, I would like to,
like, shortly recap the important points of
<SYNC Start=11950960><P class='en'>&nbsp;
<SYNC Start=11950960><P class='en'>exception handling. And the missing thing
now is, oh, by the way, let&#39;s remove the from,
<SYNC Start=11951960><P class='en'>&nbsp;
<SYNC Start=11951960><P class='en'>because I showed you, we don&#39;t actually even
need this anymore. Okay. Because what you
<SYNC Start=11952960><P class='en'>&nbsp;
<SYNC Start=11952960><P class='en'>can also do is finally, finally, this is very
important, not in our case, now, I&#39;m just
<SYNC Start=11953960><P class='en'>&nbsp;
<SYNC Start=11953960><P class='en'>making some something up. Finally, as the
name implies, this is done. Finally, at the
<SYNC Start=11954960><P class='en'>&nbsp;
<SYNC Start=11954960><P class='en'>end, no matter even exception happened or
not, this block will always be called. And
<SYNC Start=11955960><P class='en'>&nbsp;
<SYNC Start=11955960><P class='en'>this is important. When you have resources,
when you have input output operations, or
<SYNC Start=11956960><P class='en'>&nbsp;
<SYNC Start=11956960><P class='en'>in short I O, which you have, if you communicate
with a database, if you read something from
<SYNC Start=11957960><P class='en'>&nbsp;
<SYNC Start=11957960><P class='en'>a file from your hard disk, Yeah, something
like this. Because when you like read something,
<SYNC Start=11958960><P class='en'>&nbsp;
<SYNC Start=11958960><P class='en'>especially from external systems, who can
tell you that the external system is actually
<SYNC Start=11959960><P class='en'>&nbsp;
<SYNC Start=11959960><P class='en'>available, or like the hard disk could fail.
And so with i o operations, there&#39;s always
<SYNC Start=11960960><P class='en'>&nbsp;
<SYNC Start=11960960><P class='en'>nasty stuff that can happen. But there&#39;s one
important thing, which is, for AI operations,
<SYNC Start=11961960><P class='en'>&nbsp;
<SYNC Start=11961960><P class='en'>you need resources. And so you have to close
them. In any case, otherwise, you really could
<SYNC Start=11962960><P class='en'>&nbsp;
<SYNC Start=11962960><P class='en'>have a problem with more and more resources
lost. So yeah, this is a big topic, I can&#39;t
<SYNC Start=11963960><P class='en'>&nbsp;
<SYNC Start=11963960><P class='en'>explain it in like a second. But all I want
to tell you for now, this finally is very
<SYNC Start=11964960><P class='en'>&nbsp;
<SYNC Start=11964960><P class='en'>important when you deal with IO operations
that might fail. And in this case, you can
<SYNC Start=11965960><P class='en'>&nbsp;
<SYNC Start=11965960><P class='en'>close these resources and close resource for
now I&#39;m just giving you my resource, this
<SYNC Start=11966960><P class='en'>&nbsp;
<SYNC Start=11966960><P class='en'>stupid method. You can implement that yourself.
But also they are very cool. Helping utility
<SYNC Start=11967960><P class='en'>&nbsp;
<SYNC Start=11967960><P class='en'>classes found on the internet, open source.
Like for example, I Oh, utils. Oh, it already
<SYNC Start=11968960><P class='en'>&nbsp;
<SYNC Start=11968960><P class='en'>find something. But this is not the one I
mean, the one I know of is for example, I
<SYNC Start=11969960><P class='en'>&nbsp;
<SYNC Start=11969960><P class='en'>think from Apache, and they will have something
like close thing silently or so close resource.
<SYNC Start=11970960><P class='en'>&nbsp;
<SYNC Start=11970960><P class='en'>And then this will do all the nasty stuff
for you. Okay, I&#39;m stopping here, what is
<SYNC Start=11971960><P class='en'>&nbsp;
<SYNC Start=11971960><P class='en'>important is, and this I want to show you
just by printing something system out, print,
<SYNC Start=11972960><P class='en'>&nbsp;
<SYNC Start=11972960><P class='en'>ln.
<SYNC Start=11973960><P class='en'>&nbsp;
<SYNC Start=11973960><P class='en'>And I will throw the exception again. Which
means what you can also do is you don&#39;t even
<SYNC Start=11974960><P class='en'>&nbsp;
<SYNC Start=11974960><P class='en'>have to catch it. This also works try and
darkly finally. Okay, formatted the code.
<SYNC Start=11975960><P class='en'>&nbsp;
<SYNC Start=11975960><P class='en'>So, now with the invalid argument, our program
will be stopped, execution will be stopped.
<SYNC Start=11976960><P class='en'>&nbsp;
<SYNC Start=11976960><P class='en'>But in any case, let&#39;s say I am still running.
And I can also show you this line will not
<SYNC Start=11977960><P class='en'>&nbsp;
<SYNC Start=11977960><P class='en'>be printed after exception. Well, it might
be that this runs once if the first argument
<SYNC Start=11978960><P class='en'>&nbsp;
<SYNC Start=11978960><P class='en'>is a valid one. Because with the string airy,
we never know for sure the order is not guaranteed.
<SYNC Start=11979960><P class='en'>&nbsp;
<SYNC Start=11979960><P class='en'>But so that you see, I would whatever happens
for this vote for every time we call is valid.
<SYNC Start=11980960><P class='en'>&nbsp;
<SYNC Start=11980960><P class='en'>This will always be printed. So let&#39;s see
what happens. Okay, oh, something&#39;s still
<SYNC Start=11981960><P class='en'>&nbsp;
<SYNC Start=11981960><P class='en'>wrong. Not Found. Yeah, because we have removed
the from Yeah, sure. Um,
<SYNC Start=11982960><P class='en'>&nbsp;
<SYNC Start=11982960><P class='en'>so let&#39;s for now remove that. We at the moment,
don&#39;t need it. And see, this is again, the
<SYNC Start=11983960><P class='en'>&nbsp;
<SYNC Start=11983960><P class='en'>reason why we need tests.
<SYNC Start=11984960><P class='en'>&nbsp;
<SYNC Start=11984960><P class='en'>I&#39;m really doing some nasty hacking at the
moment. Okay, and you see, I&#39;m still running
<SYNC Start=11985960><P class='en'>&nbsp;
<SYNC Start=11985960><P class='en'>And then the exception comes. So this is what
happens when the exception happens. We didn&#39;t
<SYNC Start=11986960><P class='en'>&nbsp;
<SYNC Start=11986960><P class='en'>catch it. So we see the stack trace instead.
But I&#39;m still running is printed before that.
<SYNC Start=11987960><P class='en'>&nbsp;
<SYNC Start=11987960><P class='en'>And this is the place where we can do some
cleanup operations, like closing resources.
<SYNC Start=11988960><P class='en'>&nbsp;
<SYNC Start=11988960><P class='en'>But you could do anything in here, basically.
Same thing, if we catch it, catch is a runtime
<SYNC Start=11989960><P class='en'>&nbsp;
<SYNC Start=11989960><P class='en'>exception, runtime exception, because it&#39;s
also a runtime exception. We should talk about
<SYNC Start=11990960><P class='en'>&nbsp;
<SYNC Start=11990960><P class='en'>inheritance very soon. So that I can go in
more details why that is. So now what is wrong?
<SYNC Start=11991960><P class='en'>&nbsp;
<SYNC Start=11991960><P class='en'>Yeah, we need the closing curly brace, and
one less of this. So now we can say, oh, maybe
<SYNC Start=11992960><P class='en'>&nbsp;
<SYNC Start=11992960><P class='en'>I just have I will also show you print stack
trace. So this should actually do the same.
<SYNC Start=11993960><P class='en'>&nbsp;
<SYNC Start=11993960><P class='en'>And now I will say, system out. print on.
<SYNC Start=11994960><P class='en'>&nbsp;
<SYNC Start=11994960><P class='en'>Hello, again.
<SYNC Start=11995960><P class='en'>&nbsp;
<SYNC Start=11995960><P class='en'>So you get an idea. In finally block.
<SYNC Start=11996960><P class='en'>&nbsp;
<SYNC Start=11996960><P class='en'>Oh, okay.
<SYNC Start=11997960><P class='en'>&nbsp;
<SYNC Start=11997960><P class='en'>Oh, no, something weird happened. And this
is for all the invalid states flying driving.
<SYNC Start=11998960><P class='en'>&nbsp;
<SYNC Start=11998960><P class='en'>The stack trace was printed. And it&#39;s red.
Because, yeah, it&#39;s the print stack trace.
<SYNC Start=11999960><P class='en'>&nbsp;
<SYNC Start=11999960><P class='en'>So it&#39;s printed on system error. Okay. And
you see, this is the illegal argument exception,
<SYNC Start=12000960><P class='en'>&nbsp;
<SYNC Start=12000960><P class='en'>the first one, the second one, and so on.
And you see at the end, hello again. Which
<SYNC Start=12001960><P class='en'>&nbsp;
<SYNC Start=12001960><P class='en'>comes after the whole stack trace. Yeah. And
you&#39;ll also see this line will not be printed
<SYNC Start=12002960><P class='en'>&nbsp;
<SYNC Start=12002960><P class='en'>off to exception. Because it seems like I
mean, we had different arguments in here.
<SYNC Start=12003960><P class='en'>&nbsp;
<SYNC Start=12003960><P class='en'>So for the valid ones, this line was printed.
And you see also, I mean, now I&#39;m really having
<SYNC Start=12004960><P class='en'>&nbsp;
<SYNC Start=12004960><P class='en'>a hard time knowing why this happened. So
again, I violated my own rule. I didn&#39;t add
<SYNC Start=12005960><P class='en'>&nbsp;
<SYNC Start=12005960><P class='en'>the argument. So here I can say, our arguement.
I say valid argument. Yeah, because if it&#39;s
<SYNC Start=12006960><P class='en'>&nbsp;
<SYNC Start=12006960><P class='en'>after the value of if this is printed, it
means the exception did not happen. Now, let&#39;s
<SYNC Start=12007960><P class='en'>&nbsp;
<SYNC Start=12007960><P class='en'>call this again. And let me also remove the
stack trace for now to make it a bit more
<SYNC Start=12008960><P class='en'>&nbsp;
<SYNC Start=12008960><P class='en'>readable for us. And let&#39;s run the main method
again. Okay, see now it&#39;s more readable. So
<SYNC Start=12009960><P class='en'>&nbsp;
<SYNC Start=12009960><P class='en'>what do we have here? Hello again. So the
runtime exception happened. And, again, I
<SYNC Start=12010960><P class='en'>&nbsp;
<SYNC Start=12010960><P class='en'>did not add the argument. In this case, I
can also say get message, which gets us the
<SYNC Start=12011960><P class='en'>&nbsp;
<SYNC Start=12011960><P class='en'>message of the exception. I&#39;m not sure if
our illegal argument exception has a message.
<SYNC Start=12012960><P class='en'>&nbsp;
<SYNC Start=12012960><P class='en'>But we&#39;ll try this.
<SYNC Start=12013960><P class='en'>&nbsp;
<SYNC Start=12013960><P class='en'>Yeah, see, this is the message Hello again.
And the message is no II non constant car
<SYNC Start=12014960><P class='en'>&nbsp;
<SYNC Start=12014960><P class='en'>marktspiegel car stayed flying. So now you
see he can understand the problem so much
<SYNC Start=12015960><P class='en'>&nbsp;
<SYNC Start=12015960><P class='en'>better. And after this we under finally block
then comes the valid argument parking. In
<SYNC Start=12016960><P class='en'>&nbsp;
<SYNC Start=12016960><P class='en'>this case, we&#39;re also ending in the finally
block. Then comes a second valid argument.
<SYNC Start=12017960><P class='en'>&nbsp;
<SYNC Start=12017960><P class='en'>Also in the finally block. Here again comes
in invalid state
<SYNC Start=12018960><P class='en'>&nbsp;
<SYNC Start=12018960><P class='en'>thriving,
<SYNC Start=12019960><P class='en'>&nbsp;
<SYNC Start=12019960><P class='en'>but we&#39;re also in the finally block. And the
last invalid state also in the final block.
<SYNC Start=12020960><P class='en'>&nbsp;
<SYNC Start=12020960><P class='en'>So the finally block is always executed all
K. I think this pretty much rounds up everything
<SYNC Start=12021960><P class='en'>&nbsp;
<SYNC Start=12021960><P class='en'>I wanted to tell you about Exception Handling
today. Now because this was quite a lot. Let&#39;s
<SYNC Start=12022960><P class='en'>&nbsp;
<SYNC Start=12022960><P class='en'>go Shortly through the most important gotchas,
okay, so, in Java, there are runtime exceptions,
<SYNC Start=12023960><P class='en'>&nbsp;
<SYNC Start=12023960><P class='en'>which are unchecked exceptions, unchecked
means they are not enforced by the compiler
<SYNC Start=12024960><P class='en'>&nbsp;
<SYNC Start=12024960><P class='en'>to be handled, you can just throw them, and
also Java will throw them for you. For example,
<SYNC Start=12025960><P class='en'>&nbsp;
<SYNC Start=12025960><P class='en'>a very famous or infamous exception is the
null pointer exception, you should never throw
<SYNC Start=12026960><P class='en'>&nbsp;
<SYNC Start=12026960><P class='en'>that yourself, Java will throw that for you,
if you try to access something that is at
<SYNC Start=12027960><P class='en'>&nbsp;
<SYNC Start=12027960><P class='en'>the moment now, just now for the exception
is probably the most famous exception, because
<SYNC Start=12028960><P class='en'>&nbsp;
<SYNC Start=12028960><P class='en'>when it happens, you will not be very happy.
Okay? So unchecked exceptions, or runtime
<SYNC Start=12029960><P class='en'>&nbsp;
<SYNC Start=12029960><P class='en'>exceptions. And they can happen at any line,
because any line can also be null. And they
<SYNC Start=12030960><P class='en'>&nbsp;
<SYNC Start=12030960><P class='en'>don&#39;t have to be handled in code. If they&#39;re
not, then in the worst case, the program will
<SYNC Start=12031960><P class='en'>&nbsp;
<SYNC Start=12031960><P class='en'>stop, like we saw before, because the exception
will bubble up all to the top. And if it&#39;s
<SYNC Start=12032960><P class='en'>&nbsp;
<SYNC Start=12032960><P class='en'>not handled in here, the program will stop.
And it will by default, print the stack trace.
<SYNC Start=12033960><P class='en'>&nbsp;
<SYNC Start=12033960><P class='en'>Then Java was the first and actually also
the last programming language that introduced
<SYNC Start=12034960><P class='en'>&nbsp;
<SYNC Start=12034960><P class='en'>checked exceptions. Checked exceptions are
exceptions, that are enforced by the compiler,
<SYNC Start=12035960><P class='en'>&nbsp;
<SYNC Start=12035960><P class='en'>that you do something about them, or you add
a throws with the exception name. In your
<SYNC Start=12036960><P class='en'>&nbsp;
<SYNC Start=12036960><P class='en'>method signature. There are various checked
exceptions. One of the most famous ones is
<SYNC Start=12037960><P class='en'>&nbsp;
<SYNC Start=12037960><P class='en'>probably the i o exception. That will be C,
it&#39;s in Java i o package. This one will be
<SYNC Start=12038960><P class='en'>&nbsp;
<SYNC Start=12038960><P class='en'>thrown if you have any problems with i o operations,
which is again a topic on its own. Okay, um,
<SYNC Start=12039960><P class='en'>&nbsp;
<SYNC Start=12039960><P class='en'>and I said Java was also the last programming
language that introduced checked exceptions.
<SYNC Start=12040960><P class='en'>&nbsp;
<SYNC Start=12040960><P class='en'>So this really shows us indicates us that
checked exceptions were not so smart. Because
<SYNC Start=12041960><P class='en'>&nbsp;
<SYNC Start=12041960><P class='en'>you see, all they help us in the end, is they
add noise to the method signature. And the
<SYNC Start=12042960><P class='en'>&nbsp;
<SYNC Start=12042960><P class='en'>case that to use them for cases that you can
handle them. Well, I say, if you can handle
<SYNC Start=12043960><P class='en'>&nbsp;
<SYNC Start=12043960><P class='en'>them, why not taking care of the problem beforehand,
for example, by using validation, validating
<SYNC Start=12044960><P class='en'>&nbsp;
<SYNC Start=12044960><P class='en'>the case, the given argument, and then handling
that without actually even throwing an exception.
<SYNC Start=12045960><P class='en'>&nbsp;
<SYNC Start=12045960><P class='en'>And then maybe last but not least, for every
rule, there&#39;s always an exception, we saw
<SYNC Start=12046960><P class='en'>&nbsp;
<SYNC Start=12046960><P class='en'>that. I&#39;ve removed it, unfortunately, yeah,
let me go back. We saw that with the switch
<SYNC Start=12047960><P class='en'>&nbsp;
<SYNC Start=12047960><P class='en'>on the string were set in a prior episode.
Don&#39;t do that, while I did it here. And, um,
<SYNC Start=12048960><P class='en'>&nbsp;
<SYNC Start=12048960><P class='en'>we also saw saw that
<SYNC Start=12049960><P class='en'>&nbsp;
<SYNC Start=12049960><P class='en'>here,
<SYNC Start=12050960><P class='en'>&nbsp;
<SYNC Start=12050960><P class='en'>where I use the value of method of enum, which
throws an exception, and I said, Well, we&#39;re
<SYNC Start=12051960><P class='en'>&nbsp;
<SYNC Start=12051960><P class='en'>trying to validate it. So if we are validating
as we don&#39;t need the exception, it just that
<SYNC Start=12052960><P class='en'>&nbsp;
<SYNC Start=12052960><P class='en'>we can&#39;t do anything about it how the method
was written by the inventors of Java, so we
<SYNC Start=12053960><P class='en'>&nbsp;
<SYNC Start=12053960><P class='en'>just have to live with that sometimes an exception
is thrown where we will just validate it.
<SYNC Start=12054960><P class='en'>&nbsp;
<SYNC Start=12054960><P class='en'>But what we can do is we can catch the exception
and then return true or false, for example,
<SYNC Start=12055960><P class='en'>&nbsp;
<SYNC Start=12055960><P class='en'>so we can convert the exception into a valid
return value. Also, there is a hack. If you
<SYNC Start=12056960><P class='en'>&nbsp;
<SYNC Start=12056960><P class='en'>have a library, like an old library that will
still throw a checked exception, like an IO
<SYNC Start=12057960><P class='en'>&nbsp;
<SYNC Start=12057960><P class='en'>exception. What you can always do is you can
wrap we say wrap a checked exception into
<SYNC Start=12058960><P class='en'>&nbsp;
<SYNC Start=12058960><P class='en'>our runtime exception. And this is like this.
Let&#39;s create more ioexception Let&#39;s create
<SYNC Start=12059960><P class='en'>&nbsp;
<SYNC Start=12059960><P class='en'>an ioexception shortly. So see, you can also
just create them like any other object. And
<SYNC Start=12060960><P class='en'>&nbsp;
<SYNC Start=12060960><P class='en'>now on that exception while it cannot be called
IE because we already have that I can now
<SYNC Start=12061960><P class='en'>&nbsp;
<SYNC Start=12061960><P class='en'>say throw new runtime exception and okay.
Give it the IO exception. And this is why
<SYNC Start=12062960><P class='en'>&nbsp;
<SYNC Start=12062960><P class='en'>we wrap it. Because we put this exception
into the constructor of runtime exception,
<SYNC Start=12063960><P class='en'>&nbsp;
<SYNC Start=12063960><P class='en'>which means this is the wrapper, it wraps
around the other exception. And now our compiler
<SYNC Start=12064960><P class='en'>&nbsp;
<SYNC Start=12064960><P class='en'>will be fine. Because we&#39;re not throwing an
IO exception anymore. We&#39;re throwing a runtime
<SYNC Start=12065960><P class='en'>&nbsp;
<SYNC Start=12065960><P class='en'>exception. Well, this is a nasty hack. But
I think it&#39;s still better than having checked
<SYNC Start=12066960><P class='en'>&nbsp;
<SYNC Start=12066960><P class='en'>exceptions all over your code. And yeah, I&#39;m
going to talk about interfaces in Java. Well,
<SYNC Start=12067960><P class='en'>&nbsp;
<SYNC Start=12067960><P class='en'>interfaces are probably the most powerful
feature of object oriented languages. Well,
<SYNC Start=12068960><P class='en'>&nbsp;
<SYNC Start=12068960><P class='en'>before I continue, first of all, some organizational
stuff. So this is divided into three parts.
<SYNC Start=12069960><P class='en'>&nbsp;
<SYNC Start=12069960><P class='en'>Part One, I will first of all, talk about
the definition, what does actually the word
<SYNC Start=12070960><P class='en'>&nbsp;
<SYNC Start=12070960><P class='en'>interface mean? And tell you a bit about the
history. Like how were interfaces introduced
<SYNC Start=12071960><P class='en'>&nbsp;
<SYNC Start=12071960><P class='en'>into Java. I&#39;ll make this part as short as
I can not to put you to sleep. And then second,
<SYNC Start=12072960><P class='en'>&nbsp;
<SYNC Start=12072960><P class='en'>we&#39;ll jump into my ID, he will do a short
coding session, and I&#39;ll show you how to practically
<SYNC Start=12073960><P class='en'>&nbsp;
<SYNC Start=12073960><P class='en'>use interfaces in Java. And then last but
not least, I&#39;ll do a short discussion about
<SYNC Start=12074960><P class='en'>&nbsp;
<SYNC Start=12074960><P class='en'>the pros and cons of interfaces from a clean
coder perspective. Okay, so let&#39;s start to
<SYNC Start=12075960><P class='en'>&nbsp;
<SYNC Start=12075960><P class='en'>jump into the topic interface. So what does
interface actually mean? So I&#39;ve opened up
<SYNC Start=12076960><P class='en'>&nbsp;
<SYNC Start=12076960><P class='en'>the dictionary page. And the definition is
an interface is the point of interconnection
<SYNC Start=12077960><P class='en'>&nbsp;
<SYNC Start=12077960><P class='en'>between entities. And interfaces do not only
exist in programming, but also in all other
<SYNC Start=12078960><P class='en'>&nbsp;
<SYNC Start=12078960><P class='en'>kinds of areas, for example, in chemistry
and physics, and there is defined as a thin
<SYNC Start=12079960><P class='en'>&nbsp;
<SYNC Start=12079960><P class='en'>layer or boundary between different substances.
And I think this perfectly also applies to
<SYNC Start=12080960><P class='en'>&nbsp;
<SYNC Start=12080960><P class='en'>interfaces in object oriented languages and
Java. Because it&#39;s really a very thin layer,
<SYNC Start=12081960><P class='en'>&nbsp;
<SYNC Start=12081960><P class='en'>you will see, there is not much code needed
to define an interface. And it also forms
<SYNC Start=12082960><P class='en'>&nbsp;
<SYNC Start=12082960><P class='en'>a boundary. When I say boundary, I think of
something like the Chinese wall, which was
<SYNC Start=12083960><P class='en'>&nbsp;
<SYNC Start=12083960><P class='en'>a big protection from the hordes that were
invading from the north.
<SYNC Start=12084960><P class='en'>&nbsp;
<SYNC Start=12084960><P class='en'>And this is also what an interface is, it
can protect a class from other classes, but
<SYNC Start=12085960><P class='en'>&nbsp;
<SYNC Start=12085960><P class='en'>more of this later, okay. And then maybe we
should also look at the object oriented point
<SYNC Start=12086960><P class='en'>&nbsp;
<SYNC Start=12086960><P class='en'>of view. So in object oriented programming,
it&#39;s a piece of code, defining a set of operations
<SYNC Start=12087960><P class='en'>&nbsp;
<SYNC Start=12087960><P class='en'>that other code must implement.
<SYNC Start=12088960><P class='en'>&nbsp;
<SYNC Start=12088960><P class='en'>So yes,
<SYNC Start=12089960><P class='en'>&nbsp;
<SYNC Start=12089960><P class='en'>all this holds true for interfaces in Java.
But now, enough of the definition. Let&#39;s have
<SYNC Start=12090960><P class='en'>&nbsp;
<SYNC Start=12090960><P class='en'>a look at the history. For this, I actually
had to do some research on the internet. Finally,
<SYNC Start=12091960><P class='en'>&nbsp;
<SYNC Start=12091960><P class='en'>I found this page here from Oracle, where
Oracle says the concept of an interface in
<SYNC Start=12092960><P class='en'>&nbsp;
<SYNC Start=12092960><P class='en'>the Java language was borrowed from the Objective
C concept of a protocol. Well, pretty much
<SYNC Start=12093960><P class='en'>&nbsp;
<SYNC Start=12093960><P class='en'>everyone says are things that Java was actually
the first language introducing interfaces.
<SYNC Start=12094960><P class='en'>&nbsp;
<SYNC Start=12094960><P class='en'>Well, actually, Oracle itself says that this
is not true. It was birthed from Objective
<SYNC Start=12095960><P class='en'>&nbsp;
<SYNC Start=12095960><P class='en'>C. I find this quite interesting. Objective
C. I thought we should also have a look on
<SYNC Start=12096960><P class='en'>&nbsp;
<SYNC Start=12096960><P class='en'>Objective C, then. So I found this page here
saying, Brad Cox and Tom love created the
<SYNC Start=12097960><P class='en'>&nbsp;
<SYNC Start=12097960><P class='en'>Objective C programming language in the early
1980s. So actually much older than Java. Java,
<SYNC Start=12098960><P class='en'>&nbsp;
<SYNC Start=12098960><P class='en'>was released as far as I know, in 1995. So
15 years later, in an effort to get people
<SYNC Start=12099960><P class='en'>&nbsp;
<SYNC Start=12099960><P class='en'>to write cleaner, more modular and clearly
Separated code. Yeah, that sounds actually
<SYNC Start=12100960><P class='en'>&nbsp;
<SYNC Start=12100960><P class='en'>quite good. Now, what is interesting is here,
this paragraph also says, into interfaces
<SYNC Start=12101960><P class='en'>&nbsp;
<SYNC Start=12101960><P class='en'>were introduced to Java to enhance Java&#39;s
single inheritance model. So whatever single
<SYNC Start=12102960><P class='en'>&nbsp;
<SYNC Start=12102960><P class='en'>inheritance model means
<SYNC Start=12103960><P class='en'>&nbsp;
<SYNC Start=12103960><P class='en'>they didn&#39;t say
<SYNC Start=12104960><P class='en'>&nbsp;
<SYNC Start=12104960><P class='en'>they had introduced the interfaces to get
more cleaner, more modular, and clearly separated
<SYNC Start=12105960><P class='en'>&nbsp;
<SYNC Start=12105960><P class='en'>code. There is a different reason. Well, I
haven&#39;t told you what inheritance means yet.
<SYNC Start=12106960><P class='en'>&nbsp;
<SYNC Start=12106960><P class='en'>And this for a reason. Because, um, well,
Java was released in 1995, said before, and
<SYNC Start=12107960><P class='en'>&nbsp;
<SYNC Start=12107960><P class='en'>now we have 2015 20 years later, actually,
in the meantime, the especially the clean
<SYNC Start=12108960><P class='en'>&nbsp;
<SYNC Start=12108960><P class='en'>code community does not believe so much in
inheritance anymore. Because, of course, inheritance
<SYNC Start=12109960><P class='en'>&nbsp;
<SYNC Start=12109960><P class='en'>has a lot of advantages. But also many disadvantages
about this, I&#39;ll tell you, and one of the
<SYNC Start=12110960><P class='en'>&nbsp;
<SYNC Start=12110960><P class='en'>next episodes when I&#39;m going to talk about
inheritance in Java. But anyway, so when Java
<SYNC Start=12111960><P class='en'>&nbsp;
<SYNC Start=12111960><P class='en'>was introduced, Java is the successor of c++
we could say. And c++ still had a model using
<SYNC Start=12112960><P class='en'>&nbsp;
<SYNC Start=12112960><P class='en'>multiple inheritance. So multiple inheritance
is even more complicated than single inheritance.
<SYNC Start=12113960><P class='en'>&nbsp;
<SYNC Start=12113960><P class='en'>And here they write. multiple inheritance
created too many problems for programmers,
<SYNC Start=12114960><P class='en'>&nbsp;
<SYNC Start=12114960><P class='en'>as well as compiler writers, because it&#39;s
actually not so easy to implement multiple
<SYNC Start=12115960><P class='en'>&nbsp;
<SYNC Start=12115960><P class='en'>inheritance in into a compiler. So it seems,
because they did not support multiple inheritance,
<SYNC Start=12116960><P class='en'>&nbsp;
<SYNC Start=12116960><P class='en'>they added interfaces to Java s, like replacement
for multiple inheritance, to like, fix that
<SYNC Start=12117960><P class='en'>&nbsp;
<SYNC Start=12117960><P class='en'>Java did not support multiple inheritance.
And this is quite funny. And let me say it
<SYNC Start=12118960><P class='en'>&nbsp;
<SYNC Start=12118960><P class='en'>in different words, I would say, it seems
like the really powerful feature of interfaces
<SYNC Start=12119960><P class='en'>&nbsp;
<SYNC Start=12119960><P class='en'>was introduced into Java by kind of accident,
because they said before, they didn&#39;t think
<SYNC Start=12120960><P class='en'>&nbsp;
<SYNC Start=12120960><P class='en'>about cleaner, more modular, clearly separated
code, but mostly just to have a way of having
<SYNC Start=12121960><P class='en'>&nbsp;
<SYNC Start=12121960><P class='en'>something similar to multiple inheritance.
Okay, let&#39;s stop here, and jump directly into
<SYNC Start=12122960><P class='en'>&nbsp;
<SYNC Start=12122960><P class='en'>my ID. Cuz I felt you were already feet been
falling asleep. Um, so here, this is my car.
<SYNC Start=12123960><P class='en'>&nbsp;
<SYNC Start=12123960><P class='en'>So it was test that I&#39;ve used in earlier episodes.
Also, I&#39;ve added this should demonstrate interfaces
<SYNC Start=12124960><P class='en'>&nbsp;
<SYNC Start=12124960><P class='en'>method, as the name implies, just for demonstration
purposes, I&#39;m still using the car service
<SYNC Start=12125960><P class='en'>&nbsp;
<SYNC Start=12125960><P class='en'>that I&#39;ve implemented, also in one of the
earlier episodes, and I&#39;ve added a drive method
<SYNC Start=12126960><P class='en'>&nbsp;
<SYNC Start=12126960><P class='en'>to it. So the idea is to have a service class.
And when I call the drive method, that this
<SYNC Start=12127960><P class='en'>&nbsp;
<SYNC Start=12127960><P class='en'>should, like start the engines of several
cars, and make them drive. So for this, in
<SYNC Start=12128960><P class='en'>&nbsp;
<SYNC Start=12128960><P class='en'>my car service, I have now a method drive.
It creates First of all, three different cars.
<SYNC Start=12129960><P class='en'>&nbsp;
<SYNC Start=12129960><P class='en'>I mean, this is just an example you mentioned,
were hundreds of cars. And now I call the
<SYNC Start=12130960><P class='en'>&nbsp;
<SYNC Start=12130960><P class='en'>drive method on each of these cars.
<SYNC Start=12131960><P class='en'>&nbsp;
<SYNC Start=12131960><P class='en'>Okay, actually,
<SYNC Start=12132960><P class='en'>&nbsp;
<SYNC Start=12132960><P class='en'>all these classes are in the same package.
This is why I don&#39;t have to import any class.
<SYNC Start=12133960><P class='en'>&nbsp;
<SYNC Start=12133960><P class='en'>But imagine each class would be in a different
package. We would have to import each class
<SYNC Start=12134960><P class='en'>&nbsp;
<SYNC Start=12134960><P class='en'>separately like BMW and Porsche GE and mercy
is and so on. So what we say here is actually
<SYNC Start=12135960><P class='en'>&nbsp;
<SYNC Start=12135960><P class='en'>this car service at the moment is really Deeply
coupled to these car classes, this is something
<SYNC Start=12136960><P class='en'>&nbsp;
<SYNC Start=12136960><P class='en'>that we don&#39;t want more about this later.
And also, you see, we need a lot of code to
<SYNC Start=12137960><P class='en'>&nbsp;
<SYNC Start=12137960><P class='en'>make all the cars drive. And this is something
that we want to improve with using interfaces.
<SYNC Start=12138960><P class='en'>&nbsp;
<SYNC Start=12138960><P class='en'>Now what, again, what is an interface? Well,
an interface is also like an abstract type
<SYNC Start=12139960><P class='en'>&nbsp;
<SYNC Start=12139960><P class='en'>definition, what this type should be able
to do. In our case, we have an I mean, I&#39;m
<SYNC Start=12140960><P class='en'>&nbsp;
<SYNC Start=12140960><P class='en'>already saying it three different cars. And
all these cars can drive and you see it already,
<SYNC Start=12141960><P class='en'>&nbsp;
<SYNC Start=12141960><P class='en'>I have three different drive methods. I mean,
the way they hold how they are driving might
<SYNC Start=12142960><P class='en'>&nbsp;
<SYNC Start=12142960><P class='en'>be different because of course, a BMW has
a different engine than a pushy, and again,
<SYNC Start=12143960><P class='en'>&nbsp;
<SYNC Start=12143960><P class='en'>a different engine than ms cedars. But they
have some certain specifics, like, for example,
<SYNC Start=12144960><P class='en'>&nbsp;
<SYNC Start=12144960><P class='en'>they would all have four wheels, and they
can all drive which we can make something
<SYNC Start=12145960><P class='en'>&nbsp;
<SYNC Start=12145960><P class='en'>like a contract off. So in this way, let us
introduce an interface and I&#39;ve prepared something
<SYNC Start=12146960><P class='en'>&nbsp;
<SYNC Start=12146960><P class='en'>here, car dot java. So far, we only have the
package declaration, we have to extend that.
<SYNC Start=12147960><P class='en'>&nbsp;
<SYNC Start=12147960><P class='en'>So let&#39;s start. Let&#39;s start as if we would
write a class. So let&#39;s say public class car.
<SYNC Start=12148960><P class='en'>&nbsp;
<SYNC Start=12148960><P class='en'>And then opening and closing curly brace,
and now public void drive.
<SYNC Start=12149960><P class='en'>&nbsp;
<SYNC Start=12149960><P class='en'>Okay.
<SYNC Start=12150960><P class='en'>&nbsp;
<SYNC Start=12150960><P class='en'>And then in here, we could do something. Well,
the problem is if we do it like this, this
<SYNC Start=12151960><P class='en'>&nbsp;
<SYNC Start=12151960><P class='en'>is not going to work, because then all the
different types will have to drive the same
<SYNC Start=12152960><P class='en'>&nbsp;
<SYNC Start=12152960><P class='en'>way. But this is not what we want. For example,
He in pushy, I have implemented already the
<SYNC Start=12153960><P class='en'>&nbsp;
<SYNC Start=12153960><P class='en'>drive method. I mean, this is just a stupid
example. I still want you hardly ever to use
<SYNC Start=12154960><P class='en'>&nbsp;
<SYNC Start=12154960><P class='en'>system out print line. But here for our example,
I just wanted to show you that each method
<SYNC Start=12155960><P class='en'>&nbsp;
<SYNC Start=12155960><P class='en'>is implemented in a different way. Here it
says masseter striving there it says Porsche
<SYNC Start=12156960><P class='en'>&nbsp;
<SYNC Start=12156960><P class='en'>driving, the BMW actually even has three different
methods. These ones we will actually use at
<SYNC Start=12157960><P class='en'>&nbsp;
<SYNC Start=12157960><P class='en'>a later time. And it also has the drive method,
which says BMW driving. Okay.
<SYNC Start=12158960><P class='en'>&nbsp;
<SYNC Start=12158960><P class='en'>So now,
<SYNC Start=12159960><P class='en'>&nbsp;
<SYNC Start=12159960><P class='en'>maybe before,
<SYNC Start=12160960><P class='en'>&nbsp;
<SYNC Start=12160960><P class='en'>I&#39;m going to
<SYNC Start=12161960><P class='en'>&nbsp;
<SYNC Start=12161960><P class='en'>continue with doing the interface, we could
also try to execute the code as it is. Let&#39;s
<SYNC Start=12162960><P class='en'>&nbsp;
<SYNC Start=12162960><P class='en'>do this. Now, just so that you see the code
should be running by now already. So it says
<SYNC Start=12163960><P class='en'>&nbsp;
<SYNC Start=12163960><P class='en'>BMW driving Porsche driving Mercedes driving.
So what I want to achieve is exactly the same
<SYNC Start=12164960><P class='en'>&nbsp;
<SYNC Start=12164960><P class='en'>just using interfaces with less and more readable
code. By the way, exit code zero means everything
<SYNC Start=12165960><P class='en'>&nbsp;
<SYNC Start=12165960><P class='en'>is fine. If there is a problem, an exception
thrown, it would be exit code one. Okay. So
<SYNC Start=12166960><P class='en'>&nbsp;
<SYNC Start=12166960><P class='en'>back to what at the moment is still a class.
Now there is a very easy way to make this
<SYNC Start=12167960><P class='en'>&nbsp;
<SYNC Start=12167960><P class='en'>an interface. And this is I say interface.
But now it seems there is still a problem.
<SYNC Start=12168960><P class='en'>&nbsp;
<SYNC Start=12168960><P class='en'>It says interface methods cannot have a body,
or what is the body, the body is this part
<SYNC Start=12169960><P class='en'>&nbsp;
<SYNC Start=12169960><P class='en'>here in blue. So the body is actually the
method implementation. method also has a method
<SYNC Start=12170960><P class='en'>&nbsp;
<SYNC Start=12170960><P class='en'>signature. This on top here is called the
method signature, public void, and the name
<SYNC Start=12171960><P class='en'>&nbsp;
<SYNC Start=12171960><P class='en'>of the method is drive. Okay. Sorry. So it
seems like it cannot have a body. How is that?
<SYNC Start=12172960><P class='en'>&nbsp;
<SYNC Start=12172960><P class='en'>Well, I guess even makes sense. Because we
said we just want to have a definition, like
<SYNC Start=12173960><P class='en'>&nbsp;
<SYNC Start=12173960><P class='en'>a contract. But we don&#39;t want to actually
implement it. The implementation will be done
<SYNC Start=12174960><P class='en'>&nbsp;
<SYNC Start=12174960><P class='en'>by the specific implementations by BMW by
Porsche and by my seniors. And we have already
<SYNC Start=12175960><P class='en'>&nbsp;
<SYNC Start=12175960><P class='en'>done the implementations. So let me remove
the body. Now there&#39;s still something wrong
<SYNC Start=12176960><P class='en'>&nbsp;
<SYNC Start=12176960><P class='en'>and you see it. Here it even says it It wants
now, the semi column because the semicolon
<SYNC Start=12177960><P class='en'>&nbsp;
<SYNC Start=12177960><P class='en'>now says, I&#39;m finished. I&#39;m done. This is
all I want to say. So now we have an abstract
<SYNC Start=12178960><P class='en'>&nbsp;
<SYNC Start=12178960><P class='en'>definition of a method that other classes
may implement. And when they implement the
<SYNC Start=12179960><P class='en'>&nbsp;
<SYNC Start=12179960><P class='en'>interface car, we can also say they play the
role of a car. Because actually a class can
<SYNC Start=12180960><P class='en'>&nbsp;
<SYNC Start=12180960><P class='en'>implement more than one interface. A class
can implement any number of interfaces. And
<SYNC Start=12181960><P class='en'>&nbsp;
<SYNC Start=12181960><P class='en'>remember, before I spoke about multiple inheritance,
well, multiple is, this is why it&#39;s similar,
<SYNC Start=12182960><P class='en'>&nbsp;
<SYNC Start=12182960><P class='en'>because it also allows to have,
<SYNC Start=12183960><P class='en'>&nbsp;
<SYNC Start=12183960><P class='en'>like,
<SYNC Start=12184960><P class='en'>&nbsp;
<SYNC Start=12184960><P class='en'>multiple implementations in a way, but more
of this later. So a class can also implement
<SYNC Start=12185960><P class='en'>&nbsp;
<SYNC Start=12185960><P class='en'>multiple interfaces. Okay. And when I click
here, you also see modifier public is redundant.
<SYNC Start=12186960><P class='en'>&nbsp;
<SYNC Start=12186960><P class='en'>Why is it redundant? because by definition,
all methods that we define in an interface
<SYNC Start=12187960><P class='en'>&nbsp;
<SYNC Start=12187960><P class='en'>must be public, they are always public. So
even if I remove it, well, if you still remember,
<SYNC Start=12188960><P class='en'>&nbsp;
<SYNC Start=12188960><P class='en'>the episode I did on the visibility modifiers,
you might now think, Well, now that there
<SYNC Start=12189960><P class='en'>&nbsp;
<SYNC Start=12189960><P class='en'>is no modifier defined, it must be of default,
or package level visibility, no, it is still
<SYNC Start=12190960><P class='en'>&nbsp;
<SYNC Start=12190960><P class='en'>a public visibility, because it always a method
is always have public visibility. Another
<SYNC Start=12191960><P class='en'>&nbsp;
<SYNC Start=12191960><P class='en'>modifier that is implicitly here is abstract,
can put it abstract just means what we have
<SYNC Start=12192960><P class='en'>&nbsp;
<SYNC Start=12192960><P class='en'>here, that the method is not implemented,
and that it just consists of the method signature,
<SYNC Start=12193960><P class='en'>&nbsp;
<SYNC Start=12193960><P class='en'>and that the body is left away, and that we
have to semicolon here. So also, this is redundant,
<SYNC Start=12194960><P class='en'>&nbsp;
<SYNC Start=12194960><P class='en'>we can and we should remove it. Always define
your methods without public and without abstract,
<SYNC Start=12195960><P class='en'>&nbsp;
<SYNC Start=12195960><P class='en'>you should just know that implicitly, they&#39;re
there. Okay. And then there&#39;s one more thing
<SYNC Start=12196960><P class='en'>&nbsp;
<SYNC Start=12196960><P class='en'>you can do in an interface. Um, but I warn
you not to do it. This is actually an anti
<SYNC Start=12197960><P class='en'>&nbsp;
<SYNC Start=12197960><P class='en'>pattern. But still just to be complete. I
let me show you. And this is you can add public
<SYNC Start=12198960><P class='en'>&nbsp;
<SYNC Start=12198960><P class='en'>static, final. So you can add constants, for
example, Max, Max speed. I don&#39;t know 320.
<SYNC Start=12199960><P class='en'>&nbsp;
<SYNC Start=12199960><P class='en'>And however, you shouldn&#39;t do so. And when
you think about it, I guess you will easily
<SYNC Start=12200960><P class='en'>&nbsp;
<SYNC Start=12200960><P class='en'>find out why. Because for example, the BMW
might only do a max speed of 240. Porsche
<SYNC Start=12201960><P class='en'>&nbsp;
<SYNC Start=12201960><P class='en'>Yeah, maybe a Porsche can maybe do 320, but
maybe also even more than Mercedes, I don&#39;t
<SYNC Start=12202960><P class='en'>&nbsp;
<SYNC Start=12202960><P class='en'>know. So this is actually not part of this
should not be part of the interface, because
<SYNC Start=12203960><P class='en'>&nbsp;
<SYNC Start=12203960><P class='en'>this is an implementation detail. And such
an implementation detail should be hidden
<SYNC Start=12204960><P class='en'>&nbsp;
<SYNC Start=12204960><P class='en'>within the class, or even better. In an email
about this, let me also shortly show you a
<SYNC Start=12205960><P class='en'>&nbsp;
<SYNC Start=12205960><P class='en'>little page I found on the web. And this is
here it is on the page of sonar. Well, actually,
<SYNC Start=12206960><P class='en'>&nbsp;
<SYNC Start=12206960><P class='en'>it&#39;s called sonar cube sonar cube is really
a very cool tool. It&#39;s actually one of my
<SYNC Start=12207960><P class='en'>&nbsp;
<SYNC Start=12207960><P class='en'>favorite tools for static code quality analysis.
I&#39;m pretty sure very soon, I&#39;ll do an episode
<SYNC Start=12208960><P class='en'>&nbsp;
<SYNC Start=12208960><P class='en'>on sonar cube alone. For now, let me keep
this as short as possible, because we still
<SYNC Start=12209960><P class='en'>&nbsp;
<SYNC Start=12209960><P class='en'>want to talk about interfaces. But in this
sonar cube, it&#39;s actually a rule that checks
<SYNC Start=12210960><P class='en'>&nbsp;
<SYNC Start=12210960><P class='en'>that you don&#39;t use constants in an interface.
Here it says console should not be defined
<SYNC Start=12211960><P class='en'>&nbsp;
<SYNC Start=12211960><P class='en'>in an interface. And there was also or there
is also very smart, cool guy, Joshua blah,
<SYNC Start=12212960><P class='en'>&nbsp;
<SYNC Start=12212960><P class='en'>the author of Effective Java, which is, by
the way, also a must read, I have a link to
<SYNC Start=12213960><P class='en'>&nbsp;
<SYNC Start=12213960><P class='en'>that book on my blog, on Marcus minus bo.com,
where you can directly buy it from MSN. So
<SYNC Start=12214960><P class='en'>&nbsp;
<SYNC Start=12214960><P class='en'>if you have the time, you can also read all
this, but I think I already explained the
<SYNC Start=12215960><P class='en'>&nbsp;
<SYNC Start=12215960><P class='en'>important parts. Here, we can also look at
it. So noncomplying code is to define the
<SYNC Start=12216960><P class='en'>&nbsp;
<SYNC Start=12216960><P class='en'>variables directly in the interface. And you
see here they even didn&#39;t say public static
<SYNC Start=12217960><P class='en'>&nbsp;
<SYNC Start=12217960><P class='en'>final because this is again, every variable
you define, is implicitly a constant. So you
<SYNC Start=12218960><P class='en'>&nbsp;
<SYNC Start=12218960><P class='en'>don&#39;t even have to say public Static final.
But this is not good. Anyway, the much better
<SYNC Start=12219960><P class='en'>&nbsp;
<SYNC Start=12219960><P class='en'>solution is to use an enum we have talked
about enums already. So I won&#39;t go in more
<SYNC Start=12220960><P class='en'>&nbsp;
<SYNC Start=12220960><P class='en'>detail here. Another possibility, which I
would not recommend, you can also have something
<SYNC Start=12221960><P class='en'>&nbsp;
<SYNC Start=12221960><P class='en'>called constant classes, which you make final.
<SYNC Start=12222960><P class='en'>&nbsp;
<SYNC Start=12222960><P class='en'>And then in the class, you have the public
static final constants. This is possible,
<SYNC Start=12223960><P class='en'>&nbsp;
<SYNC Start=12223960><P class='en'>but it&#39;s always better to have small enums.
Because usually what happens is in these constant
<SYNC Start=12224960><P class='en'>&nbsp;
<SYNC Start=12224960><P class='en'>classes, they would grow. And they would grow
and have contain all kinds of different constants.
<SYNC Start=12225960><P class='en'>&nbsp;
<SYNC Start=12225960><P class='en'>While this only contains the constants of
this status here. And also, I mean, talked
<SYNC Start=12226960><P class='en'>&nbsp;
<SYNC Start=12226960><P class='en'>about this when I talked about enums is type
safe. Well, here, you could change any number.
<SYNC Start=12227960><P class='en'>&nbsp;
<SYNC Start=12227960><P class='en'>Okay, so anyway, so now back to our code.
So, here, you already see it&#39;s redundant.
<SYNC Start=12228960><P class='en'>&nbsp;
<SYNC Start=12228960><P class='en'>All this is redundant, and should be removed.
But this should also be removed. As I said
<SYNC Start=12229960><P class='en'>&nbsp;
<SYNC Start=12229960><P class='en'>before, because it&#39;s an implementation detail,
this is not part of our contract. Because
<SYNC Start=12230960><P class='en'>&nbsp;
<SYNC Start=12230960><P class='en'>the car should just define what needs to get
done, what behavior class implementing that
<SYNC Start=12231960><P class='en'>&nbsp;
<SYNC Start=12231960><P class='en'>behavior has, like it should drive, but the
way how it&#39;s how it drives, if it drives fast
<SYNC Start=12232960><P class='en'>&nbsp;
<SYNC Start=12232960><P class='en'>or slow. This is part of the class and not
part of the interface. This is really important
<SYNC Start=12233960><P class='en'>&nbsp;
<SYNC Start=12233960><P class='en'>when you want to do clean coding. Okay. So
now let us implement, use the interface. So
<SYNC Start=12234960><P class='en'>&nbsp;
<SYNC Start=12234960><P class='en'>now, when I say implements car, when you you
can now use BMW as a car. And when you do
<SYNC Start=12235960><P class='en'>&nbsp;
<SYNC Start=12235960><P class='en'>so, BMW plays the role of being a car. And
as I said before, you can also implement several
<SYNC Start=12236960><P class='en'>&nbsp;
<SYNC Start=12236960><P class='en'>interfaces, which we&#39;re going to do very soon.
But first of all, let me finish this quarshie
<SYNC Start=12237960><P class='en'>&nbsp;
<SYNC Start=12237960><P class='en'>implements car. And Marie cetus implements
car. Well, the compiler was directly happy,
<SYNC Start=12238960><P class='en'>&nbsp;
<SYNC Start=12238960><P class='en'>I hadn&#39;t got to do anything, or implements
car. Because the work I&#39;ve done beforehand,
<SYNC Start=12239960><P class='en'>&nbsp;
<SYNC Start=12239960><P class='en'>implementing the method will normally let
me know that this just to be faster in my
<SYNC Start=12240960><P class='en'>&nbsp;
<SYNC Start=12240960><P class='en'>here, code example. You won&#39;t do it like this,
you define a class, you say it implements
<SYNC Start=12241960><P class='en'>&nbsp;
<SYNC Start=12241960><P class='en'>an interface. And then you see I already have
a problem with the compiler, which tells me
<SYNC Start=12242960><P class='en'>&nbsp;
<SYNC Start=12242960><P class='en'>I have to implement the abstract method, Dr.
Okay, and then you do this. And the compiler
<SYNC Start=12243960><P class='en'>&nbsp;
<SYNC Start=12243960><P class='en'>is happy. It has to be exactly like defined
in the interface. You cannot, for example,
<SYNC Start=12244960><P class='en'>&nbsp;
<SYNC Start=12244960><P class='en'>say int as a return value, because this is
not how it was defined in the interface. Okay,
<SYNC Start=12245960><P class='en'>&nbsp;
<SYNC Start=12245960><P class='en'>now, let me also show you, oh, there&#39;s still
a problem with car. It seems there&#39;s the curly
<SYNC Start=12246960><P class='en'>&nbsp;
<SYNC Start=12246960><P class='en'>brace missing, somehow. Okay, it seems like
I probably deleted too much. Okay, see how
<SYNC Start=12247960><P class='en'>&nbsp;
<SYNC Start=12247960><P class='en'>small is is well, actually, by the way, I&#39;m
an interface should have at least one method.
<SYNC Start=12248960><P class='en'>&nbsp;
<SYNC Start=12248960><P class='en'>While this is also not true, there are even
something called market interfaces that don&#39;t
<SYNC Start=12249960><P class='en'>&nbsp;
<SYNC Start=12249960><P class='en'>even contain a single method. This is a specialty,
which I&#39;m not going to go in detail now. But
<SYNC Start=12250960><P class='en'>&nbsp;
<SYNC Start=12250960><P class='en'>usually they would have at most, at least
one method, and maybe even many more methods.
<SYNC Start=12251960><P class='en'>&nbsp;
<SYNC Start=12251960><P class='en'>But again, I want to warn you, I see often
interfaces with 10s of hundreds of methods.
<SYNC Start=12252960><P class='en'>&nbsp;
<SYNC Start=12252960><P class='en'>And sometimes it&#39;s just too much. It&#39;s better
to have many, many interfaces and to have
<SYNC Start=12253960><P class='en'>&nbsp;
<SYNC Start=12253960><P class='en'>your classes implement several interfaces
at once, so that you can decide what role
<SYNC Start=12254960><P class='en'>&nbsp;
<SYNC Start=12254960><P class='en'>your class is going to play. And lo let&#39;s
implement more interfaces in here. I&#39;ve already
<SYNC Start=12255960><P class='en'>&nbsp;
<SYNC Start=12255960><P class='en'>prepared again, adding these methods, because
I have also what interfaces one interface
<SYNC Start=12256960><P class='en'>&nbsp;
<SYNC Start=12256960><P class='en'>is the lockable interface, which I defined.
The idea for such an interface is
<SYNC Start=12257960><P class='en'>&nbsp;
<SYNC Start=12257960><P class='en'>for example, you want to do logging, you want
to do you want to lock several different objects,
<SYNC Start=12258960><P class='en'>&nbsp;
<SYNC Start=12258960><P class='en'>could have cars, persons whatsoever, everything
can be lockable. And I defined that in order
<SYNC Start=12259960><P class='en'>&nbsp;
<SYNC Start=12259960><P class='en'>to be likable. Such a class must implement
a method called message, which I then later
<SYNC Start=12260960><P class='en'>&nbsp;
<SYNC Start=12260960><P class='en'>in my learning framework can call. Because
I know that whenever I have a class that implements
<SYNC Start=12261960><P class='en'>&nbsp;
<SYNC Start=12261960><P class='en'>luggable, it will then have a message method
that I can call and it returns me a string
<SYNC Start=12262960><P class='en'>&nbsp;
<SYNC Start=12262960><P class='en'>that should be used for logging purposes.
Then also, well took me a while to come up
<SYNC Start=12263960><P class='en'>&nbsp;
<SYNC Start=12263960><P class='en'>with examples, because what other roles could
a car play, I said, it could also be a property.
<SYNC Start=12264960><P class='en'>&nbsp;
<SYNC Start=12264960><P class='en'>And such a property would have an owner, for
example, the owner of the BMW I made myself
<SYNC Start=12265960><P class='en'>&nbsp;
<SYNC Start=12265960><P class='en'>I mean, I want to have a BMW, how cool is
that. And one more interface, I said, I just
<SYNC Start=12266960><P class='en'>&nbsp;
<SYNC Start=12266960><P class='en'>came up with the idea, we could also have
a role of being an asset, an asset would have
<SYNC Start=12267960><P class='en'>&nbsp;
<SYNC Start=12267960><P class='en'>a value. And so my BMW also has a value. So
I cannot easily say, implements luggable.
<SYNC Start=12268960><P class='en'>&nbsp;
<SYNC Start=12268960><P class='en'>Think this one I have not implemented yet.
And I still have to do No, not twice implement
<SYNC Start=12269960><P class='en'>&nbsp;
<SYNC Start=12269960><P class='en'>car, comma luggable, comma, asset, comma property,
the order doesn&#39;t matter. But now you see,
<SYNC Start=12270960><P class='en'>&nbsp;
<SYNC Start=12270960><P class='en'>I&#39;ve implemented already the value method
and the owner method, the message method,
<SYNC Start=12271960><P class='en'>&nbsp;
<SYNC Start=12271960><P class='en'>I still have to implement. And as I said before,
the order is not controlled, so I can put
<SYNC Start=12272960><P class='en'>&nbsp;
<SYNC Start=12272960><P class='en'>it in any order message.
<SYNC Start=12273960><P class='en'>&nbsp;
<SYNC Start=12273960><P class='en'>And, yeah,
<SYNC Start=12274960><P class='en'>&nbsp;
<SYNC Start=12274960><P class='en'>here, we just return something
<SYNC Start=12275960><P class='en'>&nbsp;
<SYNC Start=12275960><P class='en'>on the car.
<SYNC Start=12276960><P class='en'>&nbsp;
<SYNC Start=12276960><P class='en'>Okay, now, I have a class implementing 1234
different interfaces. OK, now let&#39;s use my
<SYNC Start=12277960><P class='en'>&nbsp;
<SYNC Start=12277960><P class='en'>classes implementing the interfaces. For this,
we go back into my car service, what I can
<SYNC Start=12278960><P class='en'>&nbsp;
<SYNC Start=12278960><P class='en'>already do is now my variable my reference
variable is at the moment of type BMW, the
<SYNC Start=12279960><P class='en'>&nbsp;
<SYNC Start=12279960><P class='en'>class so my BMW can do everything that a BMW
can do, which at the moment is drive message
<SYNC Start=12280960><P class='en'>&nbsp;
<SYNC Start=12280960><P class='en'>owner value, these are methods that we inherit,
see, there is inheritance already, from the
<SYNC Start=12281960><P class='en'>&nbsp;
<SYNC Start=12281960><P class='en'>object class more of this very soon, but these
were the classes that we have directly implemented
<SYNC Start=12282960><P class='en'>&nbsp;
<SYNC Start=12282960><P class='en'>in the BMW class, so I can use all of them.
Or let me show you a message, we can use them.
<SYNC Start=12283960><P class='en'>&nbsp;
<SYNC Start=12283960><P class='en'>Now, what I can also do is, now that I&#39;ve
implemented the car interface, I can say my
<SYNC Start=12284960><P class='en'>&nbsp;
<SYNC Start=12284960><P class='en'>I create an object of type in W, but I put
a reference on it of type car. And now, this
<SYNC Start=12285960><P class='en'>&nbsp;
<SYNC Start=12285960><P class='en'>will change the behavior. Now, I can just
call drive on it, because now my BMW just
<SYNC Start=12286960><P class='en'>&nbsp;
<SYNC Start=12286960><P class='en'>plays the role of a car I can also say luggable
and then I will not be able to drive the car
<SYNC Start=12287960><P class='en'>&nbsp;
<SYNC Start=12287960><P class='en'>because in the context of logging, I don&#39;t
care about driving all I care is about login
<SYNC Start=12288960><P class='en'>&nbsp;
<SYNC Start=12288960><P class='en'>and for logging, I would need such a message
okay.
<SYNC Start=12289960><P class='en'>&nbsp;
<SYNC Start=12289960><P class='en'>So,
<SYNC Start=12290960><P class='en'>&nbsp;
<SYNC Start=12290960><P class='en'>now, let me make all these cars and this is
also something you should do I mean, the object
<SYNC Start=12291960><P class='en'>&nbsp;
<SYNC Start=12291960><P class='en'>is the object, but the variable when you have
an interface, always try to like reference
<SYNC Start=12292960><P class='en'>&nbsp;
<SYNC Start=12292960><P class='en'>with the with an interface to the object.
Because this way, you can more easily exchanged
<SYNC Start=12293960><P class='en'>&nbsp;
<SYNC Start=12293960><P class='en'>your code like imagine the BMW would come
as an argument to the method. Now, at the
<SYNC Start=12294960><P class='en'>&nbsp;
<SYNC Start=12294960><P class='en'>moment we have these three cars, imagine at
a later time someone in when so very cool
<SYNC Start=12295960><P class='en'>&nbsp;
<SYNC Start=12295960><P class='en'>Marquess car, then when the when the method
is operating on the car interface type, this
<SYNC Start=12296960><P class='en'>&nbsp;
<SYNC Start=12296960><P class='en'>method will work even with new classes introduced
without even knowing them at the time, we
<SYNC Start=12297960><P class='en'>&nbsp;
<SYNC Start=12297960><P class='en'>wrote our car service. So whenever possible,
use the interface type. Okay. So now, I want
<SYNC Start=12298960><P class='en'>&nbsp;
<SYNC Start=12298960><P class='en'>to have a for each loop. And for this, let
me put All these cars into a car array. We&#39;ve
<SYNC Start=12299960><P class='en'>&nbsp;
<SYNC Start=12299960><P class='en'>also already talked about array called as
cars equals two. And now the short definition
<SYNC Start=12300960><P class='en'>&nbsp;
<SYNC Start=12300960><P class='en'>I can even do it on the fly. Make it even
more shorter. You W, you&#39;re pushy.
<SYNC Start=12301960><P class='en'>&nbsp;
<SYNC Start=12301960><P class='en'>You&#39;re more serious.
<SYNC Start=12302960><P class='en'>&nbsp;
<SYNC Start=12302960><P class='en'>Okay.
<SYNC Start=12303960><P class='en'>&nbsp;
<SYNC Start=12303960><P class='en'>Hello, on this array, I can now easily iterate.
And I can now say car dot drive. And, or as
<SYNC Start=12304960><P class='en'>&nbsp;
<SYNC Start=12304960><P class='en'>said before, each car will drive differently.
But this will be handled by the object. Now
<SYNC Start=12305960><P class='en'>&nbsp;
<SYNC Start=12305960><P class='en'>our car service does not know any specific
implementation anymore. This is the coupling,
<SYNC Start=12306960><P class='en'>&nbsp;
<SYNC Start=12306960><P class='en'>decoupling the code is not coupled so much
to the specific implementations, my car service,
<SYNC Start=12307960><P class='en'>&nbsp;
<SYNC Start=12307960><P class='en'>all that it uses, all that it knows is now
the car interface. Okay, and with these few
<SYNC Start=12308960><P class='en'>&nbsp;
<SYNC Start=12308960><P class='en'>lines, I iterate over all the cars and I drive
them. Let&#39;s execute this code to and have
<SYNC Start=12309960><P class='en'>&nbsp;
<SYNC Start=12309960><P class='en'>a look if it works. Yeah, see, this is exactly
the same as before, my BMW is driving or a
<SYNC Start=12310960><P class='en'>&nbsp;
<SYNC Start=12310960><P class='en'>Porsche he is driving and marmet cetus is
driving. Now let&#39;s also have a look at the
<SYNC Start=12311960><P class='en'>&nbsp;
<SYNC Start=12311960><P class='en'>car reference. As you see, we can only execute
drive on it. That is defined by the car interface.
<SYNC Start=12312960><P class='en'>&nbsp;
<SYNC Start=12312960><P class='en'>And we do have a BMW as the first element
in our area. But this headline 10, we don&#39;t
<SYNC Start=12313960><P class='en'>&nbsp;
<SYNC Start=12313960><P class='en'>know. All we know is we have an area of cars.
Okay, so we cannot call any BMW specific method.
<SYNC Start=12314960><P class='en'>&nbsp;
<SYNC Start=12314960><P class='en'>In here. I can also not say BMW, because this
is not competitive compatible. We need a car.
<SYNC Start=12315960><P class='en'>&nbsp;
<SYNC Start=12315960><P class='en'>And we don&#39;t need to be in w because this
array is of type car. Okay, so let me fix
<SYNC Start=12316960><P class='en'>&nbsp;
<SYNC Start=12316960><P class='en'>that.
<SYNC Start=12317960><P class='en'>&nbsp;
<SYNC Start=12317960><P class='en'>Okay.
<SYNC Start=12318960><P class='en'>&nbsp;
<SYNC Start=12318960><P class='en'>So
<SYNC Start=12319960><P class='en'>&nbsp;
<SYNC Start=12319960><P class='en'>I think this pretty much wraps up my explanation
of interfaces in Java. A really cool feature.
<SYNC Start=12320960><P class='en'>&nbsp;
<SYNC Start=12320960><P class='en'>And now let&#39;s have a discussion about the
pros and cons about the advantages and disadvantages
<SYNC Start=12321960><P class='en'>&nbsp;
<SYNC Start=12321960><P class='en'>of interfaces in Java. Well, first of all,
let&#39;s start with the disadvantages. And actually,
<SYNC Start=12322960><P class='en'>&nbsp;
<SYNC Start=12322960><P class='en'>I can tell you, there are not so many. Well,
you see, for every interface that are introduced,
<SYNC Start=12323960><P class='en'>&nbsp;
<SYNC Start=12323960><P class='en'>I have to type down this code. And, of course,
this is here, not much, it could be of course,
<SYNC Start=12324960><P class='en'>&nbsp;
<SYNC Start=12324960><P class='en'>much more. So, and each class that wants to
use an interface has to implement this interface.
<SYNC Start=12325960><P class='en'>&nbsp;
<SYNC Start=12325960><P class='en'>So there is some added complexity. Also in
my car service, I&#39;m using now the car interface.
<SYNC Start=12326960><P class='en'>&nbsp;
<SYNC Start=12326960><P class='en'>And whenever you introduce complexity, this
complexity must be justified. So if it makes
<SYNC Start=12327960><P class='en'>&nbsp;
<SYNC Start=12327960><P class='en'>sense, if it helps us with something, for
example, here, I&#39;m not able to easily iterate
<SYNC Start=12328960><P class='en'>&nbsp;
<SYNC Start=12328960><P class='en'>over all the cars. And you mentioned there
could be many, many, many, many more. But
<SYNC Start=12329960><P class='en'>&nbsp;
<SYNC Start=12329960><P class='en'>my for loop would just be the same. So this
would be for example, a justification. But
<SYNC Start=12330960><P class='en'>&nbsp;
<SYNC Start=12330960><P class='en'>my car service at the moment does not implement
an interface. Well actually, this is kind
<SYNC Start=12331960><P class='en'>&nbsp;
<SYNC Start=12331960><P class='en'>of an exception to the rule. Most services
should implement an interface. Very often
<SYNC Start=12332960><P class='en'>&nbsp;
<SYNC Start=12332960><P class='en'>this makes sense, because it&#39;s specifically
for testing so that you can exchange the concrete
<SYNC Start=12333960><P class='en'>&nbsp;
<SYNC Start=12333960><P class='en'>implementation just here. In my example, it
does not make sense because I just want to
<SYNC Start=12334960><P class='en'>&nbsp;
<SYNC Start=12334960><P class='en'>explain you interfaces and I want to have
it really short and neat and not too complicated.
<SYNC Start=12335960><P class='en'>&nbsp;
<SYNC Start=12335960><P class='en'>And I know I will only have this one class
here for demonstration purposes. So why Would
<SYNC Start=12336960><P class='en'>&nbsp;
<SYNC Start=12336960><P class='en'>I implement an interface here? So at the moment,
I don&#39;t see a reason to make my car service
<SYNC Start=12337960><P class='en'>&nbsp;
<SYNC Start=12337960><P class='en'>implemented interface. Sometimes, of course,
there are corner cases, we&#39;re not sure. My
<SYNC Start=12338960><P class='en'>&nbsp;
<SYNC Start=12338960><P class='en'>personal point of view there is, if I know
that for the next months, I&#39;m not going to
<SYNC Start=12339960><P class='en'>&nbsp;
<SYNC Start=12339960><P class='en'>need the interface. My probably leave it away.
Because code, I mean, it lives you are allowed,
<SYNC Start=12340960><P class='en'>&nbsp;
<SYNC Start=12340960><P class='en'>you can change it, you can refactor your code.
So if at a later time you, it turns out you
<SYNC Start=12341960><P class='en'>&nbsp;
<SYNC Start=12341960><P class='en'>need to interface then edit at a later time.
Just don&#39;t do arbitrary decisions. There are
<SYNC Start=12342960><P class='en'>&nbsp;
<SYNC Start=12342960><P class='en'>people that like they love interfaces. And
for this reason, they do something I would
<SYNC Start=12343960><P class='en'>&nbsp;
<SYNC Start=12343960><P class='en'>call interface readers, like an illness, blindly
adding an interface implementing an interface
<SYNC Start=12344960><P class='en'>&nbsp;
<SYNC Start=12344960><P class='en'>always just because, and I think this is not
too smart. And then really, interfaces can
<SYNC Start=12345960><P class='en'>&nbsp;
<SYNC Start=12345960><P class='en'>be a disadvantage, because they just make
everything more complex. But now, this is
<SYNC Start=12346960><P class='en'>&nbsp;
<SYNC Start=12346960><P class='en'>already pretty much it. To the advantages,
so the advantages, I think a few ones are
<SYNC Start=12347960><P class='en'>&nbsp;
<SYNC Start=12347960><P class='en'>already mentioned, while explaining the interface.
Probably one of the most important ones is
<SYNC Start=12348960><P class='en'>&nbsp;
<SYNC Start=12348960><P class='en'>that it decouples your code, as I explained
before, like now, the car service only uses
<SYNC Start=12349960><P class='en'>&nbsp;
<SYNC Start=12349960><P class='en'>the cotton Well, no, I was actually like,
sorry, of course, as it is implemented at
<SYNC Start=12350960><P class='en'>&nbsp;
<SYNC Start=12350960><P class='en'>the moment, we still say new BMW new Porsche
new messages. So of course, at the moment,
<SYNC Start=12351960><P class='en'>&nbsp;
<SYNC Start=12351960><P class='en'>it would still be coupled. But normally, of
course, he would also not do it like this,
<SYNC Start=12352960><P class='en'>&nbsp;
<SYNC Start=12352960><P class='en'>what he would usually do is you forward an
array that is already filled, only then. Now,
<SYNC Start=12353960><P class='en'>&nbsp;
<SYNC Start=12353960><P class='en'>our core service is not coupled to the specific
implementations. So it really allows to decouple
<SYNC Start=12354960><P class='en'>&nbsp;
<SYNC Start=12354960><P class='en'>your code much better than without interfaces.
And this decoupling also helps with other
<SYNC Start=12355960><P class='en'>&nbsp;
<SYNC Start=12355960><P class='en'>things, for example, team cooperation. Imagine
you have a big team of 10 2030 developers,
<SYNC Start=12356960><P class='en'>&nbsp;
<SYNC Start=12356960><P class='en'>and you have a big project that you have to
work on for weeks or months.
<SYNC Start=12357960><P class='en'>&nbsp;
<SYNC Start=12357960><P class='en'>And then you would probably form smaller sub
teams. And then each sub team would work on
<SYNC Start=12358960><P class='en'>&nbsp;
<SYNC Start=12358960><P class='en'>a specific area. For example, one team in
our example here, could work on the car service,
<SYNC Start=12359960><P class='en'>&nbsp;
<SYNC Start=12359960><P class='en'>while there would be another team implementing
different car types. Now the problem is, the
<SYNC Start=12360960><P class='en'>&nbsp;
<SYNC Start=12360960><P class='en'>car service is then or might be dependent
on specific car implementations to test it.
<SYNC Start=12361960><P class='en'>&nbsp;
<SYNC Start=12361960><P class='en'>And on the other hand, the team that implements
the different car types might need a car service
<SYNC Start=12362960><P class='en'>&nbsp;
<SYNC Start=12362960><P class='en'>for testing, and for integrating their code
with the other code. So it&#39;s like, each team
<SYNC Start=12363960><P class='en'>&nbsp;
<SYNC Start=12363960><P class='en'>is dependent on the other team. And so each
team blocks the other team. So nothing can
<SYNC Start=12364960><P class='en'>&nbsp;
<SYNC Start=12364960><P class='en'>be finished. And interfaces can be a solution
to the problem. Because when you introduce
<SYNC Start=12365960><P class='en'>&nbsp;
<SYNC Start=12365960><P class='en'>an interface here, for example, in this case
for the car service, then the team implementing
<SYNC Start=12366960><P class='en'>&nbsp;
<SYNC Start=12366960><P class='en'>the different cars would just do a very stupid
dummy implementation, something similar like
<SYNC Start=12367960><P class='en'>&nbsp;
<SYNC Start=12367960><P class='en'>I did here, where you don&#39;t have real code,
or just something where you see it&#39;s working.
<SYNC Start=12368960><P class='en'>&nbsp;
<SYNC Start=12368960><P class='en'>And then the other team can independently
also work on their code. And also add dummy
<SYNC Start=12369960><P class='en'>&nbsp;
<SYNC Start=12369960><P class='en'>implementations where needed. And only when
both are finished, they can be brought together.
<SYNC Start=12370960><P class='en'>&nbsp;
<SYNC Start=12370960><P class='en'>So interfaces really help in team cooperation.
And then next advantage is interfaces really
<SYNC Start=12371960><P class='en'>&nbsp;
<SYNC Start=12371960><P class='en'>include increase your flexibility, because
as you see, as I have changed it now we have
<SYNC Start=12372960><P class='en'>&nbsp;
<SYNC Start=12372960><P class='en'>the cars array as a parameter to our drive
method. So actually at runtime, in this case,
<SYNC Start=12373960><P class='en'>&nbsp;
<SYNC Start=12373960><P class='en'>in our test method, we have this drive method.
So now at runtime, I could have something
<SYNC Start=12374960><P class='en'>&nbsp;
<SYNC Start=12374960><P class='en'>some condition if it&#39;s sunny, just making
this up. Then I want to drive in my Porsche.
<SYNC Start=12375960><P class='en'>&nbsp;
<SYNC Start=12375960><P class='en'>And so I create a pushy here, so I would say
car car And then I would say if sunny car
<SYNC Start=12376960><P class='en'>&nbsp;
<SYNC Start=12376960><P class='en'>equals to new Porsche else if it&#39;s not Sunny,
well, I hope I had so many cars, then I would
<SYNC Start=12377960><P class='en'>&nbsp;
<SYNC Start=12377960><P class='en'>say I take the BMW instead. Because it&#39;s better
for rainy weather. Knew, of course, and now
<SYNC Start=12378960><P class='en'>&nbsp;
<SYNC Start=12378960><P class='en'>I don&#39;t want to make an error, let me change
the method. And I don&#39;t implement sunny nose.
<SYNC Start=12379960><P class='en'>&nbsp;
<SYNC Start=12379960><P class='en'>So I just say true here, just to have it simple.
So in this case, Now, of course, you wouldn&#39;t
<SYNC Start=12380960><P class='en'>&nbsp;
<SYNC Start=12380960><P class='en'>be cold. And in my drive method to make this
work, make this a car to have it simple. And
<SYNC Start=12381960><P class='en'>&nbsp;
<SYNC Start=12381960><P class='en'>I would call drive. So now at runtime, we
will decide what kind of car this is. So this
<SYNC Start=12382960><P class='en'>&nbsp;
<SYNC Start=12382960><P class='en'>really adds a lot of power to our code.
<SYNC Start=12383960><P class='en'>&nbsp;
<SYNC Start=12383960><P class='en'>So
<SYNC Start=12384960><P class='en'>&nbsp;
<SYNC Start=12384960><P class='en'>it might be a pushy, and it might be a BMW
that is given to the Dr. method. Really cool
<SYNC Start=12385960><P class='en'>&nbsp;
<SYNC Start=12385960><P class='en'>feature.
<SYNC Start=12386960><P class='en'>&nbsp;
<SYNC Start=12386960><P class='en'>Okay,
<SYNC Start=12387960><P class='en'>&nbsp;
<SYNC Start=12387960><P class='en'>I guess there are many, many more advantages
of interfaces. Let me know if you have more
<SYNC Start=12388960><P class='en'>&nbsp;
<SYNC Start=12388960><P class='en'>to add. But I think this is enough for the
moment so that you get an idea of what interfaces
<SYNC Start=12389960><P class='en'>&nbsp;
<SYNC Start=12389960><P class='en'>are. And all the advantages interfaces have.
Just also, again, the warning don&#39;t fall into
<SYNC Start=12390960><P class='en'>&nbsp;
<SYNC Start=12390960><P class='en'>our interface, serious illness. This will
also be not wise. But I think this pretty
<SYNC Start=12391960><P class='en'>&nbsp;
<SYNC Start=12391960><P class='en'>much wraps it up. I&#39;m going to talk about
inheritance in Java. inheritance is actually
<SYNC Start=12392960><P class='en'>&nbsp;
<SYNC Start=12392960><P class='en'>a very powerful feature of object oriented
languages. Similar to interfaces, inheritance
<SYNC Start=12393960><P class='en'>&nbsp;
<SYNC Start=12393960><P class='en'>allows to handle a group of similar objects
in a uniform way. On top of that, however,
<SYNC Start=12394960><P class='en'>&nbsp;
<SYNC Start=12394960><P class='en'>it also allows to prevent code duplication,
by inheriting the members of a class from
<SYNC Start=12395960><P class='en'>&nbsp;
<SYNC Start=12395960><P class='en'>a parent class to its child classes. I&#39;m the
members of a class in case you don&#39;t remember,
<SYNC Start=12396960><P class='en'>&nbsp;
<SYNC Start=12396960><P class='en'>are the instance variables, and the instance
methods. So everything that is not static.
<SYNC Start=12397960><P class='en'>&nbsp;
<SYNC Start=12397960><P class='en'>Okay, well, I guess that sounds very promising.
The problem is, I think inheritance is just
<SYNC Start=12398960><P class='en'>&nbsp;
<SYNC Start=12398960><P class='en'>a bit too powerful actually. Well, if used
incorrectly, inheritance, can severely damage
<SYNC Start=12399960><P class='en'>&nbsp;
<SYNC Start=12399960><P class='en'>your code. So really take here and use inheritance
sparsely. I mean, there are definitely justified
<SYNC Start=12400960><P class='en'>&nbsp;
<SYNC Start=12400960><P class='en'>cases to use inheritance. But whenever in
doubt, I would not use it. Okay. And also,
<SYNC Start=12401960><P class='en'>&nbsp;
<SYNC Start=12401960><P class='en'>it actually requires some experience to know
when to use inheritance, and when to avoid
<SYNC Start=12402960><P class='en'>&nbsp;
<SYNC Start=12402960><P class='en'>it. To give you a real world example, I&#39;m
at the moment I&#39;m working on a project of
<SYNC Start=12403960><P class='en'>&nbsp;
<SYNC Start=12403960><P class='en'>about maybe 15,000 lines of code. And there.
I used inheritance, maybe once. Yeah. So there
<SYNC Start=12404960><P class='en'>&nbsp;
<SYNC Start=12404960><P class='en'>are alternatives to using inheritance. I&#39;m
about this. We will talk at the later time.
<SYNC Start=12405960><P class='en'>&nbsp;
<SYNC Start=12405960><P class='en'>Yeah. Well,
<SYNC Start=12406960><P class='en'>&nbsp;
<SYNC Start=12406960><P class='en'>let&#39;s stop here for a moment. Because now
the introduction is almost over. You see me
<SYNC Start=12407960><P class='en'>&nbsp;
<SYNC Start=12407960><P class='en'>in the button right corner talking to you
all very soon disappear, because I&#39;ll jump
<SYNC Start=12408960><P class='en'>&nbsp;
<SYNC Start=12408960><P class='en'>into the code. And I&#39;ll show you how to implement
and use inheritance. Before that one personal
<SYNC Start=12409960><P class='en'>&nbsp;
<SYNC Start=12409960><P class='en'>request. I&#39;m doing this videos for you. So
that you can learn Java, I hope they useful
<SYNC Start=12410960><P class='en'>&nbsp;
<SYNC Start=12410960><P class='en'>to you. If so, I would be very happy if you
could give me your thumbs up in the bottom
<SYNC Start=12411960><P class='en'>&nbsp;
<SYNC Start=12411960><P class='en'>right corner of this video. And remember,
you can also subscribe to my YouTube channel.
<SYNC Start=12412960><P class='en'>&nbsp;
<SYNC Start=12412960><P class='en'>Okay, well enough of advertisement Now, let&#39;s
really do a coding session and jump into the
<SYNC Start=12413960><P class='en'>&nbsp;
<SYNC Start=12413960><P class='en'>code. Okay, so here you see I have prepared
this CEU test class for you. We are actually
<SYNC Start=12414960><P class='en'>&nbsp;
<SYNC Start=12414960><P class='en'>not really testing something now. This is
just for demonstration purposes, any arbitrary
<SYNC Start=12415960><P class='en'>&nbsp;
<SYNC Start=12415960><P class='en'>example. Um, this example is actually taken
from the book, headfirst Java, from Kathy
<SYNC Start=12416960><P class='en'>&nbsp;
<SYNC Start=12416960><P class='en'>Sierra, she is really my favorite author of
any Java related book, highly recommended
<SYNC Start=12417960><P class='en'>&nbsp;
<SYNC Start=12417960><P class='en'>to read
<SYNC Start=12418960><P class='en'>&nbsp;
<SYNC Start=12418960><P class='en'>this and any other offer books. In case you
want to know, you can find a link
<SYNC Start=12419960><P class='en'>&nbsp;
<SYNC Start=12419960><P class='en'>to her books on my blog on market minus b.com.
I have a must read section there, you can
<SYNC Start=12420960><P class='en'>&nbsp;
<SYNC Start=12420960><P class='en'>find her books. Okay. Now back to the code.
So I have here the SU class. So the idea is,
<SYNC Start=12421960><P class='en'>&nbsp;
<SYNC Start=12421960><P class='en'>we have here an area of animals, similar to
the area of cars I had in the last episode,
<SYNC Start=12422960><P class='en'>&nbsp;
<SYNC Start=12422960><P class='en'>where I introduced you to interfaces, and
I had a car every with BMW and Mercedes and
<SYNC Start=12423960><P class='en'>&nbsp;
<SYNC Start=12423960><P class='en'>a pushy, now we have an animal array with
a dog, a gorilla,
<SYNC Start=12424960><P class='en'>&nbsp;
<SYNC Start=12424960><P class='en'>and a line and a tiger. So you should already
see interfaces and inheritance in Java. When
<SYNC Start=12425960><P class='en'>&nbsp;
<SYNC Start=12425960><P class='en'>you use them, here, it looks quite similar.
And this, by the way, is called polymorphism.
<SYNC Start=12426960><P class='en'>&nbsp;
<SYNC Start=12426960><P class='en'>You might have heard that.
<SYNC Start=12427960><P class='en'>&nbsp;
<SYNC Start=12427960><P class='en'>And the idea of polymorphism is that on the
left side, you have a variable a reference
<SYNC Start=12428960><P class='en'>&nbsp;
<SYNC Start=12428960><P class='en'>variable of this super type a parent class
<SYNC Start=12429960><P class='en'>&nbsp;
<SYNC Start=12429960><P class='en'>animal. But Polly Morphe. I mean, this also
works with interfaces. So the idea is just
<SYNC Start=12430960><P class='en'>&nbsp;
<SYNC Start=12430960><P class='en'>that you have an interface or a super or parent
class.
<SYNC Start=12431960><P class='en'>&nbsp;
<SYNC Start=12431960><P class='en'>And on the right side, an animal can be a
dog, a gorilla, a line, a tiger, anything,
<SYNC Start=12432960><P class='en'>&nbsp;
<SYNC Start=12432960><P class='en'>so different things can be assigned to the
left variable. Because the polymorphism means
<SYNC Start=12433960><P class='en'>&nbsp;
<SYNC Start=12433960><P class='en'>like, many sides solve can have different
implementations on the right side. And they
<SYNC Start=12434960><P class='en'>&nbsp;
<SYNC Start=12434960><P class='en'>will all be handled uniformly here, I have
prepared this feed animals method. Let&#39;s maybe
<SYNC Start=12435960><P class='en'>&nbsp;
<SYNC Start=12435960><P class='en'>jump here. Okay, so you see I&#39;ve prepared
this for each loop, everything that is read,
<SYNC Start=12436960><P class='en'>&nbsp;
<SYNC Start=12436960><P class='en'>we still have to implement, I have only prepared
it. So we&#39;re iterating through my array, we
<SYNC Start=12437960><P class='en'>&nbsp;
<SYNC Start=12437960><P class='en'>still have to implement the eat method. And
we still have to implement the H method. Now,
<SYNC Start=12438960><P class='en'>&nbsp;
<SYNC Start=12438960><P class='en'>again, totally stupid, arbitrary example.
But just to have something to show you. And
<SYNC Start=12439960><P class='en'>&nbsp;
<SYNC Start=12439960><P class='en'>to have variation. My idea was, I mean, totally
arbitrary. Really, this depends on the design
<SYNC Start=12440960><P class='en'>&nbsp;
<SYNC Start=12440960><P class='en'>of your code that like because code is always
like a model of the real world. And so it
<SYNC Start=12441960><P class='en'>&nbsp;
<SYNC Start=12441960><P class='en'>totally depends on the example that you&#39;re
working on. Well, in my example, I just defined
<SYNC Start=12442960><P class='en'>&nbsp;
<SYNC Start=12442960><P class='en'>that I said, Well, every animal, a dog, a
gorilla, a line, Tiger, they all eat in a
<SYNC Start=12443960><P class='en'>&nbsp;
<SYNC Start=12443960><P class='en'>different way. Because for example, a gorilla
would probably eat, I don&#39;t know what it eats
<SYNC Start=12444960><P class='en'>&nbsp;
<SYNC Start=12444960><P class='en'>grass, or leaves or something will align.
I don&#39;t know. It&#39;s some kind of meat. So therefore,
<SYNC Start=12445960><P class='en'>&nbsp;
<SYNC Start=12445960><P class='en'>my idea was to have an implementation, a concrete
implementation of the eat method in each different
<SYNC Start=12446960><P class='en'>&nbsp;
<SYNC Start=12446960><P class='en'>animal subtype. And further, my idea was to
have this H method. Well, every animal can
<SYNC Start=12447960><P class='en'>&nbsp;
<SYNC Start=12447960><P class='en'>be of a different age. But the calculation
Well, normally, you wouldn&#39;t probably calculate
<SYNC Start=12448960><P class='en'>&nbsp;
<SYNC Start=12448960><P class='en'>the age. But I mean, this is just my stupid
example, I made it a method. So the calculation
<SYNC Start=12449960><P class='en'>&nbsp;
<SYNC Start=12449960><P class='en'>would be the same for every animal. So my
idea is to have this as a concrete method,
<SYNC Start=12450960><P class='en'>&nbsp;
<SYNC Start=12450960><P class='en'>an animal and have this as an abstract method,
because this is something here, where interfaces
<SYNC Start=12451960><P class='en'>&nbsp;
<SYNC Start=12451960><P class='en'>are different. Sorry, yeah, but interfaces
are different to inheritance. In interfaces,
<SYNC Start=12452960><P class='en'>&nbsp;
<SYNC Start=12452960><P class='en'>you only have abstract methods. And because
you have only abstract methods, the abstract
<SYNC Start=12453960><P class='en'>&nbsp;
<SYNC Start=12453960><P class='en'>keyword is not needed. But here we can enhance
inheritance, we can mix it, maybe I should
<SYNC Start=12454960><P class='en'>&nbsp;
<SYNC Start=12454960><P class='en'>already jump now to the animal class. So an
animal class this is still just a stupid simple
<SYNC Start=12455960><P class='en'>&nbsp;
<SYNC Start=12455960><P class='en'>class totally empty. So you can use inheritance
with just a simple class. And now let&#39;s implement
<SYNC Start=12456960><P class='en'>&nbsp;
<SYNC Start=12456960><P class='en'>two methods concrete
<SYNC Start=12457960><P class='en'>&nbsp;
<SYNC Start=12457960><P class='en'>methods, public void, eat Later on, I&#39;ll make
this abstract. But for now, I wanted concrete.
<SYNC Start=12458960><P class='en'>&nbsp;
<SYNC Start=12458960><P class='en'>public void. Ah, oh, okay. So now maybe we
should also do something in the method. And
<SYNC Start=12459960><P class='en'>&nbsp;
<SYNC Start=12459960><P class='en'>again, avoid system or print boom, just, if
you&#39;re like me doing an example, showing something.
<SYNC Start=12460960><P class='en'>&nbsp;
<SYNC Start=12460960><P class='en'>This is the exception polluter rules and it&#39;s
okayish to use system or printable, but avoided
<SYNC Start=12461960><P class='en'>&nbsp;
<SYNC Start=12461960><P class='en'>in real code. Okay, so I say, animal is eating.
Well, this is not what we want. So it&#39;s just
<SYNC Start=12462960><P class='en'>&nbsp;
<SYNC Start=12462960><P class='en'>step one, I said every animal is eating in
its own way. And here is say, h is cold. collated.
<SYNC Start=12463960><P class='en'>&nbsp;
<SYNC Start=12463960><P class='en'>Okay, it&#39;s here the dots to just for fun.
So now, see, this class looks totally like
<SYNC Start=12464960><P class='en'>&nbsp;
<SYNC Start=12464960><P class='en'>a regular class, you have seen so many times
before. Now, I go to the dog class, and I
<SYNC Start=12465960><P class='en'>&nbsp;
<SYNC Start=12465960><P class='en'>want the dog to be an animal. Well, if this
would be an interface, I would say implements
<SYNC Start=12466960><P class='en'>&nbsp;
<SYNC Start=12466960><P class='en'>you remember, but it&#39;s not it&#39;s a class and
we extend the class and therefore the keyword
<SYNC Start=12467960><P class='en'>&nbsp;
<SYNC Start=12467960><P class='en'>is extends really, totally easy. Okay, so
we say extends animal. And all this is already
<SYNC Start=12468960><P class='en'>&nbsp;
<SYNC Start=12468960><P class='en'>using inheritance. Now it&#39;s looks like as
if the dog class was empty. But in fact, we
<SYNC Start=12469960><P class='en'>&nbsp;
<SYNC Start=12469960><P class='en'>can already use these two methods in dog Okay,
let&#39;s continue doing this for all the other
<SYNC Start=12470960><P class='en'>&nbsp;
<SYNC Start=12470960><P class='en'>subtypes
<SYNC Start=12471960><P class='en'>&nbsp;
<SYNC Start=12471960><P class='en'>gorilla
<SYNC Start=12472960><P class='en'>&nbsp;
<SYNC Start=12472960><P class='en'>extends animal line extends animal. These
by the way are two interfaces, I also want
<SYNC Start=12473960><P class='en'>&nbsp;
<SYNC Start=12473960><P class='en'>to show you and I might just as well do it
now, we can mix using interfaces and using
<SYNC Start=12474960><P class='en'>&nbsp;
<SYNC Start=12474960><P class='en'>extending classes using inheritance we can
mix them the question is should we first say
<SYNC Start=12475960><P class='en'>&nbsp;
<SYNC Start=12475960><P class='en'>extends or first implements, well, there is
a rule it must be that we say extends first
<SYNC Start=12476960><P class='en'>&nbsp;
<SYNC Start=12476960><P class='en'>and then implements because in Java, we have
single inheritance. So, we can only extend
<SYNC Start=12477960><P class='en'>&nbsp;
<SYNC Start=12477960><P class='en'>a single class, but we can implement any number
of interfaces, and therefore, this is a comma
<SYNC Start=12478960><P class='en'>&nbsp;
<SYNC Start=12478960><P class='en'>separated list. And therefore, to make it
a bit easier, it&#39;s at the end. So, we say
<SYNC Start=12479960><P class='en'>&nbsp;
<SYNC Start=12479960><P class='en'>implements and I can say this interface lockable
and comma printable. So, an interface plays
<SYNC Start=12480960><P class='en'>&nbsp;
<SYNC Start=12480960><P class='en'>a role. So Aline can play the role of being
a lovable, when like, he mentioned, the code
<SYNC Start=12481960><P class='en'>&nbsp;
<SYNC Start=12481960><P class='en'>is running on production at a certain time
where we want to lock the line or we want
<SYNC Start=12482960><P class='en'>&nbsp;
<SYNC Start=12482960><P class='en'>to print it and therefore we can implement
this interface. Again, this is pulley Morphe
<SYNC Start=12483960><P class='en'>&nbsp;
<SYNC Start=12483960><P class='en'>that align can be a luggable Okay, so, you
see there is something red, because now we
<SYNC Start=12484960><P class='en'>&nbsp;
<SYNC Start=12484960><P class='en'>have a lot of methods that we have to implement.
First of all, from the animal, I mean, the
<SYNC Start=12485960><P class='en'>&nbsp;
<SYNC Start=12485960><P class='en'>order is arbitrary. We can also start with
a printable. So there was a public void. Um,
<SYNC Start=12486960><P class='en'>&nbsp;
<SYNC Start=12486960><P class='en'>was it print I hope method. And then there
was a public void I think message for luggable.
<SYNC Start=12487960><P class='en'>&nbsp;
<SYNC Start=12487960><P class='en'>This might have Yeah, you see, so the rule
is, when we implement an interface method
<SYNC Start=12488960><P class='en'>&nbsp;
<SYNC Start=12488960><P class='en'>as well as when we, when we implement an abstract
method from animal, the signature, the method
<SYNC Start=12489960><P class='en'>&nbsp;
<SYNC Start=12489960><P class='en'>signature must be exactly the same. We can&#39;t
say what year because the interface said it
<SYNC Start=12490960><P class='en'>&nbsp;
<SYNC Start=12490960><P class='en'>must be a string, return something just for
our little example. Okay, and in here, I say
<SYNC Start=12491960><P class='en'>&nbsp;
<SYNC Start=12491960><P class='en'>system dot out.
<SYNC Start=12492960><P class='en'>&nbsp;
<SYNC Start=12492960><P class='en'>Print.
<SYNC Start=12493960><P class='en'>&nbsp;
<SYNC Start=12493960><P class='en'>ln
<SYNC Start=12494960><P class='en'>&nbsp;
<SYNC Start=12494960><P class='en'>printing,
<SYNC Start=12495960><P class='en'>&nbsp;
<SYNC Start=12495960><P class='en'>okay, get the idea.
<SYNC Start=12496960><P class='en'>&nbsp;
<SYNC Start=12496960><P class='en'>So, now, there is still the eat method missing.
No, actually, it&#39;s not because we made it
<SYNC Start=12497960><P class='en'>&nbsp;
<SYNC Start=12497960><P class='en'>concrete. So we don&#39;t have to implement the
method I&#39;m already a bit too fast.
<SYNC Start=12498960><P class='en'>&nbsp;
<SYNC Start=12498960><P class='en'>So see the red is gone. Everything so far
seems okay. But there&#39;s still a problem and
<SYNC Start=12499960><P class='en'>&nbsp;
<SYNC Start=12499960><P class='en'>Sue test. Let&#39;s check this are the tiger,
we still have to do the tiger extends because
<SYNC Start=12500960><P class='en'>&nbsp;
<SYNC Start=12500960><P class='en'>the tiger was not an animal yet. Maybe we
should look at this again. I mean, this is
<SYNC Start=12501960><P class='en'>&nbsp;
<SYNC Start=12501960><P class='en'>interesting. So see, all those classes are
all already extending the
<SYNC Start=12502960><P class='en'>&nbsp;
<SYNC Start=12502960><P class='en'>animal. And so these are already animals,
but the tiger is not yet required, we need
<SYNC Start=12503960><P class='en'>&nbsp;
<SYNC Start=12503960><P class='en'>an animal with found is a tiger. Okay, so
let&#39;s make this also an animal. Now it&#39;s an
<SYNC Start=12504960><P class='en'>&nbsp;
<SYNC Start=12504960><P class='en'>animal, and now it&#39;s working, the red is gone.
<SYNC Start=12505960><P class='en'>&nbsp;
<SYNC Start=12505960><P class='en'>Okay, but we still haven&#39;t done what we want
it. Because I said I want this method abstract.
<SYNC Start=12506960><P class='en'>&nbsp;
<SYNC Start=12506960><P class='en'>Now, you probably remember from when I explained
interfaces, an abstract method does not have
<SYNC Start=12507960><P class='en'>&nbsp;
<SYNC Start=12507960><P class='en'>this method body, the implementation, but
just the method signature, this here on the
<SYNC Start=12508960><P class='en'>&nbsp;
<SYNC Start=12508960><P class='en'>top,
<SYNC Start=12509960><P class='en'>&nbsp;
<SYNC Start=12509960><P class='en'>the method signature. So let&#39;s remove the
body. And we have to say abstract in the interface
<SYNC Start=12510960><P class='en'>&nbsp;
<SYNC Start=12510960><P class='en'>we didn&#39;t have to, because in interface, all
the methods are,
<SYNC Start=12511960><P class='en'>&nbsp;
<SYNC Start=12511960><P class='en'>by definition abstract. But here I mean, how
would Java Nope, there&#39;s a concrete method.
<SYNC Start=12512960><P class='en'>&nbsp;
<SYNC Start=12512960><P class='en'>And this one is supposed to be abstract. So
therefore, in inheritance, we have to explicitly
<SYNC Start=12513960><P class='en'>&nbsp;
<SYNC Start=12513960><P class='en'>set abstract. But now there is a difference.
Because if one method is abstract, the whole
<SYNC Start=12514960><P class='en'>&nbsp;
<SYNC Start=12514960><P class='en'>class has to be abstract.
<SYNC Start=12515960><P class='en'>&nbsp;
<SYNC Start=12515960><P class='en'>Now,
<SYNC Start=12516960><P class='en'>&nbsp;
<SYNC Start=12516960><P class='en'>what does this mean? Because actually, this
changes a bit of the behavior. And this, again,
<SYNC Start=12517960><P class='en'>&nbsp;
<SYNC Start=12517960><P class='en'>depends on your personal design of the program
that you&#39;re writing. An abstract class cannot
<SYNC Start=12518960><P class='en'>&nbsp;
<SYNC Start=12518960><P class='en'>be instantiated. Now, we cannot say the compiler
will not allow us We can&#39;t say new animal.
<SYNC Start=12519960><P class='en'>&nbsp;
<SYNC Start=12519960><P class='en'>An abstract class is like just the contract,
just the protocol. Pretty much the same as
<SYNC Start=12520960><P class='en'>&nbsp;
<SYNC Start=12520960><P class='en'>an interface is just the raw definition. But
we cannot create instances from an abstract
<SYNC Start=12521960><P class='en'>&nbsp;
<SYNC Start=12521960><P class='en'>class, we can only do so from concrete classes.
But concrete classes cannot have abstract
<SYNC Start=12522960><P class='en'>&nbsp;
<SYNC Start=12522960><P class='en'>methods. So this is something that you have
to clearly think of. And also amin, I said,
<SYNC Start=12523960><P class='en'>&nbsp;
<SYNC Start=12523960><P class='en'>another warning, I said that this can be used
to prevent code publication. Now you might
<SYNC Start=12524960><P class='en'>&nbsp;
<SYNC Start=12524960><P class='en'>think, well, cool, I just create some tool
class. And this has any method that I&#39;m like
<SYNC Start=12525960><P class='en'>&nbsp;
<SYNC Start=12525960><P class='en'>needed anytime for example, age. And then
I can say animal extends tool. Because even
<SYNC Start=12526960><P class='en'>&nbsp;
<SYNC Start=12526960><P class='en'>the inheritance can have several layers. So
even though talk says extends animal animal,
<SYNC Start=12527960><P class='en'>&nbsp;
<SYNC Start=12527960><P class='en'>again, could extend some class. So now we
could say, extend some to class haven&#39;t implemented
<SYNC Start=12528960><P class='en'>&nbsp;
<SYNC Start=12528960><P class='en'>that. But I hope you get the idea. Well, even
though you can do so you should not do so.
<SYNC Start=12529960><P class='en'>&nbsp;
<SYNC Start=12529960><P class='en'>Because the rule is you have to apply and
is a test. Also, this is from
<SYNC Start=12530960><P class='en'>&nbsp;
<SYNC Start=12530960><P class='en'>the book of Kathy Sierra had first Java. They
you say an animal is a tool? No, it&#39;s not.
<SYNC Start=12531960><P class='en'>&nbsp;
<SYNC Start=12531960><P class='en'>So because it&#39;s not a tool, we don&#39;t say tool.
Because otherwise, this can really get nasty.
<SYNC Start=12532960><P class='en'>&nbsp;
<SYNC Start=12532960><P class='en'>And so you shouldn&#39;t do that as a recommendation.
But really a strong recommendation. Okay.
<SYNC Start=12533960><P class='en'>&nbsp;
<SYNC Start=12533960><P class='en'>So yeah, it still has to be made abstract
because of this abstract method here and we
<SYNC Start=12534960><P class='en'>&nbsp;
<SYNC Start=12534960><P class='en'>have to remove new animal as I said, doesn&#39;t
work. Okay, not everything read has gone.
<SYNC Start=12535960><P class='en'>&nbsp;
<SYNC Start=12535960><P class='en'>Now,
<SYNC Start=12536960><P class='en'>&nbsp;
<SYNC Start=12536960><P class='en'>let&#39;s go into our classes again. See, now
there is a problem. Now that this method is
<SYNC Start=12537960><P class='en'>&nbsp;
<SYNC Start=12537960><P class='en'>abstract, we also forced to implement it.
So we have to say, public void, eat. And we
<SYNC Start=12538960><P class='en'>&nbsp;
<SYNC Start=12538960><P class='en'>have to implement this method. And again,
stupid examples system called print ln dog
<SYNC Start=12539960><P class='en'>&nbsp;
<SYNC Start=12539960><P class='en'>is eating dot dot dot Okay, So gorilla is
eating in a different way. It&#39;s, I don&#39;t know,
<SYNC Start=12540960><P class='en'>&nbsp;
<SYNC Start=12540960><P class='en'>grass or something reuleaux is eating leaves.
Um, next one line, the line is eating something
<SYNC Start=12541960><P class='en'>&nbsp;
<SYNC Start=12541960><P class='en'>again, and the tiger is eating something.
So in this case, they all implement the eat
<SYNC Start=12542960><P class='en'>&nbsp;
<SYNC Start=12542960><P class='en'>method in their own unique way. So in reality,
you wouldn&#39;t, of course have your system out
<SYNC Start=12543960><P class='en'>&nbsp;
<SYNC Start=12543960><P class='en'>print on but some specific, Tiger related
logic that only fits for tiger. And this is
<SYNC Start=12544960><P class='en'>&nbsp;
<SYNC Start=12544960><P class='en'>why we have it here. And all the logic that
fits for all animals you put here. And this
<SYNC Start=12545960><P class='en'>&nbsp;
<SYNC Start=12545960><P class='en'>by the way, I mean, on the one hand, this
is handy. But to me, this is really a double
<SYNC Start=12546960><P class='en'>&nbsp;
<SYNC Start=12546960><P class='en'>double sided sword. I mean, this is handy
and can help. But on the other hand, it also
<SYNC Start=12547960><P class='en'>&nbsp;
<SYNC Start=12547960><P class='en'>is really complex. Because when you&#39;re in
a class like Sue, how do you know which animal
<SYNC Start=12548960><P class='en'>&nbsp;
<SYNC Start=12548960><P class='en'>implements eat, and which animal just inherits
the eat method, same for the H method,
<SYNC Start=12549960><P class='en'>&nbsp;
<SYNC Start=12549960><P class='en'>because we could of course, again mix that.
And we can also override a method. So for
<SYNC Start=12550960><P class='en'>&nbsp;
<SYNC Start=12550960><P class='en'>example, ah, this one is implemented. But
we could say, gorilla is implementing the
<SYNC Start=12551960><P class='en'>&nbsp;
<SYNC Start=12551960><P class='en'>age by itself are not something. So this is
like, how you could define an exception to
<SYNC Start=12552960><P class='en'>&nbsp;
<SYNC Start=12552960><P class='en'>the rule. You could say, well, my gorilla
does not use the H method. But instead, the
<SYNC Start=12553960><P class='en'>&nbsp;
<SYNC Start=12553960><P class='en'>H method is replaced by exactly this method.
<SYNC Start=12554960><P class='en'>&nbsp;
<SYNC Start=12554960><P class='en'>And the way this is done is, the signature
must be this method signature here must be
<SYNC Start=12555960><P class='en'>&nbsp;
<SYNC Start=12555960><P class='en'>pretty much looking the same. You can&#39;t like
change the return value or the parameter
<SYNC Start=12556960><P class='en'>&nbsp;
<SYNC Start=12556960><P class='en'>values.
<SYNC Start=12557960><P class='en'>&nbsp;
<SYNC Start=12557960><P class='en'>Well, you see, you can, but it&#39;s just not
using inheritance. Now, this is also why it&#39;s
<SYNC Start=12558960><P class='en'>&nbsp;
<SYNC Start=12558960><P class='en'>not yellow, but gray. Um, this is called overloading
a method. overloading a method means you implement
<SYNC Start=12559960><P class='en'>&nbsp;
<SYNC Start=12559960><P class='en'>a method that has the same name as another
method. But it&#39;s just something completely
<SYNC Start=12560960><P class='en'>&nbsp;
<SYNC Start=12560960><P class='en'>different. So this has nothing to do with
inheritance. If you want to inherit the method
<SYNC Start=12561960><P class='en'>&nbsp;
<SYNC Start=12561960><P class='en'>and override me override it, it has to have
the same signature. Okay, there is one exception.
<SYNC Start=12562960><P class='en'>&nbsp;
<SYNC Start=12562960><P class='en'>And for this, I have to introduce a new visibility
modifier. I think shortly, I talked about
<SYNC Start=12563960><P class='en'>&nbsp;
<SYNC Start=12563960><P class='en'>it in an earlier episode, but I didn&#39;t really
explain you what it means. And this is protected.
<SYNC Start=12564960><P class='en'>&nbsp;
<SYNC Start=12564960><P class='en'>Now what means protected? protected, means
it&#39;s visible, on the one hand, similar to
<SYNC Start=12565960><P class='en'>&nbsp;
<SYNC Start=12565960><P class='en'>default, or package level visibility, and
the whole package. So now we can use the H
<SYNC Start=12566960><P class='en'>&nbsp;
<SYNC Start=12566960><P class='en'>method. In Su. See, this is not read. It also
means it&#39;s visible in any class that extends
<SYNC Start=12567960><P class='en'>&nbsp;
<SYNC Start=12567960><P class='en'>animal. In our case, now, we have all the
classes in the same package. But he mentioned
<SYNC Start=12568960><P class='en'>&nbsp;
<SYNC Start=12568960><P class='en'>we had a car sitting, extend animal, I mean,
of course, we should not this would be stupid.
<SYNC Start=12569960><P class='en'>&nbsp;
<SYNC Start=12569960><P class='en'>But just technically not from a design perspective.
We could then use the H method, because it&#39;s
<SYNC Start=12570960><P class='en'>&nbsp;
<SYNC Start=12570960><P class='en'>protected. So the visibility is to any class
that inherits from animal on top, any class
<SYNC Start=12571960><P class='en'>&nbsp;
<SYNC Start=12571960><P class='en'>that is in the same package. And this again,
makes it complex. Do you see how much I have
<SYNC Start=12572960><P class='en'>&nbsp;
<SYNC Start=12572960><P class='en'>to explain? so that you understand, and this
is why I would avoid using it. So I just want
<SYNC Start=12573960><P class='en'>&nbsp;
<SYNC Start=12573960><P class='en'>you to passively know when someone else uses
it. But I would really avoid it. But so protected
<SYNC Start=12574960><P class='en'>&nbsp;
<SYNC Start=12574960><P class='en'>visibility is less visible than public. And
what I am allowed to do is I can increase
<SYNC Start=12575960><P class='en'>&nbsp;
<SYNC Start=12575960><P class='en'>the visibility in a child class. So where
was I? Here? So I&#39;m allowed you see it works.
<SYNC Start=12576960><P class='en'>&nbsp;
<SYNC Start=12576960><P class='en'>I can say public void. Now this is still not
inherited. Nowadays, it&#39;s yellow again. So
<SYNC Start=12577960><P class='en'>&nbsp;
<SYNC Start=12577960><P class='en'>I can say public And now I can also say protected,
which at the moment is the same visibility
<SYNC Start=12578960><P class='en'>&nbsp;
<SYNC Start=12578960><P class='en'>as in parent class animal. But I&#39;m not allowed
to say private, this will give me a compiler
<SYNC Start=12579960><P class='en'>&nbsp;
<SYNC Start=12579960><P class='en'>error, attempting to assign weaker access
privileges. It was protected. So you&#39;re allowed
<SYNC Start=12580960><P class='en'>&nbsp;
<SYNC Start=12580960><P class='en'>to make it public, but not less than protected.
The idea behind that is, I mean, an abstract
<SYNC Start=12581960><P class='en'>&nbsp;
<SYNC Start=12581960><P class='en'>method defines a contract a protocol. Exactly.
Like with interfaces, by saying extends animal,
<SYNC Start=12582960><P class='en'>&nbsp;
<SYNC Start=12582960><P class='en'>you promise any other class in the Java universe?
I am an animal, and you have a method that
<SYNC Start=12583960><P class='en'>&nbsp;
<SYNC Start=12583960><P class='en'>is public. And you can call it. And me. You
mentioned the crazy stuff that would happen.
<SYNC Start=12584960><P class='en'>&nbsp;
<SYNC Start=12584960><P class='en'>If there is one class that just does not fulfill
this contract. So this is why it&#39;s not working,
<SYNC Start=12585960><P class='en'>&nbsp;
<SYNC Start=12585960><P class='en'>it has to have the same visibility. Oh, okay.
Then also, I mean, I said, we inherit the
<SYNC Start=12586960><P class='en'>&nbsp;
<SYNC Start=12586960><P class='en'>members of a class. And I said, the members
of the class are the instance methods. These
<SYNC Start=12587960><P class='en'>&nbsp;
<SYNC Start=12587960><P class='en'>are the instance methods, and the instance
variables. So you can also have here a protected,
<SYNC Start=12588960><P class='en'>&nbsp;
<SYNC Start=12588960><P class='en'>I&#39;m in H. And this will also be inherited.
We can now say, directly access is in here.
<SYNC Start=12589960><P class='en'>&nbsp;
<SYNC Start=12589960><P class='en'>I mean, this is the H method. Maybe I should
now here have a public void. h method instead
<SYNC Start=12590960><P class='en'>&nbsp;
<SYNC Start=12590960><P class='en'>of the eat method.
<SYNC Start=12591960><P class='en'>&nbsp;
<SYNC Start=12591960><P class='en'>Okay.
<SYNC Start=12592960><P class='en'>&nbsp;
<SYNC Start=12592960><P class='en'>And now I can say this dot age, or just age?
Or a statement? Yeah, of course not. It&#39;s
<SYNC Start=12593960><P class='en'>&nbsp;
<SYNC Start=12593960><P class='en'>not finished
<SYNC Start=12594960><P class='en'>&nbsp;
<SYNC Start=12594960><P class='en'>45. So this would now we&#39;ll set the age to
45. Or just age because here, we don&#39;t need
<SYNC Start=12595960><P class='en'>&nbsp;
<SYNC Start=12595960><P class='en'>this. Because we know what we mean.
<SYNC Start=12596960><P class='en'>&nbsp;
<SYNC Start=12596960><P class='en'>Um,
<SYNC Start=12597960><P class='en'>&nbsp;
<SYNC Start=12597960><P class='en'>even though this is possible, we inherit the
age field, I would not make use of it. Well,
<SYNC Start=12598960><P class='en'>&nbsp;
<SYNC Start=12598960><P class='en'>first of all, because I don&#39;t like protected
as I said, and second, because I think this
<SYNC Start=12599960><P class='en'>&nbsp;
<SYNC Start=12599960><P class='en'>kind of violates the capsulation because the
animals should be the only one working on
<SYNC Start=12600960><P class='en'>&nbsp;
<SYNC Start=12600960><P class='en'>its internal variables. Okay. So avoid protected
and avoid like, making the variables the members
<SYNC Start=12601960><P class='en'>&nbsp;
<SYNC Start=12601960><P class='en'>the the instance members visible. If we have
a static method, public static, something.
<SYNC Start=12602960><P class='en'>&nbsp;
<SYNC Start=12602960><P class='en'>Well, I have to implement it. Of course, this
can be used static void. For example, by saying
<SYNC Start=12603960><P class='en'>&nbsp;
<SYNC Start=12603960><P class='en'>animal dot something can also be used now.
From Zoo or wherever. So we could say, animal
<SYNC Start=12604960><P class='en'>&nbsp;
<SYNC Start=12604960><P class='en'>dot something. Yeah, you see, it&#39;s also formed
formatted differently. So we don&#39;t really
<SYNC Start=12605960><P class='en'>&nbsp;
<SYNC Start=12605960><P class='en'>see this as a static method.
<SYNC Start=12606960><P class='en'>&nbsp;
<SYNC Start=12606960><P class='en'>But this will not be inherited. So you cannot,
like override this or so. And the gorilla
<SYNC Start=12607960><P class='en'>&nbsp;
<SYNC Start=12607960><P class='en'>class again, you can say animal dot something
<SYNC Start=12608960><P class='en'>&nbsp;
<SYNC Start=12608960><P class='en'>will actually you can even say and this is
a bit weird. Gorilla dot something. But this
<SYNC Start=12609960><P class='en'>&nbsp;
<SYNC Start=12609960><P class='en'>is not inheritance. It&#39;s just Java is a bit
smart. Here. The compiler is a bit smart.
<SYNC Start=12610960><P class='en'>&nbsp;
<SYNC Start=12610960><P class='en'>It knows gorilla is an animal. So it realizes
this is an animal and then it takes the static
<SYNC Start=12611960><P class='en'>&nbsp;
<SYNC Start=12611960><P class='en'>method.
<SYNC Start=12612960><P class='en'>&nbsp;
<SYNC Start=12612960><P class='en'>But this is still not inheritance. Oh, K.
Let me remove that. I hope I haven&#39;t confused
<SYNC Start=12613960><P class='en'>&nbsp;
<SYNC Start=12613960><P class='en'>you too much with that static.
<SYNC Start=12614960><P class='en'>&nbsp;
<SYNC Start=12614960><P class='en'>Just remember, we only inheriting the members
of the clause. The instance methods and the
<SYNC Start=12615960><P class='en'>&nbsp;
<SYNC Start=12615960><P class='en'>instance variables. All Okay. Well, I think
this is pretty much it. Maybe I should execute
<SYNC Start=12616960><P class='en'>&nbsp;
<SYNC Start=12616960><P class='en'>it again. And now we see dog is eating. He
is calculated. Gorilla is eating gorilla is
<SYNC Start=12617960><P class='en'>&nbsp;
<SYNC Start=12617960><P class='en'>implementing the H by itself. This was I was
overwriting the H method in gorilla, and only
<SYNC Start=12618960><P class='en'>&nbsp;
<SYNC Start=12618960><P class='en'>in gorilla lion is eating, he has calculated
Tigers eating ages calculated. So inheritance
<SYNC Start=12619960><P class='en'>&nbsp;
<SYNC Start=12619960><P class='en'>really is a complex beast. And in conclusion,
use it sparsely. Only use it when you can
<SYNC Start=12620960><P class='en'>&nbsp;
<SYNC Start=12620960><P class='en'>say, when you can apply the is a test. A dog
is an animal, a gorilla is an animal, a lion
<SYNC Start=12621960><P class='en'>&nbsp;
<SYNC Start=12621960><P class='en'>is an animal, a tiger is an animal, a tool
is not an animal. So you will not say tool
<SYNC Start=12622960><P class='en'>&nbsp;
<SYNC Start=12622960><P class='en'>extends animal never. Um, if you&#39;re just looking
for something to like, not copy and paste,
<SYNC Start=12623960><P class='en'>&nbsp;
<SYNC Start=12623960><P class='en'>to not duplicate code, you can do something
else, put your code into its own object, a
<SYNC Start=12624960><P class='en'>&nbsp;
<SYNC Start=12624960><P class='en'>tool object. And then always you can use composition.
You could say, for example, a tiger has, I
<SYNC Start=12625960><P class='en'>&nbsp;
<SYNC Start=12625960><P class='en'>don&#39;t know, um, has a leg. If that makes sense
or not, I don&#39;t know. So leg, leg.
<SYNC Start=12626960><P class='en'>&nbsp;
<SYNC Start=12626960><P class='en'>And then you if you have a method, for example,
walk, you can say leg dot walk. And if you
<SYNC Start=12627960><P class='en'>&nbsp;
<SYNC Start=12627960><P class='en'>have another animal that also needs up it
called eat still. So this would be walk. So
<SYNC Start=12628960><P class='en'>&nbsp;
<SYNC Start=12628960><P class='en'>now if you have another animal that should
also use the lecture also use this method,
<SYNC Start=12629960><P class='en'>&nbsp;
<SYNC Start=12629960><P class='en'>you can also make it to have
<SYNC Start=12630960><P class='en'>&nbsp;
<SYNC Start=12630960><P class='en'>this member. And this by the way can and also
should be an interface. So that really makes
<SYNC Start=12631960><P class='en'>&nbsp;
<SYNC Start=12631960><P class='en'>it much more flexible actually, even than
inheritance. Because using an interface, you
<SYNC Start=12632960><P class='en'>&nbsp;
<SYNC Start=12632960><P class='en'>can exchange the behavior at runtime. This
is something I showed you in the last episode
<SYNC Start=12633960><P class='en'>&nbsp;
<SYNC Start=12633960><P class='en'>talking about interfaces, where I said you
could have some condition, if I don&#39;t know,
<SYNC Start=12634960><P class='en'>&nbsp;
<SYNC Start=12634960><P class='en'>Sunday.
<SYNC Start=12635960><P class='en'>&nbsp;
<SYNC Start=12635960><P class='en'>He was
<SYNC Start=12636960><P class='en'>&nbsp;
<SYNC Start=12636960><P class='en'>this implementation and otherwise the other
implementation. I mean, this is just not real
<SYNC Start=12637960><P class='en'>&nbsp;
<SYNC Start=12637960><P class='en'>code. Just very fast. Else. I just hope you
get the idea. I could say if Sunday, like
<SYNC Start=12638960><P class='en'>&nbsp;
<SYNC Start=12638960><P class='en'>equals to my fast leg, legs, you know.
<SYNC Start=12639960><P class='en'>&nbsp;
<SYNC Start=12639960><P class='en'>And
<SYNC Start=12640960><P class='en'>&nbsp;
<SYNC Start=12640960><P class='en'>the other days, I&#39;m not so fast. I say used
to slow lag. And then after the instantiation
<SYNC Start=12641960><P class='en'>&nbsp;
<SYNC Start=12641960><P class='en'>I would say like dot walk.
<SYNC Start=12642960><P class='en'>&nbsp;
<SYNC Start=12642960><P class='en'>Okay,
<SYNC Start=12643960><P class='en'>&nbsp;
<SYNC Start=12643960><P class='en'>so of course I mean this if else again introduces
some complexity. So whenever you design something,
<SYNC Start=12644960><P class='en'>&nbsp;
<SYNC Start=12644960><P class='en'>there&#39;s always pros and cons, you have to
think, what do I really need? But so you can
<SYNC Start=12645960><P class='en'>&nbsp;
<SYNC Start=12645960><P class='en'>use this, just to give you one example to
not use inheritance and still not duplicate
<SYNC Start=12646960><P class='en'>&nbsp;
<SYNC Start=12646960><P class='en'>your code. Oh, okay. Let me remove that. Don&#39;t
want it to be read. Wanted to be working.
<SYNC Start=12647960><P class='en'>&nbsp;
<SYNC Start=12647960><P class='en'>Okay, now, let&#39;s maybe recap before I finished
this video. So we talked about inheritance.
<SYNC Start=12648960><P class='en'>&nbsp;
<SYNC Start=12648960><P class='en'>We talked about polymorphism. I showed you
you can use composition. And there&#39;s also
<SYNC Start=12649960><P class='en'>&nbsp;
<SYNC Start=12649960><P class='en'>actually design principle it&#39;s called favor
composition over inheritance. As I showed
<SYNC Start=12650960><P class='en'>&nbsp;
<SYNC Start=12650960><P class='en'>you you can mix using inheritance with was
that one of these classes? Yeah. With interfaces,
<SYNC Start=12651960><P class='en'>&nbsp;
<SYNC Start=12651960><P class='en'>I showed you can implement several interfaces,
you can only extend one class. So I cannot
<SYNC Start=12652960><P class='en'>&nbsp;
<SYNC Start=12652960><P class='en'>say it already. When I do the calmer Something
is wrong. So I cannot say this animal to this
<SYNC Start=12653960><P class='en'>&nbsp;
<SYNC Start=12653960><P class='en'>doesn&#39;t work. Just believe me for now. Or
I mean, yeah, this is also a class, which
<SYNC Start=12654960><P class='en'>&nbsp;
<SYNC Start=12654960><P class='en'>is implemented. Yeah. So you see class cannot
extend multiple classes. This works in C plus
<SYNC Start=12655960><P class='en'>&nbsp;
<SYNC Start=12655960><P class='en'>class. And it&#39;s even more nasty than Single
inheritance. This causes something called
<SYNC Start=12656960><P class='en'>&nbsp;
<SYNC Start=12656960><P class='en'>the deadly diamond of death. But I will not
continue. This is too, too much for now you
<SYNC Start=12657960><P class='en'>&nbsp;
<SYNC Start=12657960><P class='en'>can google this deadly diamond of death. Because
Java doesn&#39;t support multiple inheritance.
<SYNC Start=12658960><P class='en'>&nbsp;
<SYNC Start=12658960><P class='en'>I&#39;m going to talk about the method finalize
of the class object. The class object is the
<SYNC Start=12659960><P class='en'>&nbsp;
<SYNC Start=12659960><P class='en'>root of the class hierarchy. Every class in
the whole Java universe inherits the methods
<SYNC Start=12660960><P class='en'>&nbsp;
<SYNC Start=12660960><P class='en'>of this class. So this is what makes those
methods here, very important. Which is probably
<SYNC Start=12661960><P class='en'>&nbsp;
<SYNC Start=12661960><P class='en'>also the reason why those methods are very
often used in Java developer job interview
<SYNC Start=12662960><P class='en'>&nbsp;
<SYNC Start=12662960><P class='en'>questions. So one way or the other, I hope
I have now raised your attention. Also, you
<SYNC Start=12663960><P class='en'>&nbsp;
<SYNC Start=12663960><P class='en'>should now that this episode, as well as the
following ones talking about all those methods
<SYNC Start=12664960><P class='en'>&nbsp;
<SYNC Start=12664960><P class='en'>are based on the really great book, Effective
Java second edition from Joshua block. I think
<SYNC Start=12665960><P class='en'>&nbsp;
<SYNC Start=12665960><P class='en'>I mentioned it already earlier. Now I have
to say it again, buy this book read it. Even
<SYNC Start=12666960><P class='en'>&nbsp;
<SYNC Start=12666960><P class='en'>better would be if you read it twice. It&#39;s
full of condensed information. Advanced Java
<SYNC Start=12667960><P class='en'>&nbsp;
<SYNC Start=12667960><P class='en'>developer must know my episode is supposed
to give you an introduction to the topic.
<SYNC Start=12668960><P class='en'>&nbsp;
<SYNC Start=12668960><P class='en'>But for more detailed information, it&#39;s necessary
that you read this book. Okay. So let&#39;s already
<SYNC Start=12669960><P class='en'>&nbsp;
<SYNC Start=12669960><P class='en'>start talking about the finalize method. The
finalize method is actually a hook method.
<SYNC Start=12670960><P class='en'>&nbsp;
<SYNC Start=12670960><P class='en'>What is a hook method? a hook method is a
method that, um, there is an empty implementation
<SYNC Start=12671960><P class='en'>&nbsp;
<SYNC Start=12671960><P class='en'>provided in the class object. And the idea
is that when you want this method to be used,
<SYNC Start=12672960><P class='en'>&nbsp;
<SYNC Start=12672960><P class='en'>he would provide an implementation in your
own class, by inheriting by overwriting sorry,
<SYNC Start=12673960><P class='en'>&nbsp;
<SYNC Start=12673960><P class='en'>by overwriting this method. And then this
method will be called by the JVM. But before
<SYNC Start=12674960><P class='en'>&nbsp;
<SYNC Start=12674960><P class='en'>I go in more details, the one the most important
takeaway from this episode is, this method
<SYNC Start=12675960><P class='en'>&nbsp;
<SYNC Start=12675960><P class='en'>is flawed. So the best you can probably do,
generally speaking, is not overriding this
<SYNC Start=12676960><P class='en'>&nbsp;
<SYNC Start=12676960><P class='en'>method. So not using it because it has its
flaws, will, in this episode, see? Why. I
<SYNC Start=12677960><P class='en'>&nbsp;
<SYNC Start=12677960><P class='en'>mean, there are some few valid users, at least
according to Joshua blog.
<SYNC Start=12678960><P class='en'>&nbsp;
<SYNC Start=12678960><P class='en'>I can tell you, I&#39;m developing in Java since
2001. So quite a few years already, I have
<SYNC Start=12679960><P class='en'>&nbsp;
<SYNC Start=12679960><P class='en'>never ever overwritten this method. So today
is probably the first time to demonstrate
<SYNC Start=12680960><P class='en'>&nbsp;
<SYNC Start=12680960><P class='en'>you what it is what it does. Okay. So maybe
we should already jump into the into the code,
<SYNC Start=12681960><P class='en'>&nbsp;
<SYNC Start=12681960><P class='en'>because it might be easier to understand for
you, or maybe before we read here, this description.
<SYNC Start=12682960><P class='en'>&nbsp;
<SYNC Start=12682960><P class='en'>So the finalize method is called by the garbage
collector of an object, when garbage collection
<SYNC Start=12683960><P class='en'>&nbsp;
<SYNC Start=12683960><P class='en'>terminate determines that there are no more
references to the object. So again, next question
<SYNC Start=12684960><P class='en'>&nbsp;
<SYNC Start=12684960><P class='en'>was probably what is the garbage collector?
Well, the garbage collector is really a very
<SYNC Start=12685960><P class='en'>&nbsp;
<SYNC Start=12685960><P class='en'>cool thing of the Java language. Other languages
such as c++, don&#39;t have it. As the name implies,
<SYNC Start=12686960><P class='en'>&nbsp;
<SYNC Start=12686960><P class='en'>it collects the garbage what&#39;s the garbage
the garbage is or objects that you created,
<SYNC Start=12687960><P class='en'>&nbsp;
<SYNC Start=12687960><P class='en'>worked on them. And after some time, the process
will be finished, at least on certain objects,
<SYNC Start=12688960><P class='en'>&nbsp;
<SYNC Start=12688960><P class='en'>he will not need them anymore. And so it helps
to free up those memory resources. So that
<SYNC Start=12689960><P class='en'>&nbsp;
<SYNC Start=12689960><P class='en'>you hopefully never run into out of memory
exception. And this is all done behind the
<SYNC Start=12690960><P class='en'>&nbsp;
<SYNC Start=12690960><P class='en'>cover as synchronously by the garbage collector
for you. But here is already the problem of
<SYNC Start=12691960><P class='en'>&nbsp;
<SYNC Start=12691960><P class='en'>the finalize method. Because I said it&#39;s,
it&#39;s called just before the garbage collector
<SYNC Start=12692960><P class='en'>&nbsp;
<SYNC Start=12692960><P class='en'>runs. The problem is the garbage collector
is running as synchronously so you can&#39;t influence
<SYNC Start=12693960><P class='en'>&nbsp;
<SYNC Start=12693960><P class='en'>when or if the garbage collector is running.
It is like its own smart beast. And you have
<SYNC Start=12694960><P class='en'>&nbsp;
<SYNC Start=12694960><P class='en'>no influence to tell it that it should run.
You can only give it recommendations. But
<SYNC Start=12695960><P class='en'>&nbsp;
<SYNC Start=12695960><P class='en'>you have no guarantee that the garbage collector
will ever run. And so you also have no guarantee
<SYNC Start=12696960><P class='en'>&nbsp;
<SYNC Start=12696960><P class='en'>that the finalized method will ever run. Yeah,
and what would you usually do in the finalize
<SYNC Start=12697960><P class='en'>&nbsp;
<SYNC Start=12697960><P class='en'>method, the idea was, you will also clean
up stuff, they&#39;re just not memory related
<SYNC Start=12698960><P class='en'>&nbsp;
<SYNC Start=12698960><P class='en'>resources, but not memory real related resources.
For example, if you have a connection to some
<SYNC Start=12699960><P class='en'>&nbsp;
<SYNC Start=12699960><P class='en'>i o resource, like a database or a file, those
are also system resources. And all resources
<SYNC Start=12700960><P class='en'>&nbsp;
<SYNC Start=12700960><P class='en'>are limited. So if you don&#39;t want to get in
trouble, and if you don&#39;t want that your system
<SYNC Start=12701960><P class='en'>&nbsp;
<SYNC Start=12701960><P class='en'>totally, totally freezes. You have to, again,
free up resources when you don&#39;t need them
<SYNC Start=12702960><P class='en'>&nbsp;
<SYNC Start=12702960><P class='en'>anymore. So the idea was to do that in a finalized
method. Now the flaw is, you don&#39;t have a
<SYNC Start=12703960><P class='en'>&nbsp;
<SYNC Start=12703960><P class='en'>guarantee that runs. And this already says
it&#39;s not working as intended. Okay. Besides,
<SYNC Start=12704960><P class='en'>&nbsp;
<SYNC Start=12704960><P class='en'>Joshua Bloch also gives other reasons. For
example, He somehow measured that creating
<SYNC Start=12705960><P class='en'>&nbsp;
<SYNC Start=12705960><P class='en'>an object and destroying it, again, is 430
times slower when you have an finalizer method
<SYNC Start=12706960><P class='en'>&nbsp;
<SYNC Start=12706960><P class='en'>implemented. So again, don&#39;t use it. And now
let&#39;s jump into the ID and look at it in more
<SYNC Start=12707960><P class='en'>&nbsp;
<SYNC Start=12707960><P class='en'>detail from a practical point of view. Okay.
Also, just before, in the API documentation,
<SYNC Start=12708960><P class='en'>&nbsp;
<SYNC Start=12708960><P class='en'>you might have seen, this method is actually
protected. Here. Again, we can see it protected
<SYNC Start=12709960><P class='en'>&nbsp;
<SYNC Start=12709960><P class='en'>void finalize, I mean, this Java API is just
written into the source code. Here, you can
<SYNC Start=12710960><P class='en'>&nbsp;
<SYNC Start=12710960><P class='en'>see the source code of object dot java. So
you see, it&#39;s also just a regular Java class.
<SYNC Start=12711960><P class='en'>&nbsp;
<SYNC Start=12711960><P class='en'>And you&#39;ll also see this method is empty.
This is what I said, it&#39;s a hook method. The
<SYNC Start=12712960><P class='en'>&nbsp;
<SYNC Start=12712960><P class='en'>idea is that you override the method and that
you provide code that is executed for cleaning
<SYNC Start=12713960><P class='en'>&nbsp;
<SYNC Start=12713960><P class='en'>up non memory resources.
<SYNC Start=12714960><P class='en'>&nbsp;
<SYNC Start=12714960><P class='en'>And Java, try to prevent that you directly
call the finalize method, because as I said,
<SYNC Start=12715960><P class='en'>&nbsp;
<SYNC Start=12715960><P class='en'>the idea is that you don&#39;t call it but that
the JVM calls it for you. So this is why this
<SYNC Start=12716960><P class='en'>&nbsp;
<SYNC Start=12716960><P class='en'>method is actually protected. Protected is
quite hard to understand. One way you can
<SYNC Start=12717960><P class='en'>&nbsp;
<SYNC Start=12717960><P class='en'>use a method that is protected is if you are
in the same package. So let&#39;s check this class
<SYNC Start=12718960><P class='en'>&nbsp;
<SYNC Start=12718960><P class='en'>isn&#39;t a package Java Lang. So I thought being
nasty, I can just as well create a class in
<SYNC Start=12719960><P class='en'>&nbsp;
<SYNC Start=12719960><P class='en'>this package. And this is what I did here,
test Java. In package Java Lang. You see,
<SYNC Start=12720960><P class='en'>&nbsp;
<SYNC Start=12720960><P class='en'>everything seems fine. I don&#39;t have any exception
from the compiler. So now, let&#39;s try to call
<SYNC Start=12721960><P class='en'>&nbsp;
<SYNC Start=12721960><P class='en'>this method. And you see, this dot finalize,
seems to be working. I mean, this is not working,
<SYNC Start=12722960><P class='en'>&nbsp;
<SYNC Start=12722960><P class='en'>because this is a static method. So we would
actually need a non static method. Or I could
<SYNC Start=12723960><P class='en'>&nbsp;
<SYNC Start=12723960><P class='en'>also say, new object. Well, there is an exception,
because it can throw a throwable as we see
<SYNC Start=12724960><P class='en'>&nbsp;
<SYNC Start=12724960><P class='en'>here at the bottom. I&#39;m not going to handle
this now, because I only wanted to show you
<SYNC Start=12725960><P class='en'>&nbsp;
<SYNC Start=12725960><P class='en'>from a theoretical point of view, this is
possible. There&#39;s just one problem. Let me
<SYNC Start=12726960><P class='en'>&nbsp;
<SYNC Start=12726960><P class='en'>now surrounded with a try catch to get the
compiler happy. So see, this would be now
<SYNC Start=12727960><P class='en'>&nbsp;
<SYNC Start=12727960><P class='en'>directly calling finalize, from a class that
is in package Java Lang. So I&#39;m within my
<SYNC Start=12728960><P class='en'>&nbsp;
<SYNC Start=12728960><P class='en'>public static void Main method. So I execute
it. Bam, I get an exception, security exception.
<SYNC Start=12729960><P class='en'>&nbsp;
<SYNC Start=12729960><P class='en'>It&#39;s prohibited. I cannot use Java Lang as
a package name. So this is not working. Okay,
<SYNC Start=12730960><P class='en'>&nbsp;
<SYNC Start=12730960><P class='en'>I just thought I should show you. I think
this is quite interesting. Now, let&#39;s close
<SYNC Start=12731960><P class='en'>&nbsp;
<SYNC Start=12731960><P class='en'>this again. And let&#39;s complete remove this
method. Okay, so what you should also know
<SYNC Start=12732960><P class='en'>&nbsp;
<SYNC Start=12732960><P class='en'>I mean, I said object is the root class, but
it&#39;s also a concrete class, you can create
<SYNC Start=12733960><P class='en'>&nbsp;
<SYNC Start=12733960><P class='en'>objects of the class object. What I don&#39;t
like here is that the word object is used
<SYNC Start=12734960><P class='en'>&nbsp;
<SYNC Start=12734960><P class='en'>twice, because the class is called object.
That&#39;s a bit confusing. So anyway, you see,
<SYNC Start=12735960><P class='en'>&nbsp;
<SYNC Start=12735960><P class='en'>you can call all those methods. But here within
the class car selector, we cannot call the
<SYNC Start=12736960><P class='en'>&nbsp;
<SYNC Start=12736960><P class='en'>finalize method. Okay. So for this, I have
here, this portion class, that&#39;s also close
<SYNC Start=12737960><P class='en'>&nbsp;
<SYNC Start=12737960><P class='en'>the object class. And now let&#39;s override the
finalize method, public void finalize, without
<SYNC Start=12738960><P class='en'>&nbsp;
<SYNC Start=12738960><P class='en'>any parameter. So to override a method, it
is very important that you do it exactly.
<SYNC Start=12739960><P class='en'>&nbsp;
<SYNC Start=12739960><P class='en'>Like in the superclass, the only difference
is, and this is allowed, I don&#39;t make it protected
<SYNC Start=12740960><P class='en'>&nbsp;
<SYNC Start=12740960><P class='en'>anymore, I can make it public. Because public
is more visible than protected. This is fine.
<SYNC Start=12741960><P class='en'>&nbsp;
<SYNC Start=12741960><P class='en'>Okay. And now, the idea would be that in here,
I do clean up my resources. Let&#39;s imagine
<SYNC Start=12742960><P class='en'>&nbsp;
<SYNC Start=12742960><P class='en'>I had some i, o reader, i, o reader, reader,
Peter, I&#39;m not going to implement this, just
<SYNC Start=12743960><P class='en'>&nbsp;
<SYNC Start=12743960><P class='en'>so that you get the idea. So the idea was
that within here, he would like for example,
<SYNC Start=12744960><P class='en'>&nbsp;
<SYNC Start=12744960><P class='en'>close those resources for this, usually I
already use provide a closed method. Now there
<SYNC Start=12745960><P class='en'>&nbsp;
<SYNC Start=12745960><P class='en'>are several problems for one, I said, you
don&#39;t have a guarantee that this method is
<SYNC Start=12746960><P class='en'>&nbsp;
<SYNC Start=12746960><P class='en'>ever called. This is totally in control by
the JVM, and you can not influence that it&#39;s
<SYNC Start=12747960><P class='en'>&nbsp;
<SYNC Start=12747960><P class='en'>running out of your control, it&#39;s running
as synchronously. And therefore, it doesn&#39;t
<SYNC Start=12748960><P class='en'>&nbsp;
<SYNC Start=12748960><P class='en'>really serve our purpose. Second flaw is,
if within here, we have an exception that
<SYNC Start=12749960><P class='en'>&nbsp;
<SYNC Start=12749960><P class='en'>is not caught,
<SYNC Start=12750960><P class='en'>&nbsp;
<SYNC Start=12750960><P class='en'>the
<SYNC Start=12751960><P class='en'>&nbsp;
<SYNC Start=12751960><P class='en'>process here will be stopped. And our objects
will remain in some weird, let&#39;s say zombie
<SYNC Start=12752960><P class='en'>&nbsp;
<SYNC Start=12752960><P class='en'>state. Yeah. Okay, so the question is, what&#39;s
the alternative than to using the finalize
<SYNC Start=12753960><P class='en'>&nbsp;
<SYNC Start=12753960><P class='en'>method, the alternative would be, if you have
a class that you will use that uses resources
<SYNC Start=12754960><P class='en'>&nbsp;
<SYNC Start=12754960><P class='en'>that you want to be closed before it&#39;s cleaned
up, you could provide, like I told you here,
<SYNC Start=12755960><P class='en'>&nbsp;
<SYNC Start=12755960><P class='en'>the reader would do. You could and you should
provide some closed method. And then in here,
<SYNC Start=12756960><P class='en'>&nbsp;
<SYNC Start=12756960><P class='en'>you do clean up i o resources. I&#39;m going to
implement this now. And then make this compilable
<SYNC Start=12757960><P class='en'>&nbsp;
<SYNC Start=12757960><P class='en'>in car selector. Let&#39;s imagine this was a
client of using Porsche. When we have Porsche,
<SYNC Start=12758960><P class='en'>&nbsp;
<SYNC Start=12758960><P class='en'>Porsche, a new Porsche you use a try Finally,
we talked about Exception Handling array.
<SYNC Start=12759960><P class='en'>&nbsp;
<SYNC Start=12759960><P class='en'>And I think, there in this episode, I told
you also, you can say try catch and finally,
<SYNC Start=12760960><P class='en'>&nbsp;
<SYNC Start=12760960><P class='en'>but you can also use the finally without a
catch. Now, if we need a catch or not, this
<SYNC Start=12761960><P class='en'>&nbsp;
<SYNC Start=12761960><P class='en'>is a different discussion. What is important
is that at the end, you have finally because
<SYNC Start=12762960><P class='en'>&nbsp;
<SYNC Start=12762960><P class='en'>the finally the cool thing about the Finally,
even when there is an exception happening,
<SYNC Start=12763960><P class='en'>&nbsp;
<SYNC Start=12763960><P class='en'>it will always be executed. Because this was
our problem, we need to make sure that the
<SYNC Start=12764960><P class='en'>&nbsp;
<SYNC Start=12764960><P class='en'>non memory resources get cleaned up. Okay,
so try finally. And then in here, we could
<SYNC Start=12765960><P class='en'>&nbsp;
<SYNC Start=12765960><P class='en'>say Porsche e dot close to clean up the resources.
This is how you probably do it in Java. Okay.
<SYNC Start=12766960><P class='en'>&nbsp;
<SYNC Start=12766960><P class='en'>Also, shortly, let me show you what I think
is interesting. Let&#39;s go back what I had before
<SYNC Start=12767960><P class='en'>&nbsp;
<SYNC Start=12767960><P class='en'>and the finalize method. What I also want
you to know is I mean, I said we overriding
<SYNC Start=12768960><P class='en'>&nbsp;
<SYNC Start=12768960><P class='en'>the method from the class object which is
empty. And there&#39;s actually an annotation
<SYNC Start=12769960><P class='en'>&nbsp;
<SYNC Start=12769960><P class='en'>that is quite helpful here. And this is the
annotation, the override annotation. See,
<SYNC Start=12770960><P class='en'>&nbsp;
<SYNC Start=12770960><P class='en'>when I put the ad, there is override. So about
annotations. We have haven&#39;t talked a lot
<SYNC Start=12771960><P class='en'>&nbsp;
<SYNC Start=12771960><P class='en'>yet. So let me explain that. In short, this
is actually some meta information for your
<SYNC Start=12772960><P class='en'>&nbsp;
<SYNC Start=12772960><P class='en'>compiler, that you say, Well, my intent here
is I want to override some method. If this
<SYNC Start=12773960><P class='en'>&nbsp;
<SYNC Start=12773960><P class='en'>has a different name, some other name. Here,
you see, you get an exception method does
<SYNC Start=12774960><P class='en'>&nbsp;
<SYNC Start=12774960><P class='en'>not override any method from its superclass.
Now, you might not understand what this helps
<SYNC Start=12775960><P class='en'>&nbsp;
<SYNC Start=12775960><P class='en'>us. So let&#39;s, again, call it finalize. Now
the thing is, you only override a method if
<SYNC Start=12776960><P class='en'>&nbsp;
<SYNC Start=12776960><P class='en'>the signature is the same as in the superclass.
Now, if I add the parameter here, this is
<SYNC Start=12777960><P class='en'>&nbsp;
<SYNC Start=12777960><P class='en'>not overriding anymore, but overloading the
method, because it&#39;s just a method that has
<SYNC Start=12778960><P class='en'>&nbsp;
<SYNC Start=12778960><P class='en'>the same name. But as it has a different parameter,
it has a parameter string, and not no parameter.
<SYNC Start=12779960><P class='en'>&nbsp;
<SYNC Start=12779960><P class='en'>This is not overriding anymore. And now we
get a compile error. So you will directly
<SYNC Start=12780960><P class='en'>&nbsp;
<SYNC Start=12780960><P class='en'>notice. So this helps us to have the problem
directly at compile time while we&#39;re still
<SYNC Start=12781960><P class='en'>&nbsp;
<SYNC Start=12781960><P class='en'>in our ID. And we will not because otherwise
it could happen, you think you have implemented
<SYNC Start=12782960><P class='en'>&nbsp;
<SYNC Start=12782960><P class='en'>a method while you have not. And then you&#39;re
still using the superclass method. And this
<SYNC Start=12783960><P class='en'>&nbsp;
<SYNC Start=12783960><P class='en'>you will only see when your code runs on production.
This is why whenever you override something
<SYNC Start=12784960><P class='en'>&nbsp;
<SYNC Start=12784960><P class='en'>at this override, annotation. Okay. So I think
this is pretty much it, talking about the
<SYNC Start=12785960><P class='en'>&nbsp;
<SYNC Start=12785960><P class='en'>finalize method. In short, again, generally
speaking, don&#39;t use it. Instead, to free up
<SYNC Start=12786960><P class='en'>&nbsp;
<SYNC Start=12786960><P class='en'>non memory resources use a try Finally, I&#39;m
going to talk about a method clone of the
<SYNC Start=12787960><P class='en'>&nbsp;
<SYNC Start=12787960><P class='en'>class object,
<SYNC Start=12788960><P class='en'>&nbsp;
<SYNC Start=12788960><P class='en'>a class object I said before, is the superclass
of all the objects in the Java universe. And
<SYNC Start=12789960><P class='en'>&nbsp;
<SYNC Start=12789960><P class='en'>this is why you can use the method clone in
all your objects. Now, the question is, should
<SYNC Start=12790960><P class='en'>&nbsp;
<SYNC Start=12790960><P class='en'>you Really? And the short answer is, you should
not at least generally speaking, and this
<SYNC Start=12791960><P class='en'>&nbsp;
<SYNC Start=12791960><P class='en'>is similar to the finalize method that we
talked about in the last episode, which is,
<SYNC Start=12792960><P class='en'>&nbsp;
<SYNC Start=12792960><P class='en'>again, the reason why I&#39;m talking about clone
today, because in this aspect, they&#39;re both
<SYNC Start=12793960><P class='en'>&nbsp;
<SYNC Start=12793960><P class='en'>quite similar. Okay, but before going in more
details, maybe first of all should clarify
<SYNC Start=12794960><P class='en'>&nbsp;
<SYNC Start=12794960><P class='en'>what actually does the clone method do. And
clone as the name implies, it creates an identical
<SYNC Start=12795960><P class='en'>&nbsp;
<SYNC Start=12795960><P class='en'>copy of the object that you call clone on.
So what it does not do is, if you have an
<SYNC Start=12796960><P class='en'>&nbsp;
<SYNC Start=12796960><P class='en'>object, you can always assign it a second
or third, how many references ever you want.
<SYNC Start=12797960><P class='en'>&nbsp;
<SYNC Start=12797960><P class='en'>The problem is with references, that when
you work on this reference, all other references
<SYNC Start=12798960><P class='en'>&nbsp;
<SYNC Start=12798960><P class='en'>will have will be influenced by your changes.
And sometimes this is not what you need, you
<SYNC Start=12799960><P class='en'>&nbsp;
<SYNC Start=12799960><P class='en'>want an independent copy. And for this reason,
you could use the clone method. However, there
<SYNC Start=12800960><P class='en'>&nbsp;
<SYNC Start=12800960><P class='en'>are actually better alternatives, which I&#39;ll
tell you later. But now enough of talking
<SYNC Start=12801960><P class='en'>&nbsp;
<SYNC Start=12801960><P class='en'>Anyway, let&#39;s jump into my ad and look at
the code. Okay, so, here you see my Porsche
<SYNC Start=12802960><P class='en'>&nbsp;
<SYNC Start=12802960><P class='en'>test, you might remember the pushy and the
other cars from my earlier episodes. Before
<SYNC Start=12803960><P class='en'>&nbsp;
<SYNC Start=12803960><P class='en'>I show you the nasty stuff, I wanted to show
you one case, where actually I think using
<SYNC Start=12804960><P class='en'>&nbsp;
<SYNC Start=12804960><P class='en'>clone is actually good. And this is here I
have prepared an array of strings 123 and
<SYNC Start=12805960><P class='en'>&nbsp;
<SYNC Start=12805960><P class='en'>here, I mean array is also an object. So it
also has the clone method and for the string
<SYNC Start=12806960><P class='en'>&nbsp;
<SYNC Start=12806960><P class='en'>for the array, it was already implemented
the way it should be. So you can and you should
<SYNC Start=12807960><P class='en'>&nbsp;
<SYNC Start=12807960><P class='en'>clone your array. So I can say string copied
array equals to array dot clone. And then
<SYNC Start=12808960><P class='en'>&nbsp;
<SYNC Start=12808960><P class='en'>I can assert not same, which means this check
checks. Now, if we just have a reference.
<SYNC Start=12809960><P class='en'>&nbsp;
<SYNC Start=12809960><P class='en'>In this case, it would be the same
<SYNC Start=12810960><P class='en'>&nbsp;
<SYNC Start=12810960><P class='en'>airy
<SYNC Start=12811960><P class='en'>&nbsp;
<SYNC Start=12811960><P class='en'>and copied airy. Which, to show you that their
friends I can also call, assert same and use
<SYNC Start=12812960><P class='en'>&nbsp;
<SYNC Start=12812960><P class='en'>twice the same reference. So this should be
true. They should with not also be true. So
<SYNC Start=12813960><P class='en'>&nbsp;
<SYNC Start=12813960><P class='en'>there are two different instances.
<SYNC Start=12814960><P class='en'>&nbsp;
<SYNC Start=12814960><P class='en'>You see, it finished with a green bar, this
is what we want to see. So it seems error
<SYNC Start=12815960><P class='en'>&nbsp;
<SYNC Start=12815960><P class='en'>and error compared to itself, it&#39;s both the
same reference, they&#39;re both referring to
<SYNC Start=12816960><P class='en'>&nbsp;
<SYNC Start=12816960><P class='en'>the same object. But the copy is not the same
reference, it&#39;s not the same object, it is
<SYNC Start=12817960><P class='en'>&nbsp;
<SYNC Start=12817960><P class='en'>a new object. And now, I mean, I want to make
this short. But I want to show you at least
<SYNC Start=12818960><P class='en'>&nbsp;
<SYNC Start=12818960><P class='en'>system out, print ln. And then, you know,
this is not I just want to show you the first
<SYNC Start=12819960><P class='en'>&nbsp;
<SYNC Start=12819960><P class='en'>element and then I just hope you believe me,
or you can do it at home can print out the
<SYNC Start=12820960><P class='en'>&nbsp;
<SYNC Start=12820960><P class='en'>whole elements in in an in a loop. Now I&#39;m
just showing you the first element of my copy,
<SYNC Start=12821960><P class='en'>&nbsp;
<SYNC Start=12821960><P class='en'>and you see it&#39;s one. So the other ones are
also or unlike just as well. Otherwise, you&#39;re
<SYNC Start=12822960><P class='en'>&nbsp;
<SYNC Start=12822960><P class='en'>telling me copied error. This way, you also
learn how you can print out the whole array.
<SYNC Start=12823960><P class='en'>&nbsp;
<SYNC Start=12823960><P class='en'>And this is now I can print odd STR and this
will then in the loop and a for each loop,
<SYNC Start=12824960><P class='en'>&nbsp;
<SYNC Start=12824960><P class='en'>print out all the strings
<SYNC Start=12825960><P class='en'>&nbsp;
<SYNC Start=12825960><P class='en'>for us.
<SYNC Start=12826960><P class='en'>&nbsp;
<SYNC Start=12826960><P class='en'>So I hope this is working now. 123 C, out.
Okay. So for now this should be enough. This
<SYNC Start=12827960><P class='en'>&nbsp;
<SYNC Start=12827960><P class='en'>was just a very short demonstration of a good
case of clone. Actually, I found on the internet
<SYNC Start=12828960><P class='en'>&nbsp;
<SYNC Start=12828960><P class='en'>and very interesting article Actually, it&#39;s
a newsletter article from Dr. Heinz Cabot&#39;s,
<SYNC Start=12829960><P class='en'>&nbsp;
<SYNC Start=12829960><P class='en'>he&#39;s really a very cool guy. I love his newsletters.
And he actually made a test and found out
<SYNC Start=12830960><P class='en'>&nbsp;
<SYNC Start=12830960><P class='en'>that clone for very small areas might be a
bit shorter, f slower. However, for large
<SYNC Start=12831960><P class='en'>&nbsp;
<SYNC Start=12831960><P class='en'>arrays, it&#39;s actually faster than any other
method. Well, I can&#39;t go in more detail, we
<SYNC Start=12832960><P class='en'>&nbsp;
<SYNC Start=12832960><P class='en'>don&#39;t have the time. And this is also very,
very advanced already. And we&#39;re still on
<SYNC Start=12833960><P class='en'>&nbsp;
<SYNC Start=12833960><P class='en'>beginner level, approaching more advanced.
So anyway, let&#39;s continue with our portion.
<SYNC Start=12834960><P class='en'>&nbsp;
<SYNC Start=12834960><P class='en'>And this is now really test driven style programming.
Because I start with an empty test. The code
<SYNC Start=12835960><P class='en'>&nbsp;
<SYNC Start=12835960><P class='en'>is not finished, we start with writing a test
to test Well, first of all we read, and then
<SYNC Start=12836960><P class='en'>&nbsp;
<SYNC Start=12836960><P class='en'>we are working our way to get the test screen.
Okay. So I say Porsche Porsche equals to new
<SYNC Start=12837960><P class='en'>&nbsp;
<SYNC Start=12837960><P class='en'>Porsche, actually, this is something you can&#39;t
know. Before doing this episode, I have extended
<SYNC Start=12838960><P class='en'>&nbsp;
<SYNC Start=12838960><P class='en'>adjusted my class a bit. I mean, you might
remember the Porsche from my last episodes,
<SYNC Start=12839960><P class='en'>&nbsp;
<SYNC Start=12839960><P class='en'>because it was empty. Initially, there was
no attributes, no instance members. So this
<SYNC Start=12840960><P class='en'>&nbsp;
<SYNC Start=12840960><P class='en'>I had to change because I want to show you
something that we copy. So I added a string.
<SYNC Start=12841960><P class='en'>&nbsp;
<SYNC Start=12841960><P class='en'>And I said, it&#39;s the owner, the name of the
owner. And well, which name should I choose?
<SYNC Start=12842960><P class='en'>&nbsp;
<SYNC Start=12842960><P class='en'>Because I always wanted to own a Porsche.
I thought I might just as well make me the
<SYNC Start=12843960><P class='en'>&nbsp;
<SYNC Start=12843960><P class='en'>owner of the Porsche. And because you probably
also want to own a Porsche. I thought I should
<SYNC Start=12844960><P class='en'>&nbsp;
<SYNC Start=12844960><P class='en'>make you the owner of our copy of our clone.
Because I will not give you my pushy, but
<SYNC Start=12845960><P class='en'>&nbsp;
<SYNC Start=12845960><P class='en'>I might just as well copy mine and then give
you this copy. Well, in real world, this is
<SYNC Start=12846960><P class='en'>&nbsp;
<SYNC Start=12846960><P class='en'>pretty much impossible. However, here in Java,
See how easy that is? Only problem we have
<SYNC Start=12847960><P class='en'>&nbsp;
<SYNC Start=12847960><P class='en'>is I don&#39;t know your name. So for this example,
I just assume your name is Peter. So I say
<SYNC Start=12848960><P class='en'>&nbsp;
<SYNC Start=12848960><P class='en'>Peters for xi equals to new pushy. But this
is not what we wanted to do. Right? We wanted
<SYNC Start=12849960><P class='en'>&nbsp;
<SYNC Start=12849960><P class='en'>to clone. Yeah, because this is no easy. I
can just say Peter, and then you have your
<SYNC Start=12850960><P class='en'>&nbsp;
<SYNC Start=12850960><P class='en'>pushy but this is not the original idea. So
let&#39;s remove that. And now let&#39;s say Porsche
<SYNC Start=12851960><P class='en'>&nbsp;
<SYNC Start=12851960><P class='en'>dot clone. And interesting enough, really,
I mean, we can see what happens behind the
<SYNC Start=12852960><P class='en'>&nbsp;
<SYNC Start=12852960><P class='en'>covers, because this is done really, by the
JVM. And we don&#39;t care too much, as long as
<SYNC Start=12853960><P class='en'>&nbsp;
<SYNC Start=12853960><P class='en'>it works. But there is never a constructor
actually cold. So this is really internally
<SYNC Start=12854960><P class='en'>&nbsp;
<SYNC Start=12854960><P class='en'>copied from the memory. It&#39;s just see, we
still have this read something is still wrong.
<SYNC Start=12855960><P class='en'>&nbsp;
<SYNC Start=12855960><P class='en'>I mean, I said, we start with a not working
test. So it says clone has Protected Access
<SYNC Start=12856960><P class='en'>&nbsp;
<SYNC Start=12856960><P class='en'>and Java Lang object. And this is something
we have to fix. So the method that says the
<SYNC Start=12857960><P class='en'>&nbsp;
<SYNC Start=12857960><P class='en'>method is already there. The problem is, it&#39;s
not visible to us, because it is protected.
<SYNC Start=12858960><P class='en'>&nbsp;
<SYNC Start=12858960><P class='en'>Protected would be visible in the same package.
The class object is in the package, Java,
<SYNC Start=12859960><P class='en'>&nbsp;
<SYNC Start=12859960><P class='en'>Lang, as I showed you last time. But here
we are in a different package. Also, my Porsche
<SYNC Start=12860960><P class='en'>&nbsp;
<SYNC Start=12860960><P class='en'>test does not inherit anything from Porsche.
Because this is from Porsche, so I can&#39;t use
<SYNC Start=12861960><P class='en'>&nbsp;
<SYNC Start=12861960><P class='en'>clone in here. Okay, but what I can and what
I will do, I can override the original clone
<SYNC Start=12862960><P class='en'>&nbsp;
<SYNC Start=12862960><P class='en'>method. But still, I want the code the implementation
of the class object. But let&#39;s already jump
<SYNC Start=12863960><P class='en'>&nbsp;
<SYNC Start=12863960><P class='en'>into the Porsche class. So I will override
it, public, Porsche, because I wanted to return
<SYNC Start=12864960><P class='en'>&nbsp;
<SYNC Start=12864960><P class='en'>a Porsche to me,
<SYNC Start=12865960><P class='en'>&nbsp;
<SYNC Start=12865960><P class='en'>clone.
<SYNC Start=12866960><P class='en'>&nbsp;
<SYNC Start=12866960><P class='en'>And then you might still remember from my
last episode, we can and we should put the
<SYNC Start=12867960><P class='en'>&nbsp;
<SYNC Start=12867960><P class='en'>override here to have a check from the compiler
side, that we actually did everything correctly.
<SYNC Start=12868960><P class='en'>&nbsp;
<SYNC Start=12868960><P class='en'>Now, let me format that. Okay. And you see,
there&#39;s nothing red. So it seems like so far,
<SYNC Start=12869960><P class='en'>&nbsp;
<SYNC Start=12869960><P class='en'>everything is fine. We&#39;ll actually went into
one interesting thing is the original implementation
<SYNC Start=12870960><P class='en'>&nbsp;
<SYNC Start=12870960><P class='en'>says object, because in object, what could
you return, you don&#39;t know. The object that
<SYNC Start=12871960><P class='en'>&nbsp;
<SYNC Start=12871960><P class='en'>the method always is exactly copying whatever
object there is. And in our case, we have
<SYNC Start=12872960><P class='en'>&nbsp;
<SYNC Start=12872960><P class='en'>a Porsche. So the so it is also fine to directly
make this return pushy. But now we have an
<SYNC Start=12873960><P class='en'>&nbsp;
<SYNC Start=12873960><P class='en'>empty implementation. And we have to return
a Porsche. Or we could say return new Porsche.
<SYNC Start=12874960><P class='en'>&nbsp;
<SYNC Start=12874960><P class='en'>But again, this would not be a clone. So this
would, our test would fail in this case. So
<SYNC Start=12875960><P class='en'>&nbsp;
<SYNC Start=12875960><P class='en'>this is not what we can do. So we have to
say super, super means. I want to call a method
<SYNC Start=12876960><P class='en'>&nbsp;
<SYNC Start=12876960><P class='en'>from superclass in this case object. And you
will see already here I see clone is actually
<SYNC Start=12877960><P class='en'>&nbsp;
<SYNC Start=12877960><P class='en'>the first method, because my ID is already
smart, it knows the name of this method is
<SYNC Start=12878960><P class='en'>&nbsp;
<SYNC Start=12878960><P class='en'>clone. So it assumes I want to call super
clone. Okay, so and then I want to return
<SYNC Start=12879960><P class='en'>&nbsp;
<SYNC Start=12879960><P class='en'>it. So all we did so far is we override the
method. And then again, we said, well, actually,
<SYNC Start=12880960><P class='en'>&nbsp;
<SYNC Start=12880960><P class='en'>I don&#39;t really want to override it. All I
want is I want to use the method of class
<SYNC Start=12881960><P class='en'>&nbsp;
<SYNC Start=12881960><P class='en'>object. So all we did so far is we made the
visibility public so that we&#39;re able to use
<SYNC Start=12882960><P class='en'>&nbsp;
<SYNC Start=12882960><P class='en'>it this is all we did so far. But now, you
see there is still a problem unhandled exception
<SYNC Start=12883960><P class='en'>&nbsp;
<SYNC Start=12883960><P class='en'>Java Lang clone, not supported exception.
And this is already in my opinion, a flaw
<SYNC Start=12884960><P class='en'>&nbsp;
<SYNC Start=12884960><P class='en'>because, like, why does this Now throw a clone
not supported exception, if we do support
<SYNC Start=12885960><P class='en'>&nbsp;
<SYNC Start=12885960><P class='en'>clone. So, anyway, this is how it is. And
now we have to fix that the way we fixed that
<SYNC Start=12886960><P class='en'>&nbsp;
<SYNC Start=12886960><P class='en'>is we say try, because there is an exception
that could happen. And we will catch the exception.
<SYNC Start=12887960><P class='en'>&nbsp;
<SYNC Start=12887960><P class='en'>Catch. And there my ID Egan helps me clear
not supported exception.
<SYNC Start=12888960><P class='en'>&nbsp;
<SYNC Start=12888960><P class='en'>I usually give it the name here. Okay, now,
what should we do here? Some people say return
<SYNC Start=12889960><P class='en'>&nbsp;
<SYNC Start=12889960><P class='en'>now. Because we have to return something.
This is just the signature forces us
<SYNC Start=12890960><P class='en'>&nbsp;
<SYNC Start=12890960><P class='en'>to return something. But this is not so nice.
I mean, actually, we assume this is hopefully
<SYNC Start=12891960><P class='en'>&nbsp;
<SYNC Start=12891960><P class='en'>never happening. But if it for whatever reason
is happening, we really want to see that it
<SYNC Start=12892960><P class='en'>&nbsp;
<SYNC Start=12892960><P class='en'>is a problem. So in this case, and I kind
of copied that from Josh block. Because again,
<SYNC Start=12893960><P class='en'>&nbsp;
<SYNC Start=12893960><P class='en'>my episode here about clone is based on his
book, Effective Java second edition. And it
<SYNC Start=12894960><P class='en'>&nbsp;
<SYNC Start=12894960><P class='en'>was exactly the same with a finalized episode.
So I can only give you a short introduction
<SYNC Start=12895960><P class='en'>&nbsp;
<SYNC Start=12895960><P class='en'>to the topic. Um, Josh block in his book,
he has like, I think eight pages only on the
<SYNC Start=12896960><P class='en'>&nbsp;
<SYNC Start=12896960><P class='en'>clone method. You should really buy the book
and read it. So for this, you can go to macros
<SYNC Start=12897960><P class='en'>&nbsp;
<SYNC Start=12897960><P class='en'>minus bu.com, click on mastery, it&#39;s, and
there you will find the book and you can buy
<SYNC Start=12898960><P class='en'>&nbsp;
<SYNC Start=12898960><P class='en'>it directly. Yeah, also all the books in the
must read section. I mean, I have picked the
<SYNC Start=12899960><P class='en'>&nbsp;
<SYNC Start=12899960><P class='en'>name for a reason. Those are really books.
I want you to read them all. They&#39;re really
<SYNC Start=12900960><P class='en'>&nbsp;
<SYNC Start=12900960><P class='en'>classics, the best of the best best Java books
you could find, in my opinion, at least. So
<SYNC Start=12901960><P class='en'>&nbsp;
<SYNC Start=12901960><P class='en'>if you trust me by that book and read it,
okay, anyway, so what he did and what I will
<SYNC Start=12902960><P class='en'>&nbsp;
<SYNC Start=12902960><P class='en'>do the same, as he said, throw new assertion
error. Because if this happens, this is not
<SYNC Start=12903960><P class='en'>&nbsp;
<SYNC Start=12903960><P class='en'>even an exception. Is this really an error?
We really have a big problem here. If we get
<SYNC Start=12904960><P class='en'>&nbsp;
<SYNC Start=12904960><P class='en'>this clone, not supported exception. Okay,
so this year now seems fine. But there&#39;s still
<SYNC Start=12905960><P class='en'>&nbsp;
<SYNC Start=12905960><P class='en'>something wrong. And this is it says I&#39;m calling
super dot clone. And as I told you, this is
<SYNC Start=12906960><P class='en'>&nbsp;
<SYNC Start=12906960><P class='en'>the method from object, an object returns
an object, at least from the signature of
<SYNC Start=12907960><P class='en'>&nbsp;
<SYNC Start=12907960><P class='en'>the method. But we are smarter we know actually,
it&#39;s safe to say pushy, because this object,
<SYNC Start=12908960><P class='en'>&nbsp;
<SYNC Start=12908960><P class='en'>I mean, the super type is object. But the
subtype is a Porsche. So we do an explicit
<SYNC Start=12909960><P class='en'>&nbsp;
<SYNC Start=12909960><P class='en'>cast, and we cast it to Porsche. This is safe
here. Yeah, if it was not safe, it would throw
<SYNC Start=12910960><P class='en'>&nbsp;
<SYNC Start=12910960><P class='en'>a class not support F. Class cast exception.
Sorry. But in this case, believe me, we&#39;ll
<SYNC Start=12911960><P class='en'>&nbsp;
<SYNC Start=12911960><P class='en'>see. It&#39;ll it should work. Okay, well, are
we done? It looks like we were. Well, actually,
<SYNC Start=12912960><P class='en'>&nbsp;
<SYNC Start=12912960><P class='en'>as I said, this method is flawed. So we are
not done, we still have to do some more thing.
<SYNC Start=12913960><P class='en'>&nbsp;
<SYNC Start=12913960><P class='en'>But this I want to see. I mean, my idea was
to implement the method I did that. So now
<SYNC Start=12914960><P class='en'>&nbsp;
<SYNC Start=12914960><P class='en'>let&#39;s go back to our test, you see, everything
is? Well, I can&#39;t say green, but the red stuff
<SYNC Start=12915960><P class='en'>&nbsp;
<SYNC Start=12915960><P class='en'>has gone. So I can execute the test. But I
haven&#39;t asserted anything yet. So the first
<SYNC Start=12916960><P class='en'>&nbsp;
<SYNC Start=12916960><P class='en'>assert that I want to do is I want to assert
not same. This is just a shorter, Handy form
<SYNC Start=12917960><P class='en'>&nbsp;
<SYNC Start=12917960><P class='en'>of saying not equal. So it won&#39;t be the same
if we say pushy, not equal to Porsche Peters
<SYNC Start=12918960><P class='en'>&nbsp;
<SYNC Start=12918960><P class='en'>pushy, because the idea is that when my clone
word that I have a new object. And because
<SYNC Start=12919960><P class='en'>&nbsp;
<SYNC Start=12919960><P class='en'>it&#39;s good to have a method that already from
the method name tells us what it does, I use
<SYNC Start=12920960><P class='en'>&nbsp;
<SYNC Start=12920960><P class='en'>this one. And I compare not pushy to Peters
pushy. So my first test is just asserting
<SYNC Start=12921960><P class='en'>&nbsp;
<SYNC Start=12921960><P class='en'>that this reference here is not referencing
this Porsche here now. But something else,
<SYNC Start=12922960><P class='en'>&nbsp;
<SYNC Start=12922960><P class='en'>this isn&#39;t our first test all I want to achieve.
Okay, so I execute the test.
<SYNC Start=12923960><P class='en'>&nbsp;
<SYNC Start=12923960><P class='en'>And bomb.
<SYNC Start=12924960><P class='en'>&nbsp;
<SYNC Start=12924960><P class='en'>You see the assertion error? I said, Well,
everything will be saved law when it&#39;s not.
<SYNC Start=12925960><P class='en'>&nbsp;
<SYNC Start=12925960><P class='en'>And this is why tests are so great. Yes. And
now we can see what happened. And think about
<SYNC Start=12926960><P class='en'>&nbsp;
<SYNC Start=12926960><P class='en'>why did this happen? Okay, so by jumping here,
see, line 28. I see this happened. Problem
<SYNC Start=12927960><P class='en'>&nbsp;
<SYNC Start=12927960><P class='en'>is here in this case, without further knowledge,
it would really be hard to know why this happened.
<SYNC Start=12928960><P class='en'>&nbsp;
<SYNC Start=12928960><P class='en'>So here, sorry, I have to help a bit. Thing
is, I mean, I told you this method is flawed.
<SYNC Start=12929960><P class='en'>&nbsp;
<SYNC Start=12929960><P class='en'>It&#39;s not enough to use the power of inheritance
here. On top you have to use, you have to
<SYNC Start=12930960><P class='en'>&nbsp;
<SYNC Start=12930960><P class='en'>implement an interface here. So we are already
implementing car. But for interfaces, I told
<SYNC Start=12931960><P class='en'>&nbsp;
<SYNC Start=12931960><P class='en'>you in the episode about interfaces, we can
implement several interfaces. So here I have
<SYNC Start=12932960><P class='en'>&nbsp;
<SYNC Start=12932960><P class='en'>now to implement the cloneable interface from
Java Lang also. Now, funnily enough implementing
<SYNC Start=12933960><P class='en'>&nbsp;
<SYNC Start=12933960><P class='en'>the interface, normally, I would expect that
I would have to implement some method. Well,
<SYNC Start=12934960><P class='en'>&nbsp;
<SYNC Start=12934960><P class='en'>in this case, it&#39;s different. We don&#39;t have
to implement anything. And this is a specific
<SYNC Start=12935960><P class='en'>&nbsp;
<SYNC Start=12935960><P class='en'>case, this interface we call a market interface.
So this interface is actually empty. There&#39;s
<SYNC Start=12936960><P class='en'>&nbsp;
<SYNC Start=12936960><P class='en'>nothing in there. It just tells the JVM. I&#39;m
implementing cloneable. So you can call cloneable
<SYNC Start=12937960><P class='en'>&nbsp;
<SYNC Start=12937960><P class='en'>here, it&#39;s a clone here it works. And this
is a bit awkward, because normally when you
<SYNC Start=12938960><P class='en'>&nbsp;
<SYNC Start=12938960><P class='en'>implement an interface, you would on the Reference
Now, like I can now say that I implement cloneable,
<SYNC Start=12939960><P class='en'>&nbsp;
<SYNC Start=12939960><P class='en'>I can also make this a cloneable. So that
my pietras portion now plays the role of being
<SYNC Start=12940960><P class='en'>&nbsp;
<SYNC Start=12940960><P class='en'>a cloneable. The problem is, this doesn&#39;t
help me anything. I don&#39;t have the method
<SYNC Start=12941960><P class='en'>&nbsp;
<SYNC Start=12941960><P class='en'>cloneable. Here, all I have is the other methods
of the class object, which we&#39;re not using
<SYNC Start=12942960><P class='en'>&nbsp;
<SYNC Start=12942960><P class='en'>now. So because I can also say car, I mean,
I&#39;m implementing, also the car interface.
<SYNC Start=12943960><P class='en'>&nbsp;
<SYNC Start=12943960><P class='en'>And then I can call the methods of car, which
is drive, plus all the methods of class object.
<SYNC Start=12944960><P class='en'>&nbsp;
<SYNC Start=12944960><P class='en'>Okay, well about macros interface. That&#39;s
also another topic. This is a design pattern.
<SYNC Start=12945960><P class='en'>&nbsp;
<SYNC Start=12945960><P class='en'>haven&#39;t talked much about design patterns
yet. Marker interface really has good users.
<SYNC Start=12946960><P class='en'>&nbsp;
<SYNC Start=12946960><P class='en'>So a marker interface, generally speaking
is not bad. It just here in this case, it&#39;s
<SYNC Start=12947960><P class='en'>&nbsp;
<SYNC Start=12947960><P class='en'>a bit weird that you have to implement a market
interface and then on top, you have to override
<SYNC Start=12948960><P class='en'>&nbsp;
<SYNC Start=12948960><P class='en'>the method. Okay, so I make this portion again.
But now, and now the same as already, again,
<SYNC Start=12949960><P class='en'>&nbsp;
<SYNC Start=12949960><P class='en'>working because otherwise you could not compare
different things. Let&#39;s try it again. And
<SYNC Start=12950960><P class='en'>&nbsp;
<SYNC Start=12950960><P class='en'>see, now we have the green bar process finished
with exit code. So my first assumption is
<SYNC Start=12951960><P class='en'>&nbsp;
<SYNC Start=12951960><P class='en'>correct. Peters pushy is not the same instance,
as pushy. Okay. So now I want to see who is
<SYNC Start=12952960><P class='en'>&nbsp;
<SYNC Start=12952960><P class='en'>the owner at the moment of Peters, Porsche,
Peters, Porsche, Dodd, s string. And this
<SYNC Start=12953960><P class='en'>&nbsp;
<SYNC Start=12953960><P class='en'>is why before I prepared this method, because
it returns Porsche II off plus the owner&#39;s
<SYNC Start=12954960><P class='en'>&nbsp;
<SYNC Start=12954960><P class='en'>name, because at the moment, we don&#39;t have
another way of seeing the content of owner&#39;s
<SYNC Start=12955960><P class='en'>&nbsp;
<SYNC Start=12955960><P class='en'>name. So I wrote this method to see who is
owning it at the moment. Okay. And my expectation
<SYNC Start=12956960><P class='en'>&nbsp;
<SYNC Start=12956960><P class='en'>when we&#39;re finished is that the name would
be Peter. So I would say it should return
<SYNC Start=12957960><P class='en'>&nbsp;
<SYNC Start=12957960><P class='en'>partially off, Peter. So let&#39;s write a test
for this. assert, equals, first, the expectation,
<SYNC Start=12958960><P class='en'>&nbsp;
<SYNC Start=12958960><P class='en'>you also see it expected. So I&#39;m expecting
it to say pushy off Peter. Okay. And then
<SYNC Start=12959960><P class='en'>&nbsp;
<SYNC Start=12959960><P class='en'>comma. And I put here pushy, Dodd as string,
which is calling the method. So I expect the
<SYNC Start=12960960><P class='en'>&nbsp;
<SYNC Start=12960960><P class='en'>method to return portion of pizza later on.
I mean, there&#39;s also again, a method called
<SYNC Start=12961960><P class='en'>&nbsp;
<SYNC Start=12961960><P class='en'>equals. In an later episode, I&#39;ll talk about
this and we will have a better way of comparing
<SYNC Start=12962960><P class='en'>&nbsp;
<SYNC Start=12962960><P class='en'>that for now. I&#39;m using the S ring method,
because we haven&#39;t talked about the equals
<SYNC Start=12963960><P class='en'>&nbsp;
<SYNC Start=12963960><P class='en'>method yet. So there&#39;s still something missing.
<SYNC Start=12964960><P class='en'>&nbsp;
<SYNC Start=12964960><P class='en'>Okay. I can remove that. So let me also execute
this test now. And it should be read. Yeah,
<SYNC Start=12965960><P class='en'>&nbsp;
<SYNC Start=12965960><P class='en'>oh, there&#39;s an error. I have missed a semicolon.
Again, sorry. Yeah, comparison failure. Expected
<SYNC Start=12966960><P class='en'>&nbsp;
<SYNC Start=12966960><P class='en'>portion of Peter bar is still mine. Now this
is even cooler for me. Now I have actually
<SYNC Start=12967960><P class='en'>&nbsp;
<SYNC Start=12967960><P class='en'>two portions. But okay, I said you get one.
So let&#39;s change that. And for this, I will
<SYNC Start=12968960><P class='en'>&nbsp;
<SYNC Start=12968960><P class='en'>now change the owner. So I will sell on my
second car. Okay, and I will sell it to Peter.
<SYNC Start=12969960><P class='en'>&nbsp;
<SYNC Start=12969960><P class='en'>Which means I mean, I just made this method
up before I assign the owner&#39;s name the new
<SYNC Start=12970960><P class='en'>&nbsp;
<SYNC Start=12970960><P class='en'>owner. Okay. Also, by the way, I mean, here
I&#39;m using string to have this as simple as
<SYNC Start=12971960><P class='en'>&nbsp;
<SYNC Start=12971960><P class='en'>possible for our example. Usually, I would
prefer to have this proper object also, like,
<SYNC Start=12972960><P class='en'>&nbsp;
<SYNC Start=12972960><P class='en'>name, for example, and I also already have
that here. But in this fast example, I use
<SYNC Start=12973960><P class='en'>&nbsp;
<SYNC Start=12973960><P class='en'>string. But more object oriented would be
if you have name as an object there. Okay,
<SYNC Start=12974960><P class='en'>&nbsp;
<SYNC Start=12974960><P class='en'>so I sell it to Peter. And now I expect the
test to be green. Let&#39;s try it again. Okay,
<SYNC Start=12975960><P class='en'>&nbsp;
<SYNC Start=12975960><P class='en'>it&#39;s green,
<SYNC Start=12976960><P class='en'>&nbsp;
<SYNC Start=12976960><P class='en'>it worked.
<SYNC Start=12977960><P class='en'>&nbsp;
<SYNC Start=12977960><P class='en'>But now I have a fear. What if now my pushy
would not be mine anymore. So on top, I want
<SYNC Start=12978960><P class='en'>&nbsp;
<SYNC Start=12978960><P class='en'>to assert that the The original pushy is still
mine portion of macros to the original portion.
<SYNC Start=12979960><P class='en'>&nbsp;
<SYNC Start=12979960><P class='en'>K, which also worked. And this tells us now
starting from my pushy macros, I called the
<SYNC Start=12980960><P class='en'>&nbsp;
<SYNC Start=12980960><P class='en'>clone method, it created a new object in memory.
And this new object was assigned to the reference
<SYNC Start=12981960><P class='en'>&nbsp;
<SYNC Start=12981960><P class='en'>Peters Porsche he inserted that they&#39;re not
the same object to different objects. And
<SYNC Start=12982960><P class='en'>&nbsp;
<SYNC Start=12982960><P class='en'>then I changed the second object. And I gave
it the owner of Peter. So and I asserted that
<SYNC Start=12983960><P class='en'>&nbsp;
<SYNC Start=12983960><P class='en'>now, the owner&#39;s name is Peter, by comparing
the string. And second, I asserted that what
<SYNC Start=12984960><P class='en'>&nbsp;
<SYNC Start=12984960><P class='en'>I was working on the second object, the copy
was not influencing my policy. So this is
<SYNC Start=12985960><P class='en'>&nbsp;
<SYNC Start=12985960><P class='en'>like proving that our clone operation did
work. But now let&#39;s look at the code. What
<SYNC Start=12986960><P class='en'>&nbsp;
<SYNC Start=12986960><P class='en'>we needed to do for this, I had to say implement
cloneable, I had to override the clone method,
<SYNC Start=12987960><P class='en'>&nbsp;
<SYNC Start=12987960><P class='en'>I had to call the super clone method, I had
to catch the clone, not supported exception.
<SYNC Start=12988960><P class='en'>&nbsp;
<SYNC Start=12988960><P class='en'>This is a lot of lines for only this. And
actually, there&#39;s more to it. Because actually,
<SYNC Start=12989960><P class='en'>&nbsp;
<SYNC Start=12989960><P class='en'>what this does is it creates only a shallow
copy, and not a deep copy. Now, again, this
<SYNC Start=12990960><P class='en'>&nbsp;
<SYNC Start=12990960><P class='en'>is a more advanced topic. So I try to keep
this as short as possible. What&#39;s the difference
<SYNC Start=12991960><P class='en'>&nbsp;
<SYNC Start=12991960><P class='en'>between a shallow copy and a deep copy? Okay,
well, a deep copy for this, I have prepared
<SYNC Start=12992960><P class='en'>&nbsp;
<SYNC Start=12992960><P class='en'>here a more complex object BMW. And here I&#39;m
using actually the object name. And I&#39;m even
<SYNC Start=12993960><P class='en'>&nbsp;
<SYNC Start=12993960><P class='en'>using a second object color. And let&#39;s make
this a bit bigger. So you see more, a deep
<SYNC Start=12994960><P class='en'>&nbsp;
<SYNC Start=12994960><P class='en'>copy would mean that not only BMW is copied,
but also all the objects inside of BMW are
<SYNC Start=12995960><P class='en'>&nbsp;
<SYNC Start=12995960><P class='en'>copied. So that they are also independent,
that they&#39;re not referencing the same object.
<SYNC Start=12996960><P class='en'>&nbsp;
<SYNC Start=12996960><P class='en'>But a shallow copy will here, only copy the
reference. And the object for name, as well
<SYNC Start=12997960><P class='en'>&nbsp;
<SYNC Start=12997960><P class='en'>as the object for color will still be the
same objects for shallow copy. Sometimes this
<SYNC Start=12998960><P class='en'>&nbsp;
<SYNC Start=12998960><P class='en'>is okay. And sometimes it&#39;s not, it really
depends on your implementation. However, in
<SYNC Start=12999960><P class='en'>&nbsp;
<SYNC Start=12999960><P class='en'>short, if you&#39;re using clone want to make
a deep copy, you will also have to call clone
<SYNC Start=13000960><P class='en'>&nbsp;
<SYNC Start=13000960><P class='en'>on the internal objects, and this here, I
have prepared. So here, I&#39;m calling clone
<SYNC Start=13001960><P class='en'>&nbsp;
<SYNC Start=13001960><P class='en'>actually, three times. Now, one more problem
of the clone method is what I&#39;m actually doing
<SYNC Start=13002960><P class='en'>&nbsp;
<SYNC Start=13002960><P class='en'>here is, first of all, I cloned BMW, and then
on this attribute, and this one, which is
<SYNC Start=13003960><P class='en'>&nbsp;
<SYNC Start=13003960><P class='en'>already fully functional, I assign a new value,
which only works if this is not final. So
<SYNC Start=13004960><P class='en'>&nbsp;
<SYNC Start=13004960><P class='en'>it turns out not to in order to make a deep
copy, it only works if your internals are
<SYNC Start=13005960><P class='en'>&nbsp;
<SYNC Start=13005960><P class='en'>not final, and sometimes you want them to
be final. So this is really a limitation of
<SYNC Start=13006960><P class='en'>&nbsp;
<SYNC Start=13006960><P class='en'>the clone method. And also, I mean, how complicated
it is, is not so nice. Okay. Um, and for this,
<SYNC Start=13007960><P class='en'>&nbsp;
<SYNC Start=13007960><P class='en'>there are alternatives I told you. I&#39;ve written
here a lot of code. I have written this code
<SYNC Start=13008960><P class='en'>&nbsp;
<SYNC Start=13008960><P class='en'>so I could show you what to think. Yeah, I
would want to make this episode not as long,
<SYNC Start=13009960><P class='en'>&nbsp;
<SYNC Start=13009960><P class='en'>because I noticed many of you are only watching
like the first minutes. So 95% will already
<SYNC Start=13010960><P class='en'>&nbsp;
<SYNC Start=13010960><P class='en'>be asleep anyway. So let&#39;s keep this short.
So in short, let me show you alternatives
<SYNC Start=13011960><P class='en'>&nbsp;
<SYNC Start=13011960><P class='en'>to using the clone method. There are two alternatives.
The first alternative is using so called copy
<SYNC Start=13012960><P class='en'>&nbsp;
<SYNC Start=13012960><P class='en'>constructor, and this is this thing here.
The copy constructor has one parameter, and
<SYNC Start=13013960><P class='en'>&nbsp;
<SYNC Start=13013960><P class='en'>this is the same object. And then you see
here, I say new name, on owner&#39;s name, new
<SYNC Start=13014960><P class='en'>&nbsp;
<SYNC Start=13014960><P class='en'>color on BMW dot color. So I&#39;m taking the
internals and I&#39;m creating new objects on
<SYNC Start=13015960><P class='en'>&nbsp;
<SYNC Start=13015960><P class='en'>it.
<SYNC Start=13016960><P class='en'>&nbsp;
<SYNC Start=13016960><P class='en'>And so in the end, I will have a new object
that has the same values as the original object.
<SYNC Start=13017960><P class='en'>&nbsp;
<SYNC Start=13017960><P class='en'>This is One alternative. The other alternative
would be, and this is actually my preferred
<SYNC Start=13018960><P class='en'>&nbsp;
<SYNC Start=13018960><P class='en'>one to use a so called static factory method.
<SYNC Start=13019960><P class='en'>&nbsp;
<SYNC Start=13019960><P class='en'>And this is this here, it&#39;s a static method.
So you can directly say BMW as the class name
<SYNC Start=13020960><P class='en'>&nbsp;
<SYNC Start=13020960><P class='en'>dot new instance, you can give it the BMW
object you want to copy. So in this case,
<SYNC Start=13021960><P class='en'>&nbsp;
<SYNC Start=13021960><P class='en'>probably Marquess BMW. And then you You see,
I again, call the constructor, new BMW. But
<SYNC Start=13022960><P class='en'>&nbsp;
<SYNC Start=13022960><P class='en'>here, this is a more complex object. So I
have to recursively we call this recursively.
<SYNC Start=13023960><P class='en'>&nbsp;
<SYNC Start=13023960><P class='en'>Because again, I say new instance. And he
also new instance. And I have to again, call
<SYNC Start=13024960><P class='en'>&nbsp;
<SYNC Start=13024960><P class='en'>those methods to also cop copy the owner&#39;s
name, because now I&#39;m actually doing a deep
<SYNC Start=13025960><P class='en'>&nbsp;
<SYNC Start=13025960><P class='en'>copy, I could have also just assigned the
values, this would be a shallow copy, but
<SYNC Start=13026960><P class='en'>&nbsp;
<SYNC Start=13026960><P class='en'>it&#39;s safer to have deep copies. Okay, so And
for this, we can also have a short look into
<SYNC Start=13027960><P class='en'>&nbsp;
<SYNC Start=13027960><P class='en'>name and color. Because there again, I do
the same thing. Here I have my new instance
<SYNC Start=13028960><P class='en'>&nbsp;
<SYNC Start=13028960><P class='en'>method. So this is taking a parameter of name,
and then says new name, first name, dot last
<SYNC Start=13029960><P class='en'>&nbsp;
<SYNC Start=13029960><P class='en'>name. Now, first name and last name are both
strings. And strings are also objects. So
<SYNC Start=13030960><P class='en'>&nbsp;
<SYNC Start=13030960><P class='en'>why do I not need to copy down? Okay, now
it gets more and more complicated, I&#39;m sorry,
<SYNC Start=13031960><P class='en'>&nbsp;
<SYNC Start=13031960><P class='en'>um, thing is a string as an object, but it&#39;s
actually an immutable object. And immutable
<SYNC Start=13032960><P class='en'>&nbsp;
<SYNC Start=13032960><P class='en'>means whenever you change the object, like
you assign, instead, first name, Marcos, you
<SYNC Start=13033960><P class='en'>&nbsp;
<SYNC Start=13033960><P class='en'>say, Peter, you will not influence the other
reference. But instead, whoever said make
<SYNC Start=13034960><P class='en'>&nbsp;
<SYNC Start=13034960><P class='en'>this, Peter will get a new object. So this
was really helpful. And for string, this is
<SYNC Start=13035960><P class='en'>&nbsp;
<SYNC Start=13035960><P class='en'>done for you. Actually, you can do this for
your own objects too. And in order to achieve
<SYNC Start=13036960><P class='en'>&nbsp;
<SYNC Start=13036960><P class='en'>this, you just have the limitation that you
don&#39;t offer any method to the client that
<SYNC Start=13037960><P class='en'>&nbsp;
<SYNC Start=13037960><P class='en'>allows the client to change the values in
here. But instead, you will always for any
<SYNC Start=13038960><P class='en'>&nbsp;
<SYNC Start=13038960><P class='en'>change, return a new instance. And then you
have an immutable. For this, I have also here
<SYNC Start=13039960><P class='en'>&nbsp;
<SYNC Start=13039960><P class='en'>an immutable test. Because there&#39;s another
class that actually does it, which is big
<SYNC Start=13040960><P class='en'>&nbsp;
<SYNC Start=13040960><P class='en'>integer. Big integer is similar to an int,
that we already looked on it just a bit better.
<SYNC Start=13041960><P class='en'>&nbsp;
<SYNC Start=13041960><P class='en'>First of all, because it can work on ends
of, well, at least theoretically, any length
<SYNC Start=13042960><P class='en'>&nbsp;
<SYNC Start=13042960><P class='en'>until your memory is full. And there you have
operations to add and subtract, for example.
<SYNC Start=13043960><P class='en'>&nbsp;
<SYNC Start=13043960><P class='en'>Now, when you say one, add one, this is returning
a new object to but the original object will
<SYNC Start=13044960><P class='en'>&nbsp;
<SYNC Start=13044960><P class='en'>not be influenced by this operation, you can
also subtract, but everything that you call,
<SYNC Start=13045960><P class='en'>&nbsp;
<SYNC Start=13045960><P class='en'>every method that you call will never influence
will never change how the object looks. So
<SYNC Start=13046960><P class='en'>&nbsp;
<SYNC Start=13046960><P class='en'>it&#39;s created once with the constructor, this
will like assign one to it. But after this,
<SYNC Start=13047960><P class='en'>&nbsp;
<SYNC Start=13047960><P class='en'>you can never ever changed it again, which
is very helpful. In many cases, it&#39;s really
<SYNC Start=13048960><P class='en'>&nbsp;
<SYNC Start=13048960><P class='en'>a good design principle to use immutables
whenever possible. Um, yeah, and it&#39;s also
<SYNC Start=13049960><P class='en'>&nbsp;
<SYNC Start=13049960><P class='en'>very good to use multiples when you do code
multi, multi threading. We haven&#39;t talked
<SYNC Start=13050960><P class='en'>&nbsp;
<SYNC Start=13050960><P class='en'>about multi threading yet, we will at a later
time. But there immutables are also very helpful,
<SYNC Start=13051960><P class='en'>&nbsp;
<SYNC Start=13051960><P class='en'>they will make everything more easy. So, maybe
you take one more thing with you from this
<SYNC Start=13052960><P class='en'>&nbsp;
<SYNC Start=13052960><P class='en'>episode. And this is favor immutables try
to design your objects your classes in a way
<SYNC Start=13053960><P class='en'>&nbsp;
<SYNC Start=13053960><P class='en'>that they are not mutable, that they cannot
be changed after they were created. Or came
<SYNC Start=13054960><P class='en'>&nbsp;
<SYNC Start=13054960><P class='en'>here at the same thing with string. Maybe
I can show you so I call so assigned twice
<SYNC Start=13055960><P class='en'>&nbsp;
<SYNC Start=13055960><P class='en'>Hello, which in memory is actually the same
object. But when later on here, I Say hi.
<SYNC Start=13056960><P class='en'>&nbsp;
<SYNC Start=13056960><P class='en'>This will influence the string one, and not
influence a string to let&#39;s execute this shortly.
<SYNC Start=13057960><P class='en'>&nbsp;
<SYNC Start=13057960><P class='en'>So you see, like the speaker so we can see
Bo&#39;s bigger even. Okay. So now I see the first
<SYNC Start=13058960><P class='en'>&nbsp;
<SYNC Start=13058960><P class='en'>string here printed Hi, the second string
printed Hello. And so they&#39;re not equal, the
<SYNC Start=13059960><P class='en'>&nbsp;
<SYNC Start=13059960><P class='en'>first one has high, and the second one has
Hello. And if I remove this, this is why I
<SYNC Start=13060960><P class='en'>&nbsp;
<SYNC Start=13060960><P class='en'>had commented it out. Let&#39;s execute it again.
Of course, now they both have Hello. So that&#39;s
<SYNC Start=13061960><P class='en'>&nbsp;
<SYNC Start=13061960><P class='en'>the difference. And this is one example of
an immutable strings are, by definition immutable.
<SYNC Start=13062960><P class='en'>&nbsp;
<SYNC Start=13062960><P class='en'>Maybe we could also call this here. So I print
out any n 01. And two. And also, I assert
<SYNC Start=13063960><P class='en'>&nbsp;
<SYNC Start=13063960><P class='en'>to do a few things. So the input value of
one is one, the input value of two is two,
<SYNC Start=13064960><P class='en'>&nbsp;
<SYNC Start=13064960><P class='en'>and the end value of zero is zero. Well, I&#39;m
operating on these objects, they will always
<SYNC Start=13065960><P class='en'>&nbsp;
<SYNC Start=13065960><P class='en'>return a new object, return a new object,
they will not influence the original object,
<SYNC Start=13066960><P class='en'>&nbsp;
<SYNC Start=13066960><P class='en'>this is an immutable, this is something that
you should try always to achieve our K, let&#39;s
<SYNC Start=13067960><P class='en'>&nbsp;
<SYNC Start=13067960><P class='en'>go back to Chrome. Let&#39;s recap. So in order
to properly use clown, you have to first of
<SYNC Start=13068960><P class='en'>&nbsp;
<SYNC Start=13068960><P class='en'>all, override the clone method so that it
is public. Second, you don&#39;t have to, but
<SYNC Start=13069960><P class='en'>&nbsp;
<SYNC Start=13069960><P class='en'>it&#39;s recommended. Use not object here, but
use the type of the class that you&#39;re in,
<SYNC Start=13070960><P class='en'>&nbsp;
<SYNC Start=13070960><P class='en'>then you will have to do an explicit cast
to the class here. Catch the claw not supported
<SYNC Start=13071960><P class='en'>&nbsp;
<SYNC Start=13071960><P class='en'>exception, thrown your assertion error, which
will show you in case you forgot to implement
<SYNC Start=13072960><P class='en'>&nbsp;
<SYNC Start=13072960><P class='en'>cloneable, which you will also have to do.
However, what this is going to achieve, it
<SYNC Start=13073960><P class='en'>&nbsp;
<SYNC Start=13073960><P class='en'>will create a shallow clone for you. Which
means if there are objects that are not immutables,
<SYNC Start=13074960><P class='en'>&nbsp;
<SYNC Start=13074960><P class='en'>and you then operate on those objects, this
can break another object, because still you&#39;re
<SYNC Start=13075960><P class='en'>&nbsp;
<SYNC Start=13075960><P class='en'>not totally independent, you&#39;re only potentially
independent, you&#39;re only on the first level
<SYNC Start=13076960><P class='en'>&nbsp;
<SYNC Start=13076960><P class='en'>independent. But if here you have name, this
will only copy the reference and the object
<SYNC Start=13077960><P class='en'>&nbsp;
<SYNC Start=13077960><P class='en'>here would still be the same. If you also
want to achieve this, you have to implement
<SYNC Start=13078960><P class='en'>&nbsp;
<SYNC Start=13078960><P class='en'>a more complex clone method, you have to also
call clone on the internal objects and then
<SYNC Start=13079960><P class='en'>&nbsp;
<SYNC Start=13079960><P class='en'>assign the new clone values to your internal
attributes, which will only work if they are
<SYNC Start=13080960><P class='en'>&nbsp;
<SYNC Start=13080960><P class='en'>not final. So this already limits the way
you can implement your code. See if this is
<SYNC Start=13081960><P class='en'>&nbsp;
<SYNC Start=13081960><P class='en'>not working now. So and this is one of the
one of the many, sorry, one of the many reasons
<SYNC Start=13082960><P class='en'>&nbsp;
<SYNC Start=13082960><P class='en'>why you should not use clone, other than to
clone an array. And I showed you two alternatives.
<SYNC Start=13083960><P class='en'>&nbsp;
<SYNC Start=13083960><P class='en'>One is use a static factory method. I call
the new instance. Same like Josh block in
<SYNC Start=13084960><P class='en'>&nbsp;
<SYNC Start=13084960><P class='en'>Effective Java that you should buy. And here,
I call the constructor. And again, recursively.
<SYNC Start=13085960><P class='en'>&nbsp;
<SYNC Start=13085960><P class='en'>I call again, a factory method on name. And
again, a factory method on color, which even
<SYNC Start=13086960><P class='en'>&nbsp;
<SYNC Start=13086960><P class='en'>creates a deep copy. Or I can do the same
thing with a constructor. But you see this
<SYNC Start=13087960><P class='en'>&nbsp;
<SYNC Start=13087960><P class='en'>is actually shorter. So this is why I would
prefer to use the factory method. But it both
<SYNC Start=13088960><P class='en'>&nbsp;
<SYNC Start=13088960><P class='en'>works. Okay, so here, I call twice a new constructor,
I create a new name object, and I create a
<SYNC Start=13089960><P class='en'>&nbsp;
<SYNC Start=13089960><P class='en'>new color object. Okay, and then in name,
we can also look. You see, I do the same thing.
<SYNC Start=13090960><P class='en'>&nbsp;
<SYNC Start=13090960><P class='en'>And this now is strings and I said strings.
Now we don&#39;t have to call clone because a
<SYNC Start=13091960><P class='en'>&nbsp;
<SYNC Start=13091960><P class='en'>string is immutable. So you have to do this
recursively until you reach either an immutable
<SYNC Start=13092960><P class='en'>&nbsp;
<SYNC Start=13092960><P class='en'>object or a primitive. If this were again,
like first name object, we would have to continue
<SYNC Start=13093960><P class='en'>&nbsp;
<SYNC Start=13093960><P class='en'>with cloning, or copying, like calling the
constructor until you reach either a string,
<SYNC Start=13094960><P class='en'>&nbsp;
<SYNC Start=13094960><P class='en'>or a primitive value or another immutable
object. See here also implemented clone.
<SYNC Start=13095960><P class='en'>&nbsp;
<SYNC Start=13095960><P class='en'>And then we can also look at color one last
time. For all of them, I have done the three
<SYNC Start=13096960><P class='en'>&nbsp;
<SYNC Start=13096960><P class='en'>different implementations here with a static
new instance method, here with a clone method.
<SYNC Start=13097960><P class='en'>&nbsp;
<SYNC Start=13097960><P class='en'>And last but not least, here with a copy constructor,
it receives a color object, and then it retrieves
<SYNC Start=13098960><P class='en'>&nbsp;
<SYNC Start=13098960><P class='en'>the string from the original object, which
is a string, which we don&#39;t have to clone
<SYNC Start=13099960><P class='en'>&nbsp;
<SYNC Start=13099960><P class='en'>any further. I&#39;m actually going to talk a
bit about various smaller topics. We&#39;re still
<SYNC Start=13100960><P class='en'>&nbsp;
<SYNC Start=13100960><P class='en'>on track, talking about the class object,
and all its methods. The last two methods
<SYNC Start=13101960><P class='en'>&nbsp;
<SYNC Start=13101960><P class='en'>I need to tell you about are hashCode. And
equals. Actually, they&#39;re one of the most
<SYNC Start=13102960><P class='en'>&nbsp;
<SYNC Start=13102960><P class='en'>important methods in Java, I think. However,
hashCode and equals are a bit more complicated
<SYNC Start=13103960><P class='en'>&nbsp;
<SYNC Start=13103960><P class='en'>to explain. So before I can tackle them, I
decided to push an episode in between to straighten
<SYNC Start=13104960><P class='en'>&nbsp;
<SYNC Start=13104960><P class='en'>things up. And to talk a bit about the missing
pieces in this episode. Okay, so let&#39;s start.
<SYNC Start=13105960><P class='en'>&nbsp;
<SYNC Start=13105960><P class='en'>As you see, I have prepared this demo test
class for you. Actually, we&#39;re not really
<SYNC Start=13106960><P class='en'>&nbsp;
<SYNC Start=13106960><P class='en'>testing something today. This is really only
to use to demonstrate those few small missing
<SYNC Start=13107960><P class='en'>&nbsp;
<SYNC Start=13107960><P class='en'>things. So let&#39;s do one by one. And the first
thing is, I want to talk about static imports.
<SYNC Start=13108960><P class='en'>&nbsp;
<SYNC Start=13108960><P class='en'>You might remember, I think I talked about
static imports, in the first three episodes,
<SYNC Start=13109960><P class='en'>&nbsp;
<SYNC Start=13109960><P class='en'>and I kind of promised you to later on give
you more details about it. The problem at
<SYNC Start=13110960><P class='en'>&nbsp;
<SYNC Start=13110960><P class='en'>this time was we hadn&#39;t talked about static.
Well, in the meantime, we have, I just didn&#39;t
<SYNC Start=13111960><P class='en'>&nbsp;
<SYNC Start=13111960><P class='en'>have any better opportunity to talk about
it. And I felt a bit guilty. So I think now,
<SYNC Start=13112960><P class='en'>&nbsp;
<SYNC Start=13112960><P class='en'>I should really finally tell you what exactly
is a static import, how you can use it, and
<SYNC Start=13113960><P class='en'>&nbsp;
<SYNC Start=13113960><P class='en'>what it helps you. So actually, we used it
all the time. And you might have seen it.
<SYNC Start=13114960><P class='en'>&nbsp;
<SYNC Start=13114960><P class='en'>Here on top, I have this import static org
j unit assert dot star, it&#39;s just grayed out
<SYNC Start=13115960><P class='en'>&nbsp;
<SYNC Start=13115960><P class='en'>because at the moment, I&#39;m not using it. This
is also set here unused import statement.
<SYNC Start=13116960><P class='en'>&nbsp;
<SYNC Start=13116960><P class='en'>Now you can see it. And you can also see here,
the regular import or j unit test sub question
<SYNC Start=13117960><P class='en'>&nbsp;
<SYNC Start=13117960><P class='en'>is, what&#39;s the difference between the two
of them? So this one imports the code of the
<SYNC Start=13118960><P class='en'>&nbsp;
<SYNC Start=13118960><P class='en'>whole test class? Well, this one here, a static
import just focuses on all the static methods.
<SYNC Start=13119960><P class='en'>&nbsp;
<SYNC Start=13119960><P class='en'>Because in j unit, you know, when we want
to test, we always use these assert methods.
<SYNC Start=13120960><P class='en'>&nbsp;
<SYNC Start=13120960><P class='en'>assert equals assert true.
<SYNC Start=13121960><P class='en'>&nbsp;
<SYNC Start=13121960><P class='en'>Let&#39;s do that now. Like assert. True, you
see, it already helps me true. I mean, when
<SYNC Start=13122960><P class='en'>&nbsp;
<SYNC Start=13122960><P class='en'>true is always true. There&#39;s a stupid, but
I just want you to see the method. And the
<SYNC Start=13123960><P class='en'>&nbsp;
<SYNC Start=13123960><P class='en'>thing is, this is only not working because
I have this here assert and seeing, it&#39;s not
<SYNC Start=13124960><P class='en'>&nbsp;
<SYNC Start=13124960><P class='en'>great anymore, it turns white, because now
it&#39;s in use. So let&#39;s actually have a look
<SYNC Start=13125960><P class='en'>&nbsp;
<SYNC Start=13125960><P class='en'>at this class, I can jump there, you see even
it says it extends object will no wonder all
<SYNC Start=13126960><P class='en'>&nbsp;
<SYNC Start=13126960><P class='en'>the classes extend object anyway. So here
you see, I see the decompiled code. This is
<SYNC Start=13127960><P class='en'>&nbsp;
<SYNC Start=13127960><P class='en'>what my ID he can also do to show me the code.
This is very helpful, so you understand better
<SYNC Start=13128960><P class='en'>&nbsp;
<SYNC Start=13128960><P class='en'>what happens behind the cover. So you Here
you see a lot of static methods. So this class
<SYNC Start=13129960><P class='en'>&nbsp;
<SYNC Start=13129960><P class='en'>actually like groups them and makes them usable
to me. And as you might know, from static
<SYNC Start=13130960><P class='en'>&nbsp;
<SYNC Start=13130960><P class='en'>when I talked about static, the way you would
use a static method would be normally you
<SYNC Start=13131960><P class='en'>&nbsp;
<SYNC Start=13131960><P class='en'>say class name, dot assert true. Now you can
either use the full fledged class name, which
<SYNC Start=13132960><P class='en'>&nbsp;
<SYNC Start=13132960><P class='en'>is org dot j unit dot assert, and then assert
true or if you don&#39;t want to use the package,
<SYNC Start=13133960><P class='en'>&nbsp;
<SYNC Start=13133960><P class='en'>you would import the class and then you can
just say assert dot assert true. Of course,
<SYNC Start=13134960><P class='en'>&nbsp;
<SYNC Start=13134960><P class='en'>there are also other methods, you can have
a look on those, by yourself. actually quite
<SYNC Start=13135960><P class='en'>&nbsp;
<SYNC Start=13135960><P class='en'>complicated ones like you can even compare
areas, and so on and so forth, not equals
<SYNC Start=13136960><P class='en'>&nbsp;
<SYNC Start=13136960><P class='en'>equals, with message without is equals, and
so on. Well, we have used some of them. So
<SYNC Start=13137960><P class='en'>&nbsp;
<SYNC Start=13137960><P class='en'>this means I can also say, assert dot assert
true. But now you see this is not working,
<SYNC Start=13138960><P class='en'>&nbsp;
<SYNC Start=13138960><P class='en'>because I have not normally imported the assert
class. So if I would want to do this, I would
<SYNC Start=13139960><P class='en'>&nbsp;
<SYNC Start=13139960><P class='en'>have to say org, J unit dot assert, and then
import it like this. Now you see it&#39;s not
<SYNC Start=13140960><P class='en'>&nbsp;
<SYNC Start=13140960><P class='en'>used anymore, because now I&#39;m not statically
importing it, but regularly, and I&#39;m using
<SYNC Start=13141960><P class='en'>&nbsp;
<SYNC Start=13141960><P class='en'>the class name to use the method. But I mean,
when they introduced it, I think this was
<SYNC Start=13142960><P class='en'>&nbsp;
<SYNC Start=13142960><P class='en'>with Java five. The reason to introduce this
where it was to just make these statements
<SYNC Start=13143960><P class='en'>&nbsp;
<SYNC Start=13143960><P class='en'>shorter, because you don&#39;t always want to
write assert dot all the time.
<SYNC Start=13144960><P class='en'>&nbsp;
<SYNC Start=13144960><P class='en'>Okay,
<SYNC Start=13145960><P class='en'>&nbsp;
<SYNC Start=13145960><P class='en'>and you could also do it as said before, without
any import, this would even be more longer
<SYNC Start=13146960><P class='en'>&nbsp;
<SYNC Start=13146960><P class='en'>than you could go without the import. Now,
they are not see, but there it is working.
<SYNC Start=13147960><P class='en'>&nbsp;
<SYNC Start=13147960><P class='en'>That&#39;s the difference, because now I don&#39;t
do any import. Let&#39;s put it back. And then
<SYNC Start=13148960><P class='en'>&nbsp;
<SYNC Start=13148960><P class='en'>we can go with or without. And if you wanted
like this and the shortest form, you need
<SYNC Start=13149960><P class='en'>&nbsp;
<SYNC Start=13149960><P class='en'>the static import and not the regular import.
So that is a static import. And the dot star
<SYNC Start=13150960><P class='en'>&nbsp;
<SYNC Start=13150960><P class='en'>means just input all the static members or
members, static is not members, all the static
<SYNC Start=13151960><P class='en'>&nbsp;
<SYNC Start=13151960><P class='en'>functions and also the static variables of
the class. So if you have variables you want
<SYNC Start=13152960><P class='en'>&nbsp;
<SYNC Start=13152960><P class='en'>to import that are static. This also works
with the star operator here. But you can also
<SYNC Start=13153960><P class='en'>&nbsp;
<SYNC Start=13153960><P class='en'>say you import only specific functions or
attributes. So this is up to you. Okay, so
<SYNC Start=13154960><P class='en'>&nbsp;
<SYNC Start=13154960><P class='en'>that&#39;s all I can tell you about static imports,
I think sometimes they&#39;re helpful. More often,
<SYNC Start=13155960><P class='en'>&nbsp;
<SYNC Start=13155960><P class='en'>it actually happens, then you would think
that you would import several methods or attributes
<SYNC Start=13156960><P class='en'>&nbsp;
<SYNC Start=13156960><P class='en'>that are the same in different classes. If
you have that it&#39;s exactly the same, like
<SYNC Start=13157960><P class='en'>&nbsp;
<SYNC Start=13157960><P class='en'>I told you about the imports, you can only
import one method name once by using a static
<SYNC Start=13158960><P class='en'>&nbsp;
<SYNC Start=13158960><P class='en'>import. If you&#39;re not have a second class
that has the same method, you will then have
<SYNC Start=13159960><P class='en'>&nbsp;
<SYNC Start=13159960><P class='en'>to use the full fledged, or at least a class
name so that the JVM, the compiler knows,
<SYNC Start=13160960><P class='en'>&nbsp;
<SYNC Start=13160960><P class='en'>in this case, I want the assert true method
from this class. And in the other case, I
<SYNC Start=13161960><P class='en'>&nbsp;
<SYNC Start=13161960><P class='en'>want the assert true from another class. Okay,
so you can&#39;t I mean, there must be a way that
<SYNC Start=13162960><P class='en'>&nbsp;
<SYNC Start=13162960><P class='en'>the compiler understands what you&#39;re trying
to do. If I only import this statically once,
<SYNC Start=13163960><P class='en'>&nbsp;
<SYNC Start=13163960><P class='en'>I mean, then it&#39;s just obvious the assert
true is part of the assault class here. Oh,
<SYNC Start=13164960><P class='en'>&nbsp;
<SYNC Start=13164960><P class='en'>okay. So that much about static imports. The
next small thing I want to talk about, let&#39;s
<SYNC Start=13165960><P class='en'>&nbsp;
<SYNC Start=13165960><P class='en'>open this up is default values for different
data types. I think this is quite important.
<SYNC Start=13166960><P class='en'>&nbsp;
<SYNC Start=13166960><P class='en'>And also interesting. Because I see many people
that would have here, member variables defined.
<SYNC Start=13167960><P class='en'>&nbsp;
<SYNC Start=13167960><P class='en'>And then they would say something like, here,
or for cards, different weight. Like for the
<SYNC Start=13168960><P class='en'>&nbsp;
<SYNC Start=13168960><P class='en'>Boolean, they would say false. Or for the
object, they would say novel. And you don&#39;t
<SYNC Start=13169960><P class='en'>&nbsp;
<SYNC Start=13169960><P class='en'>have to do that. Because now for object, as
well as false for a Boolean is the default.
<SYNC Start=13170960><P class='en'>&nbsp;
<SYNC Start=13170960><P class='en'>So this is in my eyes, this is just clutter,
you write code that you don&#39;t have to. I mean,
<SYNC Start=13171960><P class='en'>&nbsp;
<SYNC Start=13171960><P class='en'>for every rule, there&#39;s always an exception.
For example, if this is very important that
<SYNC Start=13172960><P class='en'>&nbsp;
<SYNC Start=13172960><P class='en'>this is set to false. And this is really a
specific case and you want to give a message
<SYNC Start=13173960><P class='en'>&nbsp;
<SYNC Start=13173960><P class='en'>with it. It might make sense to sometimes
right here explicitly false. But then it also
<SYNC Start=13174960><P class='en'>&nbsp;
<SYNC Start=13174960><P class='en'>maybe you should name your variable a bit
different so that it says why this is important.
<SYNC Start=13175960><P class='en'>&nbsp;
<SYNC Start=13175960><P class='en'>And because my Boolean now I mean, this might
be the problem. It doesn&#39;t say why this is
<SYNC Start=13176960><P class='en'>&nbsp;
<SYNC Start=13176960><P class='en'>always false. Okay, so And now let&#39;s have
a look at all the different defaults. But
<SYNC Start=13177960><P class='en'>&nbsp;
<SYNC Start=13177960><P class='en'>when I say default, this really only applies
for these member variables up here. If you
<SYNC Start=13178960><P class='en'>&nbsp;
<SYNC Start=13178960><P class='en'>for example, have a local variable Like Boolean,
B, you can&#39;t do that, if I&#39;m not trying to
<SYNC Start=13179960><P class='en'>&nbsp;
<SYNC Start=13179960><P class='en'>use it, this is not going to work. If b, this
will give me a problem variable b might not
<SYNC Start=13180960><P class='en'>&nbsp;
<SYNC Start=13180960><P class='en'>have been initialized, but it does work with
the Boolean up here. This is going to work,
<SYNC Start=13181960><P class='en'>&nbsp;
<SYNC Start=13181960><P class='en'>see, and now it will count as false. So the
if would not be executed the branch. Okay,
<SYNC Start=13182960><P class='en'>&nbsp;
<SYNC Start=13182960><P class='en'>but now enough of talking, blah, blah, blah.
You might already be asleep, so wake up. Okay,
<SYNC Start=13183960><P class='en'>&nbsp;
<SYNC Start=13183960><P class='en'>so let&#39;s make this a bit bigger, so we can
see it properly. Okay. Now, so you see, by
<SYNC Start=13184960><P class='en'>&nbsp;
<SYNC Start=13184960><P class='en'>default value, short default value, those
are all zero.
<SYNC Start=13185960><P class='en'>&nbsp;
<SYNC Start=13185960><P class='en'>Actually, there are many number types that
we haven&#39;t talked about. And this is also
<SYNC Start=13186960><P class='en'>&nbsp;
<SYNC Start=13186960><P class='en'>what I&#39;m just going to introduce right now.
Because we totally focused on end, because
<SYNC Start=13187960><P class='en'>&nbsp;
<SYNC Start=13187960><P class='en'>this is actually the one that is most times
used. But as you see here, there are also
<SYNC Start=13188960><P class='en'>&nbsp;
<SYNC Start=13188960><P class='en'>others. I think I shortly once showed you
bite, and I also showed you one&#39;s car. Um,
<SYNC Start=13189960><P class='en'>&nbsp;
<SYNC Start=13189960><P class='en'>but there are also others. In my opinion,
this is just the smaller data types, we will
<SYNC Start=13190960><P class='en'>&nbsp;
<SYNC Start=13190960><P class='en'>see the ranges very soon are only here because
I think like this or similar, they existed
<SYNC Start=13191960><P class='en'>&nbsp;
<SYNC Start=13191960><P class='en'>in other programming languages before Java,
like maybe c c++. In my opinion, this is a
<SYNC Start=13192960><P class='en'>&nbsp;
<SYNC Start=13192960><P class='en'>The reason is probably because like something
like 30 years ago, the memory was so expensive.
<SYNC Start=13193960><P class='en'>&nbsp;
<SYNC Start=13193960><P class='en'>And that was really the memory space was so
limited, like you would have a memory of,
<SYNC Start=13194960><P class='en'>&nbsp;
<SYNC Start=13194960><P class='en'>I don&#39;t know, a few kilobytes. Now with gigabytes
of RAM, this is totally a different issue.
<SYNC Start=13195960><P class='en'>&nbsp;
<SYNC Start=13195960><P class='en'>So the space end users actually a bit more
bytes. But the space is really not relevant
<SYNC Start=13196960><P class='en'>&nbsp;
<SYNC Start=13196960><P class='en'>these days, in 99, and probably 99.9% of the
cases are always use int. So wide and short,
<SYNC Start=13197960><P class='en'>&nbsp;
<SYNC Start=13197960><P class='en'>in my personal opinion on something like deprecated.
I mean, this is not true, actually, because
<SYNC Start=13198960><P class='en'>&nbsp;
<SYNC Start=13198960><P class='en'>I&#39;m sure someone can tell me there is a specific
case where you would need them. It just that
<SYNC Start=13199960><P class='en'>&nbsp;
<SYNC Start=13199960><P class='en'>on average, generally speaking, you should
be fine with an int. And we will look at actually
<SYNC Start=13200960><P class='en'>&nbsp;
<SYNC Start=13200960><P class='en'>the sizes of these types in a second. So yeah,
that long is actually bigger, can save longer
<SYNC Start=13201960><P class='en'>&nbsp;
<SYNC Start=13201960><P class='en'>numbers than end. This sometimes might be
needed, but also not so often really, I think,
<SYNC Start=13202960><P class='en'>&nbsp;
<SYNC Start=13202960><P class='en'>now float and double, as the name implies,
at least for float, they&#39;re both floating
<SYNC Start=13203960><P class='en'>&nbsp;
<SYNC Start=13203960><P class='en'>numbers. And double, I think the name comes
because it&#39;s like double the space or something,
<SYNC Start=13204960><P class='en'>&nbsp;
<SYNC Start=13204960><P class='en'>then that of a float. Actually, also these
I hardly use, because first of all, I personally
<SYNC Start=13205960><P class='en'>&nbsp;
<SYNC Start=13205960><P class='en'>did not worry too much with these kinds of
floating point calculations. And second, in
<SYNC Start=13206960><P class='en'>&nbsp;
<SYNC Start=13206960><P class='en'>case I did, for example, calculating on money
that you would need that. But they are they
<SYNC Start=13207960><P class='en'>&nbsp;
<SYNC Start=13207960><P class='en'>are quite problematic, actually, because they
don&#39;t calculate properly on the scent, it
<SYNC Start=13208960><P class='en'>&nbsp;
<SYNC Start=13208960><P class='en'>can happen that when you have something like
two euro 20 multiplied by, I don&#39;t know, divided
<SYNC Start=13209960><P class='en'>&nbsp;
<SYNC Start=13209960><P class='en'>by a number of people that in the end, you
lose or you gain a cent. And like in India,
<SYNC Start=13210960><P class='en'>&nbsp;
<SYNC Start=13210960><P class='en'>in the financial industry, this is just not
okay. So therefore float and double can&#39;t
<SYNC Start=13211960><P class='en'>&nbsp;
<SYNC Start=13211960><P class='en'>use be used there. The reason I can&#39;t perfectly
tell you but I think it has to do with internally
<SYNC Start=13212960><P class='en'>&nbsp;
<SYNC Start=13212960><P class='en'>these numbers of course stored in a binary
format, you know, a computer only knows zero
<SYNC Start=13213960><P class='en'>&nbsp;
<SYNC Start=13213960><P class='en'>and one. And then when, from this format,
it&#39;s transferred to our decimal format. For
<SYNC Start=13214960><P class='en'>&nbsp;
<SYNC Start=13214960><P class='en'>those floating point numbers, then there are
rounding issues. And therefore, when you really
<SYNC Start=13215960><P class='en'>&nbsp;
<SYNC Start=13215960><P class='en'>need to have a correct floating point result,
there are various other solutions. One is
<SYNC Start=13216960><P class='en'>&nbsp;
<SYNC Start=13216960><P class='en'>to store the number without the floating point,
for example, as a long or end or alternatively
<SYNC Start=13217960><P class='en'>&nbsp;
<SYNC Start=13217960><P class='en'>even as a string. And then you do your calculation,
and when it&#39;s finished. You insert the floating
<SYNC Start=13218960><P class='en'>&nbsp;
<SYNC Start=13218960><P class='en'>point visually at the place in the UI where
it&#39;s needed. Which is also dependent on like
<SYNC Start=13219960><P class='en'>&nbsp;
<SYNC Start=13219960><P class='en'>local settings, like numbers are formatted
differently in different languages. So therefore,
<SYNC Start=13220960><P class='en'>&nbsp;
<SYNC Start=13220960><P class='en'>this is usually the way you would go, at least
definitely in the credit card or in any financial
<SYNC Start=13221960><P class='en'>&nbsp;
<SYNC Start=13221960><P class='en'>industry. Okay, so anyway, float and double
are both floating point numbers. What is interesting,
<SYNC Start=13222960><P class='en'>&nbsp;
<SYNC Start=13222960><P class='en'>by the way, is like, when you have a constant
value,
<SYNC Start=13223960><P class='en'>&nbsp;
<SYNC Start=13223960><P class='en'>like 34 43.31, this here, I mean, this is
a value of constant value. And if I just write
<SYNC Start=13224960><P class='en'>&nbsp;
<SYNC Start=13224960><P class='en'>this down like it is at the moment, this is
now by definition automatically a double.
<SYNC Start=13225960><P class='en'>&nbsp;
<SYNC Start=13225960><P class='en'>If I want to have this as a float, I have
to say, the capital a lowercase F, at the
<SYNC Start=13226960><P class='en'>&nbsp;
<SYNC Start=13226960><P class='en'>end, which makes it up float. So, if I have
like float my float node equals to this, or
<SYNC Start=13227960><P class='en'>&nbsp;
<SYNC Start=13227960><P class='en'>he really have to say f at the end, because
if you leave it, I would get a problem, because
<SYNC Start=13228960><P class='en'>&nbsp;
<SYNC Start=13228960><P class='en'>it says it found a double, but float is required.
And the same applies actually for int, short
<SYNC Start=13229960><P class='en'>&nbsp;
<SYNC Start=13229960><P class='en'>bite, there is just the other way around,
because there is the default. And when you
<SYNC Start=13230960><P class='en'>&nbsp;
<SYNC Start=13230960><P class='en'>want to use a short short as equals to 43.
This just works implicitly because Java sees
<SYNC Start=13231960><P class='en'>&nbsp;
<SYNC Start=13231960><P class='en'>the space is fitting. And then it will just
implicitly convert the end because this is
<SYNC Start=13232960><P class='en'>&nbsp;
<SYNC Start=13232960><P class='en'>really an end to a short. Ever. Let&#39;s try
the same thing with a long, long for d3. This
<SYNC Start=13233960><P class='en'>&nbsp;
<SYNC Start=13233960><P class='en'>also works because now you try to store the
smaller thing, the end into a long, which
<SYNC Start=13234960><P class='en'>&nbsp;
<SYNC Start=13234960><P class='en'>should always fit. Okay. So what else, so
we have object, the default value is now as
<SYNC Start=13235960><P class='en'>&nbsp;
<SYNC Start=13235960><P class='en'>I said before, Boolean, the default value
is false. Car. Now this is interesting, it
<SYNC Start=13236960><P class='en'>&nbsp;
<SYNC Start=13236960><P class='en'>depends on if you safe if you display this
as a car as it is. And then this is I think
<SYNC Start=13237960><P class='en'>&nbsp;
<SYNC Start=13237960><P class='en'>it&#39;s called the null character. And I think
this is just nothing or maybe space here you
<SYNC Start=13238960><P class='en'>&nbsp;
<SYNC Start=13238960><P class='en'>see there is something it just can&#39;t be displayed
by my UI. I mean, here, if I try there&#39;s nothing
<SYNC Start=13239960><P class='en'>&nbsp;
<SYNC Start=13239960><P class='en'>blue. But here when I go over it, it&#39;s displayed
as blue because there is actually something
<SYNC Start=13240960><P class='en'>&nbsp;
<SYNC Start=13240960><P class='en'>it just not visible. And I can convert this
character, the default character to an end.
<SYNC Start=13241960><P class='en'>&nbsp;
<SYNC Start=13241960><P class='en'>And then it&#39;s a zero. Okay? Now, so these
were the default values of the different number
<SYNC Start=13242960><P class='en'>&nbsp;
<SYNC Start=13242960><P class='en'>data types as primitives. Okay, and now, as
the next topic, I also want to tell you never
<SYNC Start=13243960><P class='en'>&nbsp;
<SYNC Start=13243960><P class='en'>told you so far, all these number types, they
in parallel also exist as objects. Let&#39;s have
<SYNC Start=13244960><P class='en'>&nbsp;
<SYNC Start=13244960><P class='en'>a look, and then see and discuss why that
is. Okay, so you would have bide my, this
<SYNC Start=13245960><P class='en'>&nbsp;
<SYNC Start=13245960><P class='en'>is used already on top. So let&#39;s call, let&#39;s
just call it b
<SYNC Start=13246960><P class='en'>&nbsp;
<SYNC Start=13246960><P class='en'>equals to bite dot value of now, this is a
static method method, which can and should
<SYNC Start=13247960><P class='en'>&nbsp;
<SYNC Start=13247960><P class='en'>be used to convert convert, sorry,
<SYNC Start=13248960><P class='en'>&nbsp;
<SYNC Start=13248960><P class='en'>a byte primitive to a byte object. You can
also say new byte. But this is just not recommended
<SYNC Start=13249960><P class='en'>&nbsp;
<SYNC Start=13249960><P class='en'>because this might use more space. So, I don&#39;t
want to go in details because then I could
<SYNC Start=13250960><P class='en'>&nbsp;
<SYNC Start=13250960><P class='en'>talk forever for performance optimization.
But this is just creating always a new object,
<SYNC Start=13251960><P class='en'>&nbsp;
<SYNC Start=13251960><P class='en'>while the other one might reuse an existing
object of the same value. So, this usually
<SYNC Start=13252960><P class='en'>&nbsp;
<SYNC Start=13252960><P class='en'>is good enough. Okay, there&#39;s also other methods,
static methods like pars. The difference is,
<SYNC Start=13253960><P class='en'>&nbsp;
<SYNC Start=13253960><P class='en'>this works not on a string as far as I know,
let&#39;s try to Yes. And let&#39;s go into the function
<SYNC Start=13254960><P class='en'>&nbsp;
<SYNC Start=13254960><P class='en'>See, I can Also see it here. And this converts
it not to the object, but again to the primitive.
<SYNC Start=13255960><P class='en'>&nbsp;
<SYNC Start=13255960><P class='en'>This is the value of it converts it to abide.
He even you can give the radix, like the radix
<SYNC Start=13256960><P class='en'>&nbsp;
<SYNC Start=13256960><P class='en'>of 10, or eight or 16, or whatever. This usually,
well, I never really needed. But there are
<SYNC Start=13257960><P class='en'>&nbsp;
<SYNC Start=13257960><P class='en'>a lot of lot of functions. What is also interesting
is that these objects, they all extend the
<SYNC Start=13258960><P class='en'>&nbsp;
<SYNC Start=13258960><P class='en'>abstract type number, abstract class, we talked
about inheritance already. So you&#39;re here
<SYNC Start=13259960><P class='en'>&nbsp;
<SYNC Start=13259960><P class='en'>you can see all these different functions
that each of those number types have to implement.
<SYNC Start=13260960><P class='en'>&nbsp;
<SYNC Start=13260960><P class='en'>So each of them, you can convert to an int,
long float, double as the primitive value.
<SYNC Start=13261960><P class='en'>&nbsp;
<SYNC Start=13261960><P class='en'>The green stuff is, by the way, the Java API
documentation that you can also read online,
<SYNC Start=13262960><P class='en'>&nbsp;
<SYNC Start=13262960><P class='en'>short. So this, all these types automatically
will have. Okay, so back. Now, besides offering
<SYNC Start=13263960><P class='en'>&nbsp;
<SYNC Start=13263960><P class='en'>these cool methods, that might be helpful.
There is also another reason why these exists
<SYNC Start=13264960><P class='en'>&nbsp;
<SYNC Start=13264960><P class='en'>as objects. The reason is, I think, mainly
because there is something called collections
<SYNC Start=13265960><P class='en'>&nbsp;
<SYNC Start=13265960><P class='en'>that we will talk about very soon. I think
I even mentioned it shortly, it&#39;s something
<SYNC Start=13266960><P class='en'>&nbsp;
<SYNC Start=13266960><P class='en'>similar to an array, it&#39;s like an array on
steroids. It&#39;s just a container that you can
<SYNC Start=13267960><P class='en'>&nbsp;
<SYNC Start=13267960><P class='en'>throw in objects. And that&#39;s really it, you
can only throw in objects. And so you could
<SYNC Start=13268960><P class='en'>&nbsp;
<SYNC Start=13268960><P class='en'>not throw in any primitive. And therefore,
this is also called a wrapper type, because
<SYNC Start=13269960><P class='en'>&nbsp;
<SYNC Start=13269960><P class='en'>this object then will wrap around this primitive
type, and can be wrapped and unwrapped. Which
<SYNC Start=13270960><P class='en'>&nbsp;
<SYNC Start=13270960><P class='en'>by the way, in the past, when working with
primitives and collections was needed. So
<SYNC Start=13271960><P class='en'>&nbsp;
<SYNC Start=13271960><P class='en'>before putting it into the collection, you
would have converted your primitive data type,
<SYNC Start=13272960><P class='en'>&nbsp;
<SYNC Start=13272960><P class='en'>like the CMI byte, input, the object would
then have, let&#39;s just say collection, let&#39;s
<SYNC Start=13273960><P class='en'>&nbsp;
<SYNC Start=13273960><P class='en'>just say add, I mean, in reality, it looks
a bit different. But just so that you get
<SYNC Start=13274960><P class='en'>&nbsp;
<SYNC Start=13274960><P class='en'>an abstract idea, you would have added this
thing here. And later on, when you wanted
<SYNC Start=13275960><P class='en'>&nbsp;
<SYNC Start=13275960><P class='en'>to retrieve it again, you could then say,
wide dot, get the byte value. And then again,
<SYNC Start=13276960><P class='en'>&nbsp;
<SYNC Start=13276960><P class='en'>there were people saying all this is just
too much work. And so I think also, with Java
<SYNC Start=13277960><P class='en'>&nbsp;
<SYNC Start=13277960><P class='en'>five, there was an auto conversion introduced,
that now Java can work with a primitive and
<SYNC Start=13278960><P class='en'>&nbsp;
<SYNC Start=13278960><P class='en'>an object, and will automatically behind the
covers convert a primitive to an object and
<SYNC Start=13279960><P class='en'>&nbsp;
<SYNC Start=13279960><P class='en'>an object to a primitive, whatever is needed
by a certain function. Now, this is heavily
<SYNC Start=13280960><P class='en'>&nbsp;
<SYNC Start=13280960><P class='en'>in used by almost every developer, I really
don&#39;t like it, and I really activate in my
<SYNC Start=13281960><P class='en'>&nbsp;
<SYNC Start=13281960><P class='en'>ID, that I get displayed these conversions.
Because for one, this could even be an issue
<SYNC Start=13282960><P class='en'>&nbsp;
<SYNC Start=13282960><P class='en'>with performance, because I see functions
that would like convert from a primitive to
<SYNC Start=13283960><P class='en'>&nbsp;
<SYNC Start=13283960><P class='en'>an object, and to a primitive and so on back
and forth several times, which is just stupid.
<SYNC Start=13284960><P class='en'>&nbsp;
<SYNC Start=13284960><P class='en'>Second, for a primitive, you have the default
value of a zero, that is safe, that will never
<SYNC Start=13285960><P class='en'>&nbsp;
<SYNC Start=13285960><P class='en'>throw a null pointer exception. Ever for an
object. When it&#39;s not initialized, like here,
<SYNC Start=13286960><P class='en'>&nbsp;
<SYNC Start=13286960><P class='en'>the value will be now and then when you on
an object call, b dot byte value, this will
<SYNC Start=13287960><P class='en'>&nbsp;
<SYNC Start=13287960><P class='en'>actually throw a null pointer exception. The
problem is you don&#39;t see it, because it&#39;ll
<SYNC Start=13288960><P class='en'>&nbsp;
<SYNC Start=13288960><P class='en'>be automatically be inserted by the compiler
for you. You only see it at runtime and then
<SYNC Start=13289960><P class='en'>&nbsp;
<SYNC Start=13289960><P class='en'>you get a nullpointerexception. So really
be careful with these automatic conversions.
<SYNC Start=13290960><P class='en'>&nbsp;
<SYNC Start=13290960><P class='en'>I personally hardly ever use them.
<SYNC Start=13291960><P class='en'>&nbsp;
<SYNC Start=13291960><P class='en'>Okay, but so, so that you know of each of
these primitive number types There is also
<SYNC Start=13292960><P class='en'>&nbsp;
<SYNC Start=13292960><P class='en'>the same type as an object. The names are
pretty much always the same, like there&#39;s
<SYNC Start=13293960><P class='en'>&nbsp;
<SYNC Start=13293960><P class='en'>a short object. For int, it is integer. So
there&#39;s an integer. For long it&#39;s long. For
<SYNC Start=13294960><P class='en'>&nbsp;
<SYNC Start=13294960><P class='en'>float is float and double, it&#39;s double. And
also Boolean exists as an object. Which by
<SYNC Start=13295960><P class='en'>&nbsp;
<SYNC Start=13295960><P class='en'>the way, also has static Boolean object values.
So you can even say Boolean be laughter Remove
<SYNC Start=13296960><P class='en'>&nbsp;
<SYNC Start=13296960><P class='en'>the bite. Because this is also B, Boolean
b equals to true, or equals to false. But
<SYNC Start=13297960><P class='en'>&nbsp;
<SYNC Start=13297960><P class='en'>now this is an object. I can also show, you
know, the automatic conversion works. Even
<SYNC Start=13298960><P class='en'>&nbsp;
<SYNC Start=13298960><P class='en'>though this is an object, the aesthetic value
here, can even jump there you see public static,
<SYNC Start=13299960><P class='en'>&nbsp;
<SYNC Start=13299960><P class='en'>final Boolean false equals to new Boolean
false. So the cool thing when you use this
<SYNC Start=13300960><P class='en'>&nbsp;
<SYNC Start=13300960><P class='en'>is there&#39;s only one object that is always
reused, and you don&#39;t always say new Boolean,
<SYNC Start=13301960><P class='en'>&nbsp;
<SYNC Start=13301960><P class='en'>to save some space. Okay. And now you see,
I can assign this object to the primitive
<SYNC Start=13302960><P class='en'>&nbsp;
<SYNC Start=13302960><P class='en'>type, because internally, the compiler will
do this for you, you just don&#39;t see it. Okay,
<SYNC Start=13303960><P class='en'>&nbsp;
<SYNC Start=13303960><P class='en'>so that&#39;s, I think, all I can tell you about
the different number types and their object
<SYNC Start=13304960><P class='en'>&nbsp;
<SYNC Start=13304960><P class='en'>variants. Now let&#39;s have a look at their ranges.
I said for example, byte In short, they have
<SYNC Start=13305960><P class='en'>&nbsp;
<SYNC Start=13305960><P class='en'>smaller ranges. But enough of talking, I think
the best is I just show you. So execute the
<SYNC Start=13306960><P class='en'>&nbsp;
<SYNC Start=13306960><P class='en'>test. And we see, let me scroll this down.
I think this makes it easier. Because then
<SYNC Start=13307960><P class='en'>&nbsp;
<SYNC Start=13307960><P class='en'>we can see the test and the code in parallel.
Okay, so here, I used the system print long.
<SYNC Start=13308960><P class='en'>&nbsp;
<SYNC Start=13308960><P class='en'>Remember, don&#39;t use it avoided. Just try test,
it doesn&#39;t really matter. I just shortly wanted
<SYNC Start=13309960><P class='en'>&nbsp;
<SYNC Start=13309960><P class='en'>to show you the results. Otherwise, in productive
code prefer logging, because it&#39;s more flexible
<SYNC Start=13310960><P class='en'>&nbsp;
<SYNC Start=13310960><P class='en'>and would probably lead generally speaking
to more performance, okay, but enough. So
<SYNC Start=13311960><P class='en'>&nbsp;
<SYNC Start=13311960><P class='en'>here you see. So there are signed types and
unsigned types. Signed means you see, there
<SYNC Start=13312960><P class='en'>&nbsp;
<SYNC Start=13312960><P class='en'>is a minus, so it goes from minus 128 to plus
127. Interesting is, this is not 128. But
<SYNC Start=13313960><P class='en'>&nbsp;
<SYNC Start=13313960><P class='en'>127. While he is 128. This actually is for
all the sign types. The reason is, the JVM
<SYNC Start=13314960><P class='en'>&nbsp;
<SYNC Start=13314960><P class='en'>in your memory of your computer will actually
need this one number to store the information
<SYNC Start=13315960><P class='en'>&nbsp;
<SYNC Start=13315960><P class='en'>if it&#39;s a minus or a plus. And this is why
they had to take one number away. And they
<SYNC Start=13316960><P class='en'>&nbsp;
<SYNC Start=13316960><P class='en'>just decided that minus has one, one more
number than Plus, I mean, they could have
<SYNC Start=13317960><P class='en'>&nbsp;
<SYNC Start=13317960><P class='en'>also done it the other way. But this is how
it&#39;s done in Java. Okay, so you see, this
<SYNC Start=13318960><P class='en'>&nbsp;
<SYNC Start=13318960><P class='en'>is only for very small numbers. 120 minus
128, two plus one and 27 short is already
<SYNC Start=13319960><P class='en'>&nbsp;
<SYNC Start=13319960><P class='en'>much bigger. It can store 32,000 something
plus and minus again, one less here on the
<SYNC Start=13320960><P class='en'>&nbsp;
<SYNC Start=13320960><P class='en'>right side in again is much bigger. I think
this is like 2 billion or so long, again is
<SYNC Start=13321960><P class='en'>&nbsp;
<SYNC Start=13321960><P class='en'>much bigger. I don&#39;t even know how long this
number is. Um, yeah, usually you should be
<SYNC Start=13322960><P class='en'>&nbsp;
<SYNC Start=13322960><P class='en'>fine with int can in some rare cases you need
a long Yeah, actually, sometimes I needed
<SYNC Start=13323960><P class='en'>&nbsp;
<SYNC Start=13323960><P class='en'>a long Okay. And then there&#39;s his float floating
point number with the exponent minus and plus
<SYNC Start=13324960><P class='en'>&nbsp;
<SYNC Start=13324960><P class='en'>and the double see here even is much bigger
324 to 308 minus plus and the car this one
<SYNC Start=13325960><P class='en'>&nbsp;
<SYNC Start=13325960><P class='en'>is unsigned. So, this is why there is no minus
which is also why the size here is 65,000
<SYNC Start=13326960><P class='en'>&nbsp;
<SYNC Start=13326960><P class='en'>something is the double size down to the short
because the short has the same space, but
<SYNC Start=13327960><P class='en'>&nbsp;
<SYNC Start=13327960><P class='en'>it needs to have it in a signed form with
a minus and a plus. So this is why here we
<SYNC Start=13328960><P class='en'>&nbsp;
<SYNC Start=13328960><P class='en'>can store zero to 665,000
<SYNC Start=13329960><P class='en'>&nbsp;
<SYNC Start=13329960><P class='en'>Okay, and car as you have seen before, usually
is used not to store numbers, but characters.
<SYNC Start=13330960><P class='en'>&nbsp;
<SYNC Start=13330960><P class='en'>But if you convert it to an end, you can also
use it to store numbers unsigned from zero
<SYNC Start=13331960><P class='en'>&nbsp;
<SYNC Start=13331960><P class='en'>to 65,000 something okay. I think this is
actually interesting to see all these ranges.
<SYNC Start=13332960><P class='en'>&nbsp;
<SYNC Start=13332960><P class='en'>Okay, so these were the ranges let&#39;s go to
the next. And so, in order to be able by the
<SYNC Start=13333960><P class='en'>&nbsp;
<SYNC Start=13333960><P class='en'>way to show you see here I converted this
two intz and also our This is also interesting
<SYNC Start=13334960><P class='en'>&nbsp;
<SYNC Start=13334960><P class='en'>you see here I used actually the object, the
objects and the These are static values, which
<SYNC Start=13335960><P class='en'>&nbsp;
<SYNC Start=13335960><P class='en'>gives me the min and max value. This is really
handy. When you need those ranges, you can
<SYNC Start=13336960><P class='en'>&nbsp;
<SYNC Start=13336960><P class='en'>just use them out of the box and say min value
max value, because I wouldn&#39;t know them. Yeah,
<SYNC Start=13337960><P class='en'>&nbsp;
<SYNC Start=13337960><P class='en'>directly, I can just look them up. And Java
will tell me then, okay, let&#39;s close this
<SYNC Start=13338960><P class='en'>&nbsp;
<SYNC Start=13338960><P class='en'>now. And go to our next test. Because now,
what I want to show you is actually, you can
<SYNC Start=13339960><P class='en'>&nbsp;
<SYNC Start=13339960><P class='en'>also save your numbers, not only on the base
10, but also on the base to base eight, and
<SYNC Start=13340960><P class='en'>&nbsp;
<SYNC Start=13340960><P class='en'>base 16. So now it depends. I don&#39;t know,
if you had this already in school or university,
<SYNC Start=13341960><P class='en'>&nbsp;
<SYNC Start=13341960><P class='en'>I&#39;m assuming you had, they should be really
easy for you to understand that, for example,
<SYNC Start=13342960><P class='en'>&nbsp;
<SYNC Start=13342960><P class='en'>with the base two, you would store you would
display a number would be displayed differently,
<SYNC Start=13343960><P class='en'>&nbsp;
<SYNC Start=13343960><P class='en'>then with the base 10. If you never heard
of this, then don&#39;t don&#39;t mind this really
<SYNC Start=13344960><P class='en'>&nbsp;
<SYNC Start=13344960><P class='en'>is not so important. I think I never needed
to display the number in one of these formats,
<SYNC Start=13345960><P class='en'>&nbsp;
<SYNC Start=13345960><P class='en'>decimal was always fine to me. I mean, this
is also the way the value will be stored here
<SYNC Start=13346960><P class='en'>&nbsp;
<SYNC Start=13346960><P class='en'>on the left side is always the same, no matter
which bass you use. So this might just be
<SYNC Start=13347960><P class='en'>&nbsp;
<SYNC Start=13347960><P class='en'>used, because you are in a certain domain
and a certain business area where you need,
<SYNC Start=13348960><P class='en'>&nbsp;
<SYNC Start=13348960><P class='en'>for example, the hex. And so you would, for
example, have documentation that speaks of
<SYNC Start=13349960><P class='en'>&nbsp;
<SYNC Start=13349960><P class='en'>a hex value. And so you could have the same
value as you have them in the documentation
<SYNC Start=13350960><P class='en'>&nbsp;
<SYNC Start=13350960><P class='en'>here in your code, which would make it easier
possibly to look at the code. However, this
<SYNC Start=13351960><P class='en'>&nbsp;
<SYNC Start=13351960><P class='en'>has nothing to do with how they&#39;re stored.
I mean, they&#39;re still stored on your computer
<SYNC Start=13352960><P class='en'>&nbsp;
<SYNC Start=13352960><P class='en'>in your memory. And your computer can always
only store them as zeros and ones. So internally,
<SYNC Start=13353960><P class='en'>&nbsp;
<SYNC Start=13353960><P class='en'>no matter what format, you use them internally,
they&#39;re saved always in the same format. And
<SYNC Start=13354960><P class='en'>&nbsp;
<SYNC Start=13354960><P class='en'>by default, they&#39;re also when I print them
out, which I&#39;ll show you in a sec, they will
<SYNC Start=13355960><P class='en'>&nbsp;
<SYNC Start=13355960><P class='en'>also always be printed out on the base of
10 just like a regular number like you know
<SYNC Start=13356960><P class='en'>&nbsp;
<SYNC Start=13356960><P class='en'>them. So this is only a displaying issue in
the code. If you want to display them in the
<SYNC Start=13357960><P class='en'>&nbsp;
<SYNC Start=13357960><P class='en'>binary format, you need specific formatting
options. This will be an episode on its own.
<SYNC Start=13358960><P class='en'>&nbsp;
<SYNC Start=13358960><P class='en'>So I will not go in detail on this. Now. Also,
I think this is not needed in many cases.
<SYNC Start=13359960><P class='en'>&nbsp;
<SYNC Start=13359960><P class='en'>What is also interesting, by the way, I mean,
the space two was introduced with Java seven
<SYNC Start=13360960><P class='en'>&nbsp;
<SYNC Start=13360960><P class='en'>only. So this only recently got added. Speaking
as of 2015, before, you had only the option
<SYNC Start=13361960><P class='en'>&nbsp;
<SYNC Start=13361960><P class='en'>to store, base 10, base eight and base 16.
Now the Edit base two besides to make this
<SYNC Start=13362960><P class='en'>&nbsp;
<SYNC Start=13362960><P class='en'>stuff more readable. I mean, especially with
base two, you will get these long strings
<SYNC Start=13363960><P class='en'>&nbsp;
<SYNC Start=13363960><P class='en'>here of zeros and ones. So that you could
easily read this. And also for something like
<SYNC Start=13364960><P class='en'>&nbsp;
<SYNC Start=13364960><P class='en'>credit card numbers, you can add these underscores
actually as many as ever you want.
<SYNC Start=13365960><P class='en'>&nbsp;
<SYNC Start=13365960><P class='en'>You&#39;re just not allowed to do it at the beginning
of the string and at the end of the string.
<SYNC Start=13366960><P class='en'>&nbsp;
<SYNC Start=13366960><P class='en'>But I mean, I don&#39;t see how this would make
any sense, because this wouldn&#39;t help to read
<SYNC Start=13367960><P class='en'>&nbsp;
<SYNC Start=13367960><P class='en'>it. So this is why you put them here in between,
you can also add more like here. Now the question
<SYNC Start=13368960><P class='en'>&nbsp;
<SYNC Start=13368960><P class='en'>is, is that more readable? In this case? Of
course not. But I think it can be quite helpful,
<SYNC Start=13369960><P class='en'>&nbsp;
<SYNC Start=13369960><P class='en'>especially for something like credit card
numbers for long numbers that you can read
<SYNC Start=13370960><P class='en'>&nbsp;
<SYNC Start=13370960><P class='en'>them more easily, like on the phone talking
to a colleague, and you want to read out the
<SYNC Start=13371960><P class='en'>&nbsp;
<SYNC Start=13371960><P class='en'>number nine you can talk about the blogs makes
it easier. But these underscores again, this
<SYNC Start=13372960><P class='en'>&nbsp;
<SYNC Start=13372960><P class='en'>is just the displaying issue in the code.
The way they are stored is exactly the same
<SYNC Start=13373960><P class='en'>&nbsp;
<SYNC Start=13373960><P class='en'>like before. So now let&#39;s execute the test.
So I mean, so that this gets printed out,
<SYNC Start=13374960><P class='en'>&nbsp;
<SYNC Start=13374960><P class='en'>and we can have a look at it. Okay, so here
you see the first one ob this just indicates
<SYNC Start=13375960><P class='en'>&nbsp;
<SYNC Start=13375960><P class='en'>I&#39;m storing the number in binary. The number
is given in a binary format. So this is just
<SYNC Start=13376960><P class='en'>&nbsp;
<SYNC Start=13376960><P class='en'>the zero. You can use the capital and a lowercase
it&#39;s supposed to same. So this one is an apple
<SYNC Start=13377960><P class='en'>&nbsp;
<SYNC Start=13377960><P class='en'>On this long thing here, so ob four is binary
format, and undo redo Do you do all this,
<SYNC Start=13378960><P class='en'>&nbsp;
<SYNC Start=13378960><P class='en'>you can use your calculator and calculate
it. And in the end, you will see this is this
<SYNC Start=13379960><P class='en'>&nbsp;
<SYNC Start=13379960><P class='en'>number in decimal format.
<SYNC Start=13380960><P class='en'>&nbsp;
<SYNC Start=13380960><P class='en'>Or K.
<SYNC Start=13381960><P class='en'>&nbsp;
<SYNC Start=13381960><P class='en'>By the way, of course, just shortly, binary
format means you can&#39;t, for example, use a
<SYNC Start=13382960><P class='en'>&nbsp;
<SYNC Start=13382960><P class='en'>three, this will give you an error, integer
number two large, because now we are in binary
<SYNC Start=13383960><P class='en'>&nbsp;
<SYNC Start=13383960><P class='en'>format, indicated by the B and zero here with
the base eight, and scroll down. It, it started
<SYNC Start=13384960><P class='en'>&nbsp;
<SYNC Start=13384960><P class='en'>with a zero only. So zero and seven means
this is a seven now, but 010 is actually the
<SYNC Start=13385960><P class='en'>&nbsp;
<SYNC Start=13385960><P class='en'>eight in the on the base of eight. As I said,
if you know it from like school or university,
<SYNC Start=13386960><P class='en'>&nbsp;
<SYNC Start=13386960><P class='en'>you will understand what I&#39;m talking about.
If not, doesn&#39;t matter. Not important. Yeah,
<SYNC Start=13387960><P class='en'>&nbsp;
<SYNC Start=13387960><P class='en'>you will hardly ever need it. Let&#39;s have a
look at it. So as I said, this is the seven,
<SYNC Start=13388960><P class='en'>&nbsp;
<SYNC Start=13388960><P class='en'>this is the eight. And this is some large
number. So these underscores are not displayed
<SYNC Start=13389960><P class='en'>&nbsp;
<SYNC Start=13389960><P class='en'>in here. This is just to help so that it&#39;s
more readable in the code. And the base 16
<SYNC Start=13390960><P class='en'>&nbsp;
<SYNC Start=13390960><P class='en'>hex code is started with zero and x. And then
the zero is 01. The F, you know in Latin,
<SYNC Start=13391960><P class='en'>&nbsp;
<SYNC Start=13391960><P class='en'>no, I think our numbers are not Latin, their
Arabic numbers. And these Arabic numbers,
<SYNC Start=13392960><P class='en'>&nbsp;
<SYNC Start=13392960><P class='en'>they are based on the base 10. So nine is
the last number. And when you want to say
<SYNC Start=13393960><P class='en'>&nbsp;
<SYNC Start=13393960><P class='en'>10 you need one zero, while on the hex, you
don&#39;t have any more Arabic numbers. So therefore
<SYNC Start=13394960><P class='en'>&nbsp;
<SYNC Start=13394960><P class='en'>they used ABCDE, F for 10 to 16. So the F
is actually the 16. Let&#39;s execute this. Well,
<SYNC Start=13395960><P class='en'>&nbsp;
<SYNC Start=13395960><P class='en'>I was lying to you. It&#39;s the 15 in this case,
because we start with the zero. No, yeah,
<SYNC Start=13396960><P class='en'>&nbsp;
<SYNC Start=13396960><P class='en'>it&#39;s the 15. Because the 16 again, would be
one zero. Okay, yeah. can get really easy,
<SYNC Start=13397960><P class='en'>&nbsp;
<SYNC Start=13397960><P class='en'>confusing. Sorry. So anyway,
<SYNC Start=13398960><P class='en'>&nbsp;
<SYNC Start=13398960><P class='en'>I mean,
<SYNC Start=13399960><P class='en'>&nbsp;
<SYNC Start=13399960><P class='en'>I think it&#39;s not so important. It&#39;s just interesting
to show off. I mean, like in a job interview,
<SYNC Start=13400960><P class='en'>&nbsp;
<SYNC Start=13400960><P class='en'>I think you really should know, Java inside
out. And so I think you should know that this
<SYNC Start=13401960><P class='en'>&nbsp;
<SYNC Start=13401960><P class='en'>is possible. The question if you personally
will use it, because you personally in your
<SYNC Start=13402960><P class='en'>&nbsp;
<SYNC Start=13402960><P class='en'>project will need it. I don&#39;t know, depends,
maybe you need it. But if you need it, it&#39;s
<SYNC Start=13403960><P class='en'>&nbsp;
<SYNC Start=13403960><P class='en'>here to be used. Okay. So now, I think really
did an in depth view on all these small topics.
<SYNC Start=13404960><P class='en'>&nbsp;
<SYNC Start=13404960><P class='en'>And I think this is really now a good base
to talk about hashCode and equals. Going to
<SYNC Start=13405960><P class='en'>&nbsp;
<SYNC Start=13405960><P class='en'>talk about the two methods equals, and hashCode.
This tutorial actually concludes my presentation
<SYNC Start=13406960><P class='en'>&nbsp;
<SYNC Start=13406960><P class='en'>of all the methods of the Java Lang object
class, equals and hashCode both follow a contract
<SYNC Start=13407960><P class='en'>&nbsp;
<SYNC Start=13407960><P class='en'>that ties them closely together, which is
also why I&#39;m talking about both methods in
<SYNC Start=13408960><P class='en'>&nbsp;
<SYNC Start=13408960><P class='en'>just one episode. Knowing all the details
about these two methods, will make you a better
<SYNC Start=13409960><P class='en'>&nbsp;
<SYNC Start=13409960><P class='en'>programmer today. So get yourself some popcorn,
and listen carefully. So let&#39;s start with
<SYNC Start=13410960><P class='en'>&nbsp;
<SYNC Start=13410960><P class='en'>the equals method. What does it do? What&#39;s
it actually useful for? the equals method
<SYNC Start=13411960><P class='en'>&nbsp;
<SYNC Start=13411960><P class='en'>is used to compare two objects for equality,
similar to the equals operator, which is used
<SYNC Start=13412960><P class='en'>&nbsp;
<SYNC Start=13412960><P class='en'>for primitive values. But before I&#39;m going
into much more detail, let&#39;s first jump into
<SYNC Start=13413960><P class='en'>&nbsp;
<SYNC Start=13413960><P class='en'>my ID and see this in action. Now in my ID,
let&#39;s first of all, see, what do we need the
<SYNC Start=13414960><P class='en'>&nbsp;
<SYNC Start=13414960><P class='en'>equals method for anyway, because so far,
we happily used the equal equal operator,
<SYNC Start=13415960><P class='en'>&nbsp;
<SYNC Start=13415960><P class='en'>and this was working. Let&#39;s see this again,
with two primitive values, I equals four,
<SYNC Start=13416960><P class='en'>&nbsp;
<SYNC Start=13416960><P class='en'>and J equals four. So now I assert, with the
equals operator that they&#39;re both equal. And
<SYNC Start=13417960><P class='en'>&nbsp;
<SYNC Start=13417960><P class='en'>we get the green bar. Old tests passed, everything
is fine. So i equals to J. Now let&#39;s do the
<SYNC Start=13418960><P class='en'>&nbsp;
<SYNC Start=13418960><P class='en'>same thing with strings. Here we have a constant
value of Hello, and another constant value
<SYNC Start=13419960><P class='en'>&nbsp;
<SYNC Start=13419960><P class='en'>Hello. And each has assigned to its own string,
reference variable. Now, we all Want to compare
<SYNC Start=13420960><P class='en'>&nbsp;
<SYNC Start=13420960><P class='en'>these two strings with the equal operator?
Let&#39;s try this. And Ted Ah, this is also working.
<SYNC Start=13421960><P class='en'>&nbsp;
<SYNC Start=13421960><P class='en'>And I told you a string is an object. So as
this is working, it seems we don&#39;t need the
<SYNC Start=13422960><P class='en'>&nbsp;
<SYNC Start=13422960><P class='en'>equals method at all. Well, with a string,
it&#39;s a bit tricky, actually. Because with
<SYNC Start=13423960><P class='en'>&nbsp;
<SYNC Start=13423960><P class='en'>a string, there is some optimization going
on in the background for constant values,
<SYNC Start=13424960><P class='en'>&nbsp;
<SYNC Start=13424960><P class='en'>because for this constant value, there&#39;s actually
only one and both variables, they both point
<SYNC Start=13425960><P class='en'>&nbsp;
<SYNC Start=13425960><P class='en'>to the same object in memory. The variable
is stored in a memory area called stack, the
<SYNC Start=13426960><P class='en'>&nbsp;
<SYNC Start=13426960><P class='en'>object is stored in a memory area called heap.
And there&#39;s only one, but things get quite
<SYNC Start=13427960><P class='en'>&nbsp;
<SYNC Start=13427960><P class='en'>differently. As soon as I add a new string
variable, and always say, string hello, three
<SYNC Start=13428960><P class='en'>&nbsp;
<SYNC Start=13428960><P class='en'>is only age. And then I say at runtime, hello,
three equals two, hello, three, plus, concatenate
<SYNC Start=13429960><P class='en'>&nbsp;
<SYNC Start=13429960><P class='en'>ello to it, which will be Hello, at runtime.
And just to be sure, let&#39;s also print this
<SYNC Start=13430960><P class='en'>&nbsp;
<SYNC Start=13430960><P class='en'>that we can see there is really Hello. In
the variable, hello, three. And then let&#39;s
<SYNC Start=13431960><P class='en'>&nbsp;
<SYNC Start=13431960><P class='en'>assert, hello, one, equal operator Hello,
three. And this is not working, we get the
<SYNC Start=13432960><P class='en'>&nbsp;
<SYNC Start=13432960><P class='en'>red bar, nasty, nasty. So now they&#39;re not
equal. But here you can see it printed out
<SYNC Start=13433960><P class='en'>&nbsp;
<SYNC Start=13433960><P class='en'>Hello. So from our expectation it should have
been equal. So this is something really tricky
<SYNC Start=13434960><P class='en'>&nbsp;
<SYNC Start=13434960><P class='en'>with string.
<SYNC Start=13435960><P class='en'>&nbsp;
<SYNC Start=13435960><P class='en'>And ensured you should not use equal operator
on objects, also not on strings. Instead,
<SYNC Start=13436960><P class='en'>&nbsp;
<SYNC Start=13436960><P class='en'>for strings, there is the equals method. Let&#39;s
try this. Hello, one equals Hello, three.
<SYNC Start=13437960><P class='en'>&nbsp;
<SYNC Start=13437960><P class='en'>This works, it seems like using that method,
they&#39;re both equal. Now, let&#39;s have a look
<SYNC Start=13438960><P class='en'>&nbsp;
<SYNC Start=13438960><P class='en'>actually at the method. Here we are clustering.
And there is a method equals operating on
<SYNC Start=13439960><P class='en'>&nbsp;
<SYNC Start=13439960><P class='en'>an object. It says things like if this equals
to the object given return true. So if it&#39;s
<SYNC Start=13440960><P class='en'>&nbsp;
<SYNC Start=13440960><P class='en'>the same reference, if it&#39;s the same object,
this is actually a performance optimization.
<SYNC Start=13441960><P class='en'>&nbsp;
<SYNC Start=13441960><P class='en'>Now it checks that the object is actually
a string. This is achieved by the instance
<SYNC Start=13442960><P class='en'>&nbsp;
<SYNC Start=13442960><P class='en'>of operator so that we can safely cast the
object to a string. And so that we can compare
<SYNC Start=13443960><P class='en'>&nbsp;
<SYNC Start=13443960><P class='en'>both strings. Interesting thing about instance,
of By the way, which not many people, many
<SYNC Start=13444960><P class='en'>&nbsp;
<SYNC Start=13444960><P class='en'>developers know, or at least not all, yet.
This also includes a check for now, if an
<SYNC Start=13445960><P class='en'>&nbsp;
<SYNC Start=13445960><P class='en'>object is now this will never be a string
will never be true and will return false.
<SYNC Start=13446960><P class='en'>&nbsp;
<SYNC Start=13446960><P class='en'>So anyway, without going into further details,
there&#39;s this while loop. And this compares
<SYNC Start=13447960><P class='en'>&nbsp;
<SYNC Start=13447960><P class='en'>character by character of both strings. And
only if they&#39;re completely equal, it will
<SYNC Start=13448960><P class='en'>&nbsp;
<SYNC Start=13448960><P class='en'>return true. So this is how equals was implemented
in the class string. But actually, I told
<SYNC Start=13449960><P class='en'>&nbsp;
<SYNC Start=13449960><P class='en'>you, the equals method is a method from the
class object. And yes, it is. Well, it turns
<SYNC Start=13450960><P class='en'>&nbsp;
<SYNC Start=13450960><P class='en'>out string is also a subclass of object and
the string class overrode the equals method
<SYNC Start=13451960><P class='en'>&nbsp;
<SYNC Start=13451960><P class='en'>here. So then it works on strings as expected.
Okay. So it seems like for strings we can
<SYNC Start=13452960><P class='en'>&nbsp;
<SYNC Start=13452960><P class='en'>happily use equals, so that we know that a
string like hello one and hello three is equal.
<SYNC Start=13453960><P class='en'>&nbsp;
<SYNC Start=13453960><P class='en'>Now, how are things with classes that we implement
ourselves? Like here I have created a class
<SYNC Start=13454960><P class='en'>&nbsp;
<SYNC Start=13454960><P class='en'>car with owner Marcos. It is a Porsche and
it is it has the color silver So it seems
<SYNC Start=13455960><P class='en'>&nbsp;
<SYNC Start=13455960><P class='en'>like it has both instances have exactly the
same attributes. So I would expect them to
<SYNC Start=13456960><P class='en'>&nbsp;
<SYNC Start=13456960><P class='en'>be the same car. Now let&#39;s first of all, try
it with the equal operator, like before. And
<SYNC Start=13457960><P class='en'>&nbsp;
<SYNC Start=13457960><P class='en'>this is false. It&#39;s not working test failed.
Well, of course, because we have two different
<SYNC Start=13458960><P class='en'>&nbsp;
<SYNC Start=13458960><P class='en'>instances here. Let&#39;s try the positive case.
portion one, equal operator, my Porsche one
<SYNC Start=13459960><P class='en'>&nbsp;
<SYNC Start=13459960><P class='en'>again, comparing it to itself. So yes, this
is working, of course. But it seems like for
<SYNC Start=13460960><P class='en'>&nbsp;
<SYNC Start=13460960><P class='en'>to be able to compare Porsche one and Porsche
to we again need to use the equals method.
<SYNC Start=13461960><P class='en'>&nbsp;
<SYNC Start=13461960><P class='en'>Let&#39;s do this now. For sheet one. Oh, let&#39;s
first of all, I want to push it to here. But
<SYNC Start=13462960><P class='en'>&nbsp;
<SYNC Start=13462960><P class='en'>let&#39;s also do this, my portion one equals
my portion one,
<SYNC Start=13463960><P class='en'>&nbsp;
<SYNC Start=13463960><P class='en'>I would expect that to be true. And yes, it
is true. My Porsche one, so it is equal to
<SYNC Start=13464960><P class='en'>&nbsp;
<SYNC Start=13464960><P class='en'>itself. Now, let&#39;s compare my Porsche one
to my Porsche e two. And let&#39;s see if this
<SYNC Start=13465960><P class='en'>&nbsp;
<SYNC Start=13465960><P class='en'>works. Huh,
<SYNC Start=13466960><P class='en'>&nbsp;
<SYNC Start=13466960><P class='en'>it&#39;s not working. We have the nasty red bar.
This was so nicely working with a string,
<SYNC Start=13467960><P class='en'>&nbsp;
<SYNC Start=13467960><P class='en'>why is it not working with our car? Let&#39;s
jump to this method again. And you see, we&#39;re
<SYNC Start=13468960><P class='en'>&nbsp;
<SYNC Start=13468960><P class='en'>in the class object. Because in our car class,
we have not overwritten the equals method.
<SYNC Start=13469960><P class='en'>&nbsp;
<SYNC Start=13469960><P class='en'>So what happens is, the original method of
the class object is used. And as you can see
<SYNC Start=13470960><P class='en'>&nbsp;
<SYNC Start=13470960><P class='en'>here, internally, what happens is, we compare
this which is the object itself, in this case,
<SYNC Start=13471960><P class='en'>&nbsp;
<SYNC Start=13471960><P class='en'>my pushy one, we compare it using the equal
operator to the object that is coming into
<SYNC Start=13472960><P class='en'>&nbsp;
<SYNC Start=13472960><P class='en'>the method, which was pushy to. And this compares
only the reference variables and not the objects.
<SYNC Start=13473960><P class='en'>&nbsp;
<SYNC Start=13473960><P class='en'>So this is false, because we have two different
reference variables.
<SYNC Start=13474960><P class='en'>&nbsp;
<SYNC Start=13474960><P class='en'>What by the way, is also possible. To make
this true again, we could assign my portion
<SYNC Start=13475960><P class='en'>&nbsp;
<SYNC Start=13475960><P class='en'>to the reference variable of my portion one,
which would mean this object is somewhere
<SYNC Start=13476960><P class='en'>&nbsp;
<SYNC Start=13476960><P class='en'>in memory, no variable is assigned to it.
And there is this one object
<SYNC Start=13477960><P class='en'>&nbsp;
<SYNC Start=13477960><P class='en'>here in this line, and both variables, point
to it. Let&#39;s try this. And see if this works.
<SYNC Start=13478960><P class='en'>&nbsp;
<SYNC Start=13478960><P class='en'>Because now actually, we only compare the
same object with each other. Like here. This
<SYNC Start=13479960><P class='en'>&nbsp;
<SYNC Start=13479960><P class='en'>compares the reference variables, which now
have the same value. So this would be working.
<SYNC Start=13480960><P class='en'>&nbsp;
<SYNC Start=13480960><P class='en'>But this is not what we want. So let&#39;s remove
that we really want to compare both objects.
<SYNC Start=13481960><P class='en'>&nbsp;
<SYNC Start=13481960><P class='en'>We want to compare this one with that one.
Okay, so let&#39;s have a look at the class car.
<SYNC Start=13482960><P class='en'>&nbsp;
<SYNC Start=13482960><P class='en'>This is a small class I wrote. And it just
has a constructor and these attributes for
<SYNC Start=13483960><P class='en'>&nbsp;
<SYNC Start=13483960><P class='en'>now. And there is no equals method overwritten.
So this is what we have to do. Public Boolean
<SYNC Start=13484960><P class='en'>&nbsp;
<SYNC Start=13484960><P class='en'>equals now, I want to compare a car car. No,
this you cannot do in the class object. There
<SYNC Start=13485960><P class='en'>&nbsp;
<SYNC Start=13485960><P class='en'>is object. So we have to say object here.
And then later on, we have to cast it to a
<SYNC Start=13486960><P class='en'>&nbsp;
<SYNC Start=13486960><P class='en'>car, like we saw on the class string.
<SYNC Start=13487960><P class='en'>&nbsp;
<SYNC Start=13487960><P class='en'>And then it&#39;s always good to add the override
annotation so that we make sure we have properly
<SYNC Start=13488960><P class='en'>&nbsp;
<SYNC Start=13488960><P class='en'>overwritten the method. Now, I mean, this
is not a true implementation. I always return
<SYNC Start=13489960><P class='en'>&nbsp;
<SYNC Start=13489960><P class='en'>false, just to see that when I&#39;m in my car
test, not jump there. See, it jumps to me.
<SYNC Start=13490960><P class='en'>&nbsp;
<SYNC Start=13490960><P class='en'>I overridden method. Now, of course, when
this always returns false, this will also
<SYNC Start=13491960><P class='en'>&nbsp;
<SYNC Start=13491960><P class='en'>not work. So we will have to implement it.
But actually implementing such an equals method
<SYNC Start=13492960><P class='en'>&nbsp;
<SYNC Start=13492960><P class='en'>is not so easy. And we need some more theory
for this before we can continue. So let&#39;s
<SYNC Start=13493960><P class='en'>&nbsp;
<SYNC Start=13493960><P class='en'>first of all, jump back to my slides. Before
we are able to implement the equals method,
<SYNC Start=13494960><P class='en'>&nbsp;
<SYNC Start=13494960><P class='en'>we need to come up with a proper design first.
Actually, many developers just skip the design
<SYNC Start=13495960><P class='en'>&nbsp;
<SYNC Start=13495960><P class='en'>phase, and simply click on autogenerate. But
this may lead to severe bugs, or at least
<SYNC Start=13496960><P class='en'>&nbsp;
<SYNC Start=13496960><P class='en'>two sub optimal performance. Let me show you
how you can properly do it. First of all,
<SYNC Start=13497960><P class='en'>&nbsp;
<SYNC Start=13497960><P class='en'>you have to define what it is in your specific
program that makes two car instances equal
<SYNC Start=13498960><P class='en'>&nbsp;
<SYNC Start=13498960><P class='en'>or unequal. In your program, are two cars
equal when they have the same manufacturer,
<SYNC Start=13499960><P class='en'>&nbsp;
<SYNC Start=13499960><P class='en'>maybe when they have the same manufacturer
in color, or the same engine, the same number
<SYNC Start=13500960><P class='en'>&nbsp;
<SYNC Start=13500960><P class='en'>of wheels, the same top speed, the same vehicle
identification number, or when In short, based
<SYNC Start=13501960><P class='en'>&nbsp;
<SYNC Start=13501960><P class='en'>on a knowledge of the business you are working
in, you have to decide which fields are identifying,
<SYNC Start=13502960><P class='en'>&nbsp;
<SYNC Start=13502960><P class='en'>and which fields are redundant, and not helpful
for the equal comparison. Besides for improved
<SYNC Start=13503960><P class='en'>&nbsp;
<SYNC Start=13503960><P class='en'>performance, you need to define in which order
you want to compare the attributes. Are there
<SYNC Start=13504960><P class='en'>&nbsp;
<SYNC Start=13504960><P class='en'>any fields that have a high chance to be unequal?
Are there fields that may be compared faster
<SYNC Start=13505960><P class='en'>&nbsp;
<SYNC Start=13505960><P class='en'>than others? To implement a meaningful equals
method, you must first analyze all these aspects
<SYNC Start=13506960><P class='en'>&nbsp;
<SYNC Start=13506960><P class='en'>in great detail. Let&#39;s go through this process.
With my example. I would assume that the car&#39;s
<SYNC Start=13507960><P class='en'>&nbsp;
<SYNC Start=13507960><P class='en'>top speed relates to the type of engine and
some form. So that seems to be a redundant
<SYNC Start=13508960><P class='en'>&nbsp;
<SYNC Start=13508960><P class='en'>field, that will not be helpful for the equals
implementation. So let&#39;s just remove it. Let&#39;s
<SYNC Start=13509960><P class='en'>&nbsp;
<SYNC Start=13509960><P class='en'>just say the number of wheels is always for
in our specific example. So number of wheels
<SYNC Start=13510960><P class='en'>&nbsp;
<SYNC Start=13510960><P class='en'>would also not help us to differentiate the
car. What about the VIN?
<SYNC Start=13511960><P class='en'>&nbsp;
<SYNC Start=13511960><P class='en'>Well,
<SYNC Start=13512960><P class='en'>&nbsp;
<SYNC Start=13512960><P class='en'>this again depends on the type of program
you want to create. For a public authority
<SYNC Start=13513960><P class='en'>&nbsp;
<SYNC Start=13513960><P class='en'>like the police, this one is probably the
only proper way of identification. But what
<SYNC Start=13514960><P class='en'>&nbsp;
<SYNC Start=13514960><P class='en'>about a program used by the manufacturer itself.
While the car is still being built, and not
<SYNC Start=13515960><P class='en'>&nbsp;
<SYNC Start=13515960><P class='en'>sold yet, I would assume the witness of less
importance. But I personally wouldn&#39;t know
<SYNC Start=13516960><P class='en'>&nbsp;
<SYNC Start=13516960><P class='en'>that in detail. This is what you will have
to clarify with the business people of your
<SYNC Start=13517960><P class='en'>&nbsp;
<SYNC Start=13517960><P class='en'>company or your department. Based on their
knowledge, you have to select which attributes
<SYNC Start=13518960><P class='en'>&nbsp;
<SYNC Start=13518960><P class='en'>to compare in which order. In my artificial
example here, I&#39;m the developer as well as
<SYNC Start=13519960><P class='en'>&nbsp;
<SYNC Start=13519960><P class='en'>the business analyst. So for my example, I
just arbitrarily define that two cars with
<SYNC Start=13520960><P class='en'>&nbsp;
<SYNC Start=13520960><P class='en'>different wind numbers can be seen as equal.
Therefore, I will not include this field in
<SYNC Start=13521960><P class='en'>&nbsp;
<SYNC Start=13521960><P class='en'>my equals comparison later on. Now, before
you think that&#39;s it, I&#39;m sorry, there&#39;s actually
<SYNC Start=13522960><P class='en'>&nbsp;
<SYNC Start=13522960><P class='en'>some more theory to cover. In the introduction,
I already told you that there is a contract
<SYNC Start=13523960><P class='en'>&nbsp;
<SYNC Start=13523960><P class='en'>of equals and hashCode we have to fulfill.
First of all, there are five conditions, our
<SYNC Start=13524960><P class='en'>&nbsp;
<SYNC Start=13524960><P class='en'>equals implementation has to comply with,
believe me, it looks much more scary than
<SYNC Start=13525960><P class='en'>&nbsp;
<SYNC Start=13525960><P class='en'>it actually is. Let&#39;s go through each of them
slowly. reflexivity. An object must be equal
<SYNC Start=13526960><P class='en'>&nbsp;
<SYNC Start=13526960><P class='en'>to itself, so that when I call my old car
equals my old car, it returns true. I think
<SYNC Start=13527960><P class='en'>&nbsp;
<SYNC Start=13527960><P class='en'>this makes sense and should be easy to understand.
symmetry to objects must agree whether or
<SYNC Start=13528960><P class='en'>&nbsp;
<SYNC Start=13528960><P class='en'>not they are equal. If my old car equals some
other car, then some other car equals my old
<SYNC Start=13529960><P class='en'>&nbsp;
<SYNC Start=13529960><P class='en'>car must also return true This sounds obvious
and very simple, when in fact, it is not such
<SYNC Start=13530960><P class='en'>&nbsp;
<SYNC Start=13530960><P class='en'>a simple condition when it comes to inheritance.
If you have a car class and a BMW class, which
<SYNC Start=13531960><P class='en'>&nbsp;
<SYNC Start=13531960><P class='en'>is extending the car class, it could happen
that your BMW is equal to a car. But the same
<SYNC Start=13532960><P class='en'>&nbsp;
<SYNC Start=13532960><P class='en'>car is not equal to the BMW is every BMW is
a car. But not every car is a BMW. So you
<SYNC Start=13533960><P class='en'>&nbsp;
<SYNC Start=13533960><P class='en'>see, the symmetry rule can actually lead to
some nasty problems. There are quite a few
<SYNC Start=13534960><P class='en'>&nbsp;
<SYNC Start=13534960><P class='en'>interesting articles online discussing potential
symmetry issues of the equals method. cover
<SYNC Start=13535960><P class='en'>&nbsp;
<SYNC Start=13535960><P class='en'>each contract condition with a dedicated unit
test to make sure your class is fully compliant
<SYNC Start=13536960><P class='en'>&nbsp;
<SYNC Start=13536960><P class='en'>with a contract. Our next condition is transitivity.
If one object is equal to our second, and
<SYNC Start=13537960><P class='en'>&nbsp;
<SYNC Start=13537960><P class='en'>a second is equal to a third, then the first
must be equal to the third again. This rule
<SYNC Start=13538960><P class='en'>&nbsp;
<SYNC Start=13538960><P class='en'>sounds much more complicated than it actually
is. If object A is equal to object B, and
<SYNC Start=13539960><P class='en'>&nbsp;
<SYNC Start=13539960><P class='en'>object b is equal to object C, they should
all be equal to each other so that C is also
<SYNC Start=13540960><P class='en'>&nbsp;
<SYNC Start=13540960><P class='en'>equal to a consistency. If two objects are
equal, they must remain equal for all time,
<SYNC Start=13541960><P class='en'>&nbsp;
<SYNC Start=13541960><P class='en'>unless one of them is changed. So when you
repeatedly compare the same two objects with
<SYNC Start=13542960><P class='en'>&nbsp;
<SYNC Start=13542960><P class='en'>a equals method, it should always return the
same result. In other words, calling the equals
<SYNC Start=13543960><P class='en'>&nbsp;
<SYNC Start=13543960><P class='en'>method should not alter the object in any
way. The last rule model returns false is
<SYNC Start=13544960><P class='en'>&nbsp;
<SYNC Start=13544960><P class='en'>what Josh Bloch calls nonlocality. When knowledge
is given as a parameter to any equals method,
<SYNC Start=13545960><P class='en'>&nbsp;
<SYNC Start=13545960><P class='en'>they should always return false and never
throw a null pointer exception. So now, you
<SYNC Start=13546960><P class='en'>&nbsp;
<SYNC Start=13546960><P class='en'>know quite a bit about the equals method.
But what is the hashCode method actually useful
<SYNC Start=13547960><P class='en'>&nbsp;
<SYNC Start=13547960><P class='en'>for? For processing similar objects are usually
put into a collection. Such a collection in
<SYNC Start=13548960><P class='en'>&nbsp;
<SYNC Start=13548960><P class='en'>Java is like a more powerful array, or an
array on steroids, as I often call it.
<SYNC Start=13549960><P class='en'>&nbsp;
<SYNC Start=13549960><P class='en'>Besides other things, it allows you to look
up objects not only based on their index position,
<SYNC Start=13550960><P class='en'>&nbsp;
<SYNC Start=13550960><P class='en'>but also based on their specific values. This
is where the equals method comes into play.
<SYNC Start=13551960><P class='en'>&nbsp;
<SYNC Start=13551960><P class='en'>To speed up this lookup process, the Java
creators added specific hash based containers
<SYNC Start=13552960><P class='en'>&nbsp;
<SYNC Start=13552960><P class='en'>that will use the hash value as a grouping
mechanism to reduce the number of equal comparisons
<SYNC Start=13553960><P class='en'>&nbsp;
<SYNC Start=13553960><P class='en'>needed. In the optimal case, each object that
is considered unequal by the equal method
<SYNC Start=13554960><P class='en'>&nbsp;
<SYNC Start=13554960><P class='en'>will also return a different hash code. This
hash code is used to group the objects in
<SYNC Start=13555960><P class='en'>&nbsp;
<SYNC Start=13555960><P class='en'>so called buckets. Now, in this optimal case,
you will be able to find each object simply
<SYNC Start=13556960><P class='en'>&nbsp;
<SYNC Start=13556960><P class='en'>by a lookup based on its hash value. However,
there may also be something called hash collisions,
<SYNC Start=13557960><P class='en'>&nbsp;
<SYNC Start=13557960><P class='en'>where two unequal objects will share the same
hash code, in which case they end up in the
<SYNC Start=13558960><P class='en'>&nbsp;
<SYNC Start=13558960><P class='en'>same bucket. Now, if I&#39;m looking for that
scar, I have to look up the correct bucket
<SYNC Start=13559960><P class='en'>&nbsp;
<SYNC Start=13559960><P class='en'>based on the hash code minus 391. That car
will return. However, as there is a hash collision,
<SYNC Start=13560960><P class='en'>&nbsp;
<SYNC Start=13560960><P class='en'>I will on top have to do an equals comparison
on a list of two cars in this case, illegal
<SYNC Start=13561960><P class='en'>&nbsp;
<SYNC Start=13561960><P class='en'>but inadmissible bad performing hash code
implementation could statically returned 42
<SYNC Start=13562960><P class='en'>&nbsp;
<SYNC Start=13562960><P class='en'>for all objects. In this case, however, the
whole hashCode logic would not help at all.
<SYNC Start=13563960><P class='en'>&nbsp;
<SYNC Start=13563960><P class='en'>In the end, you would have to do an equals
comparison on the entire list of cars just
<SYNC Start=13564960><P class='en'>&nbsp;
<SYNC Start=13564960><P class='en'>as if the hashing logic had never existed.
Okay. Now that I have talked about the general
<SYNC Start=13565960><P class='en'>&nbsp;
<SYNC Start=13565960><P class='en'>idea of the hashCode method, I have to further
tell you about the contract that the hashCode
<SYNC Start=13566960><P class='en'>&nbsp;
<SYNC Start=13566960><P class='en'>method has to fulfill. The first condition
that has to be fulfilled by the hashCode method
<SYNC Start=13567960><P class='en'>&nbsp;
<SYNC Start=13567960><P class='en'>is for any two objects return same hash codes
when equals returns true. To achieve this,
<SYNC Start=13568960><P class='en'>&nbsp;
<SYNC Start=13568960><P class='en'>use the same idea Define attributes for both
methods in the same order. Don&#39;t worry too
<SYNC Start=13569960><P class='en'>&nbsp;
<SYNC Start=13569960><P class='en'>much. Now, if you don&#39;t fully understand what
I mean. As soon as I&#39;m finished introducing
<SYNC Start=13570960><P class='en'>&nbsp;
<SYNC Start=13570960><P class='en'>you to the hashCode contract, I will jump
back in my ID and show you a practical example.
<SYNC Start=13571960><P class='en'>&nbsp;
<SYNC Start=13571960><P class='en'>When hashCode is invoked more than once on
the same object, it must consistently return
<SYNC Start=13572960><P class='en'>&nbsp;
<SYNC Start=13572960><P class='en'>the same int value as long as the object is
not changed. This role is similar to the equals
<SYNC Start=13573960><P class='en'>&nbsp;
<SYNC Start=13573960><P class='en'>consistency rule, I introduced to before both
equals and hashCode methods must return consistent
<SYNC Start=13574960><P class='en'>&nbsp;
<SYNC Start=13574960><P class='en'>results. To fulfill this contract, you should
override hashCode whenever you override equals,
<SYNC Start=13575960><P class='en'>&nbsp;
<SYNC Start=13575960><P class='en'>and vice versa. Also, when you add or remove
attributes from your class, you will most
<SYNC Start=13576960><P class='en'>&nbsp;
<SYNC Start=13576960><P class='en'>probably also have to adjust your equals and
hashCode methods. Last but not least, aim
<SYNC Start=13577960><P class='en'>&nbsp;
<SYNC Start=13577960><P class='en'>to return different hash codes when equals
returns false. This is not a hard and fast
<SYNC Start=13578960><P class='en'>&nbsp;
<SYNC Start=13578960><P class='en'>rule, but it will improve the performance
of your program by minimizing the number of
<SYNC Start=13579960><P class='en'>&nbsp;
<SYNC Start=13579960><P class='en'>hash collisions. to the extreme, the hash
code contract would allow to statically return
<SYNC Start=13580960><P class='en'>&nbsp;
<SYNC Start=13580960><P class='en'>42 for all objects, as Josh block states in
his book Effective Java, however, this could
<SYNC Start=13581960><P class='en'>&nbsp;
<SYNC Start=13581960><P class='en'>result in quadratic rather than linear execution
time, and therefore, could be the difference
<SYNC Start=13582960><P class='en'>&nbsp;
<SYNC Start=13582960><P class='en'>between working and not working. Actually,
the hashCode method is a rather complicated
<SYNC Start=13583960><P class='en'>&nbsp;
<SYNC Start=13583960><P class='en'>beast, I couldn&#39;t practically fit in all the
details without risking that you would fall
<SYNC Start=13584960><P class='en'>&nbsp;
<SYNC Start=13584960><P class='en'>asleep. Therefore, I have done a follow up
tutorial, that will give you an in depth view
<SYNC Start=13585960><P class='en'>&nbsp;
<SYNC Start=13585960><P class='en'>on the hashCode method, which you will need
to understand to become an expert in Java
<SYNC Start=13586960><P class='en'>&nbsp;
<SYNC Start=13586960><P class='en'>programming. Below this video, there&#39;s a link,
you can click to watch my follow up tutorial
<SYNC Start=13587960><P class='en'>&nbsp;
<SYNC Start=13587960><P class='en'>for the hashCode method. For now, that&#39;s all
the theory, you need to be able to implement
<SYNC Start=13588960><P class='en'>&nbsp;
<SYNC Start=13588960><P class='en'>your own hashCode and equals methods. to round
up this topic, let&#39;s jump back into my ID
<SYNC Start=13589960><P class='en'>&nbsp;
<SYNC Start=13589960><P class='en'>to show you some practical examples of hashCode
and equals methods. So back to my ID II, you
<SYNC Start=13590960><P class='en'>&nbsp;
<SYNC Start=13590960><P class='en'>can see I&#39;ve implemented both equals, and
hashCode based on the fields manufacturer,
<SYNC Start=13591960><P class='en'>&nbsp;
<SYNC Start=13591960><P class='en'>engine, and color, also here and hashCode,
manufacturer, engine, and color. So I&#39;ve implemented
<SYNC Start=13592960><P class='en'>&nbsp;
<SYNC Start=13592960><P class='en'>them based on the decisions I made during
the simulated design phase that I did during
<SYNC Start=13593960><P class='en'>&nbsp;
<SYNC Start=13593960><P class='en'>the theory session. So the car clause has
fields like Vehicle Identification Number,
<SYNC Start=13594960><P class='en'>&nbsp;
<SYNC Start=13594960><P class='en'>Manufacturer, engine, color, and number of
wheels. But in the design phase, I decided
<SYNC Start=13595960><P class='en'>&nbsp;
<SYNC Start=13595960><P class='en'>that number of wheels and Vehicle Identification
Number are not helpful for the way I want
<SYNC Start=13596960><P class='en'>&nbsp;
<SYNC Start=13596960><P class='en'>to compare a car. Of course, this is totally
arbitrary. So this is not how you would do
<SYNC Start=13597960><P class='en'>&nbsp;
<SYNC Start=13597960><P class='en'>it. I really can&#39;t stress that enough. In
your case, in reality, you have to talk to
<SYNC Start=13598960><P class='en'>&nbsp;
<SYNC Start=13598960><P class='en'>the business people and find out what is important
and what is not. Also totally arbitrary is
<SYNC Start=13599960><P class='en'>&nbsp;
<SYNC Start=13599960><P class='en'>the order that I&#39;ve chosen. I just thought
about it. And I thought that while there are
<SYNC Start=13600960><P class='en'>&nbsp;
<SYNC Start=13600960><P class='en'>millions, or however many colors that for
usually for cars, there are not so many colors.
<SYNC Start=13601960><P class='en'>&nbsp;
<SYNC Start=13601960><P class='en'>I think most cars are either black or white,
silver, blue, red. A few might even be green,
<SYNC Start=13602960><P class='en'>&nbsp;
<SYNC Start=13602960><P class='en'>or yellow. But that&#39;s probably it. So I thought
they there are probably more different manufacturers,
<SYNC Start=13603960><P class='en'>&nbsp;
<SYNC Start=13603960><P class='en'>and also more different engines. And I want
the equals method. If I compare two objects
<SYNC Start=13604960><P class='en'>&nbsp;
<SYNC Start=13604960><P class='en'>which are not equal, I want to leave the method
as early as possible, because the earlier
<SYNC Start=13605960><P class='en'>&nbsp;
<SYNC Start=13605960><P class='en'>I leave the method, the faster the entire
code will run. If two instances are equal,
<SYNC Start=13606960><P class='en'>&nbsp;
<SYNC Start=13606960><P class='en'>then usually it has to go till the very end.
So in this case, it doesn&#39;t make a difference.
<SYNC Start=13607960><P class='en'>&nbsp;
<SYNC Start=13607960><P class='en'>But it does make a difference if it&#39;s not
equal. If we can leave the method here. So
<SYNC Start=13608960><P class='en'>&nbsp;
<SYNC Start=13608960><P class='en'>for perform performance optimization I have
chosen this order
<SYNC Start=13609960><P class='en'>&nbsp;
<SYNC Start=13609960><P class='en'>on.
<SYNC Start=13610960><P class='en'>&nbsp;
<SYNC Start=13610960><P class='en'>So this is what I would also ask you to do,
think about a good order to improve the performance.
<SYNC Start=13611960><P class='en'>&nbsp;
<SYNC Start=13611960><P class='en'>And if the performance is important, then
you should test it, because you never know
<SYNC Start=13612960><P class='en'>&nbsp;
<SYNC Start=13612960><P class='en'>for sure until you test for the performance.
What is important that the order is the same
<SYNC Start=13613960><P class='en'>&nbsp;
<SYNC Start=13613960><P class='en'>hashCode and equals. And now, we should also
talk about all this stuff here on top. This
<SYNC Start=13614960><P class='en'>&nbsp;
<SYNC Start=13614960><P class='en'>mostly is also a performance optimization,
at least here, this equals object. So, if
<SYNC Start=13615960><P class='en'>&nbsp;
<SYNC Start=13615960><P class='en'>I compare the object to itself, I want to
directly return true, because then the reference
<SYNC Start=13616960><P class='en'>&nbsp;
<SYNC Start=13616960><P class='en'>variable references the same object in memory.
And so I directly know it&#39;s the same object,
<SYNC Start=13617960><P class='en'>&nbsp;
<SYNC Start=13617960><P class='en'>I don&#39;t have to compare all these things.
So, this is why I have this here. If you have
<SYNC Start=13618960><P class='en'>&nbsp;
<SYNC Start=13618960><P class='en'>a specific case, where you know that you will
never ever compare an object to itself, you
<SYNC Start=13619960><P class='en'>&nbsp;
<SYNC Start=13619960><P class='en'>might even leave this if a way. Yeah, this
is the this depends. Generally, this is done,
<SYNC Start=13620960><P class='en'>&nbsp;
<SYNC Start=13620960><P class='en'>because such a check doesn&#39;t also cost a lot,
then this object equals null return false
<SYNC Start=13621960><P class='en'>&nbsp;
<SYNC Start=13621960><P class='en'>is actually very important here. This is the
last rule that we have to fulfill that when
<SYNC Start=13622960><P class='en'>&nbsp;
<SYNC Start=13622960><P class='en'>an object that we compare is now that we always
return false, which is also important because
<SYNC Start=13623960><P class='en'>&nbsp;
<SYNC Start=13623960><P class='en'>otherwise object dot get class would throw
a null pointer exception that this cannot
<SYNC Start=13624960><P class='en'>&nbsp;
<SYNC Start=13624960><P class='en'>happen, because now we are already, we have
already left the equals method with false.
<SYNC Start=13625960><P class='en'>&nbsp;
<SYNC Start=13625960><P class='en'>Okay. And then the third, if check compares
both classes. So that we make sure that the
<SYNC Start=13626960><P class='en'>&nbsp;
<SYNC Start=13626960><P class='en'>object that is coming in to all equals method
is also a car. So that we&#39;re not comparing
<SYNC Start=13627960><P class='en'>&nbsp;
<SYNC Start=13627960><P class='en'>bikes and cars, for example, or cars and apples
or whatever, right? Because otherwise, also,
<SYNC Start=13628960><P class='en'>&nbsp;
<SYNC Start=13628960><P class='en'>this explicit cast to car would also throw
a class cast exception. But now that we have
<SYNC Start=13629960><P class='en'>&nbsp;
<SYNC Start=13629960><P class='en'>made sure that they both have the car class,
we can safely caused the object to a car.
<SYNC Start=13630960><P class='en'>&nbsp;
<SYNC Start=13630960><P class='en'>And now I think this is quite interesting.
Because now I can easily say manufacturer
<SYNC Start=13631960><P class='en'>&nbsp;
<SYNC Start=13631960><P class='en'>equals other dot manufacturer. This field
here is private. But because we are here in
<SYNC Start=13632960><P class='en'>&nbsp;
<SYNC Start=13632960><P class='en'>car, even though that this is another instance,
but it&#39;s also an instance of car, I can directly
<SYNC Start=13633960><P class='en'>&nbsp;
<SYNC Start=13633960><P class='en'>access this private field. So I don&#39;t have
to use any method, I can directly access the
<SYNC Start=13634960><P class='en'>&nbsp;
<SYNC Start=13634960><P class='en'>field. This works and makes the code I think,
much more readable and shorter. So if it&#39;s
<SYNC Start=13635960><P class='en'>&nbsp;
<SYNC Start=13635960><P class='en'>not equal, then I can directly leave the method
and say return false. I do this with all the
<SYNC Start=13636960><P class='en'>&nbsp;
<SYNC Start=13636960><P class='en'>fields. And if I&#39;m here, that I&#39;m sure that
all the three fields are equal. So I do not
<SYNC Start=13637960><P class='en'>&nbsp;
<SYNC Start=13637960><P class='en'>compare number of wheels as well as we equal
identification number, because as I said,
<SYNC Start=13638960><P class='en'>&nbsp;
<SYNC Start=13638960><P class='en'>about them, I don&#39;t care because number of
wheels, in my specific example would always
<SYNC Start=13639960><P class='en'>&nbsp;
<SYNC Start=13639960><P class='en'>be four. So would be the same anyway. And
we equal identification number, that might
<SYNC Start=13640960><P class='en'>&nbsp;
<SYNC Start=13640960><P class='en'>be two different cars. But just like, if I&#39;m
only interested in the price of a car, for
<SYNC Start=13641960><P class='en'>&nbsp;
<SYNC Start=13641960><P class='en'>example, or the look, then I wouldn&#39;t care
that actually, they are physically two different
<SYNC Start=13642960><P class='en'>&nbsp;
<SYNC Start=13642960><P class='en'>cars. I would just say well, this is a BMW
with I don&#39;t know, that kind of engine and
<SYNC Start=13643960><P class='en'>&nbsp;
<SYNC Start=13643960><P class='en'>Lou. So for me, this is the same car. Period.
Yeah. Okay, so that much for the equals method.
<SYNC Start=13644960><P class='en'>&nbsp;
<SYNC Start=13644960><P class='en'>Now the hashCode method. This is actually
very complicated, I&#39;m sorry, and it&#39;s so complicated
<SYNC Start=13645960><P class='en'>&nbsp;
<SYNC Start=13645960><P class='en'>that I&#39;ve decided to do a follow up tutorial,
as said before, which I really recommend you
<SYNC Start=13646960><P class='en'>&nbsp;
<SYNC Start=13646960><P class='en'>to watch. There is a link below this video,
you can click to watch the follow up. So he
<SYNC Start=13647960><P class='en'>&nbsp;
<SYNC Start=13647960><P class='en'>only in short about the hashCode method. The
31 year is a prime number and a prime number
<SYNC Start=13648960><P class='en'>&nbsp;
<SYNC Start=13648960><P class='en'>he is multiplied with always the result. So
this continues to take the hash code of a
<SYNC Start=13649960><P class='en'>&nbsp;
<SYNC Start=13649960><P class='en'>field, which will return some in number
<SYNC Start=13650960><P class='en'>&nbsp;
<SYNC Start=13650960><P class='en'>will edit, starting with one, and then multiply
it with 31. And this for each attribute. The
<SYNC Start=13651960><P class='en'>&nbsp;
<SYNC Start=13651960><P class='en'>reason is this is an optimization to have
less collisions, because I told you about
<SYNC Start=13652960><P class='en'>&nbsp;
<SYNC Start=13652960><P class='en'>the collisions, that this can decrease the
performance. As you see, I&#39;m actually not
<SYNC Start=13653960><P class='en'>&nbsp;
<SYNC Start=13653960><P class='en'>really doing something here, I&#39;m just calling
recursively hashCode for each class. And this
<SYNC Start=13654960><P class='en'>&nbsp;
<SYNC Start=13654960><P class='en'>is why now we should jump in the other classes,
at least, I can show you all the classes,
<SYNC Start=13655960><P class='en'>&nbsp;
<SYNC Start=13655960><P class='en'>but I&#39;ve chosen engine here in this case,
to see how it&#39;s actually hashCode implemented
<SYNC Start=13656960><P class='en'>&nbsp;
<SYNC Start=13656960><P class='en'>in one example. So let&#39;s jump to engine. Okay,
so the equals method is pretty much the same,
<SYNC Start=13657960><P class='en'>&nbsp;
<SYNC Start=13657960><P class='en'>or at least similar. Then in car, the only
difference is here, I added something that
<SYNC Start=13658960><P class='en'>&nbsp;
<SYNC Start=13658960><P class='en'>I called optional field, because I defined
that this optional field could also be now.
<SYNC Start=13659960><P class='en'>&nbsp;
<SYNC Start=13659960><P class='en'>So therefore, my check here for equals has
to be a bit more complicated. Because I have
<SYNC Start=13660960><P class='en'>&nbsp;
<SYNC Start=13660960><P class='en'>to save it&#39;s now then I check if the other
field is also now, if it&#39;s not now, then this
<SYNC Start=13661960><P class='en'>&nbsp;
<SYNC Start=13661960><P class='en'>field is now the other is not so it&#39;s not
equal. And if it&#39;s not now, then I can compare
<SYNC Start=13662960><P class='en'>&nbsp;
<SYNC Start=13662960><P class='en'>both fields. So I&#39;m doing all this again to
prevent another pointer exception. In the
<SYNC Start=13663960><P class='en'>&nbsp;
<SYNC Start=13663960><P class='en'>other case, when I don&#39;t check for now, my
assumption is that, well, this is a primitive
<SYNC Start=13664960><P class='en'>&nbsp;
<SYNC Start=13664960><P class='en'>field, so it can&#39;t be null anyway, but for
car, my assumption was that a car always needs
<SYNC Start=13665960><P class='en'>&nbsp;
<SYNC Start=13665960><P class='en'>a manufacturer, engine and a color. So my
assumption is, those fields will never be
<SYNC Start=13666960><P class='en'>&nbsp;
<SYNC Start=13666960><P class='en'>now, if someone would introduce a bug. And
would forget to set these fields then, of
<SYNC Start=13667960><P class='en'>&nbsp;
<SYNC Start=13667960><P class='en'>course, this could produce a nullpointerexception.
But checking for something that is exceptional.
<SYNC Start=13668960><P class='en'>&nbsp;
<SYNC Start=13668960><P class='en'>This is what I call rocket code. Because it&#39;s
like extra safe code, this is just cluttering
<SYNC Start=13669960><P class='en'>&nbsp;
<SYNC Start=13669960><P class='en'>your code, you have to have certain assumptions,
like saying mighty sign for bits that these
<SYNC Start=13670960><P class='en'>&nbsp;
<SYNC Start=13670960><P class='en'>fields, these fields can never be now. And
so I trust on that. Otherwise, well, the program
<SYNC Start=13671960><P class='en'>&nbsp;
<SYNC Start=13671960><P class='en'>will crash, okay, we have to fix it. But then
the problem is already fixed. And the code
<SYNC Start=13672960><P class='en'>&nbsp;
<SYNC Start=13672960><P class='en'>stays clean. And this is important, because
your code should be really readable and maintainable.
<SYNC Start=13673960><P class='en'>&nbsp;
<SYNC Start=13673960><P class='en'>Okay, so only four fields where you know,
they can be null at these extra null checks.
<SYNC Start=13674960><P class='en'>&nbsp;
<SYNC Start=13674960><P class='en'>Okay. So that much for the equals method,
everything else here should be the same as
<SYNC Start=13675960><P class='en'>&nbsp;
<SYNC Start=13675960><P class='en'>in car. Now for the hashCode method. Here,
you see there is some more stuff going on.
<SYNC Start=13676960><P class='en'>&nbsp;
<SYNC Start=13676960><P class='en'>Because here, I cannot forward to a hash code
method. But instead, I have here a primitive
<SYNC Start=13677960><P class='en'>&nbsp;
<SYNC Start=13677960><P class='en'>long. And for that, because the primitive
fields there, you actually have to calculate
<SYNC Start=13678960><P class='en'>&nbsp;
<SYNC Start=13678960><P class='en'>some hash code. And this is a long, and so
we want to like convert a long to an int.
<SYNC Start=13679960><P class='en'>&nbsp;
<SYNC Start=13679960><P class='en'>A long has that has like 64 bits, while an
int has only 32 bits. So you want to like
<SYNC Start=13680960><P class='en'>&nbsp;
<SYNC Start=13680960><P class='en'>make the long to half its size, and you want
to make it in a way that will result in the
<SYNC Start=13681960><P class='en'>&nbsp;
<SYNC Start=13681960><P class='en'>least possible number of collisions. And therefore,
this weird line here. This here does it. This
<SYNC Start=13682960><P class='en'>&nbsp;
<SYNC Start=13682960><P class='en'>is actually based on again, Josh blocks book
Effective Java there, he explains it. One,
<SYNC Start=13683960><P class='en'>&nbsp;
<SYNC Start=13683960><P class='en'>actually, he doesn&#39;t explain it too much.
If you want an in depth explanation again,
<SYNC Start=13684960><P class='en'>&nbsp;
<SYNC Start=13684960><P class='en'>watch my follow up tutorial about hash code
there, I can explain you. Now here only insured.
<SYNC Start=13685960><P class='en'>&nbsp;
<SYNC Start=13685960><P class='en'>This is a shift by 32 bits. And then this
is an X or Y you again, come like let&#39;s say
<SYNC Start=13686960><P class='en'>&nbsp;
<SYNC Start=13686960><P class='en'>combine this field. And last but not least,
you do an exquisite cast from long to end
<SYNC Start=13687960><P class='en'>&nbsp;
<SYNC Start=13687960><P class='en'>where you throw away Half of the long, but
this whole thing can&#39;t explain you in like
<SYNC Start=13688960><P class='en'>&nbsp;
<SYNC Start=13688960><P class='en'>one minute, you have to watch really the extended
tutorial. But this is really a very performant
<SYNC Start=13689960><P class='en'>&nbsp;
<SYNC Start=13689960><P class='en'>good way to create an end hash code from alarm.
This is the standard default way of how this
<SYNC Start=13690960><P class='en'>&nbsp;
<SYNC Start=13690960><P class='en'>is done today.
<SYNC Start=13691960><P class='en'>&nbsp;
<SYNC Start=13691960><P class='en'>And the second field here is a string as it
can be now, I need this extra knowledge check.
<SYNC Start=13692960><P class='en'>&nbsp;
<SYNC Start=13692960><P class='en'>And I&#39;m not sure if I have shown you this
before. This is like in if it&#39;s just shorter,
<SYNC Start=13693960><P class='en'>&nbsp;
<SYNC Start=13693960><P class='en'>because otherwise the code would even be longer.
So you have to read it as is optional field
<SYNC Start=13694960><P class='en'>&nbsp;
<SYNC Start=13694960><P class='en'>now. If true, then return zero, else return
optional field dot hashCode. So this again
<SYNC Start=13695960><P class='en'>&nbsp;
<SYNC Start=13695960><P class='en'>calls the hashCode method of string. This
I showed you in the beginning of this episode,
<SYNC Start=13696960><P class='en'>&nbsp;
<SYNC Start=13696960><P class='en'>where the code was like in a while loop, going
over each character of the string, and then
<SYNC Start=13697960><P class='en'>&nbsp;
<SYNC Start=13697960><P class='en'>calculating an int value for the string. So
as this is already done for us, we can simply
<SYNC Start=13698960><P class='en'>&nbsp;
<SYNC Start=13698960><P class='en'>call the hashCode method. Okay. So, again,
you also see, I have, in this case, two fields.
<SYNC Start=13699960><P class='en'>&nbsp;
<SYNC Start=13699960><P class='en'>And in this case, I decided to use both to
differentiate if an engine is equal or not.
<SYNC Start=13700960><P class='en'>&nbsp;
<SYNC Start=13700960><P class='en'>And so as I use type an optional field and
equals, again, I use type an optional field
<SYNC Start=13701960><P class='en'>&nbsp;
<SYNC Start=13701960><P class='en'>and hashCode in the same order and same fields.
Okay, last but not least, some class now this
<SYNC Start=13702960><P class='en'>&nbsp;
<SYNC Start=13702960><P class='en'>is this doesn&#39;t mean anything, this is really
totally abstract, I just wanted to it very
<SYNC Start=13703960><P class='en'>&nbsp;
<SYNC Start=13703960><P class='en'>short, show you all the different primitive
types they are plus the string object. So
<SYNC Start=13704960><P class='en'>&nbsp;
<SYNC Start=13704960><P class='en'>that you see like how the different cases
of equals and hashCode could be calculated.
<SYNC Start=13705960><P class='en'>&nbsp;
<SYNC Start=13705960><P class='en'>So let&#39;s first of all look at hash code. So
this with long we have already seen, same
<SYNC Start=13706960><P class='en'>&nbsp;
<SYNC Start=13706960><P class='en'>one here, float, well float has the same size
32 bits like an end. And then there is a native
<SYNC Start=13707960><P class='en'>&nbsp;
<SYNC Start=13707960><P class='en'>function, which will convert the float to
an int to be used for the hashCode. Double
<SYNC Start=13708960><P class='en'>&nbsp;
<SYNC Start=13708960><P class='en'>A has the same length as a long. So this is
done in two steps. First of all, it&#39;s converted,
<SYNC Start=13709960><P class='en'>&nbsp;
<SYNC Start=13709960><P class='en'>again, with a native function too long. A
native function is a function that is not
<SYNC Start=13710960><P class='en'>&nbsp;
<SYNC Start=13710960><P class='en'>implemented in Java, but in machine dependent
code. So I can&#39;t show you. But again, for
<SYNC Start=13711960><P class='en'>&nbsp;
<SYNC Start=13711960><P class='en'>details, watch my follow up tutorial. But
anyway, so long we take and again, we do this
<SYNC Start=13712960><P class='en'>&nbsp;
<SYNC Start=13712960><P class='en'>weird line here to convert it to an end. Next
one Boolean. Here again, this weird stuff
<SYNC Start=13713960><P class='en'>&nbsp;
<SYNC Start=13713960><P class='en'>here. If it&#39;s true, question mark, then 1231.
And if it&#39;s not true, then take this number.
<SYNC Start=13714960><P class='en'>&nbsp;
<SYNC Start=13714960><P class='en'>All this stuff is really technical might be
a bit hard for you to understand. This is
<SYNC Start=13715960><P class='en'>&nbsp;
<SYNC Start=13715960><P class='en'>just really important for performance optimization
to have the least number of collisions. Um,
<SYNC Start=13716960><P class='en'>&nbsp;
<SYNC Start=13716960><P class='en'>car is just taken as it is because it can
be handled like a number. For string again,
<SYNC Start=13717960><P class='en'>&nbsp;
<SYNC Start=13717960><P class='en'>we call this hashCode method. And for the
other fields, everything that is as big as
<SYNC Start=13718960><P class='en'>&nbsp;
<SYNC Start=13718960><P class='en'>an end or smaller than an end, that&#39;s relatively
easy because you can just take the value as
<SYNC Start=13719960><P class='en'>&nbsp;
<SYNC Start=13719960><P class='en'>it is because a byte will always fit into
an end short will always fit into an end.
<SYNC Start=13720960><P class='en'>&nbsp;
<SYNC Start=13720960><P class='en'>And an end of course, should also fit into
an end our K so I know this was really rough
<SYNC Start=13721960><P class='en'>&nbsp;
<SYNC Start=13721960><P class='en'>really short. I&#39;m just not enough time to
go in more details. But exactly For this reason,
<SYNC Start=13722960><P class='en'>&nbsp;
<SYNC Start=13722960><P class='en'>I have done the follow up tutorial you can
watch. I hope then it will be more easy to
<SYNC Start=13723960><P class='en'>&nbsp;
<SYNC Start=13723960><P class='en'>understand. Now last but not least, let&#39;s
have a look also at equals. So I think for
<SYNC Start=13724960><P class='en'>&nbsp;
<SYNC Start=13724960><P class='en'>the primitive values here, it&#39;s pretty easy
because you don&#39;t have to use equals If you
<SYNC Start=13725960><P class='en'>&nbsp;
<SYNC Start=13725960><P class='en'>can just use the not equal operator.
<SYNC Start=13726960><P class='en'>&nbsp;
<SYNC Start=13726960><P class='en'>So if it&#39;s if the bytes are not equal, just
looking at the variables without any objects
<SYNC Start=13727960><P class='en'>&nbsp;
<SYNC Start=13727960><P class='en'>involved, false is returned. And also see
this is the order I&#39;ve chosen, I start with
<SYNC Start=13728960><P class='en'>&nbsp;
<SYNC Start=13728960><P class='en'>the smallest possible values, because here
checking them is probably faster than doing
<SYNC Start=13729960><P class='en'>&nbsp;
<SYNC Start=13729960><P class='en'>all this crazy stuff down here. And this is
why I&#39;ve chosen the order. All K, with a short
<SYNC Start=13730960><P class='en'>&nbsp;
<SYNC Start=13730960><P class='en'>end, long, this is all easy. With float, it&#39;s
a bit more difficult, we have to convert it
<SYNC Start=13731960><P class='en'>&nbsp;
<SYNC Start=13731960><P class='en'>first to an end, that will has to be converted
to a long, um, Boolean is, again, easy. Well,
<SYNC Start=13732960><P class='en'>&nbsp;
<SYNC Start=13732960><P class='en'>actually, if this was a real whoops, if this
was a real implementation, I would have done
<SYNC Start=13733960><P class='en'>&nbsp;
<SYNC Start=13733960><P class='en'>it differently, I would have put it to the
top. So this order is also based to explain
<SYNC Start=13734960><P class='en'>&nbsp;
<SYNC Start=13734960><P class='en'>you the different types. So in reality, I
would ask you to really think about the order
<SYNC Start=13735960><P class='en'>&nbsp;
<SYNC Start=13735960><P class='en'>based on what the business tells you what
is easy to differentiate. And like, then also
<SYNC Start=13736960><P class='en'>&nbsp;
<SYNC Start=13736960><P class='en'>you have to think, like, from the performance,
what takes longer to calculate. Um, of course,
<SYNC Start=13737960><P class='en'>&nbsp;
<SYNC Start=13737960><P class='en'>it depends if you really need the performance.
And if you do, then always test performance,
<SYNC Start=13738960><P class='en'>&nbsp;
<SYNC Start=13738960><P class='en'>because you might think something is fast.
But when you tested, it turns out, it&#39;s not
<SYNC Start=13739960><P class='en'>&nbsp;
<SYNC Start=13739960><P class='en'>as fast as he would have thought, okay, because
what I&#39;m telling you here is just a rule of
<SYNC Start=13740960><P class='en'>&nbsp;
<SYNC Start=13740960><P class='en'>thumb, but I might be totally wrong in a specific
case. So this is also what I&#39;m doing, if I
<SYNC Start=13741960><P class='en'>&nbsp;
<SYNC Start=13741960><P class='en'>need a certain performance, I test for it.
In all other cases, I just do how I feel like
<SYNC Start=13742960><P class='en'>&nbsp;
<SYNC Start=13742960><P class='en'>it. Or I just use my gut feeling to sort the
values, as I think could be fitting out. Okay,
<SYNC Start=13743960><P class='en'>&nbsp;
<SYNC Start=13743960><P class='en'>so I hope you liked this episode about hashCode.
And equals I&#39;m sorry that this is all so complicated
<SYNC Start=13744960><P class='en'>&nbsp;
<SYNC Start=13744960><P class='en'>and so long. I just wanted to put in everything
possible, because this is really such an important
<SYNC Start=13745960><P class='en'>&nbsp;
<SYNC Start=13745960><P class='en'>topic that he should really understand in
detail. Of course, there is way more actually.
<SYNC Start=13746960><P class='en'>&nbsp;
<SYNC Start=13746960><P class='en'>So I would also ask you go to my blog, www
dot Marquess minor spiel.com. I will put up
<SYNC Start=13747960><P class='en'>&nbsp;
<SYNC Start=13747960><P class='en'>some links to some extended articles on the
topic on and also you might consider buying
<SYNC Start=13748960><P class='en'>&nbsp;
<SYNC Start=13748960><P class='en'>Effective Java from Drush blog, he also talks
about it quite extensively. So
<SYNC Start=13749960><P class='en'>&nbsp;
<SYNC Start=13749960><P class='en'>here
<SYNC Start=13750960><P class='en'>&nbsp;
<SYNC Start=13750960><P class='en'>I will give you a high level introduction
to the Java collections framework. Unfortunately,
<SYNC Start=13751960><P class='en'>&nbsp;
<SYNC Start=13751960><P class='en'>there are several overloaded uses of the word
collection. Let me clarify the various meanings
<SYNC Start=13752960><P class='en'>&nbsp;
<SYNC Start=13752960><P class='en'>up front. The different use cases are a collection
without any it relevance as a compilation
<SYNC Start=13753960><P class='en'>&nbsp;
<SYNC Start=13753960><P class='en'>or group of things. Second, the Java collections
framework, a library of different interfaces
<SYNC Start=13754960><P class='en'>&nbsp;
<SYNC Start=13754960><P class='en'>and classes. Third, a collection as a data
structure. Think of a box or container that
<SYNC Start=13755960><P class='en'>&nbsp;
<SYNC Start=13755960><P class='en'>can hold a group of objects, like an array,
for example. For us, the Java collections
<SYNC Start=13756960><P class='en'>&nbsp;
<SYNC Start=13756960><P class='en'>interface, one of the two main interfaces
of the Java collections framework, and fifths,
<SYNC Start=13757960><P class='en'>&nbsp;
<SYNC Start=13757960><P class='en'>Java util collections, or utility class that
will help you to modify or operate on Java
<SYNC Start=13758960><P class='en'>&nbsp;
<SYNC Start=13758960><P class='en'>collections. This episode is based on chapter
11 of the OCA OCP study guide. The book is
<SYNC Start=13759960><P class='en'>&nbsp;
<SYNC Start=13759960><P class='en'>packed with knowledge. As a great fan of the
author is Kathy Sierra and Bert Bates. I recommend
<SYNC Start=13760960><P class='en'>&nbsp;
<SYNC Start=13760960><P class='en'>you to read this book, even when you don&#39;t
plan to get a certified programmer. So what
<SYNC Start=13761960><P class='en'>&nbsp;
<SYNC Start=13761960><P class='en'>is the Java collections framework? from a
high level perspective? First of all, it&#39;s
<SYNC Start=13762960><P class='en'>&nbsp;
<SYNC Start=13762960><P class='en'>more like a library a toolbox of generic interfaces
and classes. This toolbox contains Various
<SYNC Start=13763960><P class='en'>&nbsp;
<SYNC Start=13763960><P class='en'>collection interfaces and classes that serve
as a more powerful object oriented alternative
<SYNC Start=13764960><P class='en'>&nbsp;
<SYNC Start=13764960><P class='en'>to arrays, collection related utility interfaces
and classes that assist you in using the collections.
<SYNC Start=13765960><P class='en'>&nbsp;
<SYNC Start=13765960><P class='en'>I&#39;m going to describe both parts in detail
now. On the next slides, you will see the
<SYNC Start=13766960><P class='en'>&nbsp;
<SYNC Start=13766960><P class='en'>interface and class hierarchy for collections.
Unlike arrays, all collections can dynamically
<SYNC Start=13767960><P class='en'>&nbsp;
<SYNC Start=13767960><P class='en'>grow or shrink in size. Except before a collection
can hold a group of objects, a map can store
<SYNC Start=13768960><P class='en'>&nbsp;
<SYNC Start=13768960><P class='en'>pairs of objects that have some kind of relation,
which ties them together, named key and value.
<SYNC Start=13769960><P class='en'>&nbsp;
<SYNC Start=13769960><P class='en'>A value
<SYNC Start=13770960><P class='en'>&nbsp;
<SYNC Start=13770960><P class='en'>does not have a specific position in this
map, but can be retrieved with the key it
<SYNC Start=13771960><P class='en'>&nbsp;
<SYNC Start=13771960><P class='en'>is related to relax if you don&#39;t get it now.
We will look at it in more detail later on.
<SYNC Start=13772960><P class='en'>&nbsp;
<SYNC Start=13772960><P class='en'>So here you see the hierarchy of classes and
interfaces, extending or implementing the
<SYNC Start=13773960><P class='en'>&nbsp;
<SYNC Start=13773960><P class='en'>collections interface. Just try to remember
some of the names listed here. This is just
<SYNC Start=13774960><P class='en'>&nbsp;
<SYNC Start=13774960><P class='en'>an overview so far. As you can see, the collection
interface sits on top of a number of sub interfaces
<SYNC Start=13775960><P class='en'>&nbsp;
<SYNC Start=13775960><P class='en'>and implementing classes. A collection can
hold a group of objects, the collection interface
<SYNC Start=13776960><P class='en'>&nbsp;
<SYNC Start=13776960><P class='en'>is extended by the interface of set list and
queue. A set is defined as a group of unique
<SYNC Start=13777960><P class='en'>&nbsp;
<SYNC Start=13777960><P class='en'>objects. What is considered as unique is defined
by the equals method of the object type the
<SYNC Start=13778960><P class='en'>&nbsp;
<SYNC Start=13778960><P class='en'>set holds. So in other words, a set cannot
hold to equal objects. A list is defined as
<SYNC Start=13779960><P class='en'>&nbsp;
<SYNC Start=13779960><P class='en'>a sequence of objects. So unlike a set, a
list can contain duplicate entries. Besides
<SYNC Start=13780960><P class='en'>&nbsp;
<SYNC Start=13780960><P class='en'>a list keeps its elements in the order, they
were inserted into the list. A queue has two
<SYNC Start=13781960><P class='en'>&nbsp;
<SYNC Start=13781960><P class='en'>sides, entries are added to the end and removed
from the top of the queue. This is often described
<SYNC Start=13782960><P class='en'>&nbsp;
<SYNC Start=13782960><P class='en'>as first in first out, which is pretty much
like a waiting line in real life works. The
<SYNC Start=13783960><P class='en'>&nbsp;
<SYNC Start=13783960><P class='en'>first person queueing up will also be the
first person leaving the queue. Now let&#39;s
<SYNC Start=13784960><P class='en'>&nbsp;
<SYNC Start=13784960><P class='en'>have a closer look at the interfaces and classes
that extend or implement the set interface.
<SYNC Start=13785960><P class='en'>&nbsp;
<SYNC Start=13785960><P class='en'>Hash set linked hash set and three set are
all implementing the set interface. Hash set
<SYNC Start=13786960><P class='en'>&nbsp;
<SYNC Start=13786960><P class='en'>is the default implementation that is used
in the majority of cases. Linked hash set
<SYNC Start=13787960><P class='en'>&nbsp;
<SYNC Start=13787960><P class='en'>is like a mix of a hash set and the list as
it does not allow duplicate entries like a
<SYNC Start=13788960><P class='en'>&nbsp;
<SYNC Start=13788960><P class='en'>set. But it returns its elements in the order
in which they were inserted. Like your list
<SYNC Start=13789960><P class='en'>&nbsp;
<SYNC Start=13789960><P class='en'>would do. Chrisette will constantly keep all
its elements in sorted order. But keep in
<SYNC Start=13790960><P class='en'>&nbsp;
<SYNC Start=13790960><P class='en'>mind, there is no free lunch. So every edit
feature comes at a certain Cost Of course.
<SYNC Start=13791960><P class='en'>&nbsp;
<SYNC Start=13791960><P class='en'>After looking at the classes implementing
the set interface, let&#39;s also have a look
<SYNC Start=13792960><P class='en'>&nbsp;
<SYNC Start=13792960><P class='en'>at the two extending interfaces we haven&#39;t
talked about yet. As the name implies, sorted
<SYNC Start=13793960><P class='en'>&nbsp;
<SYNC Start=13793960><P class='en'>set is a set that is constantly sorted. The
navigate will set interface was added which
<SYNC Start=13794960><P class='en'>&nbsp;
<SYNC Start=13794960><P class='en'>Java six, it allows to navigate through the
sorted list. For example, it provides methods
<SYNC Start=13795960><P class='en'>&nbsp;
<SYNC Start=13795960><P class='en'>to retrieve the next element greater or smaller
than a given element of the set. Next, let&#39;s
<SYNC Start=13796960><P class='en'>&nbsp;
<SYNC Start=13796960><P class='en'>have a closer look at the classes that implement
the list interface. Every list is the default
<SYNC Start=13797960><P class='en'>&nbsp;
<SYNC Start=13797960><P class='en'>implementation of the list interface. Like
any list implementation, it does allow duplicate
<SYNC Start=13798960><P class='en'>&nbsp;
<SYNC Start=13798960><P class='en'>elements and it does allow to iterate the
list in the order of insertion. As it is based
<SYNC Start=13799960><P class='en'>&nbsp;
<SYNC Start=13799960><P class='en'>on arrays, it is very fast to iterate and
read from an every list. But adding or removing
<SYNC Start=13800960><P class='en'>&nbsp;
<SYNC Start=13800960><P class='en'>an element at a random position is very slow,
as this will require to rebuild the underlying
<SYNC Start=13801960><P class='en'>&nbsp;
<SYNC Start=13801960><P class='en'>array structure. vector is a class that exists
since JDK one which is even before the collection
<SYNC Start=13802960><P class='en'>&nbsp;
<SYNC Start=13802960><P class='en'>framework, which was added with Java two.
In short, its performance is sub optimal.
<SYNC Start=13803960><P class='en'>&nbsp;
<SYNC Start=13803960><P class='en'>So So please never use it. Use ArrayList or
linked list instead. So let&#39;s directly remove
<SYNC Start=13804960><P class='en'>&nbsp;
<SYNC Start=13804960><P class='en'>it and forget about it. The next list implementation
is linked list. As the name implies, its implementation
<SYNC Start=13805960><P class='en'>&nbsp;
<SYNC Start=13805960><P class='en'>is based on a linked list, which makes it
easy to add or remove elements at any position
<SYNC Start=13806960><P class='en'>&nbsp;
<SYNC Start=13806960><P class='en'>in the list. Last but not least, let&#39;s have
a look at the classes implementing the queue
<SYNC Start=13807960><P class='en'>&nbsp;
<SYNC Start=13807960><P class='en'>interface. We already talked about link list,
as it also implements the list interface.
<SYNC Start=13808960><P class='en'>&nbsp;
<SYNC Start=13808960><P class='en'>However, the fact that it&#39;s based on a double
linked list makes it quite easy to
<SYNC Start=13809960><P class='en'>&nbsp;
<SYNC Start=13809960><P class='en'>also implement the queue interface. linked
list is the default queue implementation.
<SYNC Start=13810960><P class='en'>&nbsp;
<SYNC Start=13810960><P class='en'>priority queue is a queue implementation that
keeps its elements automatically ordered.
<SYNC Start=13811960><P class='en'>&nbsp;
<SYNC Start=13811960><P class='en'>It has similar functionality like a tree set,
but it does allow duplicate entries. Now let&#39;s
<SYNC Start=13812960><P class='en'>&nbsp;
<SYNC Start=13812960><P class='en'>look at the map interface. This interface
has no relation to the collection interface.
<SYNC Start=13813960><P class='en'>&nbsp;
<SYNC Start=13813960><P class='en'>A collection operates on one entity, while
a map operates on two entities. A unique key,
<SYNC Start=13814960><P class='en'>&nbsp;
<SYNC Start=13814960><P class='en'>for example, a vehicle identification number,
and an object that is related to this key
<SYNC Start=13815960><P class='en'>&nbsp;
<SYNC Start=13815960><P class='en'>for example, a car object with the help of
the key you can retrieve the object it relates
<SYNC Start=13816960><P class='en'>&nbsp;
<SYNC Start=13816960><P class='en'>to. The interface map is the root of a lot
of interfaces and classes, which we&#39;ll look
<SYNC Start=13817960><P class='en'>&nbsp;
<SYNC Start=13817960><P class='en'>at now. The class hash table was the first
collection in Java JDK one that was based
<SYNC Start=13818960><P class='en'>&nbsp;
<SYNC Start=13818960><P class='en'>on a data structure hash table. So the Java
creators called a hash table. Unfortunately,
<SYNC Start=13819960><P class='en'>&nbsp;
<SYNC Start=13819960><P class='en'>this makes it a bit hard to differentiate
between the two. Like vector the class is
<SYNC Start=13820960><P class='en'>&nbsp;
<SYNC Start=13820960><P class='en'>deprecated, because of its sub optimal performance,
so let&#39;s also remove it and forget about it.
<SYNC Start=13821960><P class='en'>&nbsp;
<SYNC Start=13821960><P class='en'>Instead, use one of the other classes that
implement the map interface. hashmap is the
<SYNC Start=13822960><P class='en'>&nbsp;
<SYNC Start=13822960><P class='en'>default implementation that you should use
in the majority of cases. A map usually does
<SYNC Start=13823960><P class='en'>&nbsp;
<SYNC Start=13823960><P class='en'>not make any guarantees on how it internally
stores its elements. An exception to this
<SYNC Start=13824960><P class='en'>&nbsp;
<SYNC Start=13824960><P class='en'>rule is linked hash map, which allows to iterate
the map in the order of insertion. Last but
<SYNC Start=13825960><P class='en'>&nbsp;
<SYNC Start=13825960><P class='en'>not least, tree map is a constantly sorted
map. Now let&#39;s look at the interfaces that
<SYNC Start=13826960><P class='en'>&nbsp;
<SYNC Start=13826960><P class='en'>extend the map interface. As the name implies,
the interface sorted map extends the map interface
<SYNC Start=13827960><P class='en'>&nbsp;
<SYNC Start=13827960><P class='en'>and defines the contract of a constantly sorted
map. navigable map again extends the sorted
<SYNC Start=13828960><P class='en'>&nbsp;
<SYNC Start=13828960><P class='en'>map interface, and adds methods to navigate
through the map. This allows you to retrieve
<SYNC Start=13829960><P class='en'>&nbsp;
<SYNC Start=13829960><P class='en'>all entries smaller or bigger than a given
entry, for example. Actually, there are many
<SYNC Start=13830960><P class='en'>&nbsp;
<SYNC Start=13830960><P class='en'>similarities between the map and the set hierarchy.
The reason is that the set implementations
<SYNC Start=13831960><P class='en'>&nbsp;
<SYNC Start=13831960><P class='en'>are actually internally backed by a map implementation.
Last but not least, you might have noticed
<SYNC Start=13832960><P class='en'>&nbsp;
<SYNC Start=13832960><P class='en'>the Java collection classes often contain
the data structure there are based on in their
<SYNC Start=13833960><P class='en'>&nbsp;
<SYNC Start=13833960><P class='en'>name. To choose the best collection for a
given situation, you have to compare the specific
<SYNC Start=13834960><P class='en'>&nbsp;
<SYNC Start=13834960><P class='en'>characteristics of data structures like array,
linked list, hash table or tree first. In
<SYNC Start=13835960><P class='en'>&nbsp;
<SYNC Start=13835960><P class='en'>short, there is no single best option. Each
one has its very own advantages and disadvantages.
<SYNC Start=13836960><P class='en'>&nbsp;
<SYNC Start=13836960><P class='en'>I promise to talk about this very exciting
topic in a later episode. So stay tuned. This
<SYNC Start=13837960><P class='en'>&nbsp;
<SYNC Start=13837960><P class='en'>overview of the collection and map classes
that only show you a part of the whole story.
<SYNC Start=13838960><P class='en'>&nbsp;
<SYNC Start=13838960><P class='en'>In a later episode, I will introduce you to
the concurrent containers of the Java collections
<SYNC Start=13839960><P class='en'>&nbsp;
<SYNC Start=13839960><P class='en'>framework. generics is a topic at least as
big as the Java collections framework. In
<SYNC Start=13840960><P class='en'>&nbsp;
<SYNC Start=13840960><P class='en'>the context of this episode, I will therefore
only explain you the bare minimum you need
<SYNC Start=13841960><P class='en'>&nbsp;
<SYNC Start=13841960><P class='en'>to understand the collections framework. It&#39;s
okay if you have a lot of open questions after
<SYNC Start=13842960><P class='en'>&nbsp;
<SYNC Start=13842960><P class='en'>my brief overview. Give both of us some time.
I promise to explain everything one after
<SYNC Start=13843960><P class='en'>&nbsp;
<SYNC Start=13843960><P class='en'>the other I would recommend you to subscribe
to my YouTube channel to be informed as soon
<SYNC Start=13844960><P class='en'>&nbsp;
<SYNC Start=13844960><P class='en'>as I upload the next episodes of the Java
collections framework. Now fasten your seat
<SYNC Start=13845960><P class='en'>&nbsp;
<SYNC Start=13845960><P class='en'>belts. Here, it&#39;s going to be a bumpy ride,
I promise. You see this weird stuff in angular
<SYNC Start=13846960><P class='en'>&nbsp;
<SYNC Start=13846960><P class='en'>brackets. Just relax. Actually, it&#39;s much
easier than you might think. And the first
<SYNC Start=13847960><P class='en'>&nbsp;
<SYNC Start=13847960><P class='en'>line, you see I have defined a list variable
my list. And with a string parameter in ANGEL
<SYNC Start=13848960><P class='en'>&nbsp;
<SYNC Start=13848960><P class='en'>brackets, I tell the compiler that my main
list reference variable is supposed to be
<SYNC Start=13849960><P class='en'>&nbsp;
<SYNC Start=13849960><P class='en'>used only with strings.
<SYNC Start=13850960><P class='en'>&nbsp;
<SYNC Start=13850960><P class='en'>Then I create an object of type ArrayList.
And again, I tell the compiler that this object
<SYNC Start=13851960><P class='en'>&nbsp;
<SYNC Start=13851960><P class='en'>is only supposed to be used with strings,
and the compiler will ensure that no one ever
<SYNC Start=13852960><P class='en'>&nbsp;
<SYNC Start=13852960><P class='en'>tries to put anything else than a string into
my list. In other words, this is what makes
<SYNC Start=13853960><P class='en'>&nbsp;
<SYNC Start=13853960><P class='en'>the container type safe. Also, note that I
use the interface list for the variable and
<SYNC Start=13854960><P class='en'>&nbsp;
<SYNC Start=13854960><P class='en'>not ArrayList. This makes your code more flexible.
Only at one place you create the object, but
<SYNC Start=13855960><P class='en'>&nbsp;
<SYNC Start=13855960><P class='en'>at various places in your code, he will use
it. When you use list instead of error list
<SYNC Start=13856960><P class='en'>&nbsp;
<SYNC Start=13856960><P class='en'>for the reference variable. You could later
replace the error list by a linked list, for
<SYNC Start=13857960><P class='en'>&nbsp;
<SYNC Start=13857960><P class='en'>example. And all
<SYNC Start=13858960><P class='en'>&nbsp;
<SYNC Start=13858960><P class='en'>you had to adjust was this one line of code.
In case you don&#39;t really need to specific
<SYNC Start=13859960><P class='en'>&nbsp;
<SYNC Start=13859960><P class='en'>methods of a list,
<SYNC Start=13860960><P class='en'>&nbsp;
<SYNC Start=13860960><P class='en'>you could also use the collection interface
instead. Always use the least specific interface
<SYNC Start=13861960><P class='en'>&nbsp;
<SYNC Start=13861960><P class='en'>for the reference variable. Oh, by the way,
I&#39;m sure you notice the integer 100 that I
<SYNC Start=13862960><P class='en'>&nbsp;
<SYNC Start=13862960><P class='en'>use as a constructor argument. This I have
added for performance optimization. As said
<SYNC Start=13863960><P class='en'>&nbsp;
<SYNC Start=13863960><P class='en'>before, the collection classes can dynamically
grow and shrink in size. However, aerialist
<SYNC Start=13864960><P class='en'>&nbsp;
<SYNC Start=13864960><P class='en'>and all hash table based collections are internally
operating on arrays. When an array based collection
<SYNC Start=13865960><P class='en'>&nbsp;
<SYNC Start=13865960><P class='en'>grows in size, it will internally on the fly,
create a larger array and transfer all contents
<SYNC Start=13866960><P class='en'>&nbsp;
<SYNC Start=13866960><P class='en'>from the old to the new array. This of course
takes some extra time. What on hardware is
<SYNC Start=13867960><P class='en'>&nbsp;
<SYNC Start=13867960><P class='en'>so fast, that is usually should not be a problem.
But on the other side, if you already know
<SYNC Start=13868960><P class='en'>&nbsp;
<SYNC Start=13868960><P class='en'>the exact, or at least the approximate size
of your error based collection, this is usually
<SYNC Start=13869960><P class='en'>&nbsp;
<SYNC Start=13869960><P class='en'>better than trusting on the collections default
size. In the next episodes, I will look at
<SYNC Start=13870960><P class='en'>&nbsp;
<SYNC Start=13870960><P class='en'>the data structures that the Java collections
are based on, which will help you to better
<SYNC Start=13871960><P class='en'>&nbsp;
<SYNC Start=13871960><P class='en'>understand performance considerations like
this one. However, to me, taking care of such
<SYNC Start=13872960><P class='en'>&nbsp;
<SYNC Start=13872960><P class='en'>small little details, makes the difference
between a developer and a software craftsman.
<SYNC Start=13873960><P class='en'>&nbsp;
<SYNC Start=13873960><P class='en'>So I wanted to let you know as early as possible.
Okay, enough, blah, blah, blah.
<SYNC Start=13874960><P class='en'>&nbsp;
<SYNC Start=13874960><P class='en'>Let&#39;s get back to the topic of generics. Now
in the second line, you see how a hashmap
<SYNC Start=13875960><P class='en'>&nbsp;
<SYNC Start=13875960><P class='en'>is instantiated accordingly. As said before,
a map is basically a relation of one identifying
<SYNC Start=13876960><P class='en'>&nbsp;
<SYNC Start=13876960><P class='en'>key to one value element. Both these elements
can be of different types. Like you in my
<SYNC Start=13877960><P class='en'>&nbsp;
<SYNC Start=13877960><P class='en'>example, I use Vin, the vehicle identification
number as the key and the car object as the
<SYNC Start=13878960><P class='en'>&nbsp;
<SYNC Start=13878960><P class='en'>value. This has to be added as a comma separated
list in ANGEL brackets. And the compiler again
<SYNC Start=13879960><P class='en'>&nbsp;
<SYNC Start=13879960><P class='en'>will check that this holds true. If you create
the instance reference variable and the object,
<SYNC Start=13880960><P class='en'>&nbsp;
<SYNC Start=13880960><P class='en'>both in one line, you can also leave the second
pair of angel brackets empty, as it can be
<SYNC Start=13881960><P class='en'>&nbsp;
<SYNC Start=13881960><P class='en'>inferred from the generic type of the reference
variable. This was introduced with Java seven
<SYNC Start=13882960><P class='en'>&nbsp;
<SYNC Start=13882960><P class='en'>and is called the diamond operator. Because
the empty Angel brackets in a way, look like
<SYNC Start=13883960><P class='en'>&nbsp;
<SYNC Start=13883960><P class='en'>a diamond. Actually, I&#39;m sorry. That&#39;s not
the whole story. There are two parts. And
<SYNC Start=13884960><P class='en'>&nbsp;
<SYNC Start=13884960><P class='en'>what I just showed you. This was actually
part two, the usage or invocation of a generic
<SYNC Start=13885960><P class='en'>&nbsp;
<SYNC Start=13885960><P class='en'>class when you lock in the contract parameter
to be used. But this is only possible if the
<SYNC Start=13886960><P class='en'>&nbsp;
<SYNC Start=13886960><P class='en'>method, the interface or the class was defined
to be used in a generic way beforehand. Here
<SYNC Start=13887960><P class='en'>&nbsp;
<SYNC Start=13887960><P class='en'>you see a generically defined interface. In
the first line, the interface is defined as
<SYNC Start=13888960><P class='en'>&nbsp;
<SYNC Start=13888960><P class='en'>an interface operating on two separate generic
types that have to be specified at a later
<SYNC Start=13889960><P class='en'>&nbsp;
<SYNC Start=13889960><P class='en'>time. However, when these types are locked
in, this will automatically also specify the
<SYNC Start=13890960><P class='en'>&nbsp;
<SYNC Start=13890960><P class='en'>type, the types, interface methods we&#39;ll use.
So, if you see some weird one letter types
<SYNC Start=13891960><P class='en'>&nbsp;
<SYNC Start=13891960><P class='en'>in one of the next slides, just remember it
means this is a method that can be used in
<SYNC Start=13892960><P class='en'>&nbsp;
<SYNC Start=13892960><P class='en'>a generic way. Okay, now we are ready to look
at some additional utility interfaces of the
<SYNC Start=13893960><P class='en'>&nbsp;
<SYNC Start=13893960><P class='en'>Java collections framework. They are implemented
by classes of the collections framework or
<SYNC Start=13894960><P class='en'>&nbsp;
<SYNC Start=13894960><P class='en'>the JDK in general, but they can also be implemented
by your own classes, making use of the power
<SYNC Start=13895960><P class='en'>&nbsp;
<SYNC Start=13895960><P class='en'>of the collections framework. Well, strictly
speaking, the interface Java Lang iterable
<SYNC Start=13896960><P class='en'>&nbsp;
<SYNC Start=13896960><P class='en'>is not part of the framework. But more precisely,
it sits on top of it. It is the super interface
<SYNC Start=13897960><P class='en'>&nbsp;
<SYNC Start=13897960><P class='en'>of Java util collection. So every class that
implements Java util collection, will also
<SYNC Start=13898960><P class='en'>&nbsp;
<SYNC Start=13898960><P class='en'>implement the Java Lang iterable interface.
Okay, anyway, let&#39;s now look at each interface
<SYNC Start=13899960><P class='en'>&nbsp;
<SYNC Start=13899960><P class='en'>in detail. an iterator is an object that acts
like a remote control to iterate through a
<SYNC Start=13900960><P class='en'>&nbsp;
<SYNC Start=13900960><P class='en'>collection. Let&#39;s look at its methods. Boolean
has next returns true if the collection has
<SYNC Start=13901960><P class='en'>&nbsp;
<SYNC Start=13901960><P class='en'>more elements. ie next returns the next element
in the iteration. And void remove removes
<SYNC Start=13902960><P class='en'>&nbsp;
<SYNC Start=13902960><P class='en'>the last element returned by this iterator
from the underlying Collection. This interface
<SYNC Start=13903960><P class='en'>&nbsp;
<SYNC Start=13903960><P class='en'>provides only one method, which will return
an iterator every collection that implements
<SYNC Start=13904960><P class='en'>&nbsp;
<SYNC Start=13904960><P class='en'>this interface can be used on the for each
loop, which greatly simplifies the usage of
<SYNC Start=13905960><P class='en'>&nbsp;
<SYNC Start=13905960><P class='en'>your homemade collection. In order to plug
in your collection into the for each loop,
<SYNC Start=13906960><P class='en'>&nbsp;
<SYNC Start=13906960><P class='en'>you will have to execute two simple steps.
First create an iterator that is able to iterate
<SYNC Start=13907960><P class='en'>&nbsp;
<SYNC Start=13907960><P class='en'>over your collection with methods like hasnext.
And next, as we saw on the last slide. Second,
<SYNC Start=13908960><P class='en'>&nbsp;
<SYNC Start=13908960><P class='en'>you need to implement the iterable interface
by adding an iterator method that will return
<SYNC Start=13909960><P class='en'>&nbsp;
<SYNC Start=13909960><P class='en'>an instance of this iterator implementing
the interface Java Lang comparable defines
<SYNC Start=13910960><P class='en'>&nbsp;
<SYNC Start=13910960><P class='en'>a sort order for your entities. The interface
contains only one method you need to implement
<SYNC Start=13911960><P class='en'>&nbsp;
<SYNC Start=13911960><P class='en'>which is int compared to if you want to define
a natural sort order for an entity class,
<SYNC Start=13912960><P class='en'>&nbsp;
<SYNC Start=13912960><P class='en'>make it implement this interface. return a
negative integer if the object is less than
<SYNC Start=13913960><P class='en'>&nbsp;
<SYNC Start=13913960><P class='en'>a given method argument, zero if the object
is equal to the given method argument, and
<SYNC Start=13914960><P class='en'>&nbsp;
<SYNC Start=13914960><P class='en'>a positive integer if the object is greater
than the given method argument. What means
<SYNC Start=13915960><P class='en'>&nbsp;
<SYNC Start=13915960><P class='en'>smaller or greater is for you to define. For
numbers, that would probably mean that one
<SYNC Start=13916960><P class='en'>&nbsp;
<SYNC Start=13916960><P class='en'>is smaller than five, for example. But for
colors, This all depends on how you want to
<SYNC Start=13917960><P class='en'>&nbsp;
<SYNC Start=13917960><P class='en'>sort your entities. When you put objects of
an entity that implements the comparable interface,
<SYNC Start=13918960><P class='en'>&nbsp;
<SYNC Start=13918960><P class='en'>into a tree set or tree map, it will use your
compare to method to automatically sort all
<SYNC Start=13919960><P class='en'>&nbsp;
<SYNC Start=13919960><P class='en'>elements you put into the collection. As you
can see, the Java collections framework has
<SYNC Start=13920960><P class='en'>&nbsp;
<SYNC Start=13920960><P class='en'>been greatly designed for extension. It offers
a lot of possibilities to plug in your own
<SYNC Start=13921960><P class='en'>&nbsp;
<SYNC Start=13921960><P class='en'>classes. This interface is very similar to
the comparable interface. It allows you to
<SYNC Start=13922960><P class='en'>&nbsp;
<SYNC Start=13922960><P class='en'>define additional sorting orders like a reverse
ordering. So the sorting logic is not directly
<SYNC Start=13923960><P class='en'>&nbsp;
<SYNC Start=13923960><P class='en'>implemented in your entity, but in an external
sorting strategy class that can optionally
<SYNC Start=13924960><P class='en'>&nbsp;
<SYNC Start=13924960><P class='en'>be added to a collection or sorting method
to the Find an alternative sorting order for
<SYNC Start=13925960><P class='en'>&nbsp;
<SYNC Start=13925960><P class='en'>your collection of entities. The rules of
the interface contract are pretty much the
<SYNC Start=13926960><P class='en'>&nbsp;
<SYNC Start=13926960><P class='en'>same as for comparable. return a negative
integer if the first argument is less than
<SYNC Start=13927960><P class='en'>&nbsp;
<SYNC Start=13927960><P class='en'>the second argument, zero if both arguments
are equal, and a positive integer if the first
<SYNC Start=13928960><P class='en'>&nbsp;
<SYNC Start=13928960><P class='en'>argument is greater than the second. Last
but not least, let&#39;s look at the two utility
<SYNC Start=13929960><P class='en'>&nbsp;
<SYNC Start=13929960><P class='en'>classes, collections and arrays, like a Swiss
Army knife. They provide static helper methods
<SYNC Start=13930960><P class='en'>&nbsp;
<SYNC Start=13930960><P class='en'>that greatly enhance the general usefulness
of the collection classes. Java util collections
<SYNC Start=13931960><P class='en'>&nbsp;
<SYNC Start=13931960><P class='en'>offers methods like sword shuffle, reverse
search, min or max. And Java util arrays operates
<SYNC Start=13932960><P class='en'>&nbsp;
<SYNC Start=13932960><P class='en'>on areas and not on collections actually,
similar to the collections class, it allows
<SYNC Start=13933960><P class='en'>&nbsp;
<SYNC Start=13933960><P class='en'>us to swap areas or to search through areas
for example, I&#39;m going to take an in depth
<SYNC Start=13934960><P class='en'>&nbsp;
<SYNC Start=13934960><P class='en'>look at ArrayList. And the second half, I&#39;ll
do a practical coding session. Okay, let&#39;s
<SYNC Start=13935960><P class='en'>&nbsp;
<SYNC Start=13935960><P class='en'>get started. Error list is the default implementation
of the list interface. As with any implementation
<SYNC Start=13936960><P class='en'>&nbsp;
<SYNC Start=13936960><P class='en'>of list, you can have duplicate elements in
your array list. And you can go from element
<SYNC Start=13937960><P class='en'>&nbsp;
<SYNC Start=13937960><P class='en'>to element in the same order as the elements
were inserted. As it is based on Aries, aerialist
<SYNC Start=13938960><P class='en'>&nbsp;
<SYNC Start=13938960><P class='en'>provides fast access, but inserting or removing
an element at a random position requires more
<SYNC Start=13939960><P class='en'>&nbsp;
<SYNC Start=13939960><P class='en'>time, as this will require to reorganize the
list. fast access however, is crucial for
<SYNC Start=13940960><P class='en'>&nbsp;
<SYNC Start=13940960><P class='en'>most applications, which is why ArrayList
is the most commonly used collection. to store
<SYNC Start=13941960><P class='en'>&nbsp;
<SYNC Start=13941960><P class='en'>data that changes frequently. However, consider
using an alternative container, for example
<SYNC Start=13942960><P class='en'>&nbsp;
<SYNC Start=13942960><P class='en'>linked list. I will talk about this as well
as other containers in the upcoming episodes
<SYNC Start=13943960><P class='en'>&nbsp;
<SYNC Start=13943960><P class='en'>of my free Java video course. Okay, before
I continue, let me introduce you to two different
<SYNC Start=13944960><P class='en'>&nbsp;
<SYNC Start=13944960><P class='en'>terms, which are important to understand in
context with error list, size and capacity.
<SYNC Start=13945960><P class='en'>&nbsp;
<SYNC Start=13945960><P class='en'>Size is the number of elements the ArrayList
currently holds. For every element you add
<SYNC Start=13946960><P class='en'>&nbsp;
<SYNC Start=13946960><P class='en'>to the list, the size will grow by one capacity
or ever, it&#39;s the number of elements the currently
<SYNC Start=13947960><P class='en'>&nbsp;
<SYNC Start=13947960><P class='en'>underlying array can hold. The capacity of
the array list grows in intervals. The error
<SYNC Start=13948960><P class='en'>&nbsp;
<SYNC Start=13948960><P class='en'>list starts with an initial capacity. Every
time you exceed the capacity of the array,
<SYNC Start=13949960><P class='en'>&nbsp;
<SYNC Start=13949960><P class='en'>the ArrayList copies the data over to a new
array that is about 50% larger than the previous
<SYNC Start=13950960><P class='en'>&nbsp;
<SYNC Start=13950960><P class='en'>one. Let&#39;s say you want to add 100 elements
to an aerialist have an initial capacity of
<SYNC Start=13951960><P class='en'>&nbsp;
<SYNC Start=13951960><P class='en'>10. As the list grows, the system will create
six more areas
<SYNC Start=13952960><P class='en'>&nbsp;
<SYNC Start=13952960><P class='en'>to take the place of the first. First one
area that can hold 15 elements, then one for
<SYNC Start=13953960><P class='en'>&nbsp;
<SYNC Start=13953960><P class='en'>a maximum of 22 elements. Then areas with
a capacity of 3349 73 and finally 109 elements
<SYNC Start=13954960><P class='en'>&nbsp;
<SYNC Start=13954960><P class='en'>to hold the growing list. These restructuring
arrangements can negatively impact performance,
<SYNC Start=13955960><P class='en'>&nbsp;
<SYNC Start=13955960><P class='en'>you can instantly create an array of the correct
size to minimize these merging activities
<SYNC Start=13956960><P class='en'>&nbsp;
<SYNC Start=13956960><P class='en'>by defining the correct capacity at creation
time. In case you don&#39;t know the final size
<SYNC Start=13957960><P class='en'>&nbsp;
<SYNC Start=13957960><P class='en'>of the ArrayList at creation time, estimated
as close as possible. Choosing a too large
<SYNC Start=13958960><P class='en'>&nbsp;
<SYNC Start=13958960><P class='en'>capacity however, can also negatively impact
performance. So choose this value carefully.
<SYNC Start=13959960><P class='en'>&nbsp;
<SYNC Start=13959960><P class='en'>I advise you to always explicitly set the
capacity at creation time as a documents your
<SYNC Start=13960960><P class='en'>&nbsp;
<SYNC Start=13960960><P class='en'>intentions. For most projects, you won&#39;t have
to worry about optimizing performance to too
<SYNC Start=13961960><P class='en'>&nbsp;
<SYNC Start=13961960><P class='en'>powerful hardware. But this is no excuse for
sloppy design and poor implementation. Here
<SYNC Start=13962960><P class='en'>&nbsp;
<SYNC Start=13962960><P class='en'>you can see a simplified extract of the class
aerialist. Keep in mind, the real class looks
<SYNC Start=13963960><P class='en'>&nbsp;
<SYNC Start=13963960><P class='en'>a bit more complicated. This is just meant
to give you a more concrete idea of what the
<SYNC Start=13964960><P class='en'>&nbsp;
<SYNC Start=13964960><P class='en'>class ArrayList looks like. As you can see,
error list is just a class anyone could have
<SYNC Start=13965960><P class='en'>&nbsp;
<SYNC Start=13965960><P class='en'>written. Given enough time and knowledge,
there is no black magic, you can find the
<SYNC Start=13966960><P class='en'>&nbsp;
<SYNC Start=13966960><P class='en'>actual source code online. However, don&#39;t
rely too much on internals that you spot them
<SYNC Start=13967960><P class='en'>&nbsp;
<SYNC Start=13967960><P class='en'>the source code as they may change any time
if they&#39;re not defined in the Java language
<SYNC Start=13968960><P class='en'>&nbsp;
<SYNC Start=13968960><P class='en'>specification. Default capacity is the initial
size of the array, when you don&#39;t specify
<SYNC Start=13969960><P class='en'>&nbsp;
<SYNC Start=13969960><P class='en'>it as I recommended before element data is
the array used to store the elements of the
<SYNC Start=13970960><P class='en'>&nbsp;
<SYNC Start=13970960><P class='en'>ArrayList in size is the number of elements
the ArrayList currently holds get add and
<SYNC Start=13971960><P class='en'>&nbsp;
<SYNC Start=13971960><P class='en'>remove are some of the many functions ArrayList
provides, we will look at those methods now.
<SYNC Start=13972960><P class='en'>&nbsp;
<SYNC Start=13972960><P class='en'>So, let me give you a short overview of the
methods of the ArrayList class. To make things
<SYNC Start=13973960><P class='en'>&nbsp;
<SYNC Start=13973960><P class='en'>easy for you, I have broken up the overview
into methods belonging to the Java util collection
<SYNC Start=13974960><P class='en'>&nbsp;
<SYNC Start=13974960><P class='en'>interface, and methods belonging to the Java
util list interface. When I talk about other
<SYNC Start=13975960><P class='en'>&nbsp;
<SYNC Start=13975960><P class='en'>containers in later episodes, implementing
the list or the collection interface, I will
<SYNC Start=13976960><P class='en'>&nbsp;
<SYNC Start=13976960><P class='en'>refer back to this episode. Instead of repeating
myself over and over again. Make sure you
<SYNC Start=13977960><P class='en'>&nbsp;
<SYNC Start=13977960><P class='en'>are subscribed to my YouTube channel. So you
will be informed when I release episodes about
<SYNC Start=13978960><P class='en'>&nbsp;
<SYNC Start=13978960><P class='en'>these classes also. Okay, so let&#39;s start with
the methods belonging to the Java util collection
<SYNC Start=13979960><P class='en'>&nbsp;
<SYNC Start=13979960><P class='en'>interface. The contract of the collection
interface does not guarantee any particular
<SYNC Start=13980960><P class='en'>&nbsp;
<SYNC Start=13980960><P class='en'>order, and therefore does not provide any
index or order related methods. So here you
<SYNC Start=13981960><P class='en'>&nbsp;
<SYNC Start=13981960><P class='en'>can see the first set of methods that implement
the collection interface. So what I say about
<SYNC Start=13982960><P class='en'>&nbsp;
<SYNC Start=13982960><P class='en'>these methods does not only apply to ArrayList,
but also to all classes that implement the
<SYNC Start=13983960><P class='en'>&nbsp;
<SYNC Start=13983960><P class='en'>collection interface. The method Boolean ad
appends the element to the end of the collection
<SYNC Start=13984960><P class='en'>&nbsp;
<SYNC Start=13984960><P class='en'>to the next empty cell of the underlying array.
Boolean at all appends all given elements
<SYNC Start=13985960><P class='en'>&nbsp;
<SYNC Start=13985960><P class='en'>to the end of the collection. The stuff in
ANGEL brackets is related to generics. In
<SYNC Start=13986960><P class='en'>&nbsp;
<SYNC Start=13986960><P class='en'>short, it ensures that no one can call such
a method with the wrong arguments. From now
<SYNC Start=13987960><P class='en'>&nbsp;
<SYNC Start=13987960><P class='en'>relax. I will tell you more in my upcoming
episode about generics. Boolean remove removes
<SYNC Start=13988960><P class='en'>&nbsp;
<SYNC Start=13988960><P class='en'>the first occurrence of the element you specify
from the collection. Boolean remove all removes
<SYNC Start=13989960><P class='en'>&nbsp;
<SYNC Start=13989960><P class='en'>the given elements from the collection. The
iterator method returns an object usually
<SYNC Start=13990960><P class='en'>&nbsp;
<SYNC Start=13990960><P class='en'>use an a loop to move from one element to
the next element of the collection. Step by
<SYNC Start=13991960><P class='en'>&nbsp;
<SYNC Start=13991960><P class='en'>step you say I iterate over the collection.
Hence the name iterator. incise returns the
<SYNC Start=13992960><P class='en'>&nbsp;
<SYNC Start=13992960><P class='en'>number of elements of the collection. Boolean
contains returns true if the collection contains
<SYNC Start=13993960><P class='en'>&nbsp;
<SYNC Start=13993960><P class='en'>at least one instance of the element you specify.
<SYNC Start=13994960><P class='en'>&nbsp;
<SYNC Start=13994960><P class='en'>Wide clear removes all elements from the collection.
Boolean is empty. This returns true if the
<SYNC Start=13995960><P class='en'>&nbsp;
<SYNC Start=13995960><P class='en'>collection contains no elements. And to array
returns an array containing all of the elements
<SYNC Start=13996960><P class='en'>&nbsp;
<SYNC Start=13996960><P class='en'>of the collection.
<SYNC Start=13997960><P class='en'>&nbsp;
<SYNC Start=13997960><P class='en'>Alright, let&#39;s move on to the methods of the
Java util list interface. The methods are
<SYNC Start=13998960><P class='en'>&nbsp;
<SYNC Start=13998960><P class='en'>similar in part to the methods we just looked
at, but they differ in that they require an
<SYNC Start=13999960><P class='en'>&nbsp;
<SYNC Start=13999960><P class='en'>order on the elements of the list. So here
again, you should know that everything I say
<SYNC Start=14000960><P class='en'>&nbsp;
<SYNC Start=14000960><P class='en'>about these methods does not only apply to
every list, but to all classes that implement
<SYNC Start=14001960><P class='en'>&nbsp;
<SYNC Start=14001960><P class='en'>the list interface. This add method with an
index parameter. It&#39;s actually more like an
<SYNC Start=14002960><P class='en'>&nbsp;
<SYNC Start=14002960><P class='en'>insert method. It allows you to insert an
element at any index position of the list.
<SYNC Start=14003960><P class='en'>&nbsp;
<SYNC Start=14003960><P class='en'>Instead of just adding the element to the
end of the list. And the process the elements
<SYNC Start=14004960><P class='en'>&nbsp;
<SYNC Start=14004960><P class='en'>of the underlying array will be shifted to
the right and migrated to a larger array if
<SYNC Start=14005960><P class='en'>&nbsp;
<SYNC Start=14005960><P class='en'>necessary. The remove index method allows
to remove an element from any index position
<SYNC Start=14006960><P class='en'>&nbsp;
<SYNC Start=14006960><P class='en'>of the Similar to the Add method we just looked
at, this might require to shift the remaining
<SYNC Start=14007960><P class='en'>&nbsp;
<SYNC Start=14007960><P class='en'>elements of the underlying array to the left.
The get by index method returns an element
<SYNC Start=14008960><P class='en'>&nbsp;
<SYNC Start=14008960><P class='en'>from any given position of the list. The index
off method takes an object and returns the
<SYNC Start=14009960><P class='en'>&nbsp;
<SYNC Start=14009960><P class='en'>index of the first occurrence of the element
in the list, or minus one if the element is
<SYNC Start=14010960><P class='en'>&nbsp;
<SYNC Start=14010960><P class='en'>not found. In last index of returns the index
of the last occurrence of the element in the
<SYNC Start=14011960><P class='en'>&nbsp;
<SYNC Start=14011960><P class='en'>list, and SP four minus one if the element
is not found. List sub list returns a view
<SYNC Start=14012960><P class='en'>&nbsp;
<SYNC Start=14012960><P class='en'>of the list starting with the position you
specify as from index and ending one possession
<SYNC Start=14013960><P class='en'>&nbsp;
<SYNC Start=14013960><P class='en'>before the one you specify as to index. Last
but not least, the sword method sorts the
<SYNC Start=14014960><P class='en'>&nbsp;
<SYNC Start=14014960><P class='en'>list following the order of the given comparator.
Alright, so let&#39;s end the lecture session,
<SYNC Start=14015960><P class='en'>&nbsp;
<SYNC Start=14015960><P class='en'>time to move on to some practical coding.
So now I&#39;m in my early and you can see I have
<SYNC Start=14016960><P class='en'>&nbsp;
<SYNC Start=14016960><P class='en'>prepared a little test method. So we can do
some practical coding with ArrayList. I have
<SYNC Start=14017960><P class='en'>&nbsp;
<SYNC Start=14017960><P class='en'>already created an instance of ArrayList.
And I&#39;ve assigned it to a reference variable
<SYNC Start=14018960><P class='en'>&nbsp;
<SYNC Start=14018960><P class='en'>of type collection. Now, this might be a bit
counterintuitive at first, because why is
<SYNC Start=14019960><P class='en'>&nbsp;
<SYNC Start=14019960><P class='en'>that not ArrayList? Or at least list. While
there is a reason to it. And let me cite Robert
<SYNC Start=14020960><P class='en'>&nbsp;
<SYNC Start=14020960><P class='en'>C. Martin, he says, a good architecture is
one that maximizes the number of decisions
<SYNC Start=14021960><P class='en'>&nbsp;
<SYNC Start=14021960><P class='en'>not made, or the number of decisions D fared.
And this is such a situation, because by making
<SYNC Start=14022960><P class='en'>&nbsp;
<SYNC Start=14022960><P class='en'>this collection,
<SYNC Start=14023960><P class='en'>&nbsp;
<SYNC Start=14023960><P class='en'>I mean, you would create this instance for
a reason, of course, and you probably would
<SYNC Start=14024960><P class='en'>&nbsp;
<SYNC Start=14024960><P class='en'>forward it to either other methods and or
other objects. So now, if you make this an
<SYNC Start=14025960><P class='en'>&nbsp;
<SYNC Start=14025960><P class='en'>ArrayList, this will really limit all your
other objects, because they all only have
<SYNC Start=14026960><P class='en'>&nbsp;
<SYNC Start=14026960><P class='en'>to work on an ArrayList. But now, the requirements
of your business, I mean, requirements, usually
<SYNC Start=14027960><P class='en'>&nbsp;
<SYNC Start=14027960><P class='en'>they change very fast as you know. And if
they change, like for example, an ArrayList
<SYNC Start=14028960><P class='en'>&nbsp;
<SYNC Start=14028960><P class='en'>can hold duplicate elements. But now there
might be a new requirement that tells you,
<SYNC Start=14029960><P class='en'>&nbsp;
<SYNC Start=14029960><P class='en'>you cannot have duplicate elements, you have
to prevent that you have duplicate elements.
<SYNC Start=14030960><P class='en'>&nbsp;
<SYNC Start=14030960><P class='en'>So you might want to use hash set here. Now,
if you use list or every list everywhere in
<SYNC Start=14031960><P class='en'>&nbsp;
<SYNC Start=14031960><P class='en'>the code, it will be very tough to change
your mind, you will have to touch a lot of
<SYNC Start=14032960><P class='en'>&nbsp;
<SYNC Start=14032960><P class='en'>code, which is very dangerous. But if this
is a collection, a collection can be so so
<SYNC Start=14033960><P class='en'>&nbsp;
<SYNC Start=14033960><P class='en'>many things. And so it will be much easier
to change your mind. Because all you will
<SYNC Start=14034960><P class='en'>&nbsp;
<SYNC Start=14034960><P class='en'>have to do is change the instantiation of
the object that is actually being used. So
<SYNC Start=14035960><P class='en'>&nbsp;
<SYNC Start=14035960><P class='en'>if you can, like of course, this limits the
number of functions that you can use, because
<SYNC Start=14036960><P class='en'>&nbsp;
<SYNC Start=14036960><P class='en'>the collection interface is less powerful
than the list or the error list interface.
<SYNC Start=14037960><P class='en'>&nbsp;
<SYNC Start=14037960><P class='en'>But if you can, like if you only need the
methods of the collection interface, well
<SYNC Start=14038960><P class='en'>&nbsp;
<SYNC Start=14038960><P class='en'>then do it like this. later on. We will switch
here to a list interface because I will also
<SYNC Start=14039960><P class='en'>&nbsp;
<SYNC Start=14039960><P class='en'>show you methods that only appear in the list
interface. But we&#39;ll start with a reference
<SYNC Start=14040960><P class='en'>&nbsp;
<SYNC Start=14040960><P class='en'>variable of type collection. And then you&#39;ll
also see the difference. Okay, what else can
<SYNC Start=14041960><P class='en'>&nbsp;
<SYNC Start=14041960><P class='en'>you see in the single line? Besides you might
spot that have used generics in the angel
<SYNC Start=14042960><P class='en'>&nbsp;
<SYNC Start=14042960><P class='en'>brackets, so we have created a collection
of type string. And here, you might spot the
<SYNC Start=14043960><P class='en'>&nbsp;
<SYNC Start=14043960><P class='en'>so called diamond operator that was introduced
with Java seven. Well, because we do both
<SYNC Start=14044960><P class='en'>&nbsp;
<SYNC Start=14044960><P class='en'>in one line, we do the object instantiation.
And we create the reference variable in one
<SYNC Start=14045960><P class='en'>&nbsp;
<SYNC Start=14045960><P class='en'>line. The compiler directly sees this must
be a string. And this is why here we can use
<SYNC Start=14046960><P class='en'>&nbsp;
<SYNC Start=14046960><P class='en'>the diamond operator. But we could also do
it the old way by typing here string. This
<SYNC Start=14047960><P class='en'>&nbsp;
<SYNC Start=14047960><P class='en'>is just a bit shorter. Okay, and last but
not least, you should notice here I wrote
<SYNC Start=14048960><P class='en'>&nbsp;
<SYNC Start=14048960><P class='en'>initial capacity, which is a constant, which
I have defined here as private final int,
<SYNC Start=14049960><P class='en'>&nbsp;
<SYNC Start=14049960><P class='en'>initial capacity five. Now you might say well,
you could have also said just five I mean,
<SYNC Start=14050960><P class='en'>&nbsp;
<SYNC Start=14050960><P class='en'>this is faster. Well, at first, it might seem
so but this is a so called magic number. And
<SYNC Start=14051960><P class='en'>&nbsp;
<SYNC Start=14051960><P class='en'>this is evil, because it makes it so much
harder for the next developer to know what
<SYNC Start=14052960><P class='en'>&nbsp;
<SYNC Start=14052960><P class='en'>this five actually means. Like not everyone
knows that an aerialist has an initial capacity.
<SYNC Start=14053960><P class='en'>&nbsp;
<SYNC Start=14053960><P class='en'>But if you use the constant value here, you
document in the code your intentions. So this
<SYNC Start=14054960><P class='en'>&nbsp;
<SYNC Start=14054960><P class='en'>is actually quite good. And I recommend you
to do it also. Okay, but now let&#39;s already
<SYNC Start=14055960><P class='en'>&nbsp;
<SYNC Start=14055960><P class='en'>start using some methods. I mean, we&#39;re not
doing I&#39;m not going to properly program something,
<SYNC Start=14056960><P class='en'>&nbsp;
<SYNC Start=14056960><P class='en'>but we&#39;re just playing around with the methods,
so you get a better feeling of like what aerialist
<SYNC Start=14057960><P class='en'>&nbsp;
<SYNC Start=14057960><P class='en'>is all about. And as this is now, a collection
reference very Oh, of course, you&#39;ll only
<SYNC Start=14058960><P class='en'>&nbsp;
<SYNC Start=14058960><P class='en'>see all the methods of the collection interface.
And we&#39;ll start simple with ADD. Of course,
<SYNC Start=14059960><P class='en'>&nbsp;
<SYNC Start=14059960><P class='en'>like one limitation that we have now is we
don&#39;t see any index based methods, which was
<SYNC Start=14060960><P class='en'>&nbsp;
<SYNC Start=14060960><P class='en'>also the reason why before in my slides, I
divided the methods into methods that are
<SYNC Start=14061960><P class='en'>&nbsp;
<SYNC Start=14061960><P class='en'>related to the collection interface, and methods
that are related to the list interface. Because
<SYNC Start=14062960><P class='en'>&nbsp;
<SYNC Start=14062960><P class='en'>now I can also go back to the slides and compare,
because now we&#39;re doing the methods of the
<SYNC Start=14063960><P class='en'>&nbsp;
<SYNC Start=14063960><P class='en'>collection interface. So this is a collection
of type string, so I can add a string. So
<SYNC Start=14064960><P class='en'>&nbsp;
<SYNC Start=14064960><P class='en'>let&#39;s add B, capital B. Let&#39;s add some more.
<SYNC Start=14065960><P class='en'>&nbsp;
<SYNC Start=14065960><P class='en'>A
<SYNC Start=14066960><P class='en'>&nbsp;
<SYNC Start=14066960><P class='en'>later on, I&#39;m also planning to sort the error
list, which aerialists allows. But right now,
<SYNC Start=14067960><P class='en'>&nbsp;
<SYNC Start=14067960><P class='en'>with the collection reference variable, we
will not be able to sort it. But stay tuned.
<SYNC Start=14068960><P class='en'>&nbsp;
<SYNC Start=14068960><P class='en'>I&#39;ll do it soon. Oh, okay. And I mean, even
though we have a reference variable of type
<SYNC Start=14069960><P class='en'>&nbsp;
<SYNC Start=14069960><P class='en'>collection, still, the fact that we have an
ArrayList influences that we can have duplicate
<SYNC Start=14070960><P class='en'>&nbsp;
<SYNC Start=14070960><P class='en'>elements. So let&#39;s do that. Maybe I should
also add one eight here. Okay, and now let&#39;s
<SYNC Start=14071960><P class='en'>&nbsp;
<SYNC Start=14071960><P class='en'>count how many numbers elements I added 123456,
the initial capacity or ever is five. So that
<SYNC Start=14072960><P class='en'>&nbsp;
<SYNC Start=14072960><P class='en'>means when you add the sixth element, internally,
within the execution of this method, the error
<SYNC Start=14073960><P class='en'>&nbsp;
<SYNC Start=14073960><P class='en'>list will realize, well, the capacity is insufficient,
will then create a new array of a larger size,
<SYNC Start=14074960><P class='en'>&nbsp;
<SYNC Start=14074960><P class='en'>and will then migrate all the existing data
to the new array. Before the next element,
<SYNC Start=14075960><P class='en'>&nbsp;
<SYNC Start=14075960><P class='en'>the second he is added, which costs some extra
time. But really don&#39;t worry, I mean, in the
<SYNC Start=14076960><P class='en'>&nbsp;
<SYNC Start=14076960><P class='en'>regular situation like this five, six elements,
the performance difference is altra altra.
<SYNC Start=14077960><P class='en'>&nbsp;
<SYNC Start=14077960><P class='en'>Low. So never, I&#39;m never worry, in such situations,
this should really be only, like only think
<SYNC Start=14078960><P class='en'>&nbsp;
<SYNC Start=14078960><P class='en'>about this when it gets a problem. And usually,
this could get a problem if you have like
<SYNC Start=14079960><P class='en'>&nbsp;
<SYNC Start=14079960><P class='en'>1000s or 10s of 1000s, if not a million of
elements. So it always depends on the amount
<SYNC Start=14080960><P class='en'>&nbsp;
<SYNC Start=14080960><P class='en'>of elements, you have the amount of iterations
that you do. Okay. So and then we can also
<SYNC Start=14081960><P class='en'>&nbsp;
<SYNC Start=14081960><P class='en'>print the error list as it is now, there are
two different ways ArrayList has also a two
<SYNC Start=14082960><P class='en'>&nbsp;
<SYNC Start=14082960><P class='en'>string method. So I could directly say system,
out print ln elements. But I&#39;m doing it a
<SYNC Start=14083960><P class='en'>&nbsp;
<SYNC Start=14083960><P class='en'>bit more complicated, because I want to show
you how we actually iterate over the ArrayList.
<SYNC Start=14084960><P class='en'>&nbsp;
<SYNC Start=14084960><P class='en'>And this is because every list, and every
collection implements the iterable interface,
<SYNC Start=14085960><P class='en'>&nbsp;
<SYNC Start=14085960><P class='en'>which is used in this new for each loop. And
so we can iterate over the array list by saying
<SYNC Start=14086960><P class='en'>&nbsp;
<SYNC Start=14086960><P class='en'>string string, and then column and then elements.
And what is required to iterate over this
<SYNC Start=14087960><P class='en'>&nbsp;
<SYNC Start=14087960><P class='en'>list will be done here inside and you don&#39;t
see it. This is all done by the compiler for
<SYNC Start=14088960><P class='en'>&nbsp;
<SYNC Start=14088960><P class='en'>us internally. In short, I can tell you, there
is an iterator method that I showed you showed
<SYNC Start=14089960><P class='en'>&nbsp;
<SYNC Start=14089960><P class='en'>Before, which will then be used. You might
also check my last episode where I introduced
<SYNC Start=14090960><P class='en'>&nbsp;
<SYNC Start=14090960><P class='en'>you to the iterable. And the iterator interface,
both will be used here. For now. I mean, it&#39;s
<SYNC Start=14091960><P class='en'>&nbsp;
<SYNC Start=14091960><P class='en'>enough, if you see, you can use the ArrayList
and the for each loop. And now we can print
<SYNC Start=14092960><P class='en'>&nbsp;
<SYNC Start=14092960><P class='en'>out each element separately, which of course
gives us a bit more flexibility. Like I could
<SYNC Start=14093960><P class='en'>&nbsp;
<SYNC Start=14093960><P class='en'>print something else here also. Okay. So this
is called iteration going over the collection,
<SYNC Start=14094960><P class='en'>&nbsp;
<SYNC Start=14094960><P class='en'>element by element. And I also want to show
you, let&#39;s comment this, oops, let&#39;s comment
<SYNC Start=14095960><P class='en'>&nbsp;
<SYNC Start=14095960><P class='en'>this out. I also want to show you that which
is a feature of list, this order, how we added
<SYNC Start=14096960><P class='en'>&nbsp;
<SYNC Start=14096960><P class='en'>the elements, AB AC E, will be also exactly
the same order as the elements are printed
<SYNC Start=14097960><P class='en'>&nbsp;
<SYNC Start=14097960><P class='en'>out, which would be different if we had a
set. Okay, but enough of talking, let&#39;s already
<SYNC Start=14098960><P class='en'>&nbsp;
<SYNC Start=14098960><P class='en'>execute it and see it in action.
<SYNC Start=14099960><P class='en'>&nbsp;
<SYNC Start=14099960><P class='en'>Okay, so here you see a B, A, C, E, exactly
like we added that, which is a feature of
<SYNC Start=14100960><P class='en'>&nbsp;
<SYNC Start=14100960><P class='en'>list. Okay, now that we added elements, we
could also remove some elements, which is
<SYNC Start=14101960><P class='en'>&nbsp;
<SYNC Start=14101960><P class='en'>also just as easy we move. And now on the
collection interface, I can&#39;t remove by index.
<SYNC Start=14102960><P class='en'>&nbsp;
<SYNC Start=14102960><P class='en'>But I can remove by stating the object that
I want to be removed, which by the way, internally
<SYNC Start=14103960><P class='en'>&nbsp;
<SYNC Start=14103960><P class='en'>uses the equals method. If you don&#39;t know
about the equals method, I also have a video
<SYNC Start=14104960><P class='en'>&nbsp;
<SYNC Start=14104960><P class='en'>about the equals method. So it goes over each
element and checks by using equals, which
<SYNC Start=14105960><P class='en'>&nbsp;
<SYNC Start=14105960><P class='en'>is implemented in the string class. If there&#39;s
a is equal to one of those elements here,
<SYNC Start=14106960><P class='en'>&nbsp;
<SYNC Start=14106960><P class='en'>and will then remove it. You might also notice
I have two A&#39;s. So now it&#39;s interesting to
<SYNC Start=14107960><P class='en'>&nbsp;
<SYNC Start=14107960><P class='en'>know, like will the first a be removed will
the second AB removed of or both be removed?
<SYNC Start=14108960><P class='en'>&nbsp;
<SYNC Start=14108960><P class='en'>And there is another tip I have for you. Like
if you have such questions, you can look for
<SYNC Start=14109960><P class='en'>&nbsp;
<SYNC Start=14109960><P class='en'>a book for video tutorial, you can look in
the API and so on and so forth. But you will
<SYNC Start=14110960><P class='en'>&nbsp;
<SYNC Start=14110960><P class='en'>never be as Sure. And probably also never
be as fast if you just write a simple test
<SYNC Start=14111960><P class='en'>&nbsp;
<SYNC Start=14111960><P class='en'>like this. And you just try it out for yourself.
I mean, how pragmatic How cool is that? Because
<SYNC Start=14112960><P class='en'>&nbsp;
<SYNC Start=14112960><P class='en'>the code doesn&#39;t lie. If you see it, he will
be sure that it behaves like you can see it.
<SYNC Start=14113960><P class='en'>&nbsp;
<SYNC Start=14113960><P class='en'>So let&#39;s do this and check which element is
removed. And here you see B, A, C E. So the
<SYNC Start=14114960><P class='en'>&nbsp;
<SYNC Start=14114960><P class='en'>first a is missing? So the answer is the first
element is removed, not all A&#39;s are removed.
<SYNC Start=14115960><P class='en'>&nbsp;
<SYNC Start=14115960><P class='en'>Okay, so what else can we do? Let&#39;s check.
We can also ask for the size. Let&#39;s make this
<SYNC Start=14116960><P class='en'>&nbsp;
<SYNC Start=14116960><P class='en'>a bit simpler now. To have it as short as
possible. So now we have 1234 elements. I&#39;ll
<SYNC Start=14117960><P class='en'>&nbsp;
<SYNC Start=14117960><P class='en'>copy that copying some code that you will
reuse is just safer not to introduce any typo,
<SYNC Start=14118960><P class='en'>&nbsp;
<SYNC Start=14118960><P class='en'>or K. And as long as you&#39;re just copying the
code and not duplicating the code, it&#39;s also
<SYNC Start=14119960><P class='en'>&nbsp;
<SYNC Start=14119960><P class='en'>fine. So this supposed to give us the number
of elements. Let me document this out. So
<SYNC Start=14120960><P class='en'>&nbsp;
<SYNC Start=14120960><P class='en'>we just see the number of elements. Let&#39;s
also do it directly after instantiation of
<SYNC Start=14121960><P class='en'>&nbsp;
<SYNC Start=14121960><P class='en'>the object. So I expect here to see a zero,
no elements included. Or I mean this would
<SYNC Start=14122960><P class='en'>&nbsp;
<SYNC Start=14122960><P class='en'>be another alternative possibility that this
would throw an exception if the list is empty.
<SYNC Start=14123960><P class='en'>&nbsp;
<SYNC Start=14123960><P class='en'>So let&#39;s check that execute the test was actually
not really a test. I&#39;m just experimenting
<SYNC Start=14124960><P class='en'>&nbsp;
<SYNC Start=14124960><P class='en'>but here. So you see it return zero and the
first line and then four. So this is the size
<SYNC Start=14125960><P class='en'>&nbsp;
<SYNC Start=14125960><P class='en'>method. You can even ask, Are you empty? Which
should probably here say Yes, true. And here
<SYNC Start=14126960><P class='en'>&nbsp;
<SYNC Start=14126960><P class='en'>probably false. And there is true and false.
Okay. So let&#39;s now switch Over to the list
<SYNC Start=14127960><P class='en'>&nbsp;
<SYNC Start=14127960><P class='en'>interface. And let&#39;s also play a bit around
with that. You see, I have not a reference
<SYNC Start=14128960><P class='en'>&nbsp;
<SYNC Start=14128960><P class='en'>variable of type list. And I can use all the
methods exactly like I used them before, because
<SYNC Start=14129960><P class='en'>&nbsp;
<SYNC Start=14129960><P class='en'>the list interface
<SYNC Start=14130960><P class='en'>&nbsp;
<SYNC Start=14130960><P class='en'>extends the collection interface. So it includes
all the methods that the collection interface
<SYNC Start=14131960><P class='en'>&nbsp;
<SYNC Start=14131960><P class='en'>has. But on top of that, we now have more
methods
<SYNC Start=14132960><P class='en'>&nbsp;
<SYNC Start=14132960><P class='en'>than just the methods of the collection interface.
For example, I can insert an element by giving
<SYNC Start=14133960><P class='en'>&nbsp;
<SYNC Start=14133960><P class='en'>an index position. So I could for example,
say, at index position zero, at me, I don&#39;t
<SYNC Start=14134960><P class='en'>&nbsp;
<SYNC Start=14134960><P class='en'>know T and S at index position two. And then
let&#39;s use the simple fast print odd method.
<SYNC Start=14135960><P class='en'>&nbsp;
<SYNC Start=14135960><P class='en'>Let&#39;s remove this because it&#39;ll format the
list in a one liner. But let me just show
<SYNC Start=14136960><P class='en'>&nbsp;
<SYNC Start=14136960><P class='en'>you what I mean. Okay, we still have the true
we can also remove this. Okay, but for now
<SYNC Start=14137960><P class='en'>&nbsp;
<SYNC Start=14137960><P class='en'>it&#39;s fine. So we have T, because we added
that at index position zero, which means this
<SYNC Start=14138960><P class='en'>&nbsp;
<SYNC Start=14138960><P class='en'>will be inserted where a was before. Before
I added that at index zero, this was the index
<SYNC Start=14139960><P class='en'>&nbsp;
<SYNC Start=14139960><P class='en'>zero. So this, put it to where a was before
and then shifted everything else to the right.
<SYNC Start=14140960><P class='en'>&nbsp;
<SYNC Start=14140960><P class='en'>And this is why now this is nice to see it
like this in one line. Because you see, this
<SYNC Start=14141960><P class='en'>&nbsp;
<SYNC Start=14141960><P class='en'>is all shifted to the right, which when I
remove an element, the opposite happens. Like
<SYNC Start=14142960><P class='en'>&nbsp;
<SYNC Start=14142960><P class='en'>if I remove the s, everything will be shifted
to the left. But let&#39;s see this later. Okay,
<SYNC Start=14143960><P class='en'>&nbsp;
<SYNC Start=14143960><P class='en'>and we added the S at index two. So now this
is index 01 and two, which again shifted the
<SYNC Start=14144960><P class='en'>&nbsp;
<SYNC Start=14144960><P class='en'>rest to the right. Okay, so let&#39;s also remove
something, let&#39;s do this here. Let&#39;s say I
<SYNC Start=14145960><P class='en'>&nbsp;
<SYNC Start=14145960><P class='en'>remove index. And now let&#39;s see, I remove
index one, which is which should be the B.
<SYNC Start=14146960><P class='en'>&nbsp;
<SYNC Start=14146960><P class='en'>Okay. And there, it seems I am wrong because
the a is still there. And the B is still there.
<SYNC Start=14147960><P class='en'>&nbsp;
<SYNC Start=14147960><P class='en'>Let us see. Well, of course, because it&#39;s
a bit confusing. As I added the T at index
<SYNC Start=14148960><P class='en'>&nbsp;
<SYNC Start=14148960><P class='en'>position zero, a is now index position one,
and this one was removed. So removing by index
<SYNC Start=14149960><P class='en'>&nbsp;
<SYNC Start=14149960><P class='en'>is always not so easy. Really, I have to tell
you these index based methods, I hardly ever
<SYNC Start=14150960><P class='en'>&nbsp;
<SYNC Start=14150960><P class='en'>use them. Normally, you&#39;re fine, actually
with most of the methods of the collection
<SYNC Start=14151960><P class='en'>&nbsp;
<SYNC Start=14151960><P class='en'>interface, which again tells you like, often
it&#39;s a good idea to use collection here. Okay,
<SYNC Start=14152960><P class='en'>&nbsp;
<SYNC Start=14152960><P class='en'>so this actually inserts an element. Okay.
By the way, let&#39;s increment this a bit, just
<SYNC Start=14153960><P class='en'>&nbsp;
<SYNC Start=14153960><P class='en'>for demonstration purposes. I mean, this is
not so flexible. I mean, really, as I said
<SYNC Start=14154960><P class='en'>&nbsp;
<SYNC Start=14154960><P class='en'>in my slides, you should really think carefully
the number of elements that you need. Just
<SYNC Start=14155960><P class='en'>&nbsp;
<SYNC Start=14155960><P class='en'>here, it&#39;s different because we&#39;re playing
around, because I want to show you the difference
<SYNC Start=14156960><P class='en'>&nbsp;
<SYNC Start=14156960><P class='en'>again in the example between the capacity
and the size, because the size of the list
<SYNC Start=14157960><P class='en'>&nbsp;
<SYNC Start=14157960><P class='en'>is the number of elements. Let&#39;s do this here,
and not the capacity, because my area with
<SYNC Start=14158960><P class='en'>&nbsp;
<SYNC Start=14158960><P class='en'>a capacity of 100 the area will be 100 elements
big even though they&#39;re empty, but the size
<SYNC Start=14159960><P class='en'>&nbsp;
<SYNC Start=14159960><P class='en'>however, will be much smaller. And here you
see the size is four and not 100. So there
<SYNC Start=14160960><P class='en'>&nbsp;
<SYNC Start=14160960><P class='en'>is a difference. Okay. Now we can also ask
for the index of a certain element. Let&#39;s
<SYNC Start=14161960><P class='en'>&nbsp;
<SYNC Start=14161960><P class='en'>do this here. Index off and there is also
last index off and also is empty. Yeah, this
<SYNC Start=14162960><P class='en'>&nbsp;
<SYNC Start=14162960><P class='en'>we should also use. So index off. Let&#39;s use
the aim. Yeah. Which is maybe we should remove
<SYNC Start=14163960><P class='en'>&nbsp;
<SYNC Start=14163960><P class='en'>that. to not make it too confusing to keep
the A where it is. So now index off gets you
<SYNC Start=14164960><P class='en'>&nbsp;
<SYNC Start=14164960><P class='en'>the first index of an element. So I would
expect that to be zero now, let&#39;s see this.
<SYNC Start=14165960><P class='en'>&nbsp;
<SYNC Start=14165960><P class='en'>And they receive zero. And we can also say
last index of, which should be the second
<SYNC Start=14166960><P class='en'>&nbsp;
<SYNC Start=14166960><P class='en'>a.
<SYNC Start=14167960><P class='en'>&nbsp;
<SYNC Start=14167960><P class='en'>Check that. And you might ask, Well, what
do I need the index for? All you can use that
<SYNC Start=14168960><P class='en'>&nbsp;
<SYNC Start=14168960><P class='en'>to more flexible, like combine the methods
now that you have the index, you could also
<SYNC Start=14169960><P class='en'>&nbsp;
<SYNC Start=14169960><P class='en'>say like, like, remove this index or so on,
I don&#39;t know, might be helpful. Okay, so now
<SYNC Start=14170960><P class='en'>&nbsp;
<SYNC Start=14170960><P class='en'>I can also show you the clear method. And
the is empty method. I think the is empty
<SYNC Start=14171960><P class='en'>&nbsp;
<SYNC Start=14171960><P class='en'>method we already saw. But now let&#39;s use rim
<SYNC Start=14172960><P class='en'>&nbsp;
<SYNC Start=14172960><P class='en'>clear. This method is void, so I cannot cannot
print it. But I can put it here, clear, will
<SYNC Start=14173960><P class='en'>&nbsp;
<SYNC Start=14173960><P class='en'>empty the list. And then we&#39;ll ask
<SYNC Start=14174960><P class='en'>&nbsp;
<SYNC Start=14174960><P class='en'>is it empty now. And we can also print out
the list. An empty list, which is also interesting,
<SYNC Start=14175960><P class='en'>&nbsp;
<SYNC Start=14175960><P class='en'>because this would be another question. Can
I print out an empty list? Or will this again
<SYNC Start=14176960><P class='en'>&nbsp;
<SYNC Start=14176960><P class='en'>throw an exception maybe? Let&#39;s test it. And
you see yes, it is empty. And you can print
<SYNC Start=14177960><P class='en'>&nbsp;
<SYNC Start=14177960><P class='en'>it. It&#39;s just the square brackets and there&#39;s
nothing in there. So this was an empty list.
<SYNC Start=14178960><P class='en'>&nbsp;
<SYNC Start=14178960><P class='en'>Okay. So I think that&#39;s already it. A really
short introduction, some practical coding,
<SYNC Start=14179960><P class='en'>&nbsp;
<SYNC Start=14179960><P class='en'>I really recommend you to do the same fire
up your ID or your text editor and play around
<SYNC Start=14180960><P class='en'>&nbsp;
<SYNC Start=14180960><P class='en'>with the methods of earliest. I know there
are many, many more methods of course, it
<SYNC Start=14181960><P class='en'>&nbsp;
<SYNC Start=14181960><P class='en'>just that in this video i don&#39;t have all the
time. So this is just meant to give you some
<SYNC Start=14182960><P class='en'>&nbsp;
<SYNC Start=14182960><P class='en'>motivation to play around with it by yourself.
Okay, that&#39;s it for this episode. If you have
<SYNC Start=14183960><P class='en'>&nbsp;
<SYNC Start=14183960><P class='en'>any questions, leave them as a comment below
this video. And please remember to give me
<SYNC Start=14184960><P class='en'>&nbsp;
<SYNC Start=14184960><P class='en'>a thumbs up before you go. Thanks for watching,
and see you next time.
<SYNC Start=14184974><P class='en'>&nbsp;
<SYNC Start=8415><P class='tr'>Merhaba benim ücretsiz java video kursu
<SYNC Start=11235><P class='tr'>&nbsp;
<SYNC Start=11235><P class='tr'>ders bir
<SYNC Start=13395><P class='tr'>&nbsp;
<SYNC Start=13875><P class='tr'>Adım marcus biel, ben bir yazılım ustasıyım
<SYNC Start=16495><P class='tr'>&nbsp;
<SYNC Start=16495><P class='tr'>14 yıllık tecrübesiyle
<SYNC Start=19515><P class='tr'>&nbsp;
<SYNC Start=19515><P class='tr'> 
<SYNC Start=22155><P class='tr'>&nbsp;
<SYNC Start=22405><P class='tr'> 
<SYNC Start=24505><P class='tr'>&nbsp;
<SYNC Start=25245><P class='tr'> 
<SYNC Start=28245><P class='tr'>&nbsp;
<SYNC Start=28245><P class='tr'> 
<SYNC Start=31285><P class='tr'>&nbsp;
<SYNC Start=31285><P class='tr'> 
<SYNC Start=34315><P class='tr'>&nbsp;
<SYNC Start=34315><P class='tr'> 
<SYNC Start=36425><P class='tr'>&nbsp;
<SYNC Start=37255><P class='tr'> 
<SYNC Start=40145><P class='tr'>&nbsp;
<SYNC Start=40385><P class='tr'> 
<SYNC Start=43555><P class='tr'>&nbsp;
<SYNC Start=43555><P class='tr'> 
<SYNC Start=46115><P class='tr'>&nbsp;
<SYNC Start=48545><P class='tr'> 
<SYNC Start=51605><P class='tr'>&nbsp;
<SYNC Start=51605><P class='tr'> 
<SYNC Start=54435><P class='tr'>&nbsp;
<SYNC Start=54435><P class='tr'> 
<SYNC Start=57545><P class='tr'>&nbsp;
<SYNC Start=57545><P class='tr'> 
<SYNC Start=59605><P class='tr'>&nbsp;
<SYNC Start=60265><P class='tr'> 
<SYNC Start=62685><P class='tr'>&nbsp;
<SYNC Start=62685><P class='tr'> 
<SYNC Start=63775><P class='tr'>&nbsp;
<SYNC Start=64475><P class='tr'> 
<SYNC Start=67095><P class='tr'>&nbsp;
<SYNC Start=67095><P class='tr'> 
<SYNC Start=70115><P class='tr'>&nbsp;
<SYNC Start=70115><P class='tr'> 
<SYNC Start=73555><P class='tr'>&nbsp;
<SYNC Start=73605><P class='tr'> 
<SYNC Start=76595><P class='tr'>&nbsp;
<SYNC Start=76595><P class='tr'> 
<SYNC Start=79375><P class='tr'>&nbsp;
<SYNC Start=79555><P class='tr'> 
<SYNC Start=81965><P class='tr'>&nbsp;
<SYNC Start=81965><P class='tr'> 
<SYNC Start=85085><P class='tr'>&nbsp;
<SYNC Start=85085><P class='tr'> 
<SYNC Start=87385><P class='tr'>&nbsp;
<SYNC Start=88165><P class='tr'> 
<SYNC Start=90675><P class='tr'>&nbsp;
<SYNC Start=90675><P class='tr'> 
<SYNC Start=91825><P class='tr'>&nbsp;
<SYNC Start=92475><P class='tr'> 
<SYNC Start=95405><P class='tr'>&nbsp;
<SYNC Start=95405><P class='tr'> 
<SYNC Start=98125><P class='tr'>&nbsp;
<SYNC Start=99375><P class='tr'> 
<SYNC Start=102745><P class='tr'>&nbsp;
<SYNC Start=102855><P class='tr'> 
<SYNC Start=104655><P class='tr'>&nbsp;
<SYNC Start=105315><P class='tr'> 
<SYNC Start=106855><P class='tr'>&nbsp;
<SYNC Start=107355><P class='tr'> 
<SYNC Start=110055><P class='tr'>&nbsp;
<SYNC Start=110215><P class='tr'> 
<SYNC Start=113335><P class='tr'>&nbsp;
<SYNC Start=113805><P class='tr'> 
<SYNC Start=116665><P class='tr'>&nbsp;
<SYNC Start=116665><P class='tr'> 
<SYNC Start=117895><P class='tr'>&nbsp;
<SYNC Start=123615><P class='tr'> 
<SYNC Start=126625><P class='tr'>&nbsp;
<SYNC Start=126625><P class='tr'> 
<SYNC Start=128815><P class='tr'>&nbsp;
<SYNC Start=129425><P class='tr'> 
<SYNC Start=132265><P class='tr'>&nbsp;
<SYNC Start=132265><P class='tr'> 
<SYNC Start=133485><P class='tr'>&nbsp;
<SYNC Start=134075><P class='tr'> 
<SYNC Start=137265><P class='tr'>&nbsp;
<SYNC Start=137265><P class='tr'> 
<SYNC Start=140565><P class='tr'>&nbsp;
<SYNC Start=140565><P class='tr'> 
<SYNC Start=142275><P class='tr'>&nbsp;
<SYNC Start=143765><P class='tr'> 
<SYNC Start=146175><P class='tr'>&nbsp;
<SYNC Start=146175><P class='tr'> 
<SYNC Start=147285><P class='tr'>&nbsp;
<SYNC Start=148685><P class='tr'> 
<SYNC Start=151895><P class='tr'>&nbsp;
<SYNC Start=152015><P class='tr'> 
<SYNC Start=154745><P class='tr'>&nbsp;
<SYNC Start=154745><P class='tr'> 
<SYNC Start=156775><P class='tr'>&nbsp;
<SYNC Start=158765><P class='tr'> 
<SYNC Start=161885><P class='tr'>&nbsp;
<SYNC Start=161885><P class='tr'> 
<SYNC Start=164915><P class='tr'>&nbsp;
<SYNC Start=164915><P class='tr'> 
<SYNC Start=167785><P class='tr'>&nbsp;
<SYNC Start=167785><P class='tr'> 
<SYNC Start=169095><P class='tr'>&nbsp;
<SYNC Start=169725><P class='tr'> 
<SYNC Start=172305><P class='tr'>&nbsp;
<SYNC Start=172305><P class='tr'> 
<SYNC Start=173855><P class='tr'>&nbsp;
<SYNC Start=174175><P class='tr'> 
<SYNC Start=177085><P class='tr'>&nbsp;
<SYNC Start=177085><P class='tr'> 
<SYNC Start=179555><P class='tr'>&nbsp;
<SYNC Start=181505><P class='tr'> 
<SYNC Start=184565><P class='tr'>&nbsp;
<SYNC Start=184565><P class='tr'> 
<SYNC Start=187535><P class='tr'>&nbsp;
<SYNC Start=187535><P class='tr'> 
<SYNC Start=190425><P class='tr'>&nbsp;
<SYNC Start=190425><P class='tr'> 
<SYNC Start=193375><P class='tr'>&nbsp;
<SYNC Start=193375><P class='tr'> 
<SYNC Start=194375><P class='tr'>&nbsp;
<SYNC Start=195725><P class='tr'> 
<SYNC Start=198425><P class='tr'>&nbsp;
<SYNC Start=198425><P class='tr'> 
<SYNC Start=201615><P class='tr'>&nbsp;
<SYNC Start=201805><P class='tr'> 
<SYNC Start=204515><P class='tr'>&nbsp;
<SYNC Start=204515><P class='tr'> 
<SYNC Start=206475><P class='tr'>&nbsp;
<SYNC Start=209355><P class='tr'> 
<SYNC Start=211865><P class='tr'>&nbsp;
<SYNC Start=211865><P class='tr'> 
<SYNC Start=215055><P class='tr'>&nbsp;
<SYNC Start=215055><P class='tr'> 
<SYNC Start=216815><P class='tr'>&nbsp;
<SYNC Start=217135><P class='tr'> 
<SYNC Start=219165><P class='tr'>&nbsp;
<SYNC Start=219165><P class='tr'> 
<SYNC Start=221745><P class='tr'>&nbsp;
<SYNC Start=223495><P class='tr'> 
<SYNC Start=226125><P class='tr'>&nbsp;
<SYNC Start=226795><P class='tr'> 
<SYNC Start=230035><P class='tr'>&nbsp;
<SYNC Start=231675><P class='tr'> 
<SYNC Start=234655><P class='tr'>&nbsp;
<SYNC Start=234655><P class='tr'> 
<SYNC Start=237325><P class='tr'>&nbsp;
<SYNC Start=238485><P class='tr'> 
<SYNC Start=241855><P class='tr'>&nbsp;
<SYNC Start=241855><P class='tr'> 
<SYNC Start=243975><P class='tr'>&nbsp;
<SYNC Start=244805><P class='tr'> 
<SYNC Start=247765><P class='tr'>&nbsp;
<SYNC Start=247765><P class='tr'> 
<SYNC Start=250375><P class='tr'>&nbsp;
<SYNC Start=250375><P class='tr'> 
<SYNC Start=253485><P class='tr'>&nbsp;
<SYNC Start=254055><P class='tr'> 
<SYNC Start=257495><P class='tr'>&nbsp;
<SYNC Start=257495><P class='tr'> 
<SYNC Start=260475><P class='tr'>&nbsp;
<SYNC Start=260475><P class='tr'> 
<SYNC Start=263465><P class='tr'>&nbsp;
<SYNC Start=264475><P class='tr'> 
<SYNC Start=267825><P class='tr'>&nbsp;
<SYNC Start=268075><P class='tr'> 
<SYNC Start=270035><P class='tr'>&nbsp;
<SYNC Start=270425><P class='tr'> 
<SYNC Start=273095><P class='tr'>&nbsp;
<SYNC Start=273095><P class='tr'> 
<SYNC Start=274965><P class='tr'>&nbsp;
<SYNC Start=275455><P class='tr'> 
<SYNC Start=277945><P class='tr'>&nbsp;
<SYNC Start=278125><P class='tr'> 
<SYNC Start=280535><P class='tr'>&nbsp;
<SYNC Start=280535><P class='tr'> 
<SYNC Start=283275><P class='tr'>&nbsp;
<SYNC Start=283275><P class='tr'> 
<SYNC Start=285125><P class='tr'>&nbsp;
<SYNC Start=285745><P class='tr'> 
<SYNC Start=287415><P class='tr'>&nbsp;
<SYNC Start=289995><P class='tr'> 
<SYNC Start=293455><P class='tr'>&nbsp;
<SYNC Start=293495><P class='tr'> 
<SYNC Start=295685><P class='tr'>&nbsp;
<SYNC Start=296045><P class='tr'> 
<SYNC Start=298605><P class='tr'>&nbsp;
<SYNC Start=298605><P class='tr'> 
<SYNC Start=300425><P class='tr'>&nbsp;
<SYNC Start=301795><P class='tr'> 
<SYNC Start=303375><P class='tr'>&nbsp;
<SYNC Start=303375><P class='tr'> 
<SYNC Start=306705><P class='tr'>&nbsp;
<SYNC Start=306705><P class='tr'> 
<SYNC Start=309855><P class='tr'>&nbsp;
<SYNC Start=309855><P class='tr'> 
<SYNC Start=312335><P class='tr'>&nbsp;
<SYNC Start=312335><P class='tr'> 
<SYNC Start=315035><P class='tr'>&nbsp;
<SYNC Start=315515><P class='tr'> 
<SYNC Start=318745><P class='tr'>&nbsp;
<SYNC Start=320955><P class='tr'> 
<SYNC Start=323995><P class='tr'>&nbsp;
<SYNC Start=323995><P class='tr'> 
<SYNC Start=327485><P class='tr'>&nbsp;
<SYNC Start=329925><P class='tr'> 
<SYNC Start=333115><P class='tr'>&nbsp;
<SYNC Start=333115><P class='tr'> 
<SYNC Start=335585><P class='tr'>&nbsp;
<SYNC Start=335585><P class='tr'> 
<SYNC Start=337755><P class='tr'>&nbsp;
<SYNC Start=339525><P class='tr'> 
<SYNC Start=342155><P class='tr'>&nbsp;
<SYNC Start=342155><P class='tr'> 
<SYNC Start=345195><P class='tr'>&nbsp;
<SYNC Start=345195><P class='tr'> 
<SYNC Start=348445><P class='tr'>&nbsp;
<SYNC Start=348445><P class='tr'> 
<SYNC Start=349735><P class='tr'>&nbsp;
<SYNC Start=350255><P class='tr'> 
<SYNC Start=351645><P class='tr'>&nbsp;
<SYNC Start=351645><P class='tr'> 
<SYNC Start=355075><P class='tr'>&nbsp;
<SYNC Start=355395><P class='tr'> 
<SYNC Start=358865><P class='tr'>&nbsp;
<SYNC Start=358865><P class='tr'> 
<SYNC Start=361845><P class='tr'>&nbsp;
<SYNC Start=361845><P class='tr'> 
<SYNC Start=363355><P class='tr'>&nbsp;
<SYNC Start=363745><P class='tr'> 
<SYNC Start=366205><P class='tr'>&nbsp;
<SYNC Start=369565><P class='tr'> 
<SYNC Start=372965><P class='tr'>&nbsp;
<SYNC Start=372975><P class='tr'> 
<SYNC Start=376005><P class='tr'>&nbsp;
<SYNC Start=376005><P class='tr'> 
<SYNC Start=378865><P class='tr'>&nbsp;
<SYNC Start=378865><P class='tr'> 
<SYNC Start=381715><P class='tr'>&nbsp;
<SYNC Start=381715><P class='tr'> 
<SYNC Start=383045><P class='tr'>&nbsp;
<SYNC Start=383535><P class='tr'> 
<SYNC Start=386405><P class='tr'>&nbsp;
<SYNC Start=386405><P class='tr'> 
<SYNC Start=387905><P class='tr'>&nbsp;
<SYNC Start=388255><P class='tr'> 
<SYNC Start=390915><P class='tr'>&nbsp;
<SYNC Start=390915><P class='tr'> 
<SYNC Start=394125><P class='tr'>&nbsp;
<SYNC Start=394525><P class='tr'> 
<SYNC Start=397395><P class='tr'>&nbsp;
<SYNC Start=397495><P class='tr'> 
<SYNC Start=400305><P class='tr'>&nbsp;
<SYNC Start=400305><P class='tr'> 
<SYNC Start=402295><P class='tr'>&nbsp;
<SYNC Start=402675><P class='tr'> 
<SYNC Start=405775><P class='tr'>&nbsp;
<SYNC Start=405775><P class='tr'> 
<SYNC Start=408825><P class='tr'>&nbsp;
<SYNC Start=408825><P class='tr'> 
<SYNC Start=410465><P class='tr'>&nbsp;
<SYNC Start=410905><P class='tr'> 
<SYNC Start=414045><P class='tr'>&nbsp;
<SYNC Start=414135><P class='tr'> 
<SYNC Start=416795><P class='tr'>&nbsp;
<SYNC Start=416795><P class='tr'> 
<SYNC Start=417795><P class='tr'>&nbsp;
<SYNC Start=418225><P class='tr'> 
<SYNC Start=421125><P class='tr'>&nbsp;
<SYNC Start=421125><P class='tr'> 
<SYNC Start=423265><P class='tr'>&nbsp;
<SYNC Start=423705><P class='tr'> 
<SYNC Start=426675><P class='tr'>&nbsp;
<SYNC Start=426675><P class='tr'> 
<SYNC Start=427675><P class='tr'>&nbsp;
<SYNC Start=429615><P class='tr'> 
<SYNC Start=432565><P class='tr'>&nbsp;
<SYNC Start=432565><P class='tr'> 
<SYNC Start=434615><P class='tr'>&nbsp;
<SYNC Start=435045><P class='tr'> 
<SYNC Start=438155><P class='tr'>&nbsp;
<SYNC Start=438245><P class='tr'> 
<SYNC Start=440255><P class='tr'>&nbsp;
<SYNC Start=440255><P class='tr'> 
<SYNC Start=443035><P class='tr'>&nbsp;
<SYNC Start=443035><P class='tr'> 
<SYNC Start=446045><P class='tr'>&nbsp;
<SYNC Start=449845><P class='tr'> 
<SYNC Start=452885><P class='tr'>&nbsp;
<SYNC Start=452885><P class='tr'> 
<SYNC Start=453965><P class='tr'>&nbsp;
<SYNC Start=455965><P class='tr'> 
<SYNC Start=459055><P class='tr'>&nbsp;
<SYNC Start=459055><P class='tr'> 
<SYNC Start=461875><P class='tr'>&nbsp;
<SYNC Start=461875><P class='tr'> 
<SYNC Start=464015><P class='tr'>&nbsp;
<SYNC Start=464015><P class='tr'> 
<SYNC Start=467205><P class='tr'>&nbsp;
<SYNC Start=467465><P class='tr'> 
<SYNC Start=470615><P class='tr'>&nbsp;
<SYNC Start=470715><P class='tr'> 
<SYNC Start=474045><P class='tr'>&nbsp;
<SYNC Start=474045><P class='tr'> 
<SYNC Start=477015><P class='tr'>&nbsp;
<SYNC Start=477365><P class='tr'> 
<SYNC Start=480175><P class='tr'>&nbsp;
<SYNC Start=480175><P class='tr'> 
<SYNC Start=483065><P class='tr'>&nbsp;
<SYNC Start=483065><P class='tr'> 
<SYNC Start=484125><P class='tr'>&nbsp;
<SYNC Start=484435><P class='tr'> 
<SYNC Start=487475><P class='tr'>&nbsp;
<SYNC Start=487475><P class='tr'> 
<SYNC Start=490185><P class='tr'>&nbsp;
<SYNC Start=490185><P class='tr'> 
<SYNC Start=493175><P class='tr'>&nbsp;
<SYNC Start=493965><P class='tr'> 
<SYNC Start=497115><P class='tr'>&nbsp;
<SYNC Start=497625><P class='tr'> 
<SYNC Start=500605><P class='tr'>&nbsp;
<SYNC Start=500605><P class='tr'> 
<SYNC Start=503315><P class='tr'>&nbsp;
<SYNC Start=503315><P class='tr'> 
<SYNC Start=504315><P class='tr'>&nbsp;
<SYNC Start=505275><P class='tr'> 
<SYNC Start=507815><P class='tr'>&nbsp;
<SYNC Start=507955><P class='tr'> 
<SYNC Start=511325><P class='tr'>&nbsp;
<SYNC Start=511325><P class='tr'> 
<SYNC Start=514245><P class='tr'>&nbsp;
<SYNC Start=514245><P class='tr'> 
<SYNC Start=516215><P class='tr'>&nbsp;
<SYNC Start=517245><P class='tr'> 
<SYNC Start=519755><P class='tr'>&nbsp;
<SYNC Start=520185><P class='tr'> 
<SYNC Start=523215><P class='tr'>&nbsp;
<SYNC Start=523215><P class='tr'> 
<SYNC Start=525985><P class='tr'>&nbsp;
<SYNC Start=526685><P class='tr'> 
<SYNC Start=529695><P class='tr'>&nbsp;
<SYNC Start=529695><P class='tr'> 
<SYNC Start=532135><P class='tr'>&nbsp;
<SYNC Start=532135><P class='tr'> 
<SYNC Start=533985><P class='tr'>&nbsp;
<SYNC Start=535205><P class='tr'> 
<SYNC Start=537535><P class='tr'>&nbsp;
<SYNC Start=537945><P class='tr'> 
<SYNC Start=540945><P class='tr'>&nbsp;
<SYNC Start=540945><P class='tr'> 
<SYNC Start=543965><P class='tr'>&nbsp;
<SYNC Start=543965><P class='tr'> 
<SYNC Start=545025><P class='tr'>&nbsp;
<SYNC Start=545615><P class='tr'> 
<SYNC Start=548665><P class='tr'>&nbsp;
<SYNC Start=548665><P class='tr'> 
<SYNC Start=550705><P class='tr'>&nbsp;
<SYNC Start=550725><P class='tr'> 
<SYNC Start=552905><P class='tr'>&nbsp;
<SYNC Start=553285><P class='tr'> 
<SYNC Start=556245><P class='tr'>&nbsp;
<SYNC Start=556635><P class='tr'> 
<SYNC Start=559645><P class='tr'>&nbsp;
<SYNC Start=559645><P class='tr'> 
<SYNC Start=562695><P class='tr'>&nbsp;
<SYNC Start=562695><P class='tr'> 
<SYNC Start=565725><P class='tr'>&nbsp;
<SYNC Start=565725><P class='tr'> 
<SYNC Start=568295><P class='tr'>&nbsp;
<SYNC Start=568805><P class='tr'> 
<SYNC Start=571445><P class='tr'>&nbsp;
<SYNC Start=571445><P class='tr'> 
<SYNC Start=574275><P class='tr'>&nbsp;
<SYNC Start=574275><P class='tr'> 
<SYNC Start=575585><P class='tr'>&nbsp;
<SYNC Start=577005><P class='tr'> 
<SYNC Start=580375><P class='tr'>&nbsp;
<SYNC Start=580625><P class='tr'> 
<SYNC Start=583305><P class='tr'>&nbsp;
<SYNC Start=583305><P class='tr'> 
<SYNC Start=585685><P class='tr'>&nbsp;
<SYNC Start=586495><P class='tr'> 
<SYNC Start=589505><P class='tr'>&nbsp;
<SYNC Start=589505><P class='tr'> 
<SYNC Start=590505><P class='tr'>&nbsp;
<SYNC Start=590735><P class='tr'> 
<SYNC Start=593715><P class='tr'>&nbsp;
<SYNC Start=593715><P class='tr'> 
<SYNC Start=594715><P class='tr'>&nbsp;
<SYNC Start=595655><P class='tr'> 
<SYNC Start=598805><P class='tr'>&nbsp;
<SYNC Start=599355><P class='tr'> 
<SYNC Start=601625><P class='tr'>&nbsp;
<SYNC Start=602495><P class='tr'> 
<SYNC Start=605705><P class='tr'>&nbsp;
<SYNC Start=605835><P class='tr'> 
<SYNC Start=608875><P class='tr'>&nbsp;
<SYNC Start=608875><P class='tr'> 
<SYNC Start=610975><P class='tr'>&nbsp;
<SYNC Start=611485><P class='tr'> 
<SYNC Start=614405><P class='tr'>&nbsp;
<SYNC Start=614405><P class='tr'> 
<SYNC Start=617105><P class='tr'>&nbsp;
<SYNC Start=617565><P class='tr'> 
<SYNC Start=620655><P class='tr'>&nbsp;
<SYNC Start=620655><P class='tr'> 
<SYNC Start=623555><P class='tr'>&nbsp;
<SYNC Start=624205><P class='tr'> 
<SYNC Start=626765><P class='tr'>&nbsp;
<SYNC Start=627355><P class='tr'> 
<SYNC Start=630055><P class='tr'>&nbsp;
<SYNC Start=630055><P class='tr'> 
<SYNC Start=633265><P class='tr'>&nbsp;
<SYNC Start=638535><P class='tr'> 
<SYNC Start=641735><P class='tr'>&nbsp;
<SYNC Start=641735><P class='tr'> 
<SYNC Start=644325><P class='tr'>&nbsp;
<SYNC Start=644325><P class='tr'> 
<SYNC Start=645935><P class='tr'>&nbsp;
<SYNC Start=646405><P class='tr'> 
<SYNC Start=649315><P class='tr'>&nbsp;
<SYNC Start=649315><P class='tr'> 
<SYNC Start=651065><P class='tr'>&nbsp;
<SYNC Start=651635><P class='tr'> 
<SYNC Start=654155><P class='tr'>&nbsp;
<SYNC Start=654155><P class='tr'> 
<SYNC Start=656765><P class='tr'>&nbsp;
<SYNC Start=656765><P class='tr'> 
<SYNC Start=659565><P class='tr'>&nbsp;
<SYNC Start=659565><P class='tr'> 
<SYNC Start=662515><P class='tr'>&nbsp;
<SYNC Start=662515><P class='tr'> 
<SYNC Start=665405><P class='tr'>&nbsp;
<SYNC Start=665405><P class='tr'> 
<SYNC Start=667045><P class='tr'>&nbsp;
<SYNC Start=667455><P class='tr'> 
<SYNC Start=670655><P class='tr'>&nbsp;
<SYNC Start=670765><P class='tr'> 
<SYNC Start=673455><P class='tr'>&nbsp;
<SYNC Start=673455><P class='tr'> 
<SYNC Start=675435><P class='tr'>&nbsp;
<SYNC Start=675835><P class='tr'> 
<SYNC Start=678575><P class='tr'>&nbsp;
<SYNC Start=678575><P class='tr'> 
<SYNC Start=680575><P class='tr'>&nbsp;
<SYNC Start=680615><P class='tr'> 
<SYNC Start=683895><P class='tr'>&nbsp;
<SYNC Start=684455><P class='tr'> 
<SYNC Start=687645><P class='tr'>&nbsp;
<SYNC Start=688535><P class='tr'> 
<SYNC Start=691745><P class='tr'>&nbsp;
<SYNC Start=691745><P class='tr'> 
<SYNC Start=693745><P class='tr'>&nbsp;
<SYNC Start=694625><P class='tr'> 
<SYNC Start=697375><P class='tr'>&nbsp;
<SYNC Start=697375><P class='tr'> 
<SYNC Start=698395><P class='tr'>&nbsp;
<SYNC Start=698765><P class='tr'> 
<SYNC Start=701575><P class='tr'>&nbsp;
<SYNC Start=701575><P class='tr'> 
<SYNC Start=703605><P class='tr'>&nbsp;
<SYNC Start=703605><P class='tr'> 
<SYNC Start=706295><P class='tr'>&nbsp;
<SYNC Start=709955><P class='tr'> 
<SYNC Start=712885><P class='tr'>&nbsp;
<SYNC Start=712885><P class='tr'> 
<SYNC Start=716035><P class='tr'>&nbsp;
<SYNC Start=716035><P class='tr'> 
<SYNC Start=718085><P class='tr'>&nbsp;
<SYNC Start=719045><P class='tr'> 
<SYNC Start=721635><P class='tr'>&nbsp;
<SYNC Start=721635><P class='tr'> 
<SYNC Start=724675><P class='tr'>&nbsp;
<SYNC Start=724675><P class='tr'> 
<SYNC Start=727215><P class='tr'>&nbsp;
<SYNC Start=727215><P class='tr'> 
<SYNC Start=729005><P class='tr'>&nbsp;
<SYNC Start=729665><P class='tr'> 
<SYNC Start=732355><P class='tr'>&nbsp;
<SYNC Start=732355><P class='tr'> 
<SYNC Start=734995><P class='tr'>&nbsp;
<SYNC Start=735415><P class='tr'> 
<SYNC Start=738245><P class='tr'>&nbsp;
<SYNC Start=738245><P class='tr'> 
<SYNC Start=739685><P class='tr'>&nbsp;
<SYNC Start=740485><P class='tr'> 
<SYNC Start=743795><P class='tr'>&nbsp;
<SYNC Start=746975><P class='tr'> 
<SYNC Start=749385><P class='tr'>&nbsp;
<SYNC Start=749385><P class='tr'> 
<SYNC Start=752255><P class='tr'>&nbsp;
<SYNC Start=752255><P class='tr'> 
<SYNC Start=754985><P class='tr'>&nbsp;
<SYNC Start=757415><P class='tr'> 
<SYNC Start=759995><P class='tr'>&nbsp;
<SYNC Start=759995><P class='tr'> 
<SYNC Start=762785><P class='tr'>&nbsp;
<SYNC Start=762785><P class='tr'> 
<SYNC Start=765825><P class='tr'>&nbsp;
<SYNC Start=765825><P class='tr'> 
<SYNC Start=769295><P class='tr'>&nbsp;
<SYNC Start=774265><P class='tr'> 
<SYNC Start=777045><P class='tr'>&nbsp;
<SYNC Start=777045><P class='tr'> 
<SYNC Start=779775><P class='tr'>&nbsp;
<SYNC Start=779775><P class='tr'> 
<SYNC Start=783175><P class='tr'>&nbsp;
<SYNC Start=783205><P class='tr'> 
<SYNC Start=785665><P class='tr'>&nbsp;
<SYNC Start=785665><P class='tr'> 
<SYNC Start=788935><P class='tr'>&nbsp;
<SYNC Start=789595><P class='tr'> 
<SYNC Start=792465><P class='tr'>&nbsp;
<SYNC Start=792465><P class='tr'> 
<SYNC Start=795865><P class='tr'>&nbsp;
<SYNC Start=799705><P class='tr'> 
<SYNC Start=802585><P class='tr'>&nbsp;
<SYNC Start=802585><P class='tr'> 
<SYNC Start=805675><P class='tr'>&nbsp;
<SYNC Start=805675><P class='tr'> 
<SYNC Start=808355><P class='tr'>&nbsp;
<SYNC Start=812235><P class='tr'> 
<SYNC Start=814825><P class='tr'>&nbsp;
<SYNC Start=814825><P class='tr'> 
<SYNC Start=817785><P class='tr'>&nbsp;
<SYNC Start=817955><P class='tr'> 
<SYNC Start=821005><P class='tr'>&nbsp;
<SYNC Start=821505><P class='tr'> 
<SYNC Start=824145><P class='tr'>&nbsp;
<SYNC Start=824145><P class='tr'> 
<SYNC Start=827375><P class='tr'>&nbsp;
<SYNC Start=827375><P class='tr'> 
<SYNC Start=830335><P class='tr'>&nbsp;
<SYNC Start=830335><P class='tr'> 
<SYNC Start=833355><P class='tr'>&nbsp;
<SYNC Start=833355><P class='tr'> 
<SYNC Start=834585><P class='tr'>&nbsp;
<SYNC Start=836315><P class='tr'> 
<SYNC Start=839205><P class='tr'>&nbsp;
<SYNC Start=839375><P class='tr'> 
<SYNC Start=842685><P class='tr'>&nbsp;
<SYNC Start=842685><P class='tr'> 
<SYNC Start=845835><P class='tr'>&nbsp;
<SYNC Start=845835><P class='tr'> 
<SYNC Start=848595><P class='tr'>&nbsp;
<SYNC Start=849155><P class='tr'> 
<SYNC Start=851795><P class='tr'>&nbsp;
<SYNC Start=851795><P class='tr'> 
<SYNC Start=854905><P class='tr'>&nbsp;
<SYNC Start=854905><P class='tr'> 
<SYNC Start=857595><P class='tr'>&nbsp;
<SYNC Start=857975><P class='tr'> 
<SYNC Start=859715><P class='tr'>&nbsp;
<SYNC Start=860175><P class='tr'> 
<SYNC Start=863305><P class='tr'>&nbsp;
<SYNC Start=863535><P class='tr'> 
<SYNC Start=866315><P class='tr'>&nbsp;
<SYNC Start=866495><P class='tr'> 
<SYNC Start=869085><P class='tr'>&nbsp;
<SYNC Start=869085><P class='tr'> 
<SYNC Start=871755><P class='tr'>&nbsp;
<SYNC Start=875775><P class='tr'> 
<SYNC Start=878725><P class='tr'>&nbsp;
<SYNC Start=879355><P class='tr'> 
<SYNC Start=882715><P class='tr'>&nbsp;
<SYNC Start=883075><P class='tr'> 
<SYNC Start=886095><P class='tr'>&nbsp;
<SYNC Start=886095><P class='tr'> 
<SYNC Start=889195><P class='tr'>&nbsp;
<SYNC Start=889195><P class='tr'> 
<SYNC Start=891005><P class='tr'>&nbsp;
<SYNC Start=895195><P class='tr'> 
<SYNC Start=898285><P class='tr'>&nbsp;
<SYNC Start=898285><P class='tr'> 
<SYNC Start=900665><P class='tr'>&nbsp;
<SYNC Start=900665><P class='tr'> 
<SYNC Start=903215><P class='tr'>&nbsp;
<SYNC Start=903215><P class='tr'> 
<SYNC Start=905085><P class='tr'>&nbsp;
<SYNC Start=906775><P class='tr'> 
<SYNC Start=909705><P class='tr'>&nbsp;
<SYNC Start=909705><P class='tr'> 
<SYNC Start=912605><P class='tr'>&nbsp;
<SYNC Start=912605><P class='tr'> 
<SYNC Start=913875><P class='tr'>&nbsp;
<SYNC Start=916935><P class='tr'> 
<SYNC Start=919215><P class='tr'>&nbsp;
<SYNC Start=919215><P class='tr'> 
<SYNC Start=922495><P class='tr'>&nbsp;
<SYNC Start=922695><P class='tr'> 
<SYNC Start=924785><P class='tr'>&nbsp;
<SYNC Start=926245><P class='tr'> 
<SYNC Start=929175><P class='tr'>&nbsp;
<SYNC Start=931365><P class='tr'> 
<SYNC Start=933565><P class='tr'>&nbsp;
<SYNC Start=933565><P class='tr'> 
<SYNC Start=936235><P class='tr'>&nbsp;
<SYNC Start=936335><P class='tr'> 
<SYNC Start=938955><P class='tr'>&nbsp;
<SYNC Start=938955><P class='tr'> 
<SYNC Start=940345><P class='tr'>&nbsp;
<SYNC Start=942525><P class='tr'> 
<SYNC Start=945385><P class='tr'>&nbsp;
<SYNC Start=945385><P class='tr'> 
<SYNC Start=948285><P class='tr'>&nbsp;
<SYNC Start=948285><P class='tr'> 
<SYNC Start=951255><P class='tr'>&nbsp;
<SYNC Start=951255><P class='tr'> 
<SYNC Start=953835><P class='tr'>&nbsp;
<SYNC Start=956045><P class='tr'> 
<SYNC Start=959545><P class='tr'>&nbsp;
<SYNC Start=959635><P class='tr'> 
<SYNC Start=962625><P class='tr'>&nbsp;
<SYNC Start=962625><P class='tr'> 
<SYNC Start=963625><P class='tr'>&nbsp;
<SYNC Start=965175><P class='tr'> 
<SYNC Start=968115><P class='tr'>&nbsp;
<SYNC Start=968115><P class='tr'> 
<SYNC Start=971205><P class='tr'>&nbsp;
<SYNC Start=972955><P class='tr'> 
<SYNC Start=975975><P class='tr'>&nbsp;
<SYNC Start=975975><P class='tr'> 
<SYNC Start=978855><P class='tr'>&nbsp;
<SYNC Start=978995><P class='tr'> 
<SYNC Start=981765><P class='tr'>&nbsp;
<SYNC Start=985045><P class='tr'> 
<SYNC Start=988225><P class='tr'>&nbsp;
<SYNC Start=988475><P class='tr'> 
<SYNC Start=991475><P class='tr'>&nbsp;
<SYNC Start=991515><P class='tr'> 
<SYNC Start=992825><P class='tr'>&nbsp;
<SYNC Start=993655><P class='tr'> 
<SYNC Start=996675><P class='tr'>&nbsp;
<SYNC Start=996675><P class='tr'> 
<SYNC Start=997675><P class='tr'>&nbsp;
<SYNC Start=997935><P class='tr'> 
<SYNC Start=1000785><P class='tr'>&nbsp;
<SYNC Start=1000785><P class='tr'> 
<SYNC Start=1004235><P class='tr'>&nbsp;
<SYNC Start=1004235><P class='tr'> 
<SYNC Start=1007095><P class='tr'>&nbsp;
<SYNC Start=1007095><P class='tr'> 
<SYNC Start=1009715><P class='tr'>&nbsp;
<SYNC Start=1010365><P class='tr'> 
<SYNC Start=1012675><P class='tr'>&nbsp;
<SYNC Start=1012675><P class='tr'> 
<SYNC Start=1015795><P class='tr'>&nbsp;
<SYNC Start=1015875><P class='tr'> 
<SYNC Start=1018695><P class='tr'>&nbsp;
<SYNC Start=1018715><P class='tr'> 
<SYNC Start=1021765><P class='tr'>&nbsp;
<SYNC Start=1021885><P class='tr'> 
<SYNC Start=1024625><P class='tr'>&nbsp;
<SYNC Start=1024625><P class='tr'> 
<SYNC Start=1027635><P class='tr'>&nbsp;
<SYNC Start=1027635><P class='tr'> 
<SYNC Start=1028955><P class='tr'>&nbsp;
<SYNC Start=1029355><P class='tr'> 
<SYNC Start=1031905><P class='tr'>&nbsp;
<SYNC Start=1031905><P class='tr'> 
<SYNC Start=1034885><P class='tr'>&nbsp;
<SYNC Start=1034885><P class='tr'> 
<SYNC Start=1036385><P class='tr'>&nbsp;
<SYNC Start=1040365><P class='tr'> 
<SYNC Start=1043065><P class='tr'>&nbsp;
<SYNC Start=1043064><P class='tr'> 
<SYNC Start=1046094><P class='tr'>&nbsp;
<SYNC Start=1046095><P class='tr'> 
<SYNC Start=1049125><P class='tr'>&nbsp;
<SYNC Start=1049125><P class='tr'> 
<SYNC Start=1051195><P class='tr'>&nbsp;
<SYNC Start=1051195><P class='tr'> 
<SYNC Start=1053015><P class='tr'>&nbsp;
<SYNC Start=1057565><P class='tr'> 
<SYNC Start=1060945><P class='tr'>&nbsp;
<SYNC Start=1061145><P class='tr'> 
<SYNC Start=1064065><P class='tr'>&nbsp;
<SYNC Start=1064065><P class='tr'> 
<SYNC Start=1067035><P class='tr'>&nbsp;
<SYNC Start=1067645><P class='tr'> 
<SYNC Start=1070725><P class='tr'>&nbsp;
<SYNC Start=1070725><P class='tr'> 
<SYNC Start=1073785><P class='tr'>&nbsp;
<SYNC Start=1073785><P class='tr'> 
<SYNC Start=1076235><P class='tr'>&nbsp;
<SYNC Start=1076235><P class='tr'> 
<SYNC Start=1079265><P class='tr'>&nbsp;
<SYNC Start=1079265><P class='tr'> 
<SYNC Start=1082365><P class='tr'>&nbsp;
<SYNC Start=1082365><P class='tr'> 
<SYNC Start=1084965><P class='tr'>&nbsp;
<SYNC Start=1084965><P class='tr'> 
<SYNC Start=1087825><P class='tr'>&nbsp;
<SYNC Start=1087945><P class='tr'> 
<SYNC Start=1091165><P class='tr'>&nbsp;
<SYNC Start=1091165><P class='tr'> 
<SYNC Start=1093805><P class='tr'>&nbsp;
<SYNC Start=1093805><P class='tr'> 
<SYNC Start=1095035><P class='tr'>&nbsp;
<SYNC Start=1096095><P class='tr'> 
<SYNC Start=1098675><P class='tr'>&nbsp;
<SYNC Start=1098675><P class='tr'> 
<SYNC Start=1101695><P class='tr'>&nbsp;
<SYNC Start=1101695><P class='tr'> 
<SYNC Start=1104755><P class='tr'>&nbsp;
<SYNC Start=1104755><P class='tr'> 
<SYNC Start=1106575><P class='tr'>&nbsp;
<SYNC Start=1107655><P class='tr'> 
<SYNC Start=1110785><P class='tr'>&nbsp;
<SYNC Start=1110785><P class='tr'> 
<SYNC Start=1113825><P class='tr'>&nbsp;
<SYNC Start=1113825><P class='tr'> 
<SYNC Start=1116285><P class='tr'>&nbsp;
<SYNC Start=1116285><P class='tr'> 
<SYNC Start=1119155><P class='tr'>&nbsp;
<SYNC Start=1119305><P class='tr'> 
<SYNC Start=1122645><P class='tr'>&nbsp;
<SYNC Start=1122645><P class='tr'> 
<SYNC Start=1124205><P class='tr'>&nbsp;
<SYNC Start=1124545><P class='tr'> 
<SYNC Start=1127705><P class='tr'>&nbsp;
<SYNC Start=1128225><P class='tr'> 
<SYNC Start=1130355><P class='tr'>&nbsp;
<SYNC Start=1130695><P class='tr'> 
<SYNC Start=1131695><P class='tr'>&nbsp;
<SYNC Start=1131985><P class='tr'> 
<SYNC Start=1135275><P class='tr'>&nbsp;
<SYNC Start=1135685><P class='tr'> 
<SYNC Start=1137675><P class='tr'>&nbsp;
<SYNC Start=1141335><P class='tr'> 
<SYNC Start=1144795><P class='tr'>&nbsp;
<SYNC Start=1145325><P class='tr'> 
<SYNC Start=1148055><P class='tr'>&nbsp;
<SYNC Start=1148055><P class='tr'> 
<SYNC Start=1150655><P class='tr'>&nbsp;
<SYNC Start=1150785><P class='tr'> 
<SYNC Start=1153745><P class='tr'>&nbsp;
<SYNC Start=1153745><P class='tr'> 
<SYNC Start=1155625><P class='tr'>&nbsp;
<SYNC Start=1159635><P class='tr'> 
<SYNC Start=1162705><P class='tr'>&nbsp;
<SYNC Start=1162705><P class='tr'> 
<SYNC Start=1165915><P class='tr'>&nbsp;
<SYNC Start=1165915><P class='tr'> 
<SYNC Start=1168735><P class='tr'>&nbsp;
<SYNC Start=1169025><P class='tr'> 
<SYNC Start=1171975><P class='tr'>&nbsp;
<SYNC Start=1171975><P class='tr'> 
<SYNC Start=1172965><P class='tr'>&nbsp;
<SYNC Start=1172965><P class='tr'> 
<SYNC Start=1174925><P class='tr'>&nbsp;
<SYNC Start=1175775><P class='tr'> 
<SYNC Start=1178785><P class='tr'>&nbsp;
<SYNC Start=1178785><P class='tr'> 
<SYNC Start=1181405><P class='tr'>&nbsp;
<SYNC Start=1182945><P class='tr'> 
<SYNC Start=1185925><P class='tr'>&nbsp;
<SYNC Start=1185925><P class='tr'> 
<SYNC Start=1189115><P class='tr'>&nbsp;
<SYNC Start=1189115><P class='tr'> 
<SYNC Start=1191705><P class='tr'>&nbsp;
<SYNC Start=1191705><P class='tr'> 
<SYNC Start=1193525><P class='tr'>&nbsp;
<SYNC Start=1198065><P class='tr'> 
<SYNC Start=1201055><P class='tr'>&nbsp;
<SYNC Start=1201055><P class='tr'> 
<SYNC Start=1202195><P class='tr'>&nbsp;
<SYNC Start=1202985><P class='tr'> 
<SYNC Start=1204035><P class='tr'>&nbsp;
<SYNC Start=1204475><P class='tr'> 
<SYNC Start=1207305><P class='tr'>&nbsp;
<SYNC Start=1207305><P class='tr'> 
<SYNC Start=1210055><P class='tr'>&nbsp;
<SYNC Start=1210055><P class='tr'> 
<SYNC Start=1212165><P class='tr'>&nbsp;
<SYNC Start=1212165><P class='tr'> 
<SYNC Start=1214975><P class='tr'>&nbsp;
<SYNC Start=1215615><P class='tr'> 
<SYNC Start=1218835><P class='tr'>&nbsp;
<SYNC Start=1219325><P class='tr'> 
<SYNC Start=1221905><P class='tr'>&nbsp;
<SYNC Start=1221905><P class='tr'> 
<SYNC Start=1222905><P class='tr'>&nbsp;
<SYNC Start=1225055><P class='tr'> 
<SYNC Start=1228285><P class='tr'>&nbsp;
<SYNC Start=1228615><P class='tr'> 
<SYNC Start=1231605><P class='tr'>&nbsp;
<SYNC Start=1231605><P class='tr'> 
<SYNC Start=1234035><P class='tr'>&nbsp;
<SYNC Start=1236385><P class='tr'> 
<SYNC Start=1238505><P class='tr'>&nbsp;
<SYNC Start=1238505><P class='tr'> 
<SYNC Start=1241395><P class='tr'>&nbsp;
<SYNC Start=1241475><P class='tr'> 
<SYNC Start=1243575><P class='tr'>&nbsp;
<SYNC Start=1243575><P class='tr'> 
<SYNC Start=1246485><P class='tr'>&nbsp;
<SYNC Start=1248515><P class='tr'> 
<SYNC Start=1251585><P class='tr'>&nbsp;
<SYNC Start=1251585><P class='tr'> 
<SYNC Start=1252585><P class='tr'>&nbsp;
<SYNC Start=1252915><P class='tr'> 
<SYNC Start=1254765><P class='tr'>&nbsp;
<SYNC Start=1256895><P class='tr'> 
<SYNC Start=1259675><P class='tr'>&nbsp;
<SYNC Start=1259675><P class='tr'> 
<SYNC Start=1262665><P class='tr'>&nbsp;
<SYNC Start=1262665><P class='tr'> 
<SYNC Start=1265605><P class='tr'>&nbsp;
<SYNC Start=1265605><P class='tr'> 
<SYNC Start=1268335><P class='tr'>&nbsp;
<SYNC Start=1268335><P class='tr'> 
<SYNC Start=1271625><P class='tr'>&nbsp;
<SYNC Start=1271765><P class='tr'> 
<SYNC Start=1274785><P class='tr'>&nbsp;
<SYNC Start=1274785><P class='tr'> 
<SYNC Start=1277755><P class='tr'>&nbsp;
<SYNC Start=1277755><P class='tr'> 
<SYNC Start=1278755><P class='tr'>&nbsp;
<SYNC Start=1278945><P class='tr'> 
<SYNC Start=1281915><P class='tr'>&nbsp;
<SYNC Start=1281915><P class='tr'> 
<SYNC Start=1285065><P class='tr'>&nbsp;
<SYNC Start=1285065><P class='tr'> 
<SYNC Start=1288055><P class='tr'>&nbsp;
<SYNC Start=1288055><P class='tr'> 
<SYNC Start=1291175><P class='tr'>&nbsp;
<SYNC Start=1291175><P class='tr'> 
<SYNC Start=1293955><P class='tr'>&nbsp;
<SYNC Start=1294045><P class='tr'> 
<SYNC Start=1296005><P class='tr'>&nbsp;
<SYNC Start=1296005><P class='tr'> 
<SYNC Start=1298925><P class='tr'>&nbsp;
<SYNC Start=1298925><P class='tr'> 
<SYNC Start=1301305><P class='tr'>&nbsp;
<SYNC Start=1301675><P class='tr'> 
<SYNC Start=1304695><P class='tr'>&nbsp;
<SYNC Start=1304745><P class='tr'> 
<SYNC Start=1308005><P class='tr'>&nbsp;
<SYNC Start=1308425><P class='tr'> 
<SYNC Start=1311505><P class='tr'>&nbsp;
<SYNC Start=1311505><P class='tr'> 
<SYNC Start=1314565><P class='tr'>&nbsp;
<SYNC Start=1314565><P class='tr'> 
<SYNC Start=1316165><P class='tr'>&nbsp;
<SYNC Start=1316645><P class='tr'> 
<SYNC Start=1318325><P class='tr'>&nbsp;
<SYNC Start=1319895><P class='tr'> 
<SYNC Start=1322885><P class='tr'>&nbsp;
<SYNC Start=1322885><P class='tr'> 
<SYNC Start=1325665><P class='tr'>&nbsp;
<SYNC Start=1326545><P class='tr'> 
<SYNC Start=1329505><P class='tr'>&nbsp;
<SYNC Start=1329505><P class='tr'> 
<SYNC Start=1332385><P class='tr'>&nbsp;
<SYNC Start=1332385><P class='tr'> 
<SYNC Start=1334475><P class='tr'>&nbsp;
<SYNC Start=1335145><P class='tr'> 
<SYNC Start=1338385><P class='tr'>&nbsp;
<SYNC Start=1338595><P class='tr'> 
<SYNC Start=1341445><P class='tr'>&nbsp;
<SYNC Start=1341445><P class='tr'> 
<SYNC Start=1344335><P class='tr'>&nbsp;
<SYNC Start=1344335><P class='tr'> 
<SYNC Start=1346335><P class='tr'>&nbsp;
<SYNC Start=1346645><P class='tr'> 
<SYNC Start=1349475><P class='tr'>&nbsp;
<SYNC Start=1349475><P class='tr'> 
<SYNC Start=1352325><P class='tr'>&nbsp;
<SYNC Start=1352325><P class='tr'> 
<SYNC Start=1355195><P class='tr'>&nbsp;
<SYNC Start=1355195><P class='tr'> 
<SYNC Start=1358095><P class='tr'>&nbsp;
<SYNC Start=1358095><P class='tr'> 
<SYNC Start=1360895><P class='tr'>&nbsp;
<SYNC Start=1360895><P class='tr'> 
<SYNC Start=1361895><P class='tr'>&nbsp;
<SYNC Start=1362125><P class='tr'> 
<SYNC Start=1364655><P class='tr'>&nbsp;
<SYNC Start=1364655><P class='tr'> 
<SYNC Start=1367575><P class='tr'>&nbsp;
<SYNC Start=1368375><P class='tr'> 
<SYNC Start=1371595><P class='tr'>&nbsp;
<SYNC Start=1371595><P class='tr'> 
<SYNC Start=1374535><P class='tr'>&nbsp;
<SYNC Start=1374535><P class='tr'> 
<SYNC Start=1377475><P class='tr'>&nbsp;
<SYNC Start=1377685><P class='tr'> 
<SYNC Start=1379685><P class='tr'>&nbsp;
<SYNC Start=1381435><P class='tr'> 
<SYNC Start=1384105><P class='tr'>&nbsp;
<SYNC Start=1384105><P class='tr'> 
<SYNC Start=1385235><P class='tr'>&nbsp;
<SYNC Start=1385705><P class='tr'> 
<SYNC Start=1388965><P class='tr'>&nbsp;
<SYNC Start=1388965><P class='tr'> 
<SYNC Start=1391865><P class='tr'>&nbsp;
<SYNC Start=1391865><P class='tr'> 
<SYNC Start=1393845><P class='tr'>&nbsp;
<SYNC Start=1393845><P class='tr'> 
<SYNC Start=1397085><P class='tr'>&nbsp;
<SYNC Start=1397085><P class='tr'> 
<SYNC Start=1399845><P class='tr'>&nbsp;
<SYNC Start=1400195><P class='tr'> 
<SYNC Start=1402965><P class='tr'>&nbsp;
<SYNC Start=1402965><P class='tr'> 
<SYNC Start=1405515><P class='tr'>&nbsp;
<SYNC Start=1405515><P class='tr'> 
<SYNC Start=1406745><P class='tr'>&nbsp;
<SYNC Start=1410385><P class='tr'> 
<SYNC Start=1411385><P class='tr'>&nbsp;
<SYNC Start=1412235><P class='tr'> 
<SYNC Start=1415125><P class='tr'>&nbsp;
<SYNC Start=1415125><P class='tr'> 
<SYNC Start=1416125><P class='tr'>&nbsp;
<SYNC Start=1417675><P class='tr'> 
<SYNC Start=1420635><P class='tr'>&nbsp;
<SYNC Start=1420825><P class='tr'> 
<SYNC Start=1424055><P class='tr'>&nbsp;
<SYNC Start=1424055><P class='tr'> 
<SYNC Start=1425165><P class='tr'>&nbsp;
<SYNC Start=1426685><P class='tr'> 
<SYNC Start=1428815><P class='tr'>&nbsp;
<SYNC Start=1429705><P class='tr'> 
<SYNC Start=1432935><P class='tr'>&nbsp;
<SYNC Start=1433345><P class='tr'> 
<SYNC Start=1436335><P class='tr'>&nbsp;
<SYNC Start=1437235><P class='tr'> 
<SYNC Start=1439905><P class='tr'>&nbsp;
<SYNC Start=1439905><P class='tr'> 
<SYNC Start=1441015><P class='tr'>&nbsp;
<SYNC Start=1441445><P class='tr'> 
<SYNC Start=1444545><P class='tr'>&nbsp;
<SYNC Start=1445595><P class='tr'> 
<SYNC Start=1448505><P class='tr'>&nbsp;
<SYNC Start=1448505><P class='tr'> 
<SYNC Start=1450605><P class='tr'>&nbsp;
<SYNC Start=1453155><P class='tr'> 
<SYNC Start=1456255><P class='tr'>&nbsp;
<SYNC Start=1457065><P class='tr'> 
<SYNC Start=1459585><P class='tr'>&nbsp;
<SYNC Start=1460265><P class='tr'> 
<SYNC Start=1463165><P class='tr'>&nbsp;
<SYNC Start=1463515><P class='tr'> 
<SYNC Start=1466405><P class='tr'>&nbsp;
<SYNC Start=1466405><P class='tr'> 
<SYNC Start=1469485><P class='tr'>&nbsp;
<SYNC Start=1470125><P class='tr'> 
<SYNC Start=1473175><P class='tr'>&nbsp;
<SYNC Start=1473175><P class='tr'> 
<SYNC Start=1475975><P class='tr'>&nbsp;
<SYNC Start=1476495><P class='tr'> 
<SYNC Start=1477945><P class='tr'>&nbsp;
<SYNC Start=1478305><P class='tr'> 
<SYNC Start=1480925><P class='tr'>&nbsp;
<SYNC Start=1481465><P class='tr'> 
<SYNC Start=1484275><P class='tr'>&nbsp;
<SYNC Start=1484275><P class='tr'> 
<SYNC Start=1487555><P class='tr'>&nbsp;
<SYNC Start=1487555><P class='tr'> 
<SYNC Start=1490735><P class='tr'>&nbsp;
<SYNC Start=1490735><P class='tr'> 
<SYNC Start=1493745><P class='tr'>&nbsp;
<SYNC Start=1493745><P class='tr'> 
<SYNC Start=1494745><P class='tr'>&nbsp;
<SYNC Start=1495595><P class='tr'> 
<SYNC Start=1498795><P class='tr'>&nbsp;
<SYNC Start=1498795><P class='tr'> 
<SYNC Start=1501655><P class='tr'>&nbsp;
<SYNC Start=1501675><P class='tr'> 
<SYNC Start=1504565><P class='tr'>&nbsp;
<SYNC Start=1504565><P class='tr'> 
<SYNC Start=1507465><P class='tr'>&nbsp;
<SYNC Start=1507465><P class='tr'> 
<SYNC Start=1510605><P class='tr'>&nbsp;
<SYNC Start=1510605><P class='tr'> 
<SYNC Start=1512545><P class='tr'>&nbsp;
<SYNC Start=1513245><P class='tr'> 
<SYNC Start=1515915><P class='tr'>&nbsp;
<SYNC Start=1516625><P class='tr'> 
<SYNC Start=1517625><P class='tr'>&nbsp;
<SYNC Start=1517905><P class='tr'> 
<SYNC Start=1519725><P class='tr'>&nbsp;
<SYNC Start=1520375><P class='tr'> 
<SYNC Start=1521375><P class='tr'>&nbsp;
<SYNC Start=1521725><P class='tr'> 
<SYNC Start=1524605><P class='tr'>&nbsp;
<SYNC Start=1525135><P class='tr'> 
<SYNC Start=1528095><P class='tr'>&nbsp;
<SYNC Start=1529355><P class='tr'> 
<SYNC Start=1532395><P class='tr'>&nbsp;
<SYNC Start=1532395><P class='tr'> 
<SYNC Start=1533355><P class='tr'>&nbsp;
<SYNC Start=1533355><P class='tr'> 
<SYNC Start=1536405><P class='tr'>&nbsp;
<SYNC Start=1536405><P class='tr'> 
<SYNC Start=1539015><P class='tr'>&nbsp;
<SYNC Start=1540235><P class='tr'> 
<SYNC Start=1543215><P class='tr'>&nbsp;
<SYNC Start=1543775><P class='tr'> 
<SYNC Start=1545305><P class='tr'>&nbsp;
<SYNC Start=1547295><P class='tr'> 
<SYNC Start=1549565><P class='tr'>&nbsp;
<SYNC Start=1550045><P class='tr'> 
<SYNC Start=1551255><P class='tr'>&nbsp;
<SYNC Start=1551745><P class='tr'> 
<SYNC Start=1554635><P class='tr'>&nbsp;
<SYNC Start=1554835><P class='tr'> 
<SYNC Start=1557995><P class='tr'>&nbsp;
<SYNC Start=1557995><P class='tr'> 
<SYNC Start=1560895><P class='tr'>&nbsp;
<SYNC Start=1562045><P class='tr'> 
<SYNC Start=1565425><P class='tr'>&nbsp;
<SYNC Start=1565455><P class='tr'> 
<SYNC Start=1567325><P class='tr'>&nbsp;
<SYNC Start=1567935><P class='tr'> 
<SYNC Start=1568935><P class='tr'>&nbsp;
<SYNC Start=1569355><P class='tr'> 
<SYNC Start=1572465><P class='tr'>&nbsp;
<SYNC Start=1572815><P class='tr'> 
<SYNC Start=1575825><P class='tr'>&nbsp;
<SYNC Start=1575825><P class='tr'> 
<SYNC Start=1576845><P class='tr'>&nbsp;
<SYNC Start=1577315><P class='tr'> 
<SYNC Start=1580275><P class='tr'>&nbsp;
<SYNC Start=1580275><P class='tr'> 
<SYNC Start=1583655><P class='tr'>&nbsp;
<SYNC Start=1583655><P class='tr'> 
<SYNC Start=1586895><P class='tr'>&nbsp;
<SYNC Start=1587105><P class='tr'> 
<SYNC Start=1588485><P class='tr'>&nbsp;
<SYNC Start=1588965><P class='tr'> 
<SYNC Start=1589965><P class='tr'>&nbsp;
<SYNC Start=1591575><P class='tr'> 
<SYNC Start=1593675><P class='tr'>&nbsp;
<SYNC Start=1593675><P class='tr'> 
<SYNC Start=1596225><P class='tr'>&nbsp;
<SYNC Start=1596225><P class='tr'> 
<SYNC Start=1597365><P class='tr'>&nbsp;
<SYNC Start=1598115><P class='tr'> 
<SYNC Start=1600285><P class='tr'>&nbsp;
<SYNC Start=1600905><P class='tr'> 
<SYNC Start=1604025><P class='tr'>&nbsp;
<SYNC Start=1604025><P class='tr'> 
<SYNC Start=1605025><P class='tr'>&nbsp;
<SYNC Start=1605865><P class='tr'> 
<SYNC Start=1608835><P class='tr'>&nbsp;
<SYNC Start=1608835><P class='tr'> 
<SYNC Start=1610085><P class='tr'>&nbsp;
<SYNC Start=1610475><P class='tr'> 
<SYNC Start=1613335><P class='tr'>&nbsp;
<SYNC Start=1613335><P class='tr'> 
<SYNC Start=1616035><P class='tr'>&nbsp;
<SYNC Start=1617115><P class='tr'> 
<SYNC Start=1620225><P class='tr'>&nbsp;
<SYNC Start=1620225><P class='tr'> 
<SYNC Start=1622605><P class='tr'>&nbsp;
<SYNC Start=1623895><P class='tr'> 
<SYNC Start=1624965><P class='tr'>&nbsp;
<SYNC Start=1626155><P class='tr'> 
<SYNC Start=1628585><P class='tr'>&nbsp;
<SYNC Start=1629885><P class='tr'> 
<SYNC Start=1633295><P class='tr'>&nbsp;
<SYNC Start=1633875><P class='tr'> 
<SYNC Start=1636785><P class='tr'>&nbsp;
<SYNC Start=1636785><P class='tr'> 
<SYNC Start=1637785><P class='tr'>&nbsp;
<SYNC Start=1638575><P class='tr'> 
<SYNC Start=1641715><P class='tr'>&nbsp;
<SYNC Start=1641755><P class='tr'> 
<SYNC Start=1643645><P class='tr'>&nbsp;
<SYNC Start=1644595><P class='tr'> 
<SYNC Start=1647505><P class='tr'>&nbsp;
<SYNC Start=1647505><P class='tr'> 
<SYNC Start=1650355><P class='tr'>&nbsp;
<SYNC Start=1650355><P class='tr'> 
<SYNC Start=1653255><P class='tr'>&nbsp;
<SYNC Start=1653255><P class='tr'> 
<SYNC Start=1655055><P class='tr'>&nbsp;
<SYNC Start=1655455><P class='tr'> 
<SYNC Start=1658865><P class='tr'>&nbsp;
<SYNC Start=1658875><P class='tr'> 
<SYNC Start=1661395><P class='tr'>&nbsp;
<SYNC Start=1661395><P class='tr'> 
<SYNC Start=1663895><P class='tr'>&nbsp;
<SYNC Start=1664705><P class='tr'> 
<SYNC Start=1666855><P class='tr'>&nbsp;
<SYNC Start=1667225><P class='tr'> 
<SYNC Start=1669185><P class='tr'>&nbsp;
<SYNC Start=1669965><P class='tr'> 
<SYNC Start=1673095><P class='tr'>&nbsp;
<SYNC Start=1673905><P class='tr'> 
<SYNC Start=1676875><P class='tr'>&nbsp;
<SYNC Start=1676875><P class='tr'> 
<SYNC Start=1677875><P class='tr'>&nbsp;
<SYNC Start=1678415><P class='tr'> 
<SYNC Start=1679415><P class='tr'>&nbsp;
<SYNC Start=1681745><P class='tr'> 
<SYNC Start=1684665><P class='tr'>&nbsp;
<SYNC Start=1684665><P class='tr'> 
<SYNC Start=1685665><P class='tr'>&nbsp;
<SYNC Start=1686305><P class='tr'> 
<SYNC Start=1688425><P class='tr'>&nbsp;
<SYNC Start=1689065><P class='tr'> 
<SYNC Start=1690555><P class='tr'>&nbsp;
<SYNC Start=1691135><P class='tr'> 
<SYNC Start=1693895><P class='tr'>&nbsp;
<SYNC Start=1693895><P class='tr'> 
<SYNC Start=1697005><P class='tr'>&nbsp;
<SYNC Start=1697505><P class='tr'> 
<SYNC Start=1699455><P class='tr'>&nbsp;
<SYNC Start=1699985><P class='tr'> 
<SYNC Start=1701225><P class='tr'>&nbsp;
<SYNC Start=1702715><P class='tr'> 
<SYNC Start=1704125><P class='tr'>&nbsp;
<SYNC Start=1705095><P class='tr'> 
<SYNC Start=1706855><P class='tr'>&nbsp;
<SYNC Start=1708035><P class='tr'> 
<SYNC Start=1711155><P class='tr'>&nbsp;
<SYNC Start=1711155><P class='tr'> 
<SYNC Start=1712155><P class='tr'>&nbsp;
<SYNC Start=1712235><P class='tr'> 
<SYNC Start=1715145><P class='tr'>&nbsp;
<SYNC Start=1715145><P class='tr'> 
<SYNC Start=1718555><P class='tr'>&nbsp;
<SYNC Start=1718915><P class='tr'> 
<SYNC Start=1722025><P class='tr'>&nbsp;
<SYNC Start=1722535><P class='tr'> 
<SYNC Start=1725925><P class='tr'>&nbsp;
<SYNC Start=1726465><P class='tr'> 
<SYNC Start=1729055><P class='tr'>&nbsp;
<SYNC Start=1729745><P class='tr'> 
<SYNC Start=1732685><P class='tr'>&nbsp;
<SYNC Start=1732685><P class='tr'> 
<SYNC Start=1735655><P class='tr'>&nbsp;
<SYNC Start=1735655><P class='tr'> 
<SYNC Start=1737665><P class='tr'>&nbsp;
<SYNC Start=1737665><P class='tr'> 
<SYNC Start=1740855><P class='tr'>&nbsp;
<SYNC Start=1740855><P class='tr'> 
<SYNC Start=1743675><P class='tr'>&nbsp;
<SYNC Start=1744415><P class='tr'> 
<SYNC Start=1746785><P class='tr'>&nbsp;
<SYNC Start=1746785><P class='tr'> 
<SYNC Start=1748095><P class='tr'>&nbsp;
<SYNC Start=1749065><P class='tr'> 
<SYNC Start=1751375><P class='tr'>&nbsp;
<SYNC Start=1751675><P class='tr'> 
<SYNC Start=1753515><P class='tr'>&nbsp;
<SYNC Start=1753955><P class='tr'> 
<SYNC Start=1756405><P class='tr'>&nbsp;
<SYNC Start=1756595><P class='tr'> 
<SYNC Start=1759575><P class='tr'>&nbsp;
<SYNC Start=1759575><P class='tr'> 
<SYNC Start=1762285><P class='tr'>&nbsp;
<SYNC Start=1763315><P class='tr'> 
<SYNC Start=1766085><P class='tr'>&nbsp;
<SYNC Start=1766085><P class='tr'> 
<SYNC Start=1768615><P class='tr'>&nbsp;
<SYNC Start=1768615><P class='tr'> 
<SYNC Start=1771525><P class='tr'>&nbsp;
<SYNC Start=1771525><P class='tr'> 
<SYNC Start=1774935><P class='tr'>&nbsp;
<SYNC Start=1775665><P class='tr'> 
<SYNC Start=1777655><P class='tr'>&nbsp;
<SYNC Start=1778195><P class='tr'> 
<SYNC Start=1779195><P class='tr'>&nbsp;
<SYNC Start=1779265><P class='tr'> 
<SYNC Start=1781495><P class='tr'>&nbsp;
<SYNC Start=1781885><P class='tr'> 
<SYNC Start=1782885><P class='tr'>&nbsp;
<SYNC Start=1784475><P class='tr'> 
<SYNC Start=1785475><P class='tr'>&nbsp;
<SYNC Start=1786395><P class='tr'> 
<SYNC Start=1787915><P class='tr'>&nbsp;
<SYNC Start=1789165><P class='tr'> 
<SYNC Start=1792445><P class='tr'>&nbsp;
<SYNC Start=1792825><P class='tr'> 
<SYNC Start=1795495><P class='tr'>&nbsp;
<SYNC Start=1796165><P class='tr'> 
<SYNC Start=1799645><P class='tr'>&nbsp;
<SYNC Start=1800295><P class='tr'> 
<SYNC Start=1803315><P class='tr'>&nbsp;
<SYNC Start=1803315><P class='tr'> 
<SYNC Start=1806015><P class='tr'>&nbsp;
<SYNC Start=1807935><P class='tr'> 
<SYNC Start=1811085><P class='tr'>&nbsp;
<SYNC Start=1811085><P class='tr'> 
<SYNC Start=1812955><P class='tr'>&nbsp;
<SYNC Start=1813415><P class='tr'> 
<SYNC Start=1816515><P class='tr'>&nbsp;
<SYNC Start=1816975><P class='tr'> 
<SYNC Start=1820435><P class='tr'>&nbsp;
<SYNC Start=1820875><P class='tr'> 
<SYNC Start=1823725><P class='tr'>&nbsp;
<SYNC Start=1823725><P class='tr'> 
<SYNC Start=1825405><P class='tr'>&nbsp;
<SYNC Start=1826155><P class='tr'> 
<SYNC Start=1828955><P class='tr'>&nbsp;
<SYNC Start=1828955><P class='tr'> 
<SYNC Start=1831385><P class='tr'>&nbsp;
<SYNC Start=1831805><P class='tr'> 
<SYNC Start=1833735><P class='tr'>&nbsp;
<SYNC Start=1834085><P class='tr'> 
<SYNC Start=1837175><P class='tr'>&nbsp;
<SYNC Start=1838615><P class='tr'> 
<SYNC Start=1839615><P class='tr'>&nbsp;
<SYNC Start=1840005><P class='tr'> 
<SYNC Start=1843195><P class='tr'>&nbsp;
<SYNC Start=1843195><P class='tr'> 
<SYNC Start=1846235><P class='tr'>&nbsp;
<SYNC Start=1846235><P class='tr'> 
<SYNC Start=1849245><P class='tr'>&nbsp;
<SYNC Start=1850335><P class='tr'> 
<SYNC Start=1853575><P class='tr'>&nbsp;
<SYNC Start=1853915><P class='tr'> 
<SYNC Start=1856925><P class='tr'>&nbsp;
<SYNC Start=1856925><P class='tr'> 
<SYNC Start=1859195><P class='tr'>&nbsp;
<SYNC Start=1859255><P class='tr'> 
<SYNC Start=1861985><P class='tr'>&nbsp;
<SYNC Start=1862385><P class='tr'> 
<SYNC Start=1864185><P class='tr'>&nbsp;
<SYNC Start=1864605><P class='tr'> 
<SYNC Start=1866465><P class='tr'>&nbsp;
<SYNC Start=1869075><P class='tr'> 
<SYNC Start=1872435><P class='tr'>&nbsp;
<SYNC Start=1873295><P class='tr'> 
<SYNC Start=1874295><P class='tr'>&nbsp;
<SYNC Start=1875815><P class='tr'> 
<SYNC Start=1876815><P class='tr'>&nbsp;
<SYNC Start=1877275><P class='tr'> 
<SYNC Start=1878275><P class='tr'>&nbsp;
<SYNC Start=1880915><P class='tr'> 
<SYNC Start=1883935><P class='tr'>&nbsp;
<SYNC Start=1884255><P class='tr'> 
<SYNC Start=1886195><P class='tr'>&nbsp;
<SYNC Start=1886765><P class='tr'> 
<SYNC Start=1890105><P class='tr'>&nbsp;
<SYNC Start=1890135><P class='tr'> 
<SYNC Start=1893335><P class='tr'>&nbsp;
<SYNC Start=1895025><P class='tr'> 
<SYNC Start=1896025><P class='tr'>&nbsp;
<SYNC Start=1897115><P class='tr'> 
<SYNC Start=1899205><P class='tr'>&nbsp;
<SYNC Start=1900575><P class='tr'> 
<SYNC Start=1902135><P class='tr'>&nbsp;
<SYNC Start=1902455><P class='tr'> 
<SYNC Start=1905655><P class='tr'>&nbsp;
<SYNC Start=1905655><P class='tr'> 
<SYNC Start=1906655><P class='tr'>&nbsp;
<SYNC Start=1907375><P class='tr'> 
<SYNC Start=1910025><P class='tr'>&nbsp;
<SYNC Start=1910835><P class='tr'> 
<SYNC Start=1913405><P class='tr'>&nbsp;
<SYNC Start=1914785><P class='tr'> 
<SYNC Start=1916495><P class='tr'>&nbsp;
<SYNC Start=1916875><P class='tr'> 
<SYNC Start=1919495><P class='tr'>&nbsp;
<SYNC Start=1920125><P class='tr'> 
<SYNC Start=1922695><P class='tr'>&nbsp;
<SYNC Start=1923805><P class='tr'> 
<SYNC Start=1925695><P class='tr'>&nbsp;
<SYNC Start=1927625><P class='tr'> 
<SYNC Start=1930635><P class='tr'>&nbsp;
<SYNC Start=1932135><P class='tr'> 
<SYNC Start=1933885><P class='tr'>&nbsp;
<SYNC Start=1935035><P class='tr'> 
<SYNC Start=1936585><P class='tr'>&nbsp;
<SYNC Start=1937405><P class='tr'> 
<SYNC Start=1940015><P class='tr'>&nbsp;
<SYNC Start=1940015><P class='tr'> 
<SYNC Start=1942985><P class='tr'>&nbsp;
<SYNC Start=1942985><P class='tr'> 
<SYNC Start=1946095><P class='tr'>&nbsp;
<SYNC Start=1946095><P class='tr'> 
<SYNC Start=1949015><P class='tr'>&nbsp;
<SYNC Start=1949015><P class='tr'> 
<SYNC Start=1952025><P class='tr'>&nbsp;
<SYNC Start=1952025><P class='tr'> 
<SYNC Start=1954785><P class='tr'>&nbsp;
<SYNC Start=1954975><P class='tr'> 
<SYNC Start=1957455><P class='tr'>&nbsp;
<SYNC Start=1957835><P class='tr'> 
<SYNC Start=1959435><P class='tr'>&nbsp;
<SYNC Start=1960245><P class='tr'> 
<SYNC Start=1961295><P class='tr'>&nbsp;
<SYNC Start=1962275><P class='tr'> 
<SYNC Start=1963275><P class='tr'>&nbsp;
<SYNC Start=1963285><P class='tr'> 
<SYNC Start=1966245><P class='tr'>&nbsp;
<SYNC Start=1966245><P class='tr'> 
<SYNC Start=1967275><P class='tr'>&nbsp;
<SYNC Start=1968285><P class='tr'> 
<SYNC Start=1971215><P class='tr'>&nbsp;
<SYNC Start=1972275><P class='tr'> 
<SYNC Start=1975665><P class='tr'>&nbsp;
<SYNC Start=1976135><P class='tr'> 
<SYNC Start=1979015><P class='tr'>&nbsp;
<SYNC Start=1979375><P class='tr'> 
<SYNC Start=1981435><P class='tr'>&nbsp;
<SYNC Start=1982505><P class='tr'> 
<SYNC Start=1985205><P class='tr'>&nbsp;
<SYNC Start=1986195><P class='tr'> 
<SYNC Start=1988905><P class='tr'>&nbsp;
<SYNC Start=1988905><P class='tr'> 
<SYNC Start=1990065><P class='tr'>&nbsp;
<SYNC Start=1991355><P class='tr'> 
<SYNC Start=1993755><P class='tr'>&nbsp;
<SYNC Start=1994195><P class='tr'> 
<SYNC Start=1995615><P class='tr'>&nbsp;
<SYNC Start=1996415><P class='tr'> 
<SYNC Start=1999375><P class='tr'>&nbsp;
<SYNC Start=1999375><P class='tr'> 
<SYNC Start=2001755><P class='tr'>&nbsp;
<SYNC Start=2003565><P class='tr'> 
<SYNC Start=2005055><P class='tr'>&nbsp;
<SYNC Start=2005725><P class='tr'> 
<SYNC Start=2007675><P class='tr'>&nbsp;
<SYNC Start=2008355><P class='tr'> 
<SYNC Start=2009865><P class='tr'>&nbsp;
<SYNC Start=2010645><P class='tr'> 
<SYNC Start=2012615><P class='tr'>&nbsp;
<SYNC Start=2013765><P class='tr'> 
<SYNC Start=2016575><P class='tr'>&nbsp;
<SYNC Start=2018995><P class='tr'> 
<SYNC Start=2020375><P class='tr'>&nbsp;
<SYNC Start=2020905><P class='tr'> 
<SYNC Start=2023765><P class='tr'>&nbsp;
<SYNC Start=2023985><P class='tr'> 
<SYNC Start=2024985><P class='tr'>&nbsp;
<SYNC Start=2026415><P class='tr'> 
<SYNC Start=2029375><P class='tr'>&nbsp;
<SYNC Start=2029375><P class='tr'> 
<SYNC Start=2032395><P class='tr'>&nbsp;
<SYNC Start=2032395><P class='tr'> 
<SYNC Start=2034575><P class='tr'>&nbsp;
<SYNC Start=2034955><P class='tr'> 
<SYNC Start=2037835><P class='tr'>&nbsp;
<SYNC Start=2037835><P class='tr'> 
<SYNC Start=2040625><P class='tr'>&nbsp;
<SYNC Start=2040625><P class='tr'> 
<SYNC Start=2042445><P class='tr'>&nbsp;
<SYNC Start=2042835><P class='tr'> 
<SYNC Start=2046315><P class='tr'>&nbsp;
<SYNC Start=2047765><P class='tr'> 
<SYNC Start=2048765><P class='tr'>&nbsp;
<SYNC Start=2048815><P class='tr'> 
<SYNC Start=2049815><P class='tr'>&nbsp;
<SYNC Start=2050415><P class='tr'> 
<SYNC Start=2053445><P class='tr'>&nbsp;
<SYNC Start=2055024><P class='tr'> 
<SYNC Start=2057894><P class='tr'>&nbsp;
<SYNC Start=2060514><P class='tr'> 
<SYNC Start=2061704><P class='tr'>&nbsp;
<SYNC Start=2062715><P class='tr'> 
<SYNC Start=2065545><P class='tr'>&nbsp;
<SYNC Start=2065544><P class='tr'> 
<SYNC Start=2067124><P class='tr'>&nbsp;
<SYNC Start=2069034><P class='tr'> 
<SYNC Start=2070034><P class='tr'>&nbsp;
<SYNC Start=2072685><P class='tr'> 
<SYNC Start=2075475><P class='tr'>&nbsp;
<SYNC Start=2075475><P class='tr'> 
<SYNC Start=2078335><P class='tr'>&nbsp;
<SYNC Start=2078335><P class='tr'> 
<SYNC Start=2081765><P class='tr'>&nbsp;
<SYNC Start=2082254><P class='tr'> 
<SYNC Start=2084624><P class='tr'>&nbsp;
<SYNC Start=2086985><P class='tr'> 
<SYNC Start=2090125><P class='tr'>&nbsp;
<SYNC Start=2090395><P class='tr'> 
<SYNC Start=2093095><P class='tr'>&nbsp;
<SYNC Start=2093095><P class='tr'> 
<SYNC Start=2095285><P class='tr'>&nbsp;
<SYNC Start=2095735><P class='tr'> 
<SYNC Start=2096735><P class='tr'>&nbsp;
<SYNC Start=2096784><P class='tr'> 
<SYNC Start=2099444><P class='tr'>&nbsp;
<SYNC Start=2099445><P class='tr'> 
<SYNC Start=2102395><P class='tr'>&nbsp;
<SYNC Start=2102395><P class='tr'> 
<SYNC Start=2103445><P class='tr'>&nbsp;
<SYNC Start=2104975><P class='tr'> 
<SYNC Start=2107785><P class='tr'>&nbsp;
<SYNC Start=2108175><P class='tr'> 
<SYNC Start=2111125><P class='tr'>&nbsp;
<SYNC Start=2111505><P class='tr'> 
<SYNC Start=2113815><P class='tr'>&nbsp;
<SYNC Start=2114225><P class='tr'> 
<SYNC Start=2117515><P class='tr'>&nbsp;
<SYNC Start=2117525><P class='tr'> 
<SYNC Start=2118525><P class='tr'>&nbsp;
<SYNC Start=2119245><P class='tr'> 
<SYNC Start=2120245><P class='tr'>&nbsp;
<SYNC Start=2120535><P class='tr'> 
<SYNC Start=2123325><P class='tr'>&nbsp;
<SYNC Start=2124545><P class='tr'> 
<SYNC Start=2127445><P class='tr'>&nbsp;
<SYNC Start=2130005><P class='tr'> 
<SYNC Start=2132595><P class='tr'>&nbsp;
<SYNC Start=2133475><P class='tr'> 
<SYNC Start=2135295><P class='tr'>&nbsp;
<SYNC Start=2135935><P class='tr'> 
<SYNC Start=2137205><P class='tr'>&nbsp;
<SYNC Start=2137535><P class='tr'> 
<SYNC Start=2139255><P class='tr'>&nbsp;
<SYNC Start=2141885><P class='tr'> 
<SYNC Start=2142885><P class='tr'>&nbsp;
<SYNC Start=2143825><P class='tr'> 
<SYNC Start=2144855><P class='tr'>&nbsp;
<SYNC Start=2146045><P class='tr'> 
<SYNC Start=2147045><P class='tr'>&nbsp;
<SYNC Start=2147405><P class='tr'> 
<SYNC Start=2148785><P class='tr'>&nbsp;
<SYNC Start=2149155><P class='tr'> 
<SYNC Start=2150485><P class='tr'>&nbsp;
<SYNC Start=2151755><P class='tr'> 
<SYNC Start=2154485><P class='tr'>&nbsp;
<SYNC Start=2154485><P class='tr'> 
<SYNC Start=2157335><P class='tr'>&nbsp;
<SYNC Start=2157335><P class='tr'> 
<SYNC Start=2158335><P class='tr'>&nbsp;
<SYNC Start=2160735><P class='tr'> 
<SYNC Start=2164065><P class='tr'>&nbsp;
<SYNC Start=2164065><P class='tr'> 
<SYNC Start=2165065><P class='tr'>&nbsp;
<SYNC Start=2165615><P class='tr'> 
<SYNC Start=2168155><P class='tr'>&nbsp;
<SYNC Start=2169235><P class='tr'> 
<SYNC Start=2171425><P class='tr'>&nbsp;
<SYNC Start=2171975><P class='tr'> 
<SYNC Start=2174315><P class='tr'>&nbsp;
<SYNC Start=2176225><P class='tr'> 
<SYNC Start=2177795><P class='tr'>&nbsp;
<SYNC Start=2178795><P class='tr'> 
<SYNC Start=2181675><P class='tr'>&nbsp;
<SYNC Start=2181675><P class='tr'> 
<SYNC Start=2184645><P class='tr'>&nbsp;
<SYNC Start=2184645><P class='tr'> 
<SYNC Start=2187825><P class='tr'>&nbsp;
<SYNC Start=2187825><P class='tr'> 
<SYNC Start=2190935><P class='tr'>&nbsp;
<SYNC Start=2192835><P class='tr'> 
<SYNC Start=2195805><P class='tr'>&nbsp;
<SYNC Start=2195805><P class='tr'> 
<SYNC Start=2196805><P class='tr'>&nbsp;
<SYNC Start=2197075><P class='tr'> 
<SYNC Start=2199845><P class='tr'>&nbsp;
<SYNC Start=2199845><P class='tr'> 
<SYNC Start=2200845><P class='tr'>&nbsp;
<SYNC Start=2201015><P class='tr'> 
<SYNC Start=2204085><P class='tr'>&nbsp;
<SYNC Start=2204985><P class='tr'> 
<SYNC Start=2207385><P class='tr'>&nbsp;
<SYNC Start=2208845><P class='tr'> 
<SYNC Start=2211505><P class='tr'>&nbsp;
<SYNC Start=2211505><P class='tr'> 
<SYNC Start=2214805><P class='tr'>&nbsp;
<SYNC Start=2215595><P class='tr'> 
<SYNC Start=2218495><P class='tr'>&nbsp;
<SYNC Start=2218495><P class='tr'> 
<SYNC Start=2221045><P class='tr'>&nbsp;
<SYNC Start=2222035><P class='tr'> 
<SYNC Start=2225155><P class='tr'>&nbsp;
<SYNC Start=2226105><P class='tr'> 
<SYNC Start=2228675><P class='tr'>&nbsp;
<SYNC Start=2229305><P class='tr'> 
<SYNC Start=2230925><P class='tr'>&nbsp;
<SYNC Start=2230925><P class='tr'> 
<SYNC Start=2232855><P class='tr'>&nbsp;
<SYNC Start=2233785><P class='tr'> 
<SYNC Start=2236825><P class='tr'>&nbsp;
<SYNC Start=2236825><P class='tr'> 
<SYNC Start=2238905><P class='tr'>&nbsp;
<SYNC Start=2239595><P class='tr'> 
<SYNC Start=2242395><P class='tr'>&nbsp;
<SYNC Start=2242395><P class='tr'> 
<SYNC Start=2245555><P class='tr'>&nbsp;
<SYNC Start=2245695><P class='tr'> 
<SYNC Start=2247535><P class='tr'>&nbsp;
<SYNC Start=2247935><P class='tr'> 
<SYNC Start=2250565><P class='tr'>&nbsp;
<SYNC Start=2250565><P class='tr'> 
<SYNC Start=2252105><P class='tr'>&nbsp;
<SYNC Start=2252815><P class='tr'> 
<SYNC Start=2255345><P class='tr'>&nbsp;
<SYNC Start=2255985><P class='tr'> 
<SYNC Start=2258395><P class='tr'>&nbsp;
<SYNC Start=2258515><P class='tr'> 
<SYNC Start=2261485><P class='tr'>&nbsp;
<SYNC Start=2261485><P class='tr'> 
<SYNC Start=2262685><P class='tr'>&nbsp;
<SYNC Start=2263235><P class='tr'> 
<SYNC Start=2265435><P class='tr'>&nbsp;
<SYNC Start=2265885><P class='tr'> 
<SYNC Start=2269055><P class='tr'>&nbsp;
<SYNC Start=2269345><P class='tr'> 
<SYNC Start=2272245><P class='tr'>&nbsp;
<SYNC Start=2272835><P class='tr'> 
<SYNC Start=2273835><P class='tr'>&nbsp;
<SYNC Start=2274135><P class='tr'> 
<SYNC Start=2277025><P class='tr'>&nbsp;
<SYNC Start=2277025><P class='tr'> 
<SYNC Start=2279945><P class='tr'>&nbsp;
<SYNC Start=2280705><P class='tr'> 
<SYNC Start=2283425><P class='tr'>&nbsp;
<SYNC Start=2283425><P class='tr'> 
<SYNC Start=2285745><P class='tr'>&nbsp;
<SYNC Start=2286625><P class='tr'> 
<SYNC Start=2290025><P class='tr'>&nbsp;
<SYNC Start=2290515><P class='tr'> 
<SYNC Start=2293555><P class='tr'>&nbsp;
<SYNC Start=2293555><P class='tr'> 
<SYNC Start=2295205><P class='tr'>&nbsp;
<SYNC Start=2296465><P class='tr'> 
<SYNC Start=2297575><P class='tr'>&nbsp;
<SYNC Start=2298065><P class='tr'> 
<SYNC Start=2299815><P class='tr'>&nbsp;
<SYNC Start=2299815><P class='tr'> 
<SYNC Start=2301955><P class='tr'>&nbsp;
<SYNC Start=2302215><P class='tr'> 
<SYNC Start=2304115><P class='tr'>&nbsp;
<SYNC Start=2305425><P class='tr'> 
<SYNC Start=2306825><P class='tr'>&nbsp;
<SYNC Start=2307385><P class='tr'> 
<SYNC Start=2308525><P class='tr'>&nbsp;
<SYNC Start=2309065><P class='tr'> 
<SYNC Start=2310335><P class='tr'>&nbsp;
<SYNC Start=2311435><P class='tr'> 
<SYNC Start=2314445><P class='tr'>&nbsp;
<SYNC Start=2314645><P class='tr'> 
<SYNC Start=2318075><P class='tr'>&nbsp;
<SYNC Start=2319125><P class='tr'> 
<SYNC Start=2321605><P class='tr'>&nbsp;
<SYNC Start=2322055><P class='tr'> 
<SYNC Start=2325205><P class='tr'>&nbsp;
<SYNC Start=2325205><P class='tr'> 
<SYNC Start=2326305><P class='tr'>&nbsp;
<SYNC Start=2326975><P class='tr'> 
<SYNC Start=2330005><P class='tr'>&nbsp;
<SYNC Start=2330005><P class='tr'> 
<SYNC Start=2332735><P class='tr'>&nbsp;
<SYNC Start=2332915><P class='tr'> 
<SYNC Start=2335895><P class='tr'>&nbsp;
<SYNC Start=2335895><P class='tr'> 
<SYNC Start=2338945><P class='tr'>&nbsp;
<SYNC Start=2339475><P class='tr'> 
<SYNC Start=2342525><P class='tr'>&nbsp;
<SYNC Start=2342525><P class='tr'> 
<SYNC Start=2343795><P class='tr'>&nbsp;
<SYNC Start=2344795><P class='tr'> 
<SYNC Start=2345915><P class='tr'>&nbsp;
<SYNC Start=2346525><P class='tr'> 
<SYNC Start=2349215><P class='tr'>&nbsp;
<SYNC Start=2349265><P class='tr'> 
<SYNC Start=2352165><P class='tr'>&nbsp;
<SYNC Start=2352165><P class='tr'> 
<SYNC Start=2353275><P class='tr'>&nbsp;
<SYNC Start=2354725><P class='tr'> 
<SYNC Start=2357685><P class='tr'>&nbsp;
<SYNC Start=2357685><P class='tr'> 
<SYNC Start=2359325><P class='tr'>&nbsp;
<SYNC Start=2360575><P class='tr'> 
<SYNC Start=2363295><P class='tr'>&nbsp;
<SYNC Start=2363615><P class='tr'> 
<SYNC Start=2365065><P class='tr'>&nbsp;
<SYNC Start=2365615><P class='tr'> 
<SYNC Start=2367045><P class='tr'>&nbsp;
<SYNC Start=2368205><P class='tr'> 
<SYNC Start=2369205><P class='tr'>&nbsp;
<SYNC Start=2369235><P class='tr'> 
<SYNC Start=2370235><P class='tr'>&nbsp;
<SYNC Start=2371815><P class='tr'> 
<SYNC Start=2372815><P class='tr'>&nbsp;
<SYNC Start=2374755><P class='tr'> 
<SYNC Start=2376385><P class='tr'>&nbsp;
<SYNC Start=2378855><P class='tr'> 
<SYNC Start=2381485><P class='tr'>&nbsp;
<SYNC Start=2382145><P class='tr'> 
<SYNC Start=2384625><P class='tr'>&nbsp;
<SYNC Start=2384625><P class='tr'> 
<SYNC Start=2385705><P class='tr'>&nbsp;
<SYNC Start=2386065><P class='tr'> 
<SYNC Start=2389425><P class='tr'>&nbsp;
<SYNC Start=2390075><P class='tr'> 
<SYNC Start=2393085><P class='tr'>&nbsp;
<SYNC Start=2393085><P class='tr'> 
<SYNC Start=2394235><P class='tr'>&nbsp;
<SYNC Start=2395285><P class='tr'> 
<SYNC Start=2396385><P class='tr'>&nbsp;
<SYNC Start=2397355><P class='tr'> 
<SYNC Start=2398585><P class='tr'>&nbsp;
<SYNC Start=2400405><P class='tr'> 
<SYNC Start=2402585><P class='tr'>&nbsp;
<SYNC Start=2403315><P class='tr'> 
<SYNC Start=2404335><P class='tr'>&nbsp;
<SYNC Start=2404775><P class='tr'> 
<SYNC Start=2407655><P class='tr'>&nbsp;
<SYNC Start=2407655><P class='tr'> 
<SYNC Start=2408655><P class='tr'>&nbsp;
<SYNC Start=2409055><P class='tr'> 
<SYNC Start=2411875><P class='tr'>&nbsp;
<SYNC Start=2412095><P class='tr'> 
<SYNC Start=2414945><P class='tr'>&nbsp;
<SYNC Start=2415245><P class='tr'> 
<SYNC Start=2418405><P class='tr'>&nbsp;
<SYNC Start=2418405><P class='tr'> 
<SYNC Start=2420755><P class='tr'>&nbsp;
<SYNC Start=2421205><P class='tr'> 
<SYNC Start=2423145><P class='tr'>&nbsp;
<SYNC Start=2423865><P class='tr'> 
<SYNC Start=2425145><P class='tr'>&nbsp;
<SYNC Start=2425755><P class='tr'> 
<SYNC Start=2428295><P class='tr'>&nbsp;
<SYNC Start=2428295><P class='tr'> 
<SYNC Start=2431255><P class='tr'>&nbsp;
<SYNC Start=2431615><P class='tr'> 
<SYNC Start=2434785><P class='tr'>&nbsp;
<SYNC Start=2435035><P class='tr'> 
<SYNC Start=2436635><P class='tr'>&nbsp;
<SYNC Start=2437695><P class='tr'> 
<SYNC Start=2440955><P class='tr'>&nbsp;
<SYNC Start=2442015><P class='tr'> 
<SYNC Start=2444015><P class='tr'>&nbsp;
<SYNC Start=2444655><P class='tr'> 
<SYNC Start=2447565><P class='tr'>&nbsp;
<SYNC Start=2447565><P class='tr'> 
<SYNC Start=2449635><P class='tr'>&nbsp;
<SYNC Start=2449735><P class='tr'> 
<SYNC Start=2452835><P class='tr'>&nbsp;
<SYNC Start=2453425><P class='tr'> 
<SYNC Start=2455725><P class='tr'>&nbsp;
<SYNC Start=2456135><P class='tr'> 
<SYNC Start=2458085><P class='tr'>&nbsp;
<SYNC Start=2458445><P class='tr'> 
<SYNC Start=2461085><P class='tr'>&nbsp;
<SYNC Start=2461085><P class='tr'> 
<SYNC Start=2464015><P class='tr'>&nbsp;
<SYNC Start=2465665><P class='tr'> 
<SYNC Start=2466785><P class='tr'>&nbsp;
<SYNC Start=2467175><P class='tr'> 
<SYNC Start=2470425><P class='tr'>&nbsp;
<SYNC Start=2470425><P class='tr'> 
<SYNC Start=2473495><P class='tr'>&nbsp;
<SYNC Start=2473495><P class='tr'> 
<SYNC Start=2476295><P class='tr'>&nbsp;
<SYNC Start=2476295><P class='tr'> 
<SYNC Start=2478935><P class='tr'>&nbsp;
<SYNC Start=2478935><P class='tr'> 
<SYNC Start=2481175><P class='tr'>&nbsp;
<SYNC Start=2481845><P class='tr'> 
<SYNC Start=2483205><P class='tr'>&nbsp;
<SYNC Start=2485875><P class='tr'> 
<SYNC Start=2487585><P class='tr'>&nbsp;
<SYNC Start=2488525><P class='tr'> 
<SYNC Start=2491005><P class='tr'>&nbsp;
<SYNC Start=2491005><P class='tr'> 
<SYNC Start=2492375><P class='tr'>&nbsp;
<SYNC Start=2492975><P class='tr'> 
<SYNC Start=2494915><P class='tr'>&nbsp;
<SYNC Start=2495315><P class='tr'> 
<SYNC Start=2497975><P class='tr'>&nbsp;
<SYNC Start=2498385><P class='tr'> 
<SYNC Start=2501655><P class='tr'>&nbsp;
<SYNC Start=2502355><P class='tr'> 
<SYNC Start=2503585><P class='tr'>&nbsp;
<SYNC Start=2505095><P class='tr'> 
<SYNC Start=2506095><P class='tr'>&nbsp;
<SYNC Start=2508385><P class='tr'> 
<SYNC Start=2511345><P class='tr'>&nbsp;
<SYNC Start=2511345><P class='tr'> 
<SYNC Start=2513715><P class='tr'>&nbsp;
<SYNC Start=2513905><P class='tr'> 
<SYNC Start=2514675><P class='tr'>&nbsp;
<SYNC Start=2514675><P class='tr'> 
<SYNC Start=2517455><P class='tr'>&nbsp;
<SYNC Start=2517455><P class='tr'> 
<SYNC Start=2518455><P class='tr'>&nbsp;
<SYNC Start=2519425><P class='tr'> 
<SYNC Start=2520425><P class='tr'>&nbsp;
<SYNC Start=2520585><P class='tr'> 
<SYNC Start=2522515><P class='tr'>&nbsp;
<SYNC Start=2522875><P class='tr'> 
<SYNC Start=2525315><P class='tr'>&nbsp;
<SYNC Start=2525575><P class='tr'> 
<SYNC Start=2528615><P class='tr'>&nbsp;
<SYNC Start=2528615><P class='tr'> 
<SYNC Start=2531115><P class='tr'>&nbsp;
<SYNC Start=2533245><P class='tr'> 
<SYNC Start=2536365><P class='tr'>&nbsp;
<SYNC Start=2537835><P class='tr'> 
<SYNC Start=2541065><P class='tr'>&nbsp;
<SYNC Start=2541065><P class='tr'> 
<SYNC Start=2544185><P class='tr'>&nbsp;
<SYNC Start=2544835><P class='tr'> 
<SYNC Start=2547115><P class='tr'>&nbsp;
<SYNC Start=2547885><P class='tr'> 
<SYNC Start=2548885><P class='tr'>&nbsp;
<SYNC Start=2550135><P class='tr'> 
<SYNC Start=2551275><P class='tr'>&nbsp;
<SYNC Start=2551905><P class='tr'> 
<SYNC Start=2554665><P class='tr'>&nbsp;
<SYNC Start=2554665><P class='tr'> 
<SYNC Start=2557385><P class='tr'>&nbsp;
<SYNC Start=2558045><P class='tr'> 
<SYNC Start=2559045><P class='tr'>&nbsp;
<SYNC Start=2559835><P class='tr'> 
<SYNC Start=2560935><P class='tr'>&nbsp;
<SYNC Start=2561425><P class='tr'> 
<SYNC Start=2564925><P class='tr'>&nbsp;
<SYNC Start=2565455><P class='tr'> 
<SYNC Start=2567375><P class='tr'>&nbsp;
<SYNC Start=2567715><P class='tr'> 
<SYNC Start=2570755><P class='tr'>&nbsp;
<SYNC Start=2571255><P class='tr'> 
<SYNC Start=2572255><P class='tr'>&nbsp;
<SYNC Start=2572535><P class='tr'> 
<SYNC Start=2575335><P class='tr'>&nbsp;
<SYNC Start=2577325><P class='tr'> 
<SYNC Start=2580815><P class='tr'>&nbsp;
<SYNC Start=2580985><P class='tr'> 
<SYNC Start=2582265><P class='tr'>&nbsp;
<SYNC Start=2583475><P class='tr'> 
<SYNC Start=2586125><P class='tr'>&nbsp;
<SYNC Start=2586715><P class='tr'> 
<SYNC Start=2589265><P class='tr'>&nbsp;
<SYNC Start=2589265><P class='tr'> 
<SYNC Start=2592035><P class='tr'>&nbsp;
<SYNC Start=2592035><P class='tr'> 
<SYNC Start=2594295><P class='tr'>&nbsp;
<SYNC Start=2594375><P class='tr'> 
<SYNC Start=2596575><P class='tr'>&nbsp;
<SYNC Start=2597165><P class='tr'> 
<SYNC Start=2600265><P class='tr'>&nbsp;
<SYNC Start=2600265><P class='tr'> 
<SYNC Start=2601265><P class='tr'>&nbsp;
<SYNC Start=2601715><P class='tr'> 
<SYNC Start=2605065><P class='tr'>&nbsp;
<SYNC Start=2606045><P class='tr'> 
<SYNC Start=2607565><P class='tr'>&nbsp;
<SYNC Start=2608005><P class='tr'> 
<SYNC Start=2611035><P class='tr'>&nbsp;
<SYNC Start=2611035><P class='tr'> 
<SYNC Start=2613065><P class='tr'>&nbsp;
<SYNC Start=2613415><P class='tr'> 
<SYNC Start=2616335><P class='tr'>&nbsp;
<SYNC Start=2616475><P class='tr'> 
<SYNC Start=2619845><P class='tr'>&nbsp;
<SYNC Start=2619845><P class='tr'> 
<SYNC Start=2622565><P class='tr'>&nbsp;
<SYNC Start=2622565><P class='tr'> 
<SYNC Start=2625255><P class='tr'>&nbsp;
<SYNC Start=2625255><P class='tr'> 
<SYNC Start=2628605><P class='tr'>&nbsp;
<SYNC Start=2629115><P class='tr'> 
<SYNC Start=2630735><P class='tr'>&nbsp;
<SYNC Start=2631105><P class='tr'> 
<SYNC Start=2632895><P class='tr'>&nbsp;
<SYNC Start=2633395><P class='tr'> 
<SYNC Start=2636095><P class='tr'>&nbsp;
<SYNC Start=2636095><P class='tr'> 
<SYNC Start=2638895><P class='tr'>&nbsp;
<SYNC Start=2638895><P class='tr'> 
<SYNC Start=2641595><P class='tr'>&nbsp;
<SYNC Start=2641795><P class='tr'> 
<SYNC Start=2644175><P class='tr'>&nbsp;
<SYNC Start=2644175><P class='tr'> 
<SYNC Start=2646465><P class='tr'>&nbsp;
<SYNC Start=2646465><P class='tr'> 
<SYNC Start=2649705><P class='tr'>&nbsp;
<SYNC Start=2650295><P class='tr'> 
<SYNC Start=2653315><P class='tr'>&nbsp;
<SYNC Start=2653315><P class='tr'> 
<SYNC Start=2655795><P class='tr'>&nbsp;
<SYNC Start=2656195><P class='tr'> 
<SYNC Start=2658865><P class='tr'>&nbsp;
<SYNC Start=2658865><P class='tr'> 
<SYNC Start=2661645><P class='tr'>&nbsp;
<SYNC Start=2661645><P class='tr'> 
<SYNC Start=2664115><P class='tr'>&nbsp;
<SYNC Start=2664945><P class='tr'> 
<SYNC Start=2667575><P class='tr'>&nbsp;
<SYNC Start=2667575><P class='tr'> 
<SYNC Start=2670565><P class='tr'>&nbsp;
<SYNC Start=2670565><P class='tr'> 
<SYNC Start=2673195><P class='tr'>&nbsp;
<SYNC Start=2673195><P class='tr'> 
<SYNC Start=2675755><P class='tr'>&nbsp;
<SYNC Start=2676575><P class='tr'> 
<SYNC Start=2677575><P class='tr'>&nbsp;
<SYNC Start=2678555><P class='tr'> 
<SYNC Start=2681995><P class='tr'>&nbsp;
<SYNC Start=2682145><P class='tr'> 
<SYNC Start=2684505><P class='tr'>&nbsp;
<SYNC Start=2684505><P class='tr'> 
<SYNC Start=2687045><P class='tr'>&nbsp;
<SYNC Start=2687085><P class='tr'> 
<SYNC Start=2688855><P class='tr'>&nbsp;
<SYNC Start=2689625><P class='tr'> 
<SYNC Start=2690625><P class='tr'>&nbsp;
<SYNC Start=2690805><P class='tr'> 
<SYNC Start=2693885><P class='tr'>&nbsp;
<SYNC Start=2693885><P class='tr'> 
<SYNC Start=2695345><P class='tr'>&nbsp;
<SYNC Start=2695785><P class='tr'> 
<SYNC Start=2697815><P class='tr'>&nbsp;
<SYNC Start=2698635><P class='tr'> 
<SYNC Start=2701505><P class='tr'>&nbsp;
<SYNC Start=2701505><P class='tr'> 
<SYNC Start=2703145><P class='tr'>&nbsp;
<SYNC Start=2703665><P class='tr'> 
<SYNC Start=2705455><P class='tr'>&nbsp;
<SYNC Start=2705455><P class='tr'> 
<SYNC Start=2708755><P class='tr'>&nbsp;
<SYNC Start=2708755><P class='tr'> 
<SYNC Start=2710165><P class='tr'>&nbsp;
<SYNC Start=2711595><P class='tr'> 
<SYNC Start=2714505><P class='tr'>&nbsp;
<SYNC Start=2714995><P class='tr'> 
<SYNC Start=2717705><P class='tr'>&nbsp;
<SYNC Start=2717705><P class='tr'> 
<SYNC Start=2720785><P class='tr'>&nbsp;
<SYNC Start=2720945><P class='tr'> 
<SYNC Start=2723885><P class='tr'>&nbsp;
<SYNC Start=2723885><P class='tr'> 
<SYNC Start=2726805><P class='tr'>&nbsp;
<SYNC Start=2726805><P class='tr'> 
<SYNC Start=2729785><P class='tr'>&nbsp;
<SYNC Start=2729785><P class='tr'> 
<SYNC Start=2733005><P class='tr'>&nbsp;
<SYNC Start=2733055><P class='tr'> 
<SYNC Start=2736025><P class='tr'>&nbsp;
<SYNC Start=2736215><P class='tr'> 
<SYNC Start=2739125><P class='tr'>&nbsp;
<SYNC Start=2739285><P class='tr'> 
<SYNC Start=2741685><P class='tr'>&nbsp;
<SYNC Start=2741685><P class='tr'> 
<SYNC Start=2744545><P class='tr'>&nbsp;
<SYNC Start=2744545><P class='tr'> 
<SYNC Start=2747315><P class='tr'>&nbsp;
<SYNC Start=2747315><P class='tr'> 
<SYNC Start=2750745><P class='tr'>&nbsp;
<SYNC Start=2750895><P class='tr'> 
<SYNC Start=2753985><P class='tr'>&nbsp;
<SYNC Start=2754435><P class='tr'> 
<SYNC Start=2756955><P class='tr'>&nbsp;
<SYNC Start=2757075><P class='tr'> 
<SYNC Start=2759965><P class='tr'>&nbsp;
<SYNC Start=2759965><P class='tr'> 
<SYNC Start=2763035><P class='tr'>&nbsp;
<SYNC Start=2763035><P class='tr'> 
<SYNC Start=2765995><P class='tr'>&nbsp;
<SYNC Start=2765995><P class='tr'> 
<SYNC Start=2768925><P class='tr'>&nbsp;
<SYNC Start=2768925><P class='tr'> 
<SYNC Start=2769925><P class='tr'>&nbsp;
<SYNC Start=2769995><P class='tr'> 
<SYNC Start=2772775><P class='tr'>&nbsp;
<SYNC Start=2772775><P class='tr'> 
<SYNC Start=2775595><P class='tr'>&nbsp;
<SYNC Start=2775595><P class='tr'> 
<SYNC Start=2778455><P class='tr'>&nbsp;
<SYNC Start=2778455><P class='tr'> 
<SYNC Start=2781365><P class='tr'>&nbsp;
<SYNC Start=2781365><P class='tr'> 
<SYNC Start=2784645><P class='tr'>&nbsp;
<SYNC Start=2784655><P class='tr'> 
<SYNC Start=2787765><P class='tr'>&nbsp;
<SYNC Start=2787765><P class='tr'> 
<SYNC Start=2790625><P class='tr'>&nbsp;
<SYNC Start=2790625><P class='tr'> 
<SYNC Start=2793395><P class='tr'>&nbsp;
<SYNC Start=2793395><P class='tr'> 
<SYNC Start=2796625><P class='tr'>&nbsp;
<SYNC Start=2796625><P class='tr'> 
<SYNC Start=2799565><P class='tr'>&nbsp;
<SYNC Start=2799725><P class='tr'> 
<SYNC Start=2802595><P class='tr'>&nbsp;
<SYNC Start=2802595><P class='tr'> 
<SYNC Start=2804845><P class='tr'>&nbsp;
<SYNC Start=2805535><P class='tr'> 
<SYNC Start=2806535><P class='tr'>&nbsp;
<SYNC Start=2806945><P class='tr'> 
<SYNC Start=2808045><P class='tr'>&nbsp;
<SYNC Start=2808685><P class='tr'> 
<SYNC Start=2809685><P class='tr'>&nbsp;
<SYNC Start=2810725><P class='tr'> 
<SYNC Start=2813645><P class='tr'>&nbsp;
<SYNC Start=2813645><P class='tr'> 
<SYNC Start=2816165><P class='tr'>&nbsp;
<SYNC Start=2820725><P class='tr'> 
<SYNC Start=2823475><P class='tr'>&nbsp;
<SYNC Start=2823905><P class='tr'> 
<SYNC Start=2826965><P class='tr'>&nbsp;
<SYNC Start=2826965><P class='tr'> 
<SYNC Start=2829635><P class='tr'>&nbsp;
<SYNC Start=2829635><P class='tr'> 
<SYNC Start=2832335><P class='tr'>&nbsp;
<SYNC Start=2832665><P class='tr'> 
<SYNC Start=2835285><P class='tr'>&nbsp;
<SYNC Start=2835285><P class='tr'> 
<SYNC Start=2836955><P class='tr'>&nbsp;
<SYNC Start=2837305><P class='tr'> 
<SYNC Start=2840655><P class='tr'>&nbsp;
<SYNC Start=2841245><P class='tr'> 
<SYNC Start=2843845><P class='tr'>&nbsp;
<SYNC Start=2843845><P class='tr'> 
<SYNC Start=2846865><P class='tr'>&nbsp;
<SYNC Start=2846865><P class='tr'> 
<SYNC Start=2849595><P class='tr'>&nbsp;
<SYNC Start=2849655><P class='tr'> 
<SYNC Start=2852625><P class='tr'>&nbsp;
<SYNC Start=2852625><P class='tr'> 
<SYNC Start=2855235><P class='tr'>&nbsp;
<SYNC Start=2855275><P class='tr'> 
<SYNC Start=2858615><P class='tr'>&nbsp;
<SYNC Start=2858745><P class='tr'> 
<SYNC Start=2860785><P class='tr'>&nbsp;
<SYNC Start=2861135><P class='tr'> 
<SYNC Start=2862545><P class='tr'>&nbsp;
<SYNC Start=2863565><P class='tr'> 
<SYNC Start=2864595><P class='tr'>&nbsp;
<SYNC Start=2864905><P class='tr'> 
<SYNC Start=2867685><P class='tr'>&nbsp;
<SYNC Start=2867685><P class='tr'> 
<SYNC Start=2869655><P class='tr'>&nbsp;
<SYNC Start=2870205><P class='tr'> 
<SYNC Start=2871845><P class='tr'>&nbsp;
<SYNC Start=2874505><P class='tr'> 
<SYNC Start=2876725><P class='tr'>&nbsp;
<SYNC Start=2877825><P class='tr'> 
<SYNC Start=2880645><P class='tr'>&nbsp;
<SYNC Start=2881325><P class='tr'> 
<SYNC Start=2883815><P class='tr'>&nbsp;
<SYNC Start=2884265><P class='tr'> 
<SYNC Start=2885695><P class='tr'>&nbsp;
<SYNC Start=2886075><P class='tr'> 
<SYNC Start=2888825><P class='tr'>&nbsp;
<SYNC Start=2888825><P class='tr'> 
<SYNC Start=2890175><P class='tr'>&nbsp;
<SYNC Start=2890445><P class='tr'> 
<SYNC Start=2893495><P class='tr'>&nbsp;
<SYNC Start=2893495><P class='tr'> 
<SYNC Start=2894875><P class='tr'>&nbsp;
<SYNC Start=2894875><P class='tr'> 
<SYNC Start=2897765><P class='tr'>&nbsp;
<SYNC Start=2897765><P class='tr'> 
<SYNC Start=2900755><P class='tr'>&nbsp;
<SYNC Start=2900755><P class='tr'> 
<SYNC Start=2903685><P class='tr'>&nbsp;
<SYNC Start=2903685><P class='tr'> 
<SYNC Start=2906905><P class='tr'>&nbsp;
<SYNC Start=2907575><P class='tr'> 
<SYNC Start=2910625><P class='tr'>&nbsp;
<SYNC Start=2910625><P class='tr'> 
<SYNC Start=2913095><P class='tr'>&nbsp;
<SYNC Start=2913095><P class='tr'> 
<SYNC Start=2916145><P class='tr'>&nbsp;
<SYNC Start=2916145><P class='tr'> 
<SYNC Start=2917145><P class='tr'>&nbsp;
<SYNC Start=2917575><P class='tr'> 
<SYNC Start=2919125><P class='tr'>&nbsp;
<SYNC Start=2920165><P class='tr'> 
<SYNC Start=2923425><P class='tr'>&nbsp;
<SYNC Start=2923425><P class='tr'> 
<SYNC Start=2924575><P class='tr'>&nbsp;
<SYNC Start=2925335><P class='tr'> 
<SYNC Start=2928215><P class='tr'>&nbsp;
<SYNC Start=2928485><P class='tr'> 
<SYNC Start=2931585><P class='tr'>&nbsp;
<SYNC Start=2931585><P class='tr'> 
<SYNC Start=2934705><P class='tr'>&nbsp;
<SYNC Start=2934705><P class='tr'> 
<SYNC Start=2937385><P class='tr'>&nbsp;
<SYNC Start=2937545><P class='tr'> 
<SYNC Start=2939305><P class='tr'>&nbsp;
<SYNC Start=2939305><P class='tr'> 
<SYNC Start=2941655><P class='tr'>&nbsp;
<SYNC Start=2942165><P class='tr'> 
<SYNC Start=2945195><P class='tr'>&nbsp;
<SYNC Start=2945195><P class='tr'> 
<SYNC Start=2948345><P class='tr'>&nbsp;
<SYNC Start=2949565><P class='tr'> 
<SYNC Start=2952845><P class='tr'>&nbsp;
<SYNC Start=2953475><P class='tr'> 
<SYNC Start=2956725><P class='tr'>&nbsp;
<SYNC Start=2956935><P class='tr'> 
<SYNC Start=2960065><P class='tr'>&nbsp;
<SYNC Start=2961505><P class='tr'> 
<SYNC Start=2964735><P class='tr'>&nbsp;
<SYNC Start=2965105><P class='tr'> 
<SYNC Start=2967825><P class='tr'>&nbsp;
<SYNC Start=2967825><P class='tr'> 
<SYNC Start=2970655><P class='tr'>&nbsp;
<SYNC Start=2970655><P class='tr'> 
<SYNC Start=2973515><P class='tr'>&nbsp;
<SYNC Start=2973515><P class='tr'> 
<SYNC Start=2976575><P class='tr'>&nbsp;
<SYNC Start=2976575><P class='tr'> 
<SYNC Start=2978155><P class='tr'>&nbsp;
<SYNC Start=2978155><P class='tr'> 
<SYNC Start=2980345><P class='tr'>&nbsp;
<SYNC Start=2980735><P class='tr'> 
<SYNC Start=2982915><P class='tr'>&nbsp;
<SYNC Start=2982915><P class='tr'> 
<SYNC Start=2985625><P class='tr'>&nbsp;
<SYNC Start=2985625><P class='tr'> 
<SYNC Start=2986625><P class='tr'>&nbsp;
<SYNC Start=2987265><P class='tr'> 
<SYNC Start=2989755><P class='tr'>&nbsp;
<SYNC Start=2989825><P class='tr'> 
<SYNC Start=2993015><P class='tr'>&nbsp;
<SYNC Start=2993015><P class='tr'> 
<SYNC Start=2995925><P class='tr'>&nbsp;
<SYNC Start=2995925><P class='tr'> 
<SYNC Start=2998035><P class='tr'>&nbsp;
<SYNC Start=2998345><P class='tr'> 
<SYNC Start=3001335><P class='tr'>&nbsp;
<SYNC Start=3001335><P class='tr'> 
<SYNC Start=3004175><P class='tr'>&nbsp;
<SYNC Start=3004175><P class='tr'> 
<SYNC Start=3007105><P class='tr'>&nbsp;
<SYNC Start=3007105><P class='tr'> 
<SYNC Start=3010355><P class='tr'>&nbsp;
<SYNC Start=3010355><P class='tr'> 
<SYNC Start=3013665><P class='tr'>&nbsp;
<SYNC Start=3013665><P class='tr'> 
<SYNC Start=3016225><P class='tr'>&nbsp;
<SYNC Start=3016225><P class='tr'> 
<SYNC Start=3018655><P class='tr'>&nbsp;
<SYNC Start=3018655><P class='tr'> 
<SYNC Start=3020375><P class='tr'>&nbsp;
<SYNC Start=3020775><P class='tr'> 
<SYNC Start=3023895><P class='tr'>&nbsp;
<SYNC Start=3024355><P class='tr'> 
<SYNC Start=3027345><P class='tr'>&nbsp;
<SYNC Start=3028195><P class='tr'> 
<SYNC Start=3030995><P class='tr'>&nbsp;
<SYNC Start=3030995><P class='tr'> 
<SYNC Start=3034285><P class='tr'>&nbsp;
<SYNC Start=3034515><P class='tr'> 
<SYNC Start=3035515><P class='tr'>&nbsp;
<SYNC Start=3035715><P class='tr'> 
<SYNC Start=3038825><P class='tr'>&nbsp;
<SYNC Start=3039015><P class='tr'> 
<SYNC Start=3041125><P class='tr'>&nbsp;
<SYNC Start=3041715><P class='tr'> 
<SYNC Start=3042735><P class='tr'>&nbsp;
<SYNC Start=3044165><P class='tr'> 
<SYNC Start=3047455><P class='tr'>&nbsp;
<SYNC Start=3047475><P class='tr'> 
<SYNC Start=3050345><P class='tr'>&nbsp;
<SYNC Start=3050345><P class='tr'> 
<SYNC Start=3052785><P class='tr'>&nbsp;
<SYNC Start=3053315><P class='tr'> 
<SYNC Start=3055805><P class='tr'>&nbsp;
<SYNC Start=3056445><P class='tr'> 
<SYNC Start=3059815><P class='tr'>&nbsp;
<SYNC Start=3060165><P class='tr'> 
<SYNC Start=3061165><P class='tr'>&nbsp;
<SYNC Start=3062205><P class='tr'> 
<SYNC Start=3064835><P class='tr'>&nbsp;
<SYNC Start=3064835><P class='tr'> 
<SYNC Start=3067585><P class='tr'>&nbsp;
<SYNC Start=3067585><P class='tr'> 
<SYNC Start=3070585><P class='tr'>&nbsp;
<SYNC Start=3070735><P class='tr'> 
<SYNC Start=3073695><P class='tr'>&nbsp;
<SYNC Start=3073695><P class='tr'> 
<SYNC Start=3076465><P class='tr'>&nbsp;
<SYNC Start=3076465><P class='tr'> 
<SYNC Start=3079455><P class='tr'>&nbsp;
<SYNC Start=3079455><P class='tr'> 
<SYNC Start=3082865><P class='tr'>&nbsp;
<SYNC Start=3083045><P class='tr'> 
<SYNC Start=3084715><P class='tr'>&nbsp;
<SYNC Start=3085385><P class='tr'> 
<SYNC Start=3087835><P class='tr'>&nbsp;
<SYNC Start=3089805><P class='tr'> 
<SYNC Start=3090805><P class='tr'>&nbsp;
<SYNC Start=3091385><P class='tr'> 
<SYNC Start=3093785><P class='tr'>&nbsp;
<SYNC Start=3096735><P class='tr'> 
<SYNC Start=3099995><P class='tr'>&nbsp;
<SYNC Start=3100475><P class='tr'> 
<SYNC Start=3101475><P class='tr'>&nbsp;
<SYNC Start=3101915><P class='tr'> 
<SYNC Start=3105045><P class='tr'>&nbsp;
<SYNC Start=3105435><P class='tr'> 
<SYNC Start=3108225><P class='tr'>&nbsp;
<SYNC Start=3108225><P class='tr'> 
<SYNC Start=3111165><P class='tr'>&nbsp;
<SYNC Start=3111165><P class='tr'> 
<SYNC Start=3114235><P class='tr'>&nbsp;
<SYNC Start=3114605><P class='tr'> 
<SYNC Start=3116775><P class='tr'>&nbsp;
<SYNC Start=3117145><P class='tr'> 
<SYNC Start=3119105><P class='tr'>&nbsp;
<SYNC Start=3119675><P class='tr'> 
<SYNC Start=3122025><P class='tr'>&nbsp;
<SYNC Start=3122025><P class='tr'> 
<SYNC Start=3124965><P class='tr'>&nbsp;
<SYNC Start=3125395><P class='tr'> 
<SYNC Start=3128715><P class='tr'>&nbsp;
<SYNC Start=3129145><P class='tr'> 
<SYNC Start=3132135><P class='tr'>&nbsp;
<SYNC Start=3132135><P class='tr'> 
<SYNC Start=3134765><P class='tr'>&nbsp;
<SYNC Start=3136445><P class='tr'> 
<SYNC Start=3137655><P class='tr'>&nbsp;
<SYNC Start=3137945><P class='tr'> 
<SYNC Start=3140445><P class='tr'>&nbsp;
<SYNC Start=3141075><P class='tr'> 
<SYNC Start=3144045><P class='tr'>&nbsp;
<SYNC Start=3144045><P class='tr'> 
<SYNC Start=3146195><P class='tr'>&nbsp;
<SYNC Start=3146195><P class='tr'> 
<SYNC Start=3147885><P class='tr'>&nbsp;
<SYNC Start=3149225><P class='tr'> 
<SYNC Start=3152075><P class='tr'>&nbsp;
<SYNC Start=3152205><P class='tr'> 
<SYNC Start=3153345><P class='tr'>&nbsp;
<SYNC Start=3157025><P class='tr'> 
<SYNC Start=3159685><P class='tr'>&nbsp;
<SYNC Start=3160235><P class='tr'> 
<SYNC Start=3163495><P class='tr'>&nbsp;
<SYNC Start=3164265><P class='tr'> 
<SYNC Start=3167215><P class='tr'>&nbsp;
<SYNC Start=3167215><P class='tr'> 
<SYNC Start=3169915><P class='tr'>&nbsp;
<SYNC Start=3170025><P class='tr'> 
<SYNC Start=3173445><P class='tr'>&nbsp;
<SYNC Start=3173445><P class='tr'> 
<SYNC Start=3176445><P class='tr'>&nbsp;
<SYNC Start=3176445><P class='tr'> 
<SYNC Start=3179365><P class='tr'>&nbsp;
<SYNC Start=3179365><P class='tr'> 
<SYNC Start=3181655><P class='tr'>&nbsp;
<SYNC Start=3186125><P class='tr'> 
<SYNC Start=3188275><P class='tr'>&nbsp;
<SYNC Start=3189465><P class='tr'> 
<SYNC Start=3190785><P class='tr'>&nbsp;
<SYNC Start=3192275><P class='tr'> 
<SYNC Start=3194185><P class='tr'>&nbsp;
<SYNC Start=3195455><P class='tr'> 
<SYNC Start=3196965><P class='tr'>&nbsp;
<SYNC Start=3198125><P class='tr'> 
<SYNC Start=3201565><P class='tr'>&nbsp;
<SYNC Start=3202105><P class='tr'> 
<SYNC Start=3204915><P class='tr'>&nbsp;
<SYNC Start=3206045><P class='tr'> 
<SYNC Start=3209035><P class='tr'>&nbsp;
<SYNC Start=3209635><P class='tr'> 
<SYNC Start=3212125><P class='tr'>&nbsp;
<SYNC Start=3212615><P class='tr'> 
<SYNC Start=3213615><P class='tr'>&nbsp;
<SYNC Start=3214015><P class='tr'> 
<SYNC Start=3216845><P class='tr'>&nbsp;
<SYNC Start=3216845><P class='tr'> 
<SYNC Start=3220155><P class='tr'>&nbsp;
<SYNC Start=3220155><P class='tr'> 
<SYNC Start=3222465><P class='tr'>&nbsp;
<SYNC Start=3222465><P class='tr'> 
<SYNC Start=3225455><P class='tr'>&nbsp;
<SYNC Start=3225455><P class='tr'> 
<SYNC Start=3226795><P class='tr'>&nbsp;
<SYNC Start=3228165><P class='tr'> 
<SYNC Start=3231045><P class='tr'>&nbsp;
<SYNC Start=3231425><P class='tr'> 
<SYNC Start=3233515><P class='tr'>&nbsp;
<SYNC Start=3233905><P class='tr'> 
<SYNC Start=3234905><P class='tr'>&nbsp;
<SYNC Start=3235575><P class='tr'> 
<SYNC Start=3238915><P class='tr'>&nbsp;
<SYNC Start=3239535><P class='tr'> 
<SYNC Start=3242645><P class='tr'>&nbsp;
<SYNC Start=3244365><P class='tr'> 
<SYNC Start=3246295><P class='tr'>&nbsp;
<SYNC Start=3246295><P class='tr'> 
<SYNC Start=3248465><P class='tr'>&nbsp;
<SYNC Start=3250815><P class='tr'> 
<SYNC Start=3254205><P class='tr'>&nbsp;
<SYNC Start=3254205><P class='tr'> 
<SYNC Start=3255705><P class='tr'>&nbsp;
<SYNC Start=3256535><P class='tr'> 
<SYNC Start=3258925><P class='tr'>&nbsp;
<SYNC Start=3258925><P class='tr'> 
<SYNC Start=3261305><P class='tr'>&nbsp;
<SYNC Start=3261995><P class='tr'> 
<SYNC Start=3264475><P class='tr'>&nbsp;
<SYNC Start=3264885><P class='tr'> 
<SYNC Start=3267895><P class='tr'>&nbsp;
<SYNC Start=3267895><P class='tr'> 
<SYNC Start=3270935><P class='tr'>&nbsp;
<SYNC Start=3270935><P class='tr'> 
<SYNC Start=3274215><P class='tr'>&nbsp;
<SYNC Start=3274385><P class='tr'> 
<SYNC Start=3276555><P class='tr'>&nbsp;
<SYNC Start=3277155><P class='tr'> 
<SYNC Start=3279435><P class='tr'>&nbsp;
<SYNC Start=3279435><P class='tr'> 
<SYNC Start=3280705><P class='tr'>&nbsp;
<SYNC Start=3281355><P class='tr'> 
<SYNC Start=3282365><P class='tr'>&nbsp;
<SYNC Start=3283035><P class='tr'> 
<SYNC Start=3286255><P class='tr'>&nbsp;
<SYNC Start=3286255><P class='tr'> 
<SYNC Start=3289135><P class='tr'>&nbsp;
<SYNC Start=3289135><P class='tr'> 
<SYNC Start=3292395><P class='tr'>&nbsp;
<SYNC Start=3292785><P class='tr'> 
<SYNC Start=3296175><P class='tr'>&nbsp;
<SYNC Start=3296515><P class='tr'> 
<SYNC Start=3299065><P class='tr'>&nbsp;
<SYNC Start=3299825><P class='tr'> 
<SYNC Start=3301705><P class='tr'>&nbsp;
<SYNC Start=3302555><P class='tr'> 
<SYNC Start=3304195><P class='tr'>&nbsp;
<SYNC Start=3304735><P class='tr'> 
<SYNC Start=3305915><P class='tr'>&nbsp;
<SYNC Start=3307635><P class='tr'> 
<SYNC Start=3311035><P class='tr'>&nbsp;
<SYNC Start=3311985><P class='tr'> 
<SYNC Start=3313695><P class='tr'>&nbsp;
<SYNC Start=3314265><P class='tr'> 
<SYNC Start=3317085><P class='tr'>&nbsp;
<SYNC Start=3317085><P class='tr'> 
<SYNC Start=3318095><P class='tr'>&nbsp;
<SYNC Start=3318545><P class='tr'> 
<SYNC Start=3321785><P class='tr'>&nbsp;
<SYNC Start=3321785><P class='tr'> 
<SYNC Start=3325025><P class='tr'>&nbsp;
<SYNC Start=3325025><P class='tr'> 
<SYNC Start=3327995><P class='tr'>&nbsp;
<SYNC Start=3328365><P class='tr'> 
<SYNC Start=3331155><P class='tr'>&nbsp;
<SYNC Start=3331755><P class='tr'> 
<SYNC Start=3333335><P class='tr'>&nbsp;
<SYNC Start=3334085><P class='tr'> 
<SYNC Start=3337015><P class='tr'>&nbsp;
<SYNC Start=3337015><P class='tr'> 
<SYNC Start=3339995><P class='tr'>&nbsp;
<SYNC Start=3340255><P class='tr'> 
<SYNC Start=3341945><P class='tr'>&nbsp;
<SYNC Start=3342325><P class='tr'> 
<SYNC Start=3344795><P class='tr'>&nbsp;
<SYNC Start=3344795><P class='tr'> 
<SYNC Start=3347895><P class='tr'>&nbsp;
<SYNC Start=3348045><P class='tr'> 
<SYNC Start=3351065><P class='tr'>&nbsp;
<SYNC Start=3351065><P class='tr'> 
<SYNC Start=3354495><P class='tr'>&nbsp;
<SYNC Start=3354495><P class='tr'> 
<SYNC Start=3356695><P class='tr'>&nbsp;
<SYNC Start=3357885><P class='tr'> 
<SYNC Start=3360105><P class='tr'>&nbsp;
<SYNC Start=3361505><P class='tr'> 
<SYNC Start=3364125><P class='tr'>&nbsp;
<SYNC Start=3364455><P class='tr'> 
<SYNC Start=3367495><P class='tr'>&nbsp;
<SYNC Start=3368595><P class='tr'> 
<SYNC Start=3370955><P class='tr'>&nbsp;
<SYNC Start=3371365><P class='tr'> 
<SYNC Start=3374135><P class='tr'>&nbsp;
<SYNC Start=3374485><P class='tr'> 
<SYNC Start=3377485><P class='tr'>&nbsp;
<SYNC Start=3377485><P class='tr'> 
<SYNC Start=3378485><P class='tr'>&nbsp;
<SYNC Start=3378625><P class='tr'> 
<SYNC Start=3379615><P class='tr'>&nbsp;
<SYNC Start=3379615><P class='tr'> 
<SYNC Start=3382095><P class='tr'>&nbsp;
<SYNC Start=3382095><P class='tr'> 
<SYNC Start=3385455><P class='tr'>&nbsp;
<SYNC Start=3385455><P class='tr'> 
<SYNC Start=3388515><P class='tr'>&nbsp;
<SYNC Start=3389095><P class='tr'> 
<SYNC Start=3392215><P class='tr'>&nbsp;
<SYNC Start=3392215><P class='tr'> 
<SYNC Start=3393305><P class='tr'>&nbsp;
<SYNC Start=3393735><P class='tr'> 
<SYNC Start=3396835><P class='tr'>&nbsp;
<SYNC Start=3396835><P class='tr'> 
<SYNC Start=3400025><P class='tr'>&nbsp;
<SYNC Start=3400025><P class='tr'> 
<SYNC Start=3402805><P class='tr'>&nbsp;
<SYNC Start=3402845><P class='tr'> 
<SYNC Start=3403955><P class='tr'>&nbsp;
<SYNC Start=3404845><P class='tr'> 
<SYNC Start=3407135><P class='tr'>&nbsp;
<SYNC Start=3407135><P class='tr'> 
<SYNC Start=3408955><P class='tr'>&nbsp;
<SYNC Start=3409995><P class='tr'> 
<SYNC Start=3411825><P class='tr'>&nbsp;
<SYNC Start=3414545><P class='tr'> 
<SYNC Start=3417485><P class='tr'>&nbsp;
<SYNC Start=3417485><P class='tr'> 
<SYNC Start=3418485><P class='tr'>&nbsp;
<SYNC Start=3419395><P class='tr'> 
<SYNC Start=3420545><P class='tr'>&nbsp;
<SYNC Start=3422455><P class='tr'> 
<SYNC Start=3425415><P class='tr'>&nbsp;
<SYNC Start=3425415><P class='tr'> 
<SYNC Start=3428555><P class='tr'>&nbsp;
<SYNC Start=3428665><P class='tr'> 
<SYNC Start=3431495><P class='tr'>&nbsp;
<SYNC Start=3431495><P class='tr'> 
<SYNC Start=3434355><P class='tr'>&nbsp;
<SYNC Start=3434355><P class='tr'> 
<SYNC Start=3437655><P class='tr'>&nbsp;
<SYNC Start=3438015><P class='tr'> 
<SYNC Start=3439765><P class='tr'>&nbsp;
<SYNC Start=3440255><P class='tr'> 
<SYNC Start=3443255><P class='tr'>&nbsp;
<SYNC Start=3443255><P class='tr'> 
<SYNC Start=3446155><P class='tr'>&nbsp;
<SYNC Start=3446155><P class='tr'> 
<SYNC Start=3448955><P class='tr'>&nbsp;
<SYNC Start=3448955><P class='tr'> 
<SYNC Start=3450125><P class='tr'>&nbsp;
<SYNC Start=3450125><P class='tr'> 
<SYNC Start=3452835><P class='tr'>&nbsp;
<SYNC Start=3452835><P class='tr'> 
<SYNC Start=3454315><P class='tr'>&nbsp;
<SYNC Start=3456225><P class='tr'> 
<SYNC Start=3459585><P class='tr'>&nbsp;
<SYNC Start=3459855><P class='tr'> 
<SYNC Start=3462615><P class='tr'>&nbsp;
<SYNC Start=3463555><P class='tr'> 
<SYNC Start=3467005><P class='tr'>&nbsp;
<SYNC Start=3467855><P class='tr'> 
<SYNC Start=3469575><P class='tr'>&nbsp;
<SYNC Start=3469915><P class='tr'> 
<SYNC Start=3472065><P class='tr'>&nbsp;
<SYNC Start=3472825><P class='tr'> 
<SYNC Start=3474435><P class='tr'>&nbsp;
<SYNC Start=3479425><P class='tr'> 
<SYNC Start=3482545><P class='tr'>&nbsp;
<SYNC Start=3482915><P class='tr'> 
<SYNC Start=3485565><P class='tr'>&nbsp;
<SYNC Start=3485565><P class='tr'> 
<SYNC Start=3487935><P class='tr'>&nbsp;
<SYNC Start=3487935><P class='tr'> 
<SYNC Start=3490565><P class='tr'>&nbsp;
<SYNC Start=3491095><P class='tr'> 
<SYNC Start=3494475><P class='tr'>&nbsp;
<SYNC Start=3494705><P class='tr'> 
<SYNC Start=3496255><P class='tr'>&nbsp;
<SYNC Start=3497045><P class='tr'> 
<SYNC Start=3499785><P class='tr'>&nbsp;
<SYNC Start=3500355><P class='tr'> 
<SYNC Start=3502535><P class='tr'>&nbsp;
<SYNC Start=3502535><P class='tr'> 
<SYNC Start=3505175><P class='tr'>&nbsp;
<SYNC Start=3505175><P class='tr'> 
<SYNC Start=3508075><P class='tr'>&nbsp;
<SYNC Start=3508075><P class='tr'> 
<SYNC Start=3509075><P class='tr'>&nbsp;
<SYNC Start=3509325><P class='tr'> 
<SYNC Start=3511645><P class='tr'>&nbsp;
<SYNC Start=3511765><P class='tr'> 
<SYNC Start=3513165><P class='tr'>&nbsp;
<SYNC Start=3514765><P class='tr'> 
<SYNC Start=3516615><P class='tr'>&nbsp;
<SYNC Start=3517985><P class='tr'> 
<SYNC Start=3520585><P class='tr'>&nbsp;
<SYNC Start=3521305><P class='tr'> 
<SYNC Start=3522965><P class='tr'>&nbsp;
<SYNC Start=3524455><P class='tr'> 
<SYNC Start=3526085><P class='tr'>&nbsp;
<SYNC Start=3528965><P class='tr'> 
<SYNC Start=3531715><P class='tr'>&nbsp;
<SYNC Start=3531715><P class='tr'> 
<SYNC Start=3532845><P class='tr'>&nbsp;
<SYNC Start=3533495><P class='tr'> 
<SYNC Start=3534695><P class='tr'>&nbsp;
<SYNC Start=3535895><P class='tr'> 
<SYNC Start=3536935><P class='tr'>&nbsp;
<SYNC Start=3537555><P class='tr'> 
<SYNC Start=3540405><P class='tr'>&nbsp;
<SYNC Start=3540725><P class='tr'> 
<SYNC Start=3543455><P class='tr'>&nbsp;
<SYNC Start=3543455><P class='tr'> 
<SYNC Start=3545175><P class='tr'>&nbsp;
<SYNC Start=3545545><P class='tr'> 
<SYNC Start=3548825><P class='tr'>&nbsp;
<SYNC Start=3549035><P class='tr'> 
<SYNC Start=3552025><P class='tr'>&nbsp;
<SYNC Start=3552025><P class='tr'> 
<SYNC Start=3554035><P class='tr'>&nbsp;
<SYNC Start=3554775><P class='tr'> 
<SYNC Start=3557705><P class='tr'>&nbsp;
<SYNC Start=3557705><P class='tr'> 
<SYNC Start=3560165><P class='tr'>&nbsp;
<SYNC Start=3560165><P class='tr'> 
<SYNC Start=3561415><P class='tr'>&nbsp;
<SYNC Start=3561835><P class='tr'> 
<SYNC Start=3565105><P class='tr'>&nbsp;
<SYNC Start=3566685><P class='tr'> 
<SYNC Start=3569945><P class='tr'>&nbsp;
<SYNC Start=3570195><P class='tr'> 
<SYNC Start=3572265><P class='tr'>&nbsp;
<SYNC Start=3572265><P class='tr'> 
<SYNC Start=3575625><P class='tr'>&nbsp;
<SYNC Start=3576885><P class='tr'> 
<SYNC Start=3579805><P class='tr'>&nbsp;
<SYNC Start=3579805><P class='tr'> 
<SYNC Start=3582745><P class='tr'>&nbsp;
<SYNC Start=3582745><P class='tr'> 
<SYNC Start=3585365><P class='tr'>&nbsp;
<SYNC Start=3585365><P class='tr'> 
<SYNC Start=3588385><P class='tr'>&nbsp;
<SYNC Start=3590205><P class='tr'> 
<SYNC Start=3592955><P class='tr'>&nbsp;
<SYNC Start=3594335><P class='tr'> 
<SYNC Start=3595335><P class='tr'>&nbsp;
<SYNC Start=3595885><P class='tr'> 
<SYNC Start=3598455><P class='tr'>&nbsp;
<SYNC Start=3598455><P class='tr'> 
<SYNC Start=3601385><P class='tr'>&nbsp;
<SYNC Start=3601385><P class='tr'> 
<SYNC Start=3604425><P class='tr'>&nbsp;
<SYNC Start=3604685><P class='tr'> 
<SYNC Start=3608145><P class='tr'>&nbsp;
<SYNC Start=3610065><P class='tr'> 
<SYNC Start=3612385><P class='tr'>&nbsp;
<SYNC Start=3612525><P class='tr'> 
<SYNC Start=3615525><P class='tr'>&nbsp;
<SYNC Start=3615915><P class='tr'> 
<SYNC Start=3618315><P class='tr'>&nbsp;
<SYNC Start=3618855><P class='tr'> 
<SYNC Start=3621855><P class='tr'>&nbsp;
<SYNC Start=3621855><P class='tr'> 
<SYNC Start=3624725><P class='tr'>&nbsp;
<SYNC Start=3624725><P class='tr'> 
<SYNC Start=3627685><P class='tr'>&nbsp;
<SYNC Start=3627685><P class='tr'> 
<SYNC Start=3630545><P class='tr'>&nbsp;
<SYNC Start=3630545><P class='tr'> 
<SYNC Start=3631905><P class='tr'>&nbsp;
<SYNC Start=3633015><P class='tr'> 
<SYNC Start=3636085><P class='tr'>&nbsp;
<SYNC Start=3636375><P class='tr'> 
<SYNC Start=3639125><P class='tr'>&nbsp;
<SYNC Start=3639755><P class='tr'> 
<SYNC Start=3642315><P class='tr'>&nbsp;
<SYNC Start=3643015><P class='tr'> 
<SYNC Start=3644945><P class='tr'>&nbsp;
<SYNC Start=3645635><P class='tr'> 
<SYNC Start=3648185><P class='tr'>&nbsp;
<SYNC Start=3649005><P class='tr'> 
<SYNC Start=3650385><P class='tr'>&nbsp;
<SYNC Start=3651185><P class='tr'> 
<SYNC Start=3652525><P class='tr'>&nbsp;
<SYNC Start=3653425><P class='tr'> 
<SYNC Start=3654435><P class='tr'>&nbsp;
<SYNC Start=3655365><P class='tr'> 
<SYNC Start=3656735><P class='tr'>&nbsp;
<SYNC Start=3657785><P class='tr'> 
<SYNC Start=3660705><P class='tr'>&nbsp;
<SYNC Start=3662485><P class='tr'> 
<SYNC Start=3663975><P class='tr'>&nbsp;
<SYNC Start=3664245><P class='tr'> 
<SYNC Start=3667355><P class='tr'>&nbsp;
<SYNC Start=3667355><P class='tr'> 
<SYNC Start=3669305><P class='tr'>&nbsp;
<SYNC Start=3669815><P class='tr'> 
<SYNC Start=3673085><P class='tr'>&nbsp;
<SYNC Start=3673085><P class='tr'> 
<SYNC Start=3675925><P class='tr'>&nbsp;
<SYNC Start=3675925><P class='tr'> 
<SYNC Start=3678955><P class='tr'>&nbsp;
<SYNC Start=3679425><P class='tr'> 
<SYNC Start=3682335><P class='tr'>&nbsp;
<SYNC Start=3682335><P class='tr'> 
<SYNC Start=3683335><P class='tr'>&nbsp;
<SYNC Start=3683815><P class='tr'> 
<SYNC Start=3684815><P class='tr'>&nbsp;
<SYNC Start=3686315><P class='tr'> 
<SYNC Start=3689185><P class='tr'>&nbsp;
<SYNC Start=3689715><P class='tr'> 
<SYNC Start=3693045><P class='tr'>&nbsp;
<SYNC Start=3693205><P class='tr'> 
<SYNC Start=3696165><P class='tr'>&nbsp;
<SYNC Start=3696165><P class='tr'> 
<SYNC Start=3697355><P class='tr'>&nbsp;
<SYNC Start=3697665><P class='tr'> 
<SYNC Start=3699185><P class='tr'>&nbsp;
<SYNC Start=3699575><P class='tr'> 
<SYNC Start=3703045><P class='tr'>&nbsp;
<SYNC Start=3705355><P class='tr'> 
<SYNC Start=3706355><P class='tr'>&nbsp;
<SYNC Start=3706705><P class='tr'> 
<SYNC Start=3707805><P class='tr'>&nbsp;
<SYNC Start=3711485><P class='tr'> 
<SYNC Start=3712655><P class='tr'>&nbsp;
<SYNC Start=3713385><P class='tr'> 
<SYNC Start=3715475><P class='tr'>&nbsp;
<SYNC Start=3716215><P class='tr'> 
<SYNC Start=3719085><P class='tr'>&nbsp;
<SYNC Start=3719305><P class='tr'> 
<SYNC Start=3722445><P class='tr'>&nbsp;
<SYNC Start=3722445><P class='tr'> 
<SYNC Start=3725365><P class='tr'>&nbsp;
<SYNC Start=3725365><P class='tr'> 
<SYNC Start=3727885><P class='tr'>&nbsp;
<SYNC Start=3728385><P class='tr'> 
<SYNC Start=3729385><P class='tr'>&nbsp;
<SYNC Start=3729405><P class='tr'> 
<SYNC Start=3732315><P class='tr'>&nbsp;
<SYNC Start=3732345><P class='tr'> 
<SYNC Start=3734275><P class='tr'>&nbsp;
<SYNC Start=3734975><P class='tr'> 
<SYNC Start=3737975><P class='tr'>&nbsp;
<SYNC Start=3737975><P class='tr'> 
<SYNC Start=3739245><P class='tr'>&nbsp;
<SYNC Start=3739605><P class='tr'> 
<SYNC Start=3740605><P class='tr'>&nbsp;
<SYNC Start=3742445><P class='tr'> 
<SYNC Start=3745495><P class='tr'>&nbsp;
<SYNC Start=3746115><P class='tr'> 
<SYNC Start=3747175><P class='tr'>&nbsp;
<SYNC Start=3747535><P class='tr'> 
<SYNC Start=3750545><P class='tr'>&nbsp;
<SYNC Start=3750735><P class='tr'> 
<SYNC Start=3754125><P class='tr'>&nbsp;
<SYNC Start=3755565><P class='tr'> 
<SYNC Start=3758515><P class='tr'>&nbsp;
<SYNC Start=3758515><P class='tr'> 
<SYNC Start=3760135><P class='tr'>&nbsp;
<SYNC Start=3760595><P class='tr'> 
<SYNC Start=3761675><P class='tr'>&nbsp;
<SYNC Start=3762135><P class='tr'> 
<SYNC Start=3765415><P class='tr'>&nbsp;
<SYNC Start=3768565><P class='tr'> 
<SYNC Start=3769935><P class='tr'>&nbsp;
<SYNC Start=3771915><P class='tr'> 
<SYNC Start=3774905><P class='tr'>&nbsp;
<SYNC Start=3774905><P class='tr'> 
<SYNC Start=3776045><P class='tr'>&nbsp;
<SYNC Start=3776855><P class='tr'> 
<SYNC Start=3779735><P class='tr'>&nbsp;
<SYNC Start=3779735><P class='tr'> 
<SYNC Start=3780735><P class='tr'>&nbsp;
<SYNC Start=3781545><P class='tr'> 
<SYNC Start=3783435><P class='tr'>&nbsp;
<SYNC Start=3786895><P class='tr'> 
<SYNC Start=3789155><P class='tr'>&nbsp;
<SYNC Start=3789985><P class='tr'> 
<SYNC Start=3790945><P class='tr'>&nbsp;
<SYNC Start=3790945><P class='tr'> 
<SYNC Start=3791945><P class='tr'>&nbsp;
<SYNC Start=3793005><P class='tr'> 
<SYNC Start=3795685><P class='tr'>&nbsp;
<SYNC Start=3795685><P class='tr'> 
<SYNC Start=3798475><P class='tr'>&nbsp;
<SYNC Start=3798475><P class='tr'> 
<SYNC Start=3800685><P class='tr'>&nbsp;
<SYNC Start=3801865><P class='tr'> 
<SYNC Start=3805005><P class='tr'>&nbsp;
<SYNC Start=3805005><P class='tr'> 
<SYNC Start=3808335><P class='tr'>&nbsp;
<SYNC Start=3808585><P class='tr'> 
<SYNC Start=3809585><P class='tr'>&nbsp;
<SYNC Start=3809785><P class='tr'> 
<SYNC Start=3812625><P class='tr'>&nbsp;
<SYNC Start=3812625><P class='tr'> 
<SYNC Start=3816065><P class='tr'>&nbsp;
<SYNC Start=3816365><P class='tr'> 
<SYNC Start=3817365><P class='tr'>&nbsp;
<SYNC Start=3817795><P class='tr'> 
<SYNC Start=3820685><P class='tr'>&nbsp;
<SYNC Start=3820685><P class='tr'> 
<SYNC Start=3821685><P class='tr'>&nbsp;
<SYNC Start=3822945><P class='tr'> 
<SYNC Start=3825915><P class='tr'>&nbsp;
<SYNC Start=3825915><P class='tr'> 
<SYNC Start=3828955><P class='tr'>&nbsp;
<SYNC Start=3828955><P class='tr'> 
<SYNC Start=3829955><P class='tr'>&nbsp;
<SYNC Start=3830565><P class='tr'> 
<SYNC Start=3832105><P class='tr'>&nbsp;
<SYNC Start=3833045><P class='tr'> 
<SYNC Start=3834145><P class='tr'>&nbsp;
<SYNC Start=3836265><P class='tr'> 
<SYNC Start=3839095><P class='tr'>&nbsp;
<SYNC Start=3839245><P class='tr'> 
<SYNC Start=3841955><P class='tr'>&nbsp;
<SYNC Start=3843135><P class='tr'> 
<SYNC Start=3846185><P class='tr'>&nbsp;
<SYNC Start=3846185><P class='tr'> 
<SYNC Start=3849125><P class='tr'>&nbsp;
<SYNC Start=3849125><P class='tr'> 
<SYNC Start=3850695><P class='tr'>&nbsp;
<SYNC Start=3851595><P class='tr'> 
<SYNC Start=3854615><P class='tr'>&nbsp;
<SYNC Start=3854615><P class='tr'> 
<SYNC Start=3855615><P class='tr'>&nbsp;
<SYNC Start=3855615><P class='tr'> 
<SYNC Start=3858145><P class='tr'>&nbsp;
<SYNC Start=3858765><P class='tr'> 
<SYNC Start=3860095><P class='tr'>&nbsp;
<SYNC Start=3862685><P class='tr'> 
<SYNC Start=3863755><P class='tr'>&nbsp;
<SYNC Start=3864395><P class='tr'> 
<SYNC Start=3867175><P class='tr'>&nbsp;
<SYNC Start=3867175><P class='tr'> 
<SYNC Start=3868175><P class='tr'>&nbsp;
<SYNC Start=3868435><P class='tr'> 
<SYNC Start=3871205><P class='tr'>&nbsp;
<SYNC Start=3871205><P class='tr'> 
<SYNC Start=3873455><P class='tr'>&nbsp;
<SYNC Start=3874205><P class='tr'> 
<SYNC Start=3876425><P class='tr'>&nbsp;
<SYNC Start=3876455><P class='tr'> 
<SYNC Start=3879135><P class='tr'>&nbsp;
<SYNC Start=3879135><P class='tr'> 
<SYNC Start=3881985><P class='tr'>&nbsp;
<SYNC Start=3882795><P class='tr'> 
<SYNC Start=3886085><P class='tr'>&nbsp;
<SYNC Start=3886265><P class='tr'> 
<SYNC Start=3887355><P class='tr'>&nbsp;
<SYNC Start=3887715><P class='tr'> 
<SYNC Start=3890245><P class='tr'>&nbsp;
<SYNC Start=3890435><P class='tr'> 
<SYNC Start=3893845><P class='tr'>&nbsp;
<SYNC Start=3893895><P class='tr'> 
<SYNC Start=3895815><P class='tr'>&nbsp;
<SYNC Start=3896585><P class='tr'> 
<SYNC Start=3898045><P class='tr'>&nbsp;
<SYNC Start=3898935><P class='tr'> 
<SYNC Start=3901425><P class='tr'>&nbsp;
<SYNC Start=3902475><P class='tr'> 
<SYNC Start=3905645><P class='tr'>&nbsp;
<SYNC Start=3908095><P class='tr'> 
<SYNC Start=3910515><P class='tr'>&nbsp;
<SYNC Start=3910825><P class='tr'> 
<SYNC Start=3912045><P class='tr'>&nbsp;
<SYNC Start=3913755><P class='tr'> 
<SYNC Start=3917095><P class='tr'>&nbsp;
<SYNC Start=3917095><P class='tr'> 
<SYNC Start=3919795><P class='tr'>&nbsp;
<SYNC Start=3920115><P class='tr'> 
<SYNC Start=3922105><P class='tr'>&nbsp;
<SYNC Start=3922855><P class='tr'> 
<SYNC Start=3925905><P class='tr'>&nbsp;
<SYNC Start=3926475><P class='tr'> 
<SYNC Start=3927755><P class='tr'>&nbsp;
<SYNC Start=3929285><P class='tr'> 
<SYNC Start=3931155><P class='tr'>&nbsp;
<SYNC Start=3932145><P class='tr'> 
<SYNC Start=3935035><P class='tr'>&nbsp;
<SYNC Start=3935035><P class='tr'> 
<SYNC Start=3937675><P class='tr'>&nbsp;
<SYNC Start=3937675><P class='tr'> 
<SYNC Start=3940015><P class='tr'>&nbsp;
<SYNC Start=3940015><P class='tr'> 
<SYNC Start=3943105><P class='tr'>&nbsp;
<SYNC Start=3943105><P class='tr'> 
<SYNC Start=3946125><P class='tr'>&nbsp;
<SYNC Start=3946125><P class='tr'> 
<SYNC Start=3949315><P class='tr'>&nbsp;
<SYNC Start=3949315><P class='tr'> 
<SYNC Start=3952395><P class='tr'>&nbsp;
<SYNC Start=3952395><P class='tr'> 
<SYNC Start=3955095><P class='tr'>&nbsp;
<SYNC Start=3955095><P class='tr'> 
<SYNC Start=3958015><P class='tr'>&nbsp;
<SYNC Start=3958015><P class='tr'> 
<SYNC Start=3961445><P class='tr'>&nbsp;
<SYNC Start=3961995><P class='tr'> 
<SYNC Start=3965095><P class='tr'>&nbsp;
<SYNC Start=3965185><P class='tr'> 
<SYNC Start=3967835><P class='tr'>&nbsp;
<SYNC Start=3968015><P class='tr'> 
<SYNC Start=3970205><P class='tr'>&nbsp;
<SYNC Start=3970595><P class='tr'> 
<SYNC Start=3973005><P class='tr'>&nbsp;
<SYNC Start=3973575><P class='tr'> 
<SYNC Start=3976155><P class='tr'>&nbsp;
<SYNC Start=3976155><P class='tr'> 
<SYNC Start=3977565><P class='tr'>&nbsp;
<SYNC Start=3979235><P class='tr'> 
<SYNC Start=3981465><P class='tr'>&nbsp;
<SYNC Start=3982045><P class='tr'> 
<SYNC Start=3983455><P class='tr'>&nbsp;
<SYNC Start=3984855><P class='tr'> 
<SYNC Start=3986245><P class='tr'>&nbsp;
<SYNC Start=3986785><P class='tr'> 
<SYNC Start=3989065><P class='tr'>&nbsp;
<SYNC Start=3989385><P class='tr'> 
<SYNC Start=3991015><P class='tr'>&nbsp;
<SYNC Start=3992445><P class='tr'> 
<SYNC Start=3993895><P class='tr'>&nbsp;
<SYNC Start=3994915><P class='tr'> 
<SYNC Start=3997485><P class='tr'>&nbsp;
<SYNC Start=3997745><P class='tr'> 
<SYNC Start=4000375><P class='tr'>&nbsp;
<SYNC Start=4000375><P class='tr'> 
<SYNC Start=4003015><P class='tr'>&nbsp;
<SYNC Start=4003985><P class='tr'> 
<SYNC Start=4006915><P class='tr'>&nbsp;
<SYNC Start=4006915><P class='tr'> 
<SYNC Start=4009935><P class='tr'>&nbsp;
<SYNC Start=4010075><P class='tr'> 
<SYNC Start=4012965><P class='tr'>&nbsp;
<SYNC Start=4012965><P class='tr'> 
<SYNC Start=4013965><P class='tr'>&nbsp;
<SYNC Start=4014195><P class='tr'> 
<SYNC Start=4017235><P class='tr'>&nbsp;
<SYNC Start=4017235><P class='tr'> 
<SYNC Start=4018655><P class='tr'>&nbsp;
<SYNC Start=4019075><P class='tr'> 
<SYNC Start=4020075><P class='tr'>&nbsp;
<SYNC Start=4020235><P class='tr'> 
<SYNC Start=4023425><P class='tr'>&nbsp;
<SYNC Start=4023885><P class='tr'> 
<SYNC Start=4026825><P class='tr'>&nbsp;
<SYNC Start=4027345><P class='tr'> 
<SYNC Start=4030325><P class='tr'>&nbsp;
<SYNC Start=4030325><P class='tr'> 
<SYNC Start=4031325><P class='tr'>&nbsp;
<SYNC Start=4031745><P class='tr'> 
<SYNC Start=4033885><P class='tr'>&nbsp;
<SYNC Start=4034385><P class='tr'> 
<SYNC Start=4036995><P class='tr'>&nbsp;
<SYNC Start=4037295><P class='tr'> 
<SYNC Start=4040015><P class='tr'>&nbsp;
<SYNC Start=4040015><P class='tr'> 
<SYNC Start=4043175><P class='tr'>&nbsp;
<SYNC Start=4043175><P class='tr'> 
<SYNC Start=4045695><P class='tr'>&nbsp;
<SYNC Start=4045695><P class='tr'> 
<SYNC Start=4047865><P class='tr'>&nbsp;
<SYNC Start=4047865><P class='tr'> 
<SYNC Start=4051245><P class='tr'>&nbsp;
<SYNC Start=4051695><P class='tr'> 
<SYNC Start=4053725><P class='tr'>&nbsp;
<SYNC Start=4054055><P class='tr'> 
<SYNC Start=4055495><P class='tr'>&nbsp;
<SYNC Start=4056455><P class='tr'> 
<SYNC Start=4058975><P class='tr'>&nbsp;
<SYNC Start=4060125><P class='tr'> 
<SYNC Start=4063005><P class='tr'>&nbsp;
<SYNC Start=4063005><P class='tr'> 
<SYNC Start=4064005><P class='tr'>&nbsp;
<SYNC Start=4064245><P class='tr'> 
<SYNC Start=4065495><P class='tr'>&nbsp;
<SYNC Start=4066155><P class='tr'> 
<SYNC Start=4069215><P class='tr'>&nbsp;
<SYNC Start=4069215><P class='tr'> 
<SYNC Start=4072175><P class='tr'>&nbsp;
<SYNC Start=4072175><P class='tr'> 
<SYNC Start=4073175><P class='tr'>&nbsp;
<SYNC Start=4073475><P class='tr'> 
<SYNC Start=4076305><P class='tr'>&nbsp;
<SYNC Start=4076305><P class='tr'> 
<SYNC Start=4077305><P class='tr'>&nbsp;
<SYNC Start=4077545><P class='tr'> 
<SYNC Start=4080125><P class='tr'>&nbsp;
<SYNC Start=4080125><P class='tr'> 
<SYNC Start=4082745><P class='tr'>&nbsp;
<SYNC Start=4083025><P class='tr'> 
<SYNC Start=4084165><P class='tr'>&nbsp;
<SYNC Start=4084495><P class='tr'> 
<SYNC Start=4085905><P class='tr'>&nbsp;
<SYNC Start=4086455><P class='tr'> 
<SYNC Start=4089295><P class='tr'>&nbsp;
<SYNC Start=4089465><P class='tr'> 
<SYNC Start=4091305><P class='tr'>&nbsp;
<SYNC Start=4092255><P class='tr'> 
<SYNC Start=4093265><P class='tr'>&nbsp;
<SYNC Start=4093585><P class='tr'> 
<SYNC Start=4095015><P class='tr'>&nbsp;
<SYNC Start=4097245><P class='tr'> 
<SYNC Start=4098915><P class='tr'>&nbsp;
<SYNC Start=4101525><P class='tr'> 
<SYNC Start=4103675><P class='tr'>&nbsp;
<SYNC Start=4104845><P class='tr'> 
<SYNC Start=4108205><P class='tr'>&nbsp;
<SYNC Start=4108545><P class='tr'> 
<SYNC Start=4109545><P class='tr'>&nbsp;
<SYNC Start=4110275><P class='tr'> 
<SYNC Start=4112305><P class='tr'>&nbsp;
<SYNC Start=4113375><P class='tr'> 
<SYNC Start=4116235><P class='tr'>&nbsp;
<SYNC Start=4116234><P class='tr'> 
<SYNC Start=4119154><P class='tr'>&nbsp;
<SYNC Start=4119654><P class='tr'> 
<SYNC Start=4122744><P class='tr'>&nbsp;
<SYNC Start=4122745><P class='tr'> 
<SYNC Start=4125975><P class='tr'>&nbsp;
<SYNC Start=4126275><P class='tr'> 
<SYNC Start=4128725><P class='tr'>&nbsp;
<SYNC Start=4128725><P class='tr'> 
<SYNC Start=4131895><P class='tr'>&nbsp;
<SYNC Start=4131895><P class='tr'> 
<SYNC Start=4132895><P class='tr'>&nbsp;
<SYNC Start=4133545><P class='tr'> 
<SYNC Start=4134645><P class='tr'>&nbsp;
<SYNC Start=4135685><P class='tr'> 
<SYNC Start=4138885><P class='tr'>&nbsp;
<SYNC Start=4138884><P class='tr'> 
<SYNC Start=4141434><P class='tr'>&nbsp;
<SYNC Start=4142145><P class='tr'> 
<SYNC Start=4143855><P class='tr'>&nbsp;
<SYNC Start=4144605><P class='tr'> 
<SYNC Start=4147415><P class='tr'>&nbsp;
<SYNC Start=4147585><P class='tr'> 
<SYNC Start=4148585><P class='tr'>&nbsp;
<SYNC Start=4149025><P class='tr'> 
<SYNC Start=4151785><P class='tr'>&nbsp;
<SYNC Start=4151785><P class='tr'> 
<SYNC Start=4154415><P class='tr'>&nbsp;
<SYNC Start=4154415><P class='tr'> 
<SYNC Start=4157185><P class='tr'>&nbsp;
<SYNC Start=4157185><P class='tr'> 
<SYNC Start=4159315><P class='tr'>&nbsp;
<SYNC Start=4159805><P class='tr'> 
<SYNC Start=4161775><P class='tr'>&nbsp;
<SYNC Start=4162305><P class='tr'> 
<SYNC Start=4164915><P class='tr'>&nbsp;
<SYNC Start=4166654><P class='tr'> 
<SYNC Start=4167714><P class='tr'>&nbsp;
<SYNC Start=4169185><P class='tr'> 
<SYNC Start=4170395><P class='tr'>&nbsp;
<SYNC Start=4171005><P class='tr'> 
<SYNC Start=4172555><P class='tr'>&nbsp;
<SYNC Start=4173895><P class='tr'> 
<SYNC Start=4176915><P class='tr'>&nbsp;
<SYNC Start=4177395><P class='tr'> 
<SYNC Start=4180185><P class='tr'>&nbsp;
<SYNC Start=4180745><P class='tr'> 
<SYNC Start=4184195><P class='tr'>&nbsp;
<SYNC Start=4184225><P class='tr'> 
<SYNC Start=4187455><P class='tr'>&nbsp;
<SYNC Start=4187615><P class='tr'> 
<SYNC Start=4190525><P class='tr'>&nbsp;
<SYNC Start=4190525><P class='tr'> 
<SYNC Start=4191525><P class='tr'>&nbsp;
<SYNC Start=4191795><P class='tr'> 
<SYNC Start=4192975><P class='tr'>&nbsp;
<SYNC Start=4193625><P class='tr'> 
<SYNC Start=4196665><P class='tr'>&nbsp;
<SYNC Start=4199075><P class='tr'> 
<SYNC Start=4200505><P class='tr'>&nbsp;
<SYNC Start=4200835><P class='tr'> 
<SYNC Start=4201835><P class='tr'>&nbsp;
<SYNC Start=4202405><P class='tr'> 
<SYNC Start=4204325><P class='tr'>&nbsp;
<SYNC Start=4206715><P class='tr'> 
<SYNC Start=4207815><P class='tr'>&nbsp;
<SYNC Start=4208245><P class='tr'> 
<SYNC Start=4209545><P class='tr'>&nbsp;
<SYNC Start=4213955><P class='tr'> 
<SYNC Start=4214955><P class='tr'>&nbsp;
<SYNC Start=4216745><P class='tr'> 
<SYNC Start=4217745><P class='tr'>&nbsp;
<SYNC Start=4219405><P class='tr'> 
<SYNC Start=4220645><P class='tr'>&nbsp;
<SYNC Start=4222675><P class='tr'> 
<SYNC Start=4225415><P class='tr'>&nbsp;
<SYNC Start=4225965><P class='tr'> 
<SYNC Start=4227505><P class='tr'>&nbsp;
<SYNC Start=4232125><P class='tr'> 
<SYNC Start=4234905><P class='tr'>&nbsp;
<SYNC Start=4234905><P class='tr'> 
<SYNC Start=4238185><P class='tr'>&nbsp;
<SYNC Start=4238385><P class='tr'> 
<SYNC Start=4239675><P class='tr'>&nbsp;
<SYNC Start=4240025><P class='tr'> 
<SYNC Start=4241025><P class='tr'>&nbsp;
<SYNC Start=4242495><P class='tr'> 
<SYNC Start=4244185><P class='tr'>&nbsp;
<SYNC Start=4244535><P class='tr'> 
<SYNC Start=4247975><P class='tr'>&nbsp;
<SYNC Start=4248835><P class='tr'> 
<SYNC Start=4251895><P class='tr'>&nbsp;
<SYNC Start=4251895><P class='tr'> 
<SYNC Start=4254245><P class='tr'>&nbsp;
<SYNC Start=4254335><P class='tr'> 
<SYNC Start=4257205><P class='tr'>&nbsp;
<SYNC Start=4257915><P class='tr'> 
<SYNC Start=4261275><P class='tr'>&nbsp;
<SYNC Start=4261275><P class='tr'> 
<SYNC Start=4264725><P class='tr'>&nbsp;
<SYNC Start=4265595><P class='tr'> 
<SYNC Start=4268305><P class='tr'>&nbsp;
<SYNC Start=4268305><P class='tr'> 
<SYNC Start=4269805><P class='tr'>&nbsp;
<SYNC Start=4270305><P class='tr'> 
<SYNC Start=4272835><P class='tr'>&nbsp;
<SYNC Start=4272895><P class='tr'> 
<SYNC Start=4276295><P class='tr'>&nbsp;
<SYNC Start=4276365><P class='tr'> 
<SYNC Start=4279005><P class='tr'>&nbsp;
<SYNC Start=4279085><P class='tr'> 
<SYNC Start=4282435><P class='tr'>&nbsp;
<SYNC Start=4282895><P class='tr'> 
<SYNC Start=4286355><P class='tr'>&nbsp;
<SYNC Start=4286895><P class='tr'> 
<SYNC Start=4289915><P class='tr'>&nbsp;
<SYNC Start=4289915><P class='tr'> 
<SYNC Start=4292755><P class='tr'>&nbsp;
<SYNC Start=4293015><P class='tr'> 
<SYNC Start=4295575><P class='tr'>&nbsp;
<SYNC Start=4296035><P class='tr'> 
<SYNC Start=4299135><P class='tr'>&nbsp;
<SYNC Start=4299765><P class='tr'> 
<SYNC Start=4302835><P class='tr'>&nbsp;
<SYNC Start=4302835><P class='tr'> 
<SYNC Start=4305635><P class='tr'>&nbsp;
<SYNC Start=4305635><P class='tr'> 
<SYNC Start=4307105><P class='tr'>&nbsp;
<SYNC Start=4308955><P class='tr'> 
<SYNC Start=4312165><P class='tr'>&nbsp;
<SYNC Start=4314775><P class='tr'> 
<SYNC Start=4315845><P class='tr'>&nbsp;
<SYNC Start=4316715><P class='tr'> 
<SYNC Start=4317715><P class='tr'>&nbsp;
<SYNC Start=4318755><P class='tr'> 
<SYNC Start=4321595><P class='tr'>&nbsp;
<SYNC Start=4321925><P class='tr'> 
<SYNC Start=4324985><P class='tr'>&nbsp;
<SYNC Start=4324985><P class='tr'> 
<SYNC Start=4327755><P class='tr'>&nbsp;
<SYNC Start=4327755><P class='tr'> 
<SYNC Start=4329735><P class='tr'>&nbsp;
<SYNC Start=4330605><P class='tr'> 
<SYNC Start=4333145><P class='tr'>&nbsp;
<SYNC Start=4334445><P class='tr'> 
<SYNC Start=4336425><P class='tr'>&nbsp;
<SYNC Start=4337105><P class='tr'> 
<SYNC Start=4340085><P class='tr'>&nbsp;
<SYNC Start=4340885><P class='tr'> 
<SYNC Start=4344095><P class='tr'>&nbsp;
<SYNC Start=4344095><P class='tr'> 
<SYNC Start=4345915><P class='tr'>&nbsp;
<SYNC Start=4346415><P class='tr'> 
<SYNC Start=4349485><P class='tr'>&nbsp;
<SYNC Start=4349555><P class='tr'> 
<SYNC Start=4352655><P class='tr'>&nbsp;
<SYNC Start=4352655><P class='tr'> 
<SYNC Start=4355555><P class='tr'>&nbsp;
<SYNC Start=4355815><P class='tr'> 
<SYNC Start=4358705><P class='tr'>&nbsp;
<SYNC Start=4358705><P class='tr'> 
<SYNC Start=4360875><P class='tr'>&nbsp;
<SYNC Start=4361625><P class='tr'> 
<SYNC Start=4364575><P class='tr'>&nbsp;
<SYNC Start=4364905><P class='tr'> 
<SYNC Start=4367945><P class='tr'>&nbsp;
<SYNC Start=4367945><P class='tr'> 
<SYNC Start=4370725><P class='tr'>&nbsp;
<SYNC Start=4370725><P class='tr'> 
<SYNC Start=4371725><P class='tr'>&nbsp;
<SYNC Start=4371845><P class='tr'> 
<SYNC Start=4374775><P class='tr'>&nbsp;
<SYNC Start=4374775><P class='tr'> 
<SYNC Start=4377805><P class='tr'>&nbsp;
<SYNC Start=4377805><P class='tr'> 
<SYNC Start=4379925><P class='tr'>&nbsp;
<SYNC Start=4380755><P class='tr'> 
<SYNC Start=4383765><P class='tr'>&nbsp;
<SYNC Start=4383765><P class='tr'> 
<SYNC Start=4384765><P class='tr'>&nbsp;
<SYNC Start=4385095><P class='tr'> 
<SYNC Start=4386505><P class='tr'>&nbsp;
<SYNC Start=4387205><P class='tr'> 
<SYNC Start=4389695><P class='tr'>&nbsp;
<SYNC Start=4390225><P class='tr'> 
<SYNC Start=4393385><P class='tr'>&nbsp;
<SYNC Start=4393385><P class='tr'> 
<SYNC Start=4396415><P class='tr'>&nbsp;
<SYNC Start=4396415><P class='tr'> 
<SYNC Start=4398215><P class='tr'>&nbsp;
<SYNC Start=4398595><P class='tr'> 
<SYNC Start=4401685><P class='tr'>&nbsp;
<SYNC Start=4401685><P class='tr'> 
<SYNC Start=4404705><P class='tr'>&nbsp;
<SYNC Start=4404705><P class='tr'> 
<SYNC Start=4407025><P class='tr'>&nbsp;
<SYNC Start=4407405><P class='tr'> 
<SYNC Start=4410365><P class='tr'>&nbsp;
<SYNC Start=4410365><P class='tr'> 
<SYNC Start=4413265><P class='tr'>&nbsp;
<SYNC Start=4413265><P class='tr'> 
<SYNC Start=4416265><P class='tr'>&nbsp;
<SYNC Start=4416265><P class='tr'> 
<SYNC Start=4419385><P class='tr'>&nbsp;
<SYNC Start=4420125><P class='tr'> 
<SYNC Start=4422845><P class='tr'>&nbsp;
<SYNC Start=4422845><P class='tr'> 
<SYNC Start=4425855><P class='tr'>&nbsp;
<SYNC Start=4425855><P class='tr'> 
<SYNC Start=4427825><P class='tr'>&nbsp;
<SYNC Start=4428225><P class='tr'> 
<SYNC Start=4431205><P class='tr'>&nbsp;
<SYNC Start=4431375><P class='tr'> 
<SYNC Start=4434135><P class='tr'>&nbsp;
<SYNC Start=4434135><P class='tr'> 
<SYNC Start=4436695><P class='tr'>&nbsp;
<SYNC Start=4436695><P class='tr'> 
<SYNC Start=4438405><P class='tr'>&nbsp;
<SYNC Start=4439795><P class='tr'> 
<SYNC Start=4442755><P class='tr'>&nbsp;
<SYNC Start=4442755><P class='tr'> 
<SYNC Start=4445885><P class='tr'>&nbsp;
<SYNC Start=4446075><P class='tr'> 
<SYNC Start=4448795><P class='tr'>&nbsp;
<SYNC Start=4449195><P class='tr'> 
<SYNC Start=4452135><P class='tr'>&nbsp;
<SYNC Start=4452135><P class='tr'> 
<SYNC Start=4455405><P class='tr'>&nbsp;
<SYNC Start=4456145><P class='tr'> 
<SYNC Start=4457145><P class='tr'>&nbsp;
<SYNC Start=4457505><P class='tr'> 
<SYNC Start=4460555><P class='tr'>&nbsp;
<SYNC Start=4460555><P class='tr'> 
<SYNC Start=4464015><P class='tr'>&nbsp;
<SYNC Start=4464335><P class='tr'> 
<SYNC Start=4467595><P class='tr'>&nbsp;
<SYNC Start=4467595><P class='tr'> 
<SYNC Start=4470585><P class='tr'>&nbsp;
<SYNC Start=4470585><P class='tr'> 
<SYNC Start=4473405><P class='tr'>&nbsp;
<SYNC Start=4473405><P class='tr'> 
<SYNC Start=4476545><P class='tr'>&nbsp;
<SYNC Start=4476545><P class='tr'> 
<SYNC Start=4479535><P class='tr'>&nbsp;
<SYNC Start=4479535><P class='tr'> 
<SYNC Start=4480535><P class='tr'>&nbsp;
<SYNC Start=4481055><P class='tr'> 
<SYNC Start=4483405><P class='tr'>&nbsp;
<SYNC Start=4483405><P class='tr'> 
<SYNC Start=4486045><P class='tr'>&nbsp;
<SYNC Start=4486045><P class='tr'> 
<SYNC Start=4488365><P class='tr'>&nbsp;
<SYNC Start=4488365><P class='tr'> 
<SYNC Start=4489895><P class='tr'>&nbsp;
<SYNC Start=4491245><P class='tr'> 
<SYNC Start=4493655><P class='tr'>&nbsp;
<SYNC Start=4494375><P class='tr'> 
<SYNC Start=4497525><P class='tr'>&nbsp;
<SYNC Start=4497525><P class='tr'> 
<SYNC Start=4498525><P class='tr'>&nbsp;
<SYNC Start=4500585><P class='tr'> 
<SYNC Start=4501585><P class='tr'>&nbsp;
<SYNC Start=4502455><P class='tr'> 
<SYNC Start=4505855><P class='tr'>&nbsp;
<SYNC Start=4506575><P class='tr'> 
<SYNC Start=4507695><P class='tr'>&nbsp;
<SYNC Start=4510505><P class='tr'> 
<SYNC Start=4511505><P class='tr'>&nbsp;
<SYNC Start=4513465><P class='tr'> 
<SYNC Start=4516475><P class='tr'>&nbsp;
<SYNC Start=4516475><P class='tr'> 
<SYNC Start=4519615><P class='tr'>&nbsp;
<SYNC Start=4520095><P class='tr'> 
<SYNC Start=4522575><P class='tr'>&nbsp;
<SYNC Start=4524235><P class='tr'> 
<SYNC Start=4526315><P class='tr'>&nbsp;
<SYNC Start=4528555><P class='tr'> 
<SYNC Start=4529555><P class='tr'>&nbsp;
<SYNC Start=4530345><P class='tr'> 
<SYNC Start=4532515><P class='tr'>&nbsp;
<SYNC Start=4533605><P class='tr'> 
<SYNC Start=4536785><P class='tr'>&nbsp;
<SYNC Start=4539205><P class='tr'> 
<SYNC Start=4541275><P class='tr'>&nbsp;
<SYNC Start=4551505><P class='tr'> 
<SYNC Start=4554855><P class='tr'>&nbsp;
<SYNC Start=4554905><P class='tr'> 
<SYNC Start=4556455><P class='tr'>&nbsp;
<SYNC Start=4558845><P class='tr'> 
<SYNC Start=4559845><P class='tr'>&nbsp;
<SYNC Start=4560755><P class='tr'> 
<SYNC Start=4563615><P class='tr'>&nbsp;
<SYNC Start=4564395><P class='tr'> 
<SYNC Start=4565565><P class='tr'>&nbsp;
<SYNC Start=4566145><P class='tr'> 
<SYNC Start=4568535><P class='tr'>&nbsp;
<SYNC Start=4568535><P class='tr'> 
<SYNC Start=4570705><P class='tr'>&nbsp;
<SYNC Start=4570705><P class='tr'> 
<SYNC Start=4573735><P class='tr'>&nbsp;
<SYNC Start=4573735><P class='tr'> 
<SYNC Start=4576455><P class='tr'>&nbsp;
<SYNC Start=4577135><P class='tr'> 
<SYNC Start=4579735><P class='tr'>&nbsp;
<SYNC Start=4579735><P class='tr'> 
<SYNC Start=4580965><P class='tr'>&nbsp;
<SYNC Start=4581795><P class='tr'> 
<SYNC Start=4582945><P class='tr'>&nbsp;
<SYNC Start=4584345><P class='tr'> 
<SYNC Start=4587445><P class='tr'>&nbsp;
<SYNC Start=4587485><P class='tr'> 
<SYNC Start=4590395><P class='tr'>&nbsp;
<SYNC Start=4590395><P class='tr'> 
<SYNC Start=4593155><P class='tr'>&nbsp;
<SYNC Start=4593155><P class='tr'> 
<SYNC Start=4595715><P class='tr'>&nbsp;
<SYNC Start=4595715><P class='tr'> 
<SYNC Start=4598765><P class='tr'>&nbsp;
<SYNC Start=4598765><P class='tr'> 
<SYNC Start=4601685><P class='tr'>&nbsp;
<SYNC Start=4601685><P class='tr'> 
<SYNC Start=4602685><P class='tr'>&nbsp;
<SYNC Start=4603335><P class='tr'> 
<SYNC Start=4604335><P class='tr'>&nbsp;
<SYNC Start=4605925><P class='tr'> 
<SYNC Start=4608635><P class='tr'>&nbsp;
<SYNC Start=4608635><P class='tr'> 
<SYNC Start=4609635><P class='tr'>&nbsp;
<SYNC Start=4614515><P class='tr'> 
<SYNC Start=4617095><P class='tr'>&nbsp;
<SYNC Start=4617095><P class='tr'> 
<SYNC Start=4620125><P class='tr'>&nbsp;
<SYNC Start=4620125><P class='tr'> 
<SYNC Start=4622985><P class='tr'>&nbsp;
<SYNC Start=4622985><P class='tr'> 
<SYNC Start=4626025><P class='tr'>&nbsp;
<SYNC Start=4626025><P class='tr'> 
<SYNC Start=4628755><P class='tr'>&nbsp;
<SYNC Start=4628755><P class='tr'> 
<SYNC Start=4629845><P class='tr'>&nbsp;
<SYNC Start=4630305><P class='tr'> 
<SYNC Start=4633115><P class='tr'>&nbsp;
<SYNC Start=4633115><P class='tr'> 
<SYNC Start=4634115><P class='tr'>&nbsp;
<SYNC Start=4638655><P class='tr'> 
<SYNC Start=4641705><P class='tr'>&nbsp;
<SYNC Start=4641705><P class='tr'> 
<SYNC Start=4642705><P class='tr'>&nbsp;
<SYNC Start=4643015><P class='tr'> 
<SYNC Start=4645565><P class='tr'>&nbsp;
<SYNC Start=4651015><P class='tr'> 
<SYNC Start=4654115><P class='tr'>&nbsp;
<SYNC Start=4654115><P class='tr'> 
<SYNC Start=4656015><P class='tr'>&nbsp;
<SYNC Start=4656345><P class='tr'> 
<SYNC Start=4659245><P class='tr'>&nbsp;
<SYNC Start=4659405><P class='tr'> 
<SYNC Start=4662545><P class='tr'>&nbsp;
<SYNC Start=4662545><P class='tr'> 
<SYNC Start=4665545><P class='tr'>&nbsp;
<SYNC Start=4665545><P class='tr'> 
<SYNC Start=4668575><P class='tr'>&nbsp;
<SYNC Start=4668575><P class='tr'> 
<SYNC Start=4671305><P class='tr'>&nbsp;
<SYNC Start=4671305><P class='tr'> 
<SYNC Start=4674085><P class='tr'>&nbsp;
<SYNC Start=4674085><P class='tr'> 
<SYNC Start=4676995><P class='tr'>&nbsp;
<SYNC Start=4676995><P class='tr'> 
<SYNC Start=4680245><P class='tr'>&nbsp;
<SYNC Start=4680715><P class='tr'> 
<SYNC Start=4683185><P class='tr'>&nbsp;
<SYNC Start=4683185><P class='tr'> 
<SYNC Start=4686245><P class='tr'>&nbsp;
<SYNC Start=4686365><P class='tr'> 
<SYNC Start=4689325><P class='tr'>&nbsp;
<SYNC Start=4689325><P class='tr'> 
<SYNC Start=4692025><P class='tr'>&nbsp;
<SYNC Start=4692345><P class='tr'> 
<SYNC Start=4695405><P class='tr'>&nbsp;
<SYNC Start=4695405><P class='tr'> 
<SYNC Start=4698435><P class='tr'>&nbsp;
<SYNC Start=4698435><P class='tr'> 
<SYNC Start=4700465><P class='tr'>&nbsp;
<SYNC Start=4701025><P class='tr'> 
<SYNC Start=4703975><P class='tr'>&nbsp;
<SYNC Start=4703975><P class='tr'> 
<SYNC Start=4706975><P class='tr'>&nbsp;
<SYNC Start=4707845><P class='tr'> 
<SYNC Start=4710705><P class='tr'>&nbsp;
<SYNC Start=4710705><P class='tr'> 
<SYNC Start=4712855><P class='tr'>&nbsp;
<SYNC Start=4713255><P class='tr'> 
<SYNC Start=4715635><P class='tr'>&nbsp;
<SYNC Start=4715635><P class='tr'> 
<SYNC Start=4717465><P class='tr'>&nbsp;
<SYNC Start=4717465><P class='tr'> 
<SYNC Start=4720365><P class='tr'>&nbsp;
<SYNC Start=4720535><P class='tr'> 
<SYNC Start=4721535><P class='tr'>&nbsp;
<SYNC Start=4722285><P class='tr'> 
<SYNC Start=4724905><P class='tr'>&nbsp;
<SYNC Start=4725195><P class='tr'> 
<SYNC Start=4726535><P class='tr'>&nbsp;
<SYNC Start=4727025><P class='tr'> 
<SYNC Start=4730025><P class='tr'>&nbsp;
<SYNC Start=4730025><P class='tr'> 
<SYNC Start=4732785><P class='tr'>&nbsp;
<SYNC Start=4732785><P class='tr'> 
<SYNC Start=4734915><P class='tr'>&nbsp;
<SYNC Start=4734915><P class='tr'> 
<SYNC Start=4737565><P class='tr'>&nbsp;
<SYNC Start=4737565><P class='tr'> 
<SYNC Start=4739315><P class='tr'>&nbsp;
<SYNC Start=4739675><P class='tr'> 
<SYNC Start=4742705><P class='tr'>&nbsp;
<SYNC Start=4742705><P class='tr'> 
<SYNC Start=4744685><P class='tr'>&nbsp;
<SYNC Start=4745135><P class='tr'> 
<SYNC Start=4747985><P class='tr'>&nbsp;
<SYNC Start=4747985><P class='tr'> 
<SYNC Start=4749235><P class='tr'>&nbsp;
<SYNC Start=4749555><P class='tr'> 
<SYNC Start=4753055><P class='tr'>&nbsp;
<SYNC Start=4754235><P class='tr'> 
<SYNC Start=4756115><P class='tr'>&nbsp;
<SYNC Start=4758365><P class='tr'> 
<SYNC Start=4759365><P class='tr'>&nbsp;
<SYNC Start=4761285><P class='tr'> 
<SYNC Start=4763855><P class='tr'>&nbsp;
<SYNC Start=4763855><P class='tr'> 
<SYNC Start=4766225><P class='tr'>&nbsp;
<SYNC Start=4767435><P class='tr'> 
<SYNC Start=4770445><P class='tr'>&nbsp;
<SYNC Start=4770445><P class='tr'> 
<SYNC Start=4771795><P class='tr'>&nbsp;
<SYNC Start=4773805><P class='tr'> 
<SYNC Start=4777155><P class='tr'>&nbsp;
<SYNC Start=4778085><P class='tr'> 
<SYNC Start=4779495><P class='tr'>&nbsp;
<SYNC Start=4780585><P class='tr'> 
<SYNC Start=4783455><P class='tr'>&nbsp;
<SYNC Start=4783455><P class='tr'> 
<SYNC Start=4786305><P class='tr'>&nbsp;
<SYNC Start=4786305><P class='tr'> 
<SYNC Start=4787885><P class='tr'>&nbsp;
<SYNC Start=4788355><P class='tr'> 
<SYNC Start=4789835><P class='tr'>&nbsp;
<SYNC Start=4790685><P class='tr'> 
<SYNC Start=4791685><P class='tr'>&nbsp;
<SYNC Start=4792165><P class='tr'> 
<SYNC Start=4795155><P class='tr'>&nbsp;
<SYNC Start=4795155><P class='tr'> 
<SYNC Start=4796365><P class='tr'>&nbsp;
<SYNC Start=4796795><P class='tr'> 
<SYNC Start=4799395><P class='tr'>&nbsp;
<SYNC Start=4800795><P class='tr'> 
<SYNC Start=4803365><P class='tr'>&nbsp;
<SYNC Start=4803365><P class='tr'> 
<SYNC Start=4806445><P class='tr'>&nbsp;
<SYNC Start=4806445><P class='tr'> 
<SYNC Start=4809415><P class='tr'>&nbsp;
<SYNC Start=4809415><P class='tr'> 
<SYNC Start=4812425><P class='tr'>&nbsp;
<SYNC Start=4812425><P class='tr'> 
<SYNC Start=4814945><P class='tr'>&nbsp;
<SYNC Start=4814945><P class='tr'> 
<SYNC Start=4817805><P class='tr'>&nbsp;
<SYNC Start=4817945><P class='tr'> 
<SYNC Start=4819045><P class='tr'>&nbsp;
<SYNC Start=4819705><P class='tr'> 
<SYNC Start=4820955><P class='tr'>&nbsp;
<SYNC Start=4821395><P class='tr'> 
<SYNC Start=4822885><P class='tr'>&nbsp;
<SYNC Start=4823605><P class='tr'> 
<SYNC Start=4824875><P class='tr'>&nbsp;
<SYNC Start=4826155><P class='tr'> 
<SYNC Start=4828975><P class='tr'>&nbsp;
<SYNC Start=4828975><P class='tr'> 
<SYNC Start=4832015><P class='tr'>&nbsp;
<SYNC Start=4832785><P class='tr'> 
<SYNC Start=4833785><P class='tr'>&nbsp;
<SYNC Start=4834025><P class='tr'> 
<SYNC Start=4835975><P class='tr'>&nbsp;
<SYNC Start=4836505><P class='tr'> 
<SYNC Start=4839275><P class='tr'>&nbsp;
<SYNC Start=4839555><P class='tr'> 
<SYNC Start=4842655><P class='tr'>&nbsp;
<SYNC Start=4842655><P class='tr'> 
<SYNC Start=4844875><P class='tr'>&nbsp;
<SYNC Start=4845205><P class='tr'> 
<SYNC Start=4846555><P class='tr'>&nbsp;
<SYNC Start=4847795><P class='tr'> 
<SYNC Start=4850825><P class='tr'>&nbsp;
<SYNC Start=4851295><P class='tr'> 
<SYNC Start=4854105><P class='tr'>&nbsp;
<SYNC Start=4854915><P class='tr'> 
<SYNC Start=4858115><P class='tr'>&nbsp;
<SYNC Start=4858255><P class='tr'> 
<SYNC Start=4861155><P class='tr'>&nbsp;
<SYNC Start=4861155><P class='tr'> 
<SYNC Start=4862155><P class='tr'>&nbsp;
<SYNC Start=4862535><P class='tr'> 
<SYNC Start=4864155><P class='tr'>&nbsp;
<SYNC Start=4864775><P class='tr'> 
<SYNC Start=4867065><P class='tr'>&nbsp;
<SYNC Start=4867505><P class='tr'> 
<SYNC Start=4870505><P class='tr'>&nbsp;
<SYNC Start=4870505><P class='tr'> 
<SYNC Start=4873495><P class='tr'>&nbsp;
<SYNC Start=4874595><P class='tr'> 
<SYNC Start=4875965><P class='tr'>&nbsp;
<SYNC Start=4877365><P class='tr'> 
<SYNC Start=4878365><P class='tr'>&nbsp;
<SYNC Start=4878775><P class='tr'> 
<SYNC Start=4882025><P class='tr'>&nbsp;
<SYNC Start=4883215><P class='tr'> 
<SYNC Start=4885775><P class='tr'>&nbsp;
<SYNC Start=4885775><P class='tr'> 
<SYNC Start=4887015><P class='tr'>&nbsp;
<SYNC Start=4888125><P class='tr'> 
<SYNC Start=4890965><P class='tr'>&nbsp;
<SYNC Start=4892785><P class='tr'> 
<SYNC Start=4895435><P class='tr'>&nbsp;
<SYNC Start=4895435><P class='tr'> 
<SYNC Start=4898345><P class='tr'>&nbsp;
<SYNC Start=4898345><P class='tr'> 
<SYNC Start=4901725><P class='tr'>&nbsp;
<SYNC Start=4901885><P class='tr'> 
<SYNC Start=4904495><P class='tr'>&nbsp;
<SYNC Start=4904585><P class='tr'> 
<SYNC Start=4907255><P class='tr'>&nbsp;
<SYNC Start=4907255><P class='tr'> 
<SYNC Start=4910095><P class='tr'>&nbsp;
<SYNC Start=4910195><P class='tr'> 
<SYNC Start=4913275><P class='tr'>&nbsp;
<SYNC Start=4913275><P class='tr'> 
<SYNC Start=4916215><P class='tr'>&nbsp;
<SYNC Start=4916215><P class='tr'> 
<SYNC Start=4919035><P class='tr'>&nbsp;
<SYNC Start=4919035><P class='tr'> 
<SYNC Start=4921675><P class='tr'>&nbsp;
<SYNC Start=4921675><P class='tr'> 
<SYNC Start=4922695><P class='tr'>&nbsp;
<SYNC Start=4923255><P class='tr'> 
<SYNC Start=4926265><P class='tr'>&nbsp;
<SYNC Start=4926265><P class='tr'> 
<SYNC Start=4928585><P class='tr'>&nbsp;
<SYNC Start=4928585><P class='tr'> 
<SYNC Start=4931685><P class='tr'>&nbsp;
<SYNC Start=4931685><P class='tr'> 
<SYNC Start=4934025><P class='tr'>&nbsp;
<SYNC Start=4934545><P class='tr'> 
<SYNC Start=4937225><P class='tr'>&nbsp;
<SYNC Start=4937225><P class='tr'> 
<SYNC Start=4940355><P class='tr'>&nbsp;
<SYNC Start=4940355><P class='tr'> 
<SYNC Start=4943675><P class='tr'>&nbsp;
<SYNC Start=4944175><P class='tr'> 
<SYNC Start=4947185><P class='tr'>&nbsp;
<SYNC Start=4947345><P class='tr'> 
<SYNC Start=4950585><P class='tr'>&nbsp;
<SYNC Start=4950585><P class='tr'> 
<SYNC Start=4953535><P class='tr'>&nbsp;
<SYNC Start=4953535><P class='tr'> 
<SYNC Start=4956425><P class='tr'>&nbsp;
<SYNC Start=4956425><P class='tr'> 
<SYNC Start=4958205><P class='tr'>&nbsp;
<SYNC Start=4958515><P class='tr'> 
<SYNC Start=4961425><P class='tr'>&nbsp;
<SYNC Start=4961425><P class='tr'> 
<SYNC Start=4964345><P class='tr'>&nbsp;
<SYNC Start=4964345><P class='tr'> 
<SYNC Start=4965345><P class='tr'>&nbsp;
<SYNC Start=4965725><P class='tr'> 
<SYNC Start=4968785><P class='tr'>&nbsp;
<SYNC Start=4968785><P class='tr'> 
<SYNC Start=4971765><P class='tr'>&nbsp;
<SYNC Start=4972435><P class='tr'> 
<SYNC Start=4973435><P class='tr'>&nbsp;
<SYNC Start=4974165><P class='tr'> 
<SYNC Start=4976785><P class='tr'>&nbsp;
<SYNC Start=4976785><P class='tr'> 
<SYNC Start=4977805><P class='tr'>&nbsp;
<SYNC Start=4978235><P class='tr'> 
<SYNC Start=4981665><P class='tr'>&nbsp;
<SYNC Start=4981665><P class='tr'> 
<SYNC Start=4984525><P class='tr'>&nbsp;
<SYNC Start=4984735><P class='tr'> 
<SYNC Start=4988055><P class='tr'>&nbsp;
<SYNC Start=4989745><P class='tr'> 
<SYNC Start=4991645><P class='tr'>&nbsp;
<SYNC Start=4992415><P class='tr'> 
<SYNC Start=4994795><P class='tr'>&nbsp;
<SYNC Start=4995165><P class='tr'> 
<SYNC Start=4996705><P class='tr'>&nbsp;
<SYNC Start=4997295><P class='tr'> 
<SYNC Start=5000275><P class='tr'>&nbsp;
<SYNC Start=5001705><P class='tr'> 
<SYNC Start=5002705><P class='tr'>&nbsp;
<SYNC Start=5003615><P class='tr'> 
<SYNC Start=5007025><P class='tr'>&nbsp;
<SYNC Start=5007125><P class='tr'> 
<SYNC Start=5009625><P class='tr'>&nbsp;
<SYNC Start=5010055><P class='tr'> 
<SYNC Start=5012835><P class='tr'>&nbsp;
<SYNC Start=5012835><P class='tr'> 
<SYNC Start=5013835><P class='tr'>&nbsp;
<SYNC Start=5014285><P class='tr'> 
<SYNC Start=5017075><P class='tr'>&nbsp;
<SYNC Start=5017075><P class='tr'> 
<SYNC Start=5019185><P class='tr'>&nbsp;
<SYNC Start=5019185><P class='tr'> 
<SYNC Start=5022175><P class='tr'>&nbsp;
<SYNC Start=5022175><P class='tr'> 
<SYNC Start=5023445><P class='tr'>&nbsp;
<SYNC Start=5023755><P class='tr'> 
<SYNC Start=5026675><P class='tr'>&nbsp;
<SYNC Start=5026675><P class='tr'> 
<SYNC Start=5030165><P class='tr'>&nbsp;
<SYNC Start=5031005><P class='tr'> 
<SYNC Start=5032565><P class='tr'>&nbsp;
<SYNC Start=5034145><P class='tr'> 
<SYNC Start=5037165><P class='tr'>&nbsp;
<SYNC Start=5037625><P class='tr'> 
<SYNC Start=5040755><P class='tr'>&nbsp;
<SYNC Start=5040955><P class='tr'> 
<SYNC Start=5043955><P class='tr'>&nbsp;
<SYNC Start=5043955><P class='tr'> 
<SYNC Start=5046635><P class='tr'>&nbsp;
<SYNC Start=5046635><P class='tr'> 
<SYNC Start=5050075><P class='tr'>&nbsp;
<SYNC Start=5050105><P class='tr'> 
<SYNC Start=5052075><P class='tr'>&nbsp;
<SYNC Start=5052305><P class='tr'> 
<SYNC Start=5054905><P class='tr'>&nbsp;
<SYNC Start=5054905><P class='tr'> 
<SYNC Start=5057685><P class='tr'>&nbsp;
<SYNC Start=5057685><P class='tr'> 
<SYNC Start=5058685><P class='tr'>&nbsp;
<SYNC Start=5059145><P class='tr'> 
<SYNC Start=5062185><P class='tr'>&nbsp;
<SYNC Start=5062185><P class='tr'> 
<SYNC Start=5064485><P class='tr'>&nbsp;
<SYNC Start=5064985><P class='tr'> 
<SYNC Start=5068015><P class='tr'>&nbsp;
<SYNC Start=5068015><P class='tr'> 
<SYNC Start=5069385><P class='tr'>&nbsp;
<SYNC Start=5070555><P class='tr'> 
<SYNC Start=5073435><P class='tr'>&nbsp;
<SYNC Start=5073615><P class='tr'> 
<SYNC Start=5075515><P class='tr'>&nbsp;
<SYNC Start=5076405><P class='tr'> 
<SYNC Start=5079555><P class='tr'>&nbsp;
<SYNC Start=5079555><P class='tr'> 
<SYNC Start=5081535><P class='tr'>&nbsp;
<SYNC Start=5082205><P class='tr'> 
<SYNC Start=5085555><P class='tr'>&nbsp;
<SYNC Start=5085555><P class='tr'> 
<SYNC Start=5088235><P class='tr'>&nbsp;
<SYNC Start=5088395><P class='tr'> 
<SYNC Start=5091635><P class='tr'>&nbsp;
<SYNC Start=5092725><P class='tr'> 
<SYNC Start=5095755><P class='tr'>&nbsp;
<SYNC Start=5096145><P class='tr'> 
<SYNC Start=5099165><P class='tr'>&nbsp;
<SYNC Start=5099165><P class='tr'> 
<SYNC Start=5101865><P class='tr'>&nbsp;
<SYNC Start=5103425><P class='tr'> 
<SYNC Start=5105215><P class='tr'>&nbsp;
<SYNC Start=5105695><P class='tr'> 
<SYNC Start=5109125><P class='tr'>&nbsp;
<SYNC Start=5109125><P class='tr'> 
<SYNC Start=5112125><P class='tr'>&nbsp;
<SYNC Start=5112125><P class='tr'> 
<SYNC Start=5114695><P class='tr'>&nbsp;
<SYNC Start=5115085><P class='tr'> 
<SYNC Start=5118345><P class='tr'>&nbsp;
<SYNC Start=5118345><P class='tr'> 
<SYNC Start=5121385><P class='tr'>&nbsp;
<SYNC Start=5121805><P class='tr'> 
<SYNC Start=5124625><P class='tr'>&nbsp;
<SYNC Start=5124625><P class='tr'> 
<SYNC Start=5125625><P class='tr'>&nbsp;
<SYNC Start=5125945><P class='tr'> 
<SYNC Start=5127645><P class='tr'>&nbsp;
<SYNC Start=5128395><P class='tr'> 
<SYNC Start=5129395><P class='tr'>&nbsp;
<SYNC Start=5129995><P class='tr'> 
<SYNC Start=5130995><P class='tr'>&nbsp;
<SYNC Start=5131825><P class='tr'> 
<SYNC Start=5132845><P class='tr'>&nbsp;
<SYNC Start=5134155><P class='tr'> 
<SYNC Start=5135295><P class='tr'>&nbsp;
<SYNC Start=5136205><P class='tr'> 
<SYNC Start=5138265><P class='tr'>&nbsp;
<SYNC Start=5139325><P class='tr'> 
<SYNC Start=5142185><P class='tr'>&nbsp;
<SYNC Start=5142185><P class='tr'> 
<SYNC Start=5144635><P class='tr'>&nbsp;
<SYNC Start=5145065><P class='tr'> 
<SYNC Start=5147785><P class='tr'>&nbsp;
<SYNC Start=5149565><P class='tr'> 
<SYNC Start=5151595><P class='tr'>&nbsp;
<SYNC Start=5152955><P class='tr'> 
<SYNC Start=5154025><P class='tr'>&nbsp;
<SYNC Start=5155075><P class='tr'> 
<SYNC Start=5157965><P class='tr'>&nbsp;
<SYNC Start=5157965><P class='tr'> 
<SYNC Start=5158965><P class='tr'>&nbsp;
<SYNC Start=5159155><P class='tr'> 
<SYNC Start=5162315><P class='tr'>&nbsp;
<SYNC Start=5162355><P class='tr'> 
<SYNC Start=5165025><P class='tr'>&nbsp;
<SYNC Start=5165025><P class='tr'> 
<SYNC Start=5166225><P class='tr'>&nbsp;
<SYNC Start=5166675><P class='tr'> 
<SYNC Start=5169815><P class='tr'>&nbsp;
<SYNC Start=5169815><P class='tr'> 
<SYNC Start=5170815><P class='tr'>&nbsp;
<SYNC Start=5171275><P class='tr'> 
<SYNC Start=5174315><P class='tr'>&nbsp;
<SYNC Start=5174315><P class='tr'> 
<SYNC Start=5175535><P class='tr'>&nbsp;
<SYNC Start=5177385><P class='tr'> 
<SYNC Start=5179765><P class='tr'>&nbsp;
<SYNC Start=5180405><P class='tr'> 
<SYNC Start=5181995><P class='tr'>&nbsp;
<SYNC Start=5182645><P class='tr'> 
<SYNC Start=5185435><P class='tr'>&nbsp;
<SYNC Start=5185435><P class='tr'> 
<SYNC Start=5188685><P class='tr'>&nbsp;
<SYNC Start=5188725><P class='tr'> 
<SYNC Start=5191775><P class='tr'>&nbsp;
<SYNC Start=5191935><P class='tr'> 
<SYNC Start=5195005><P class='tr'>&nbsp;
<SYNC Start=5195005><P class='tr'> 
<SYNC Start=5196005><P class='tr'>&nbsp;
<SYNC Start=5197485><P class='tr'> 
<SYNC Start=5200215><P class='tr'>&nbsp;
<SYNC Start=5201545><P class='tr'> 
<SYNC Start=5202545><P class='tr'>&nbsp;
<SYNC Start=5205665><P class='tr'> 
<SYNC Start=5209135><P class='tr'>&nbsp;
<SYNC Start=5209585><P class='tr'> 
<SYNC Start=5212555><P class='tr'>&nbsp;
<SYNC Start=5212555><P class='tr'> 
<SYNC Start=5214485><P class='tr'>&nbsp;
<SYNC Start=5214655><P class='tr'> 
<SYNC Start=5216775><P class='tr'>&nbsp;
<SYNC Start=5218495><P class='tr'> 
<SYNC Start=5219805><P class='tr'>&nbsp;
<SYNC Start=5220765><P class='tr'> 
<SYNC Start=5222325><P class='tr'>&nbsp;
<SYNC Start=5222665><P class='tr'> 
<SYNC Start=5224295><P class='tr'>&nbsp;
<SYNC Start=5224765><P class='tr'> 
<SYNC Start=5225805><P class='tr'>&nbsp;
<SYNC Start=5226325><P class='tr'> 
<SYNC Start=5227325><P class='tr'>&nbsp;
<SYNC Start=5227555><P class='tr'> 
<SYNC Start=5229085><P class='tr'>&nbsp;
<SYNC Start=5230435><P class='tr'> 
<SYNC Start=5231435><P class='tr'>&nbsp;
<SYNC Start=5232355><P class='tr'> 
<SYNC Start=5233355><P class='tr'>&nbsp;
<SYNC Start=5233865><P class='tr'> 
<SYNC Start=5236855><P class='tr'>&nbsp;
<SYNC Start=5236955><P class='tr'> 
<SYNC Start=5239415><P class='tr'>&nbsp;
<SYNC Start=5239975><P class='tr'> 
<SYNC Start=5241325><P class='tr'>&nbsp;
<SYNC Start=5242135><P class='tr'> 
<SYNC Start=5244635><P class='tr'>&nbsp;
<SYNC Start=5244635><P class='tr'> 
<SYNC Start=5247805><P class='tr'>&nbsp;
<SYNC Start=5248705><P class='tr'> 
<SYNC Start=5249755><P class='tr'>&nbsp;
<SYNC Start=5250215><P class='tr'> 
<SYNC Start=5253125><P class='tr'>&nbsp;
<SYNC Start=5253125><P class='tr'> 
<SYNC Start=5254295><P class='tr'>&nbsp;
<SYNC Start=5254855><P class='tr'> 
<SYNC Start=5256295><P class='tr'>&nbsp;
<SYNC Start=5256685><P class='tr'> 
<SYNC Start=5258555><P class='tr'>&nbsp;
<SYNC Start=5259145><P class='tr'> 
<SYNC Start=5261875><P class='tr'>&nbsp;
<SYNC Start=5262365><P class='tr'> 
<SYNC Start=5264865><P class='tr'>&nbsp;
<SYNC Start=5264865><P class='tr'> 
<SYNC Start=5267535><P class='tr'>&nbsp;
<SYNC Start=5267535><P class='tr'> 
<SYNC Start=5269685><P class='tr'>&nbsp;
<SYNC Start=5270615><P class='tr'> 
<SYNC Start=5273305><P class='tr'>&nbsp;
<SYNC Start=5273305><P class='tr'> 
<SYNC Start=5276305><P class='tr'>&nbsp;
<SYNC Start=5276375><P class='tr'> 
<SYNC Start=5279785><P class='tr'>&nbsp;
<SYNC Start=5280255><P class='tr'> 
<SYNC Start=5282085><P class='tr'>&nbsp;
<SYNC Start=5282625><P class='tr'> 
<SYNC Start=5283855><P class='tr'>&nbsp;
<SYNC Start=5285125><P class='tr'> 
<SYNC Start=5286125><P class='tr'>&nbsp;
<SYNC Start=5288935><P class='tr'> 
<SYNC Start=5291425><P class='tr'>&nbsp;
<SYNC Start=5291425><P class='tr'> 
<SYNC Start=5294575><P class='tr'>&nbsp;
<SYNC Start=5294575><P class='tr'> 
<SYNC Start=5297575><P class='tr'>&nbsp;
<SYNC Start=5298025><P class='tr'> 
<SYNC Start=5301225><P class='tr'>&nbsp;
<SYNC Start=5301225><P class='tr'> 
<SYNC Start=5304365><P class='tr'>&nbsp;
<SYNC Start=5304365><P class='tr'> 
<SYNC Start=5306235><P class='tr'>&nbsp;
<SYNC Start=5306865><P class='tr'> 
<SYNC Start=5309365><P class='tr'>&nbsp;
<SYNC Start=5310155><P class='tr'> 
<SYNC Start=5313015><P class='tr'>&nbsp;
<SYNC Start=5313015><P class='tr'> 
<SYNC Start=5316215><P class='tr'>&nbsp;
<SYNC Start=5316215><P class='tr'> 
<SYNC Start=5319215><P class='tr'>&nbsp;
<SYNC Start=5319215><P class='tr'> 
<SYNC Start=5321315><P class='tr'>&nbsp;
<SYNC Start=5322595><P class='tr'> 
<SYNC Start=5324785><P class='tr'>&nbsp;
<SYNC Start=5325125><P class='tr'> 
<SYNC Start=5328435><P class='tr'>&nbsp;
<SYNC Start=5328475><P class='tr'> 
<SYNC Start=5331885><P class='tr'>&nbsp;
<SYNC Start=5332655><P class='tr'> 
<SYNC Start=5335175><P class='tr'>&nbsp;
<SYNC Start=5335175><P class='tr'> 
<SYNC Start=5336405><P class='tr'>&nbsp;
<SYNC Start=5338175><P class='tr'> 
<SYNC Start=5339985><P class='tr'>&nbsp;
<SYNC Start=5340475><P class='tr'> 
<SYNC Start=5342185><P class='tr'>&nbsp;
<SYNC Start=5342795><P class='tr'> 
<SYNC Start=5344005><P class='tr'>&nbsp;
<SYNC Start=5344645><P class='tr'> 
<SYNC Start=5347765><P class='tr'>&nbsp;
<SYNC Start=5348465><P class='tr'> 
<SYNC Start=5350965><P class='tr'>&nbsp;
<SYNC Start=5350965><P class='tr'> 
<SYNC Start=5352725><P class='tr'>&nbsp;
<SYNC Start=5353425><P class='tr'> 
<SYNC Start=5356715><P class='tr'>&nbsp;
<SYNC Start=5357135><P class='tr'> 
<SYNC Start=5358405><P class='tr'>&nbsp;
<SYNC Start=5358755><P class='tr'> 
<SYNC Start=5361745><P class='tr'>&nbsp;
<SYNC Start=5361785><P class='tr'> 
<SYNC Start=5362785><P class='tr'>&nbsp;
<SYNC Start=5363325><P class='tr'> 
<SYNC Start=5364325><P class='tr'>&nbsp;
<SYNC Start=5364695><P class='tr'> 
<SYNC Start=5365695><P class='tr'>&nbsp;
<SYNC Start=5365835><P class='tr'> 
<SYNC Start=5368745><P class='tr'>&nbsp;
<SYNC Start=5369645><P class='tr'> 
<SYNC Start=5372865><P class='tr'>&nbsp;
<SYNC Start=5373165><P class='tr'> 
<SYNC Start=5375655><P class='tr'>&nbsp;
<SYNC Start=5378215><P class='tr'> 
<SYNC Start=5380615><P class='tr'>&nbsp;
<SYNC Start=5382895><P class='tr'> 
<SYNC Start=5383895><P class='tr'>&nbsp;
<SYNC Start=5384945><P class='tr'> 
<SYNC Start=5386165><P class='tr'>&nbsp;
<SYNC Start=5386945><P class='tr'> 
<SYNC Start=5390285><P class='tr'>&nbsp;
<SYNC Start=5390725><P class='tr'> 
<SYNC Start=5392915><P class='tr'>&nbsp;
<SYNC Start=5394415><P class='tr'> 
<SYNC Start=5397615><P class='tr'>&nbsp;
<SYNC Start=5397615><P class='tr'> 
<SYNC Start=5399045><P class='tr'>&nbsp;
<SYNC Start=5401365><P class='tr'> 
<SYNC Start=5404455><P class='tr'>&nbsp;
<SYNC Start=5404455><P class='tr'> 
<SYNC Start=5405455><P class='tr'>&nbsp;
<SYNC Start=5406025><P class='tr'> 
<SYNC Start=5408445><P class='tr'>&nbsp;
<SYNC Start=5409215><P class='tr'> 
<SYNC Start=5411955><P class='tr'>&nbsp;
<SYNC Start=5411955><P class='tr'> 
<SYNC Start=5412965><P class='tr'>&nbsp;
<SYNC Start=5414785><P class='tr'> 
<SYNC Start=5417425><P class='tr'>&nbsp;
<SYNC Start=5418555><P class='tr'> 
<SYNC Start=5420965><P class='tr'>&nbsp;
<SYNC Start=5421425><P class='tr'> 
<SYNC Start=5424515><P class='tr'>&nbsp;
<SYNC Start=5424515><P class='tr'> 
<SYNC Start=5426965><P class='tr'>&nbsp;
<SYNC Start=5426965><P class='tr'> 
<SYNC Start=5430065><P class='tr'>&nbsp;
<SYNC Start=5430065><P class='tr'> 
<SYNC Start=5432875><P class='tr'>&nbsp;
<SYNC Start=5432875><P class='tr'> 
<SYNC Start=5434605><P class='tr'>&nbsp;
<SYNC Start=5435915><P class='tr'> 
<SYNC Start=5438405><P class='tr'>&nbsp;
<SYNC Start=5438585><P class='tr'> 
<SYNC Start=5440745><P class='tr'>&nbsp;
<SYNC Start=5441365><P class='tr'> 
<SYNC Start=5444145><P class='tr'>&nbsp;
<SYNC Start=5444145><P class='tr'> 
<SYNC Start=5446725><P class='tr'>&nbsp;
<SYNC Start=5447325><P class='tr'> 
<SYNC Start=5449985><P class='tr'>&nbsp;
<SYNC Start=5450865><P class='tr'> 
<SYNC Start=5452375><P class='tr'>&nbsp;
<SYNC Start=5453175><P class='tr'> 
<SYNC Start=5454755><P class='tr'>&nbsp;
<SYNC Start=5455395><P class='tr'> 
<SYNC Start=5458515><P class='tr'>&nbsp;
<SYNC Start=5459595><P class='tr'> 
<SYNC Start=5462125><P class='tr'>&nbsp;
<SYNC Start=5462125><P class='tr'> 
<SYNC Start=5464805><P class='tr'>&nbsp;
<SYNC Start=5464805><P class='tr'> 
<SYNC Start=5467075><P class='tr'>&nbsp;
<SYNC Start=5468265><P class='tr'> 
<SYNC Start=5471305><P class='tr'>&nbsp;
<SYNC Start=5471305><P class='tr'> 
<SYNC Start=5472355><P class='tr'>&nbsp;
<SYNC Start=5472895><P class='tr'> 
<SYNC Start=5475185><P class='tr'>&nbsp;
<SYNC Start=5475985><P class='tr'> 
<SYNC Start=5478895><P class='tr'>&nbsp;
<SYNC Start=5478895><P class='tr'> 
<SYNC Start=5482025><P class='tr'>&nbsp;
<SYNC Start=5482065><P class='tr'> 
<SYNC Start=5483925><P class='tr'>&nbsp;
<SYNC Start=5484255><P class='tr'> 
<SYNC Start=5487385><P class='tr'>&nbsp;
<SYNC Start=5487385><P class='tr'> 
<SYNC Start=5490315><P class='tr'>&nbsp;
<SYNC Start=5490315><P class='tr'> 
<SYNC Start=5492945><P class='tr'>&nbsp;
<SYNC Start=5494005><P class='tr'> 
<SYNC Start=5495345><P class='tr'>&nbsp;
<SYNC Start=5495765><P class='tr'> 
<SYNC Start=5498385><P class='tr'>&nbsp;
<SYNC Start=5498735><P class='tr'> 
<SYNC Start=5500065><P class='tr'>&nbsp;
<SYNC Start=5500635><P class='tr'> 
<SYNC Start=5503335><P class='tr'>&nbsp;
<SYNC Start=5503355><P class='tr'> 
<SYNC Start=5506415><P class='tr'>&nbsp;
<SYNC Start=5506415><P class='tr'> 
<SYNC Start=5507725><P class='tr'>&nbsp;
<SYNC Start=5509025><P class='tr'> 
<SYNC Start=5511745><P class='tr'>&nbsp;
<SYNC Start=5512315><P class='tr'> 
<SYNC Start=5514175><P class='tr'>&nbsp;
<SYNC Start=5515125><P class='tr'> 
<SYNC Start=5518595><P class='tr'>&nbsp;
<SYNC Start=5519575><P class='tr'> 
<SYNC Start=5522705><P class='tr'>&nbsp;
<SYNC Start=5522715><P class='tr'> 
<SYNC Start=5525905><P class='tr'>&nbsp;
<SYNC Start=5526725><P class='tr'> 
<SYNC Start=5528275><P class='tr'>&nbsp;
<SYNC Start=5528635><P class='tr'> 
<SYNC Start=5531495><P class='tr'>&nbsp;
<SYNC Start=5531495><P class='tr'> 
<SYNC Start=5533555><P class='tr'>&nbsp;
<SYNC Start=5533975><P class='tr'> 
<SYNC Start=5536455><P class='tr'>&nbsp;
<SYNC Start=5536455><P class='tr'> 
<SYNC Start=5538915><P class='tr'>&nbsp;
<SYNC Start=5539365><P class='tr'> 
<SYNC Start=5542375><P class='tr'>&nbsp;
<SYNC Start=5542375><P class='tr'> 
<SYNC Start=5543845><P class='tr'>&nbsp;
<SYNC Start=5544165><P class='tr'> 
<SYNC Start=5546095><P class='tr'>&nbsp;
<SYNC Start=5546755><P class='tr'> 
<SYNC Start=5550015><P class='tr'>&nbsp;
<SYNC Start=5551205><P class='tr'> 
<SYNC Start=5553725><P class='tr'>&nbsp;
<SYNC Start=5553725><P class='tr'> 
<SYNC Start=5554745><P class='tr'>&nbsp;
<SYNC Start=5556445><P class='tr'> 
<SYNC Start=5558665><P class='tr'>&nbsp;
<SYNC Start=5559315><P class='tr'> 
<SYNC Start=5560715><P class='tr'>&nbsp;
<SYNC Start=5564835><P class='tr'> 
<SYNC Start=5566855><P class='tr'>&nbsp;
<SYNC Start=5569545><P class='tr'> 
<SYNC Start=5572685><P class='tr'>&nbsp;
<SYNC Start=5572685><P class='tr'> 
<SYNC Start=5575855><P class='tr'>&nbsp;
<SYNC Start=5577045><P class='tr'> 
<SYNC Start=5578955><P class='tr'>&nbsp;
<SYNC Start=5579765><P class='tr'> 
<SYNC Start=5581945><P class='tr'>&nbsp;
<SYNC Start=5585305><P class='tr'> 
<SYNC Start=5586305><P class='tr'>&nbsp;
<SYNC Start=5588365><P class='tr'> 
<SYNC Start=5590805><P class='tr'>&nbsp;
<SYNC Start=5592205><P class='tr'> 
<SYNC Start=5594505><P class='tr'>&nbsp;
<SYNC Start=5596165><P class='tr'> 
<SYNC Start=5599065><P class='tr'>&nbsp;
<SYNC Start=5599065><P class='tr'> 
<SYNC Start=5601715><P class='tr'>&nbsp;
<SYNC Start=5601715><P class='tr'> 
<SYNC Start=5604725><P class='tr'>&nbsp;
<SYNC Start=5604725><P class='tr'> 
<SYNC Start=5606495><P class='tr'>&nbsp;
<SYNC Start=5606815><P class='tr'> 
<SYNC Start=5609425><P class='tr'>&nbsp;
<SYNC Start=5610085><P class='tr'> 
<SYNC Start=5612465><P class='tr'>&nbsp;
<SYNC Start=5613845><P class='tr'> 
<SYNC Start=5616945><P class='tr'>&nbsp;
<SYNC Start=5616945><P class='tr'> 
<SYNC Start=5619895><P class='tr'>&nbsp;
<SYNC Start=5620545><P class='tr'> 
<SYNC Start=5623605><P class='tr'>&nbsp;
<SYNC Start=5623605><P class='tr'> 
<SYNC Start=5624605><P class='tr'>&nbsp;
<SYNC Start=5625095><P class='tr'> 
<SYNC Start=5626245><P class='tr'>&nbsp;
<SYNC Start=5627085><P class='tr'> 
<SYNC Start=5629915><P class='tr'>&nbsp;
<SYNC Start=5629915><P class='tr'> 
<SYNC Start=5631605><P class='tr'>&nbsp;
<SYNC Start=5638015><P class='tr'> 
<SYNC Start=5641115><P class='tr'>&nbsp;
<SYNC Start=5642025><P class='tr'> 
<SYNC Start=5643605><P class='tr'>&nbsp;
<SYNC Start=5646365><P class='tr'> 
<SYNC Start=5648425><P class='tr'>&nbsp;
<SYNC Start=5649285><P class='tr'> 
<SYNC Start=5651675><P class='tr'>&nbsp;
<SYNC Start=5653605><P class='tr'> 
<SYNC Start=5656845><P class='tr'>&nbsp;
<SYNC Start=5656845><P class='tr'> 
<SYNC Start=5658805><P class='tr'>&nbsp;
<SYNC Start=5661045><P class='tr'> 
<SYNC Start=5663405><P class='tr'>&nbsp;
<SYNC Start=5663435><P class='tr'> 
<SYNC Start=5665935><P class='tr'>&nbsp;
<SYNC Start=5666685><P class='tr'> 
<SYNC Start=5669675><P class='tr'>&nbsp;
<SYNC Start=5669675><P class='tr'> 
<SYNC Start=5672745><P class='tr'>&nbsp;
<SYNC Start=5672745><P class='tr'> 
<SYNC Start=5675965><P class='tr'>&nbsp;
<SYNC Start=5676485><P class='tr'> 
<SYNC Start=5679525><P class='tr'>&nbsp;
<SYNC Start=5679525><P class='tr'> 
<SYNC Start=5680525><P class='tr'>&nbsp;
<SYNC Start=5680955><P class='tr'> 
<SYNC Start=5682365><P class='tr'>&nbsp;
<SYNC Start=5682685><P class='tr'> 
<SYNC Start=5685135><P class='tr'>&nbsp;
<SYNC Start=5686115><P class='tr'> 
<SYNC Start=5688675><P class='tr'>&nbsp;
<SYNC Start=5690005><P class='tr'> 
<SYNC Start=5691455><P class='tr'>&nbsp;
<SYNC Start=5692735><P class='tr'> 
<SYNC Start=5695725><P class='tr'>&nbsp;
<SYNC Start=5695725><P class='tr'> 
<SYNC Start=5699225><P class='tr'>&nbsp;
<SYNC Start=5699655><P class='tr'> 
<SYNC Start=5701165><P class='tr'>&nbsp;
<SYNC Start=5702675><P class='tr'> 
<SYNC Start=5705615><P class='tr'>&nbsp;
<SYNC Start=5705615><P class='tr'> 
<SYNC Start=5708585><P class='tr'>&nbsp;
<SYNC Start=5709105><P class='tr'> 
<SYNC Start=5712215><P class='tr'>&nbsp;
<SYNC Start=5712215><P class='tr'> 
<SYNC Start=5714435><P class='tr'>&nbsp;
<SYNC Start=5715015><P class='tr'> 
<SYNC Start=5718015><P class='tr'>&nbsp;
<SYNC Start=5718265><P class='tr'> 
<SYNC Start=5720025><P class='tr'>&nbsp;
<SYNC Start=5720645><P class='tr'> 
<SYNC Start=5722245><P class='tr'>&nbsp;
<SYNC Start=5722995><P class='tr'> 
<SYNC Start=5724905><P class='tr'>&nbsp;
<SYNC Start=5725815><P class='tr'> 
<SYNC Start=5727905><P class='tr'>&nbsp;
<SYNC Start=5731505><P class='tr'> 
<SYNC Start=5732505><P class='tr'>&nbsp;
<SYNC Start=5733135><P class='tr'> 
<SYNC Start=5735425><P class='tr'>&nbsp;
<SYNC Start=5735425><P class='tr'> 
<SYNC Start=5737845><P class='tr'>&nbsp;
<SYNC Start=5738635><P class='tr'> 
<SYNC Start=5741535><P class='tr'>&nbsp;
<SYNC Start=5741535><P class='tr'> 
<SYNC Start=5744535><P class='tr'>&nbsp;
<SYNC Start=5744535><P class='tr'> 
<SYNC Start=5747705><P class='tr'>&nbsp;
<SYNC Start=5747705><P class='tr'> 
<SYNC Start=5749615><P class='tr'>&nbsp;
<SYNC Start=5750365><P class='tr'> 
<SYNC Start=5753155><P class='tr'>&nbsp;
<SYNC Start=5753155><P class='tr'> 
<SYNC Start=5755885><P class='tr'>&nbsp;
<SYNC Start=5755885><P class='tr'> 
<SYNC Start=5758945><P class='tr'>&nbsp;
<SYNC Start=5758945><P class='tr'> 
<SYNC Start=5761985><P class='tr'>&nbsp;
<SYNC Start=5761985><P class='tr'> 
<SYNC Start=5765115><P class='tr'>&nbsp;
<SYNC Start=5765115><P class='tr'> 
<SYNC Start=5768335><P class='tr'>&nbsp;
<SYNC Start=5768525><P class='tr'> 
<SYNC Start=5771465><P class='tr'>&nbsp;
<SYNC Start=5771465><P class='tr'> 
<SYNC Start=5772835><P class='tr'>&nbsp;
<SYNC Start=5773255><P class='tr'> 
<SYNC Start=5774385><P class='tr'>&nbsp;
<SYNC Start=5775145><P class='tr'> 
<SYNC Start=5776695><P class='tr'>&nbsp;
<SYNC Start=5777015><P class='tr'> 
<SYNC Start=5778015><P class='tr'>&nbsp;
<SYNC Start=5779915><P class='tr'> 
<SYNC Start=5781105><P class='tr'>&nbsp;
<SYNC Start=5785175><P class='tr'> 
<SYNC Start=5786345><P class='tr'>&nbsp;
<SYNC Start=5788325><P class='tr'> 
<SYNC Start=5791545><P class='tr'>&nbsp;
<SYNC Start=5791545><P class='tr'> 
<SYNC Start=5792685><P class='tr'>&nbsp;
<SYNC Start=5795285><P class='tr'> 
<SYNC Start=5798635><P class='tr'>&nbsp;
<SYNC Start=5799675><P class='tr'> 
<SYNC Start=5800675><P class='tr'>&nbsp;
<SYNC Start=5806825><P class='tr'> 
<SYNC Start=5809545><P class='tr'>&nbsp;
<SYNC Start=5811035><P class='tr'> 
<SYNC Start=5812885><P class='tr'>&nbsp;
<SYNC Start=5813465><P class='tr'> 
<SYNC Start=5814465><P class='tr'>&nbsp;
<SYNC Start=5815555><P class='tr'> 
<SYNC Start=5818135><P class='tr'>&nbsp;
<SYNC Start=5819725><P class='tr'> 
<SYNC Start=5822735><P class='tr'>&nbsp;
<SYNC Start=5823015><P class='tr'> 
<SYNC Start=5825675><P class='tr'>&nbsp;
<SYNC Start=5826945><P class='tr'> 
<SYNC Start=5829775><P class='tr'>&nbsp;
<SYNC Start=5829775><P class='tr'> 
<SYNC Start=5832415><P class='tr'>&nbsp;
<SYNC Start=5832615><P class='tr'> 
<SYNC Start=5835625><P class='tr'>&nbsp;
<SYNC Start=5835625><P class='tr'> 
<SYNC Start=5838565><P class='tr'>&nbsp;
<SYNC Start=5838565><P class='tr'> 
<SYNC Start=5841395><P class='tr'>&nbsp;
<SYNC Start=5841395><P class='tr'> 
<SYNC Start=5843545><P class='tr'>&nbsp;
<SYNC Start=5843975><P class='tr'> 
<SYNC Start=5846495><P class='tr'>&nbsp;
<SYNC Start=5846985><P class='tr'> 
<SYNC Start=5849575><P class='tr'>&nbsp;
<SYNC Start=5849575><P class='tr'> 
<SYNC Start=5852955><P class='tr'>&nbsp;
<SYNC Start=5853275><P class='tr'> 
<SYNC Start=5855775><P class='tr'>&nbsp;
<SYNC Start=5856755><P class='tr'> 
<SYNC Start=5858775><P class='tr'>&nbsp;
<SYNC Start=5860465><P class='tr'> 
<SYNC Start=5863485><P class='tr'>&nbsp;
<SYNC Start=5863485><P class='tr'> 
<SYNC Start=5866355><P class='tr'>&nbsp;
<SYNC Start=5866495><P class='tr'> 
<SYNC Start=5869465><P class='tr'>&nbsp;
<SYNC Start=5869465><P class='tr'> 
<SYNC Start=5872845><P class='tr'>&nbsp;
<SYNC Start=5872985><P class='tr'> 
<SYNC Start=5874915><P class='tr'>&nbsp;
<SYNC Start=5875375><P class='tr'> 
<SYNC Start=5877375><P class='tr'>&nbsp;
<SYNC Start=5877705><P class='tr'> 
<SYNC Start=5880785><P class='tr'>&nbsp;
<SYNC Start=5882355><P class='tr'> 
<SYNC Start=5883355><P class='tr'>&nbsp;
<SYNC Start=5884495><P class='tr'> 
<SYNC Start=5887095><P class='tr'>&nbsp;
<SYNC Start=5887095><P class='tr'> 
<SYNC Start=5888095><P class='tr'>&nbsp;
<SYNC Start=5889525><P class='tr'> 
<SYNC Start=5891105><P class='tr'>&nbsp;
<SYNC Start=5891935><P class='tr'> 
<SYNC Start=5893755><P class='tr'>&nbsp;
<SYNC Start=5894525><P class='tr'> 
<SYNC Start=5897085><P class='tr'>&nbsp;
<SYNC Start=5900595><P class='tr'> 
<SYNC Start=5901595><P class='tr'>&nbsp;
<SYNC Start=5902175><P class='tr'> 
<SYNC Start=5905265><P class='tr'>&nbsp;
<SYNC Start=5905295><P class='tr'> 
<SYNC Start=5908265><P class='tr'>&nbsp;
<SYNC Start=5908265><P class='tr'> 
<SYNC Start=5909695><P class='tr'>&nbsp;
<SYNC Start=5910195><P class='tr'> 
<SYNC Start=5913335><P class='tr'>&nbsp;
<SYNC Start=5913655><P class='tr'> 
<SYNC Start=5916205><P class='tr'>&nbsp;
<SYNC Start=5917375><P class='tr'> 
<SYNC Start=5920625><P class='tr'>&nbsp;
<SYNC Start=5920625><P class='tr'> 
<SYNC Start=5923555><P class='tr'>&nbsp;
<SYNC Start=5923555><P class='tr'> 
<SYNC Start=5926305><P class='tr'>&nbsp;
<SYNC Start=5926855><P class='tr'> 
<SYNC Start=5929445><P class='tr'>&nbsp;
<SYNC Start=5929735><P class='tr'> 
<SYNC Start=5931195><P class='tr'>&nbsp;
<SYNC Start=5932495><P class='tr'> 
<SYNC Start=5934455><P class='tr'>&nbsp;
<SYNC Start=5935435><P class='tr'> 
<SYNC Start=5938135><P class='tr'>&nbsp;
<SYNC Start=5938995><P class='tr'> 
<SYNC Start=5941935><P class='tr'>&nbsp;
<SYNC Start=5942835><P class='tr'> 
<SYNC Start=5943935><P class='tr'>&nbsp;
<SYNC Start=5944965><P class='tr'> 
<SYNC Start=5948115><P class='tr'>&nbsp;
<SYNC Start=5948115><P class='tr'> 
<SYNC Start=5949365><P class='tr'>&nbsp;
<SYNC Start=5949775><P class='tr'> 
<SYNC Start=5952705><P class='tr'>&nbsp;
<SYNC Start=5952705><P class='tr'> 
<SYNC Start=5954615><P class='tr'>&nbsp;
<SYNC Start=5954615><P class='tr'> 
<SYNC Start=5957645><P class='tr'>&nbsp;
<SYNC Start=5957645><P class='tr'> 
<SYNC Start=5960435><P class='tr'>&nbsp;
<SYNC Start=5960435><P class='tr'> 
<SYNC Start=5963505><P class='tr'>&nbsp;
<SYNC Start=5963605><P class='tr'> 
<SYNC Start=5965375><P class='tr'>&nbsp;
<SYNC Start=5965375><P class='tr'> 
<SYNC Start=5968445><P class='tr'>&nbsp;
<SYNC Start=5968955><P class='tr'> 
<SYNC Start=5971135><P class='tr'>&nbsp;
<SYNC Start=5972175><P class='tr'> 
<SYNC Start=5974865><P class='tr'>&nbsp;
<SYNC Start=5974865><P class='tr'> 
<SYNC Start=5976425><P class='tr'>&nbsp;
<SYNC Start=5977215><P class='tr'> 
<SYNC Start=5978745><P class='tr'>&nbsp;
<SYNC Start=5979115><P class='tr'> 
<SYNC Start=5982105><P class='tr'>&nbsp;
<SYNC Start=5982105><P class='tr'> 
<SYNC Start=5985145><P class='tr'>&nbsp;
<SYNC Start=5985145><P class='tr'> 
<SYNC Start=5987975><P class='tr'>&nbsp;
<SYNC Start=5987975><P class='tr'> 
<SYNC Start=5990815><P class='tr'>&nbsp;
<SYNC Start=5991455><P class='tr'> 
<SYNC Start=5994515><P class='tr'>&nbsp;
<SYNC Start=5994515><P class='tr'> 
<SYNC Start=5995825><P class='tr'>&nbsp;
<SYNC Start=5997155><P class='tr'> 
<SYNC Start=5999675><P class='tr'>&nbsp;
<SYNC Start=5999675><P class='tr'> 
<SYNC Start=6002665><P class='tr'>&nbsp;
<SYNC Start=6002665><P class='tr'> 
<SYNC Start=6005805><P class='tr'>&nbsp;
<SYNC Start=6005805><P class='tr'> 
<SYNC Start=6008695><P class='tr'>&nbsp;
<SYNC Start=6009305><P class='tr'> 
<SYNC Start=6010475><P class='tr'>&nbsp;
<SYNC Start=6010865><P class='tr'> 
<SYNC Start=6012335><P class='tr'>&nbsp;
<SYNC Start=6014715><P class='tr'> 
<SYNC Start=6017665><P class='tr'>&nbsp;
<SYNC Start=6018545><P class='tr'> 
<SYNC Start=6019715><P class='tr'>&nbsp;
<SYNC Start=6020835><P class='tr'> 
<SYNC Start=6021835><P class='tr'>&nbsp;
<SYNC Start=6023745><P class='tr'> 
<SYNC Start=6026915><P class='tr'>&nbsp;
<SYNC Start=6027455><P class='tr'> 
<SYNC Start=6030595><P class='tr'>&nbsp;
<SYNC Start=6031155><P class='tr'> 
<SYNC Start=6033615><P class='tr'>&nbsp;
<SYNC Start=6033955><P class='tr'> 
<SYNC Start=6036175><P class='tr'>&nbsp;
<SYNC Start=6036485><P class='tr'> 
<SYNC Start=6037885><P class='tr'>&nbsp;
<SYNC Start=6038465><P class='tr'> 
<SYNC Start=6041145><P class='tr'>&nbsp;
<SYNC Start=6042945><P class='tr'> 
<SYNC Start=6044725><P class='tr'>&nbsp;
<SYNC Start=6045045><P class='tr'> 
<SYNC Start=6047565><P class='tr'>&nbsp;
<SYNC Start=6049625><P class='tr'> 
<SYNC Start=6052535><P class='tr'>&nbsp;
<SYNC Start=6052535><P class='tr'> 
<SYNC Start=6053535><P class='tr'>&nbsp;
<SYNC Start=6054525><P class='tr'> 
<SYNC Start=6057515><P class='tr'>&nbsp;
<SYNC Start=6057515><P class='tr'> 
<SYNC Start=6060545><P class='tr'>&nbsp;
<SYNC Start=6060545><P class='tr'> 
<SYNC Start=6063575><P class='tr'>&nbsp;
<SYNC Start=6063575><P class='tr'> 
<SYNC Start=6066315><P class='tr'>&nbsp;
<SYNC Start=6066315><P class='tr'> 
<SYNC Start=6068945><P class='tr'>&nbsp;
<SYNC Start=6069905><P class='tr'> 
<SYNC Start=6070905><P class='tr'>&nbsp;
<SYNC Start=6071175><P class='tr'> 
<SYNC Start=6074335><P class='tr'>&nbsp;
<SYNC Start=6074335><P class='tr'> 
<SYNC Start=6075965><P class='tr'>&nbsp;
<SYNC Start=6076955><P class='tr'> 
<SYNC Start=6078935><P class='tr'>&nbsp;
<SYNC Start=6080185><P class='tr'> 
<SYNC Start=6081895><P class='tr'>&nbsp;
<SYNC Start=6083495><P class='tr'> 
<SYNC Start=6086015><P class='tr'>&nbsp;
<SYNC Start=6087275><P class='tr'> 
<SYNC Start=6088275><P class='tr'>&nbsp;
<SYNC Start=6088555><P class='tr'> 
<SYNC Start=6091085><P class='tr'>&nbsp;
<SYNC Start=6091085><P class='tr'> 
<SYNC Start=6092245><P class='tr'>&nbsp;
<SYNC Start=6092735><P class='tr'> 
<SYNC Start=6095255><P class='tr'>&nbsp;
<SYNC Start=6095255><P class='tr'> 
<SYNC Start=6096655><P class='tr'>&nbsp;
<SYNC Start=6097885><P class='tr'> 
<SYNC Start=6100825><P class='tr'>&nbsp;
<SYNC Start=6100825><P class='tr'> 
<SYNC Start=6104005><P class='tr'>&nbsp;
<SYNC Start=6104395><P class='tr'> 
<SYNC Start=6107615><P class='tr'>&nbsp;
<SYNC Start=6107835><P class='tr'> 
<SYNC Start=6110535><P class='tr'>&nbsp;
<SYNC Start=6111375><P class='tr'> 
<SYNC Start=6112375><P class='tr'>&nbsp;
<SYNC Start=6112555><P class='tr'> 
<SYNC Start=6113585><P class='tr'>&nbsp;
<SYNC Start=6113985><P class='tr'> 
<SYNC Start=6117105><P class='tr'>&nbsp;
<SYNC Start=6117105><P class='tr'> 
<SYNC Start=6118915><P class='tr'>&nbsp;
<SYNC Start=6119845><P class='tr'> 
<SYNC Start=6122705><P class='tr'>&nbsp;
<SYNC Start=6123055><P class='tr'> 
<SYNC Start=6125395><P class='tr'>&nbsp;
<SYNC Start=6125555><P class='tr'> 
<SYNC Start=6127435><P class='tr'>&nbsp;
<SYNC Start=6127585><P class='tr'> 
<SYNC Start=6130225><P class='tr'>&nbsp;
<SYNC Start=6130225><P class='tr'> 
<SYNC Start=6133555><P class='tr'>&nbsp;
<SYNC Start=6133895><P class='tr'> 
<SYNC Start=6137015><P class='tr'>&nbsp;
<SYNC Start=6137935><P class='tr'> 
<SYNC Start=6139355><P class='tr'>&nbsp;
<SYNC Start=6139945><P class='tr'> 
<SYNC Start=6143105><P class='tr'>&nbsp;
<SYNC Start=6143405><P class='tr'> 
<SYNC Start=6144845><P class='tr'>&nbsp;
<SYNC Start=6145435><P class='tr'> 
<SYNC Start=6147585><P class='tr'>&nbsp;
<SYNC Start=6147585><P class='tr'> 
<SYNC Start=6149185><P class='tr'>&nbsp;
<SYNC Start=6149585><P class='tr'> 
<SYNC Start=6152745><P class='tr'>&nbsp;
<SYNC Start=6152745><P class='tr'> 
<SYNC Start=6155095><P class='tr'>&nbsp;
<SYNC Start=6155095><P class='tr'> 
<SYNC Start=6156305><P class='tr'>&nbsp;
<SYNC Start=6156685><P class='tr'> 
<SYNC Start=6159665><P class='tr'>&nbsp;
<SYNC Start=6159665><P class='tr'> 
<SYNC Start=6162305><P class='tr'>&nbsp;
<SYNC Start=6162305><P class='tr'> 
<SYNC Start=6165395><P class='tr'>&nbsp;
<SYNC Start=6165395><P class='tr'> 
<SYNC Start=6167295><P class='tr'>&nbsp;
<SYNC Start=6167295><P class='tr'> 
<SYNC Start=6168985><P class='tr'>&nbsp;
<SYNC Start=6169765><P class='tr'> 
<SYNC Start=6170765><P class='tr'>&nbsp;
<SYNC Start=6171175><P class='tr'> 
<SYNC Start=6173015><P class='tr'>&nbsp;
<SYNC Start=6173435><P class='tr'> 
<SYNC Start=6176675><P class='tr'>&nbsp;
<SYNC Start=6176675><P class='tr'> 
<SYNC Start=6179465><P class='tr'>&nbsp;
<SYNC Start=6179465><P class='tr'> 
<SYNC Start=6181805><P class='tr'>&nbsp;
<SYNC Start=6182295><P class='tr'> 
<SYNC Start=6183335><P class='tr'>&nbsp;
<SYNC Start=6183925><P class='tr'> 
<SYNC Start=6186755><P class='tr'>&nbsp;
<SYNC Start=6186755><P class='tr'> 
<SYNC Start=6189305><P class='tr'>&nbsp;
<SYNC Start=6189375><P class='tr'> 
<SYNC Start=6192215><P class='tr'>&nbsp;
<SYNC Start=6192215><P class='tr'> 
<SYNC Start=6195045><P class='tr'>&nbsp;
<SYNC Start=6195045><P class='tr'> 
<SYNC Start=6198055><P class='tr'>&nbsp;
<SYNC Start=6198055><P class='tr'> 
<SYNC Start=6200925><P class='tr'>&nbsp;
<SYNC Start=6200925><P class='tr'> 
<SYNC Start=6203985><P class='tr'>&nbsp;
<SYNC Start=6203985><P class='tr'> 
<SYNC Start=6205015><P class='tr'>&nbsp;
<SYNC Start=6205865><P class='tr'> 
<SYNC Start=6206935><P class='tr'>&nbsp;
<SYNC Start=6207275><P class='tr'> 
<SYNC Start=6210395><P class='tr'>&nbsp;
<SYNC Start=6210395><P class='tr'> 
<SYNC Start=6213675><P class='tr'>&nbsp;
<SYNC Start=6213865><P class='tr'> 
<SYNC Start=6214885><P class='tr'>&nbsp;
<SYNC Start=6216385><P class='tr'> 
<SYNC Start=6219655><P class='tr'>&nbsp;
<SYNC Start=6220425><P class='tr'> 
<SYNC Start=6223475><P class='tr'>&nbsp;
<SYNC Start=6226855><P class='tr'> 
<SYNC Start=6229635><P class='tr'>&nbsp;
<SYNC Start=6229645><P class='tr'> 
<SYNC Start=6232665><P class='tr'>&nbsp;
<SYNC Start=6232665><P class='tr'> 
<SYNC Start=6234545><P class='tr'>&nbsp;
<SYNC Start=6235535><P class='tr'> 
<SYNC Start=6238565><P class='tr'>&nbsp;
<SYNC Start=6238565><P class='tr'> 
<SYNC Start=6241595><P class='tr'>&nbsp;
<SYNC Start=6243415><P class='tr'> 
<SYNC Start=6246645><P class='tr'>&nbsp;
<SYNC Start=6246915><P class='tr'> 
<SYNC Start=6250105><P class='tr'>&nbsp;
<SYNC Start=6250105><P class='tr'> 
<SYNC Start=6251595><P class='tr'>&nbsp;
<SYNC Start=6252765><P class='tr'> 
<SYNC Start=6254595><P class='tr'>&nbsp;
<SYNC Start=6255405><P class='tr'> 
<SYNC Start=6258345><P class='tr'>&nbsp;
<SYNC Start=6258345><P class='tr'> 
<SYNC Start=6261325><P class='tr'>&nbsp;
<SYNC Start=6261325><P class='tr'> 
<SYNC Start=6263825><P class='tr'>&nbsp;
<SYNC Start=6263825><P class='tr'> 
<SYNC Start=6266745><P class='tr'>&nbsp;
<SYNC Start=6266745><P class='tr'> 
<SYNC Start=6269895><P class='tr'>&nbsp;
<SYNC Start=6269895><P class='tr'> 
<SYNC Start=6273375><P class='tr'>&nbsp;
<SYNC Start=6273395><P class='tr'> 
<SYNC Start=6276395><P class='tr'>&nbsp;
<SYNC Start=6276395><P class='tr'> 
<SYNC Start=6279215><P class='tr'>&nbsp;
<SYNC Start=6279275><P class='tr'> 
<SYNC Start=6282165><P class='tr'>&nbsp;
<SYNC Start=6282335><P class='tr'> 
<SYNC Start=6285395><P class='tr'>&nbsp;
<SYNC Start=6285395><P class='tr'> 
<SYNC Start=6287915><P class='tr'>&nbsp;
<SYNC Start=6288205><P class='tr'> 
<SYNC Start=6290895><P class='tr'>&nbsp;
<SYNC Start=6291005><P class='tr'> 
<SYNC Start=6293875><P class='tr'>&nbsp;
<SYNC Start=6293875><P class='tr'> 
<SYNC Start=6295995><P class='tr'>&nbsp;
<SYNC Start=6296795><P class='tr'> 
<SYNC Start=6299815><P class='tr'>&nbsp;
<SYNC Start=6300115><P class='tr'> 
<SYNC Start=6301875><P class='tr'>&nbsp;
<SYNC Start=6301875><P class='tr'> 
<SYNC Start=6304185><P class='tr'>&nbsp;
<SYNC Start=6304835><P class='tr'> 
<SYNC Start=6307965><P class='tr'>&nbsp;
<SYNC Start=6308105><P class='tr'> 
<SYNC Start=6311225><P class='tr'>&nbsp;
<SYNC Start=6311225><P class='tr'> 
<SYNC Start=6313645><P class='tr'>&nbsp;
<SYNC Start=6313645><P class='tr'> 
<SYNC Start=6315385><P class='tr'>&nbsp;
<SYNC Start=6315945><P class='tr'> 
<SYNC Start=6318915><P class='tr'>&nbsp;
<SYNC Start=6318915><P class='tr'> 
<SYNC Start=6321235><P class='tr'>&nbsp;
<SYNC Start=6321375><P class='tr'> 
<SYNC Start=6323015><P class='tr'>&nbsp;
<SYNC Start=6323015><P class='tr'> 
<SYNC Start=6325775><P class='tr'>&nbsp;
<SYNC Start=6325775><P class='tr'> 
<SYNC Start=6328905><P class='tr'>&nbsp;
<SYNC Start=6328905><P class='tr'> 
<SYNC Start=6332085><P class='tr'>&nbsp;
<SYNC Start=6332085><P class='tr'> 
<SYNC Start=6333635><P class='tr'>&nbsp;
<SYNC Start=6334605><P class='tr'> 
<SYNC Start=6337015><P class='tr'>&nbsp;
<SYNC Start=6337015><P class='tr'> 
<SYNC Start=6338275><P class='tr'>&nbsp;
<SYNC Start=6338995><P class='tr'> 
<SYNC Start=6342015><P class='tr'>&nbsp;
<SYNC Start=6342015><P class='tr'> 
<SYNC Start=6344865><P class='tr'>&nbsp;
<SYNC Start=6344865><P class='tr'> 
<SYNC Start=6347575><P class='tr'>&nbsp;
<SYNC Start=6347575><P class='tr'> 
<SYNC Start=6348575><P class='tr'>&nbsp;
<SYNC Start=6349495><P class='tr'> 
<SYNC Start=6352615><P class='tr'>&nbsp;
<SYNC Start=6352615><P class='tr'> 
<SYNC Start=6355445><P class='tr'>&nbsp;
<SYNC Start=6355445><P class='tr'> 
<SYNC Start=6358155><P class='tr'>&nbsp;
<SYNC Start=6358615><P class='tr'> 
<SYNC Start=6360265><P class='tr'>&nbsp;
<SYNC Start=6361655><P class='tr'> 
<SYNC Start=6364295><P class='tr'>&nbsp;
<SYNC Start=6364555><P class='tr'> 
<SYNC Start=6367055><P class='tr'>&nbsp;
<SYNC Start=6367645><P class='tr'> 
<SYNC Start=6370655><P class='tr'>&nbsp;
<SYNC Start=6371015><P class='tr'> 
<SYNC Start=6374415><P class='tr'>&nbsp;
<SYNC Start=6374895><P class='tr'> 
<SYNC Start=6377545><P class='tr'>&nbsp;
<SYNC Start=6382965><P class='tr'> 
<SYNC Start=6384085><P class='tr'>&nbsp;
<SYNC Start=6386035><P class='tr'> 
<SYNC Start=6387705><P class='tr'>&nbsp;
<SYNC Start=6388425><P class='tr'> 
<SYNC Start=6390975><P class='tr'>&nbsp;
<SYNC Start=6391635><P class='tr'> 
<SYNC Start=6393255><P class='tr'>&nbsp;
<SYNC Start=6393925><P class='tr'> 
<SYNC Start=6397015><P class='tr'>&nbsp;
<SYNC Start=6397505><P class='tr'> 
<SYNC Start=6399205><P class='tr'>&nbsp;
<SYNC Start=6400545><P class='tr'> 
<SYNC Start=6403105><P class='tr'>&nbsp;
<SYNC Start=6404165><P class='tr'> 
<SYNC Start=6407385><P class='tr'>&nbsp;
<SYNC Start=6408545><P class='tr'> 
<SYNC Start=6410765><P class='tr'>&nbsp;
<SYNC Start=6411605><P class='tr'> 
<SYNC Start=6413775><P class='tr'>&nbsp;
<SYNC Start=6415605><P class='tr'> 
<SYNC Start=6417645><P class='tr'>&nbsp;
<SYNC Start=6418475><P class='tr'> 
<SYNC Start=6421325><P class='tr'>&nbsp;
<SYNC Start=6422565><P class='tr'> 
<SYNC Start=6423645><P class='tr'>&nbsp;
<SYNC Start=6424715><P class='tr'> 
<SYNC Start=6427645><P class='tr'>&nbsp;
<SYNC Start=6427845><P class='tr'> 
<SYNC Start=6430435><P class='tr'>&nbsp;
<SYNC Start=6430775><P class='tr'> 
<SYNC Start=6433385><P class='tr'>&nbsp;
<SYNC Start=6433385><P class='tr'> 
<SYNC Start=6434385><P class='tr'>&nbsp;
<SYNC Start=6434715><P class='tr'> 
<SYNC Start=6437895><P class='tr'>&nbsp;
<SYNC Start=6437935><P class='tr'> 
<SYNC Start=6441055><P class='tr'>&nbsp;
<SYNC Start=6441095><P class='tr'> 
<SYNC Start=6444045><P class='tr'>&nbsp;
<SYNC Start=6445365><P class='tr'> 
<SYNC Start=6446515><P class='tr'>&nbsp;
<SYNC Start=6448155><P class='tr'> 
<SYNC Start=6450625><P class='tr'>&nbsp;
<SYNC Start=6450625><P class='tr'> 
<SYNC Start=6453025><P class='tr'>&nbsp;
<SYNC Start=6453025><P class='tr'> 
<SYNC Start=6455555><P class='tr'>&nbsp;
<SYNC Start=6455555><P class='tr'> 
<SYNC Start=6457735><P class='tr'>&nbsp;
<SYNC Start=6458085><P class='tr'> 
<SYNC Start=6461045><P class='tr'>&nbsp;
<SYNC Start=6461045><P class='tr'> 
<SYNC Start=6463605><P class='tr'>&nbsp;
<SYNC Start=6464295><P class='tr'> 
<SYNC Start=6465295><P class='tr'>&nbsp;
<SYNC Start=6467205><P class='tr'> 
<SYNC Start=6468395><P class='tr'>&nbsp;
<SYNC Start=6469935><P class='tr'> 
<SYNC Start=6472055><P class='tr'>&nbsp;
<SYNC Start=6473185><P class='tr'> 
<SYNC Start=6474375><P class='tr'>&nbsp;
<SYNC Start=6479525><P class='tr'> 
<SYNC Start=6482165><P class='tr'>&nbsp;
<SYNC Start=6482165><P class='tr'> 
<SYNC Start=6484115><P class='tr'>&nbsp;
<SYNC Start=6484545><P class='tr'> 
<SYNC Start=6487185><P class='tr'>&nbsp;
<SYNC Start=6487185><P class='tr'> 
<SYNC Start=6490145><P class='tr'>&nbsp;
<SYNC Start=6490145><P class='tr'> 
<SYNC Start=6493105><P class='tr'>&nbsp;
<SYNC Start=6493775><P class='tr'> 
<SYNC Start=6496485><P class='tr'>&nbsp;
<SYNC Start=6496485><P class='tr'> 
<SYNC Start=6499405><P class='tr'>&nbsp;
<SYNC Start=6499405><P class='tr'> 
<SYNC Start=6502075><P class='tr'>&nbsp;
<SYNC Start=6502075><P class='tr'> 
<SYNC Start=6503515><P class='tr'>&nbsp;
<SYNC Start=6505995><P class='tr'> 
<SYNC Start=6508155><P class='tr'>&nbsp;
<SYNC Start=6508155><P class='tr'> 
<SYNC Start=6510925><P class='tr'>&nbsp;
<SYNC Start=6510925><P class='tr'> 
<SYNC Start=6512185><P class='tr'>&nbsp;
<SYNC Start=6513465><P class='tr'> 
<SYNC Start=6514865><P class='tr'>&nbsp;
<SYNC Start=6515905><P class='tr'> 
<SYNC Start=6519345><P class='tr'>&nbsp;
<SYNC Start=6521865><P class='tr'> 
<SYNC Start=6524605><P class='tr'>&nbsp;
<SYNC Start=6524605><P class='tr'> 
<SYNC Start=6526635><P class='tr'>&nbsp;
<SYNC Start=6527555><P class='tr'> 
<SYNC Start=6530955><P class='tr'>&nbsp;
<SYNC Start=6531625><P class='tr'> 
<SYNC Start=6534455><P class='tr'>&nbsp;
<SYNC Start=6534655><P class='tr'> 
<SYNC Start=6537435><P class='tr'>&nbsp;
<SYNC Start=6537435><P class='tr'> 
<SYNC Start=6538715><P class='tr'>&nbsp;
<SYNC Start=6539385><P class='tr'> 
<SYNC Start=6540555><P class='tr'>&nbsp;
<SYNC Start=6542895><P class='tr'> 
<SYNC Start=6544435><P class='tr'>&nbsp;
<SYNC Start=6545125><P class='tr'> 
<SYNC Start=6546205><P class='tr'>&nbsp;
<SYNC Start=6547065><P class='tr'> 
<SYNC Start=6549455><P class='tr'>&nbsp;
<SYNC Start=6549455><P class='tr'> 
<SYNC Start=6551545><P class='tr'>&nbsp;
<SYNC Start=6552445><P class='tr'> 
<SYNC Start=6555465><P class='tr'>&nbsp;
<SYNC Start=6555465><P class='tr'> 
<SYNC Start=6557735><P class='tr'>&nbsp;
<SYNC Start=6557745><P class='tr'> 
<SYNC Start=6561125><P class='tr'>&nbsp;
<SYNC Start=6561125><P class='tr'> 
<SYNC Start=6562775><P class='tr'>&nbsp;
<SYNC Start=6563725><P class='tr'> 
<SYNC Start=6567195><P class='tr'>&nbsp;
<SYNC Start=6567705><P class='tr'> 
<SYNC Start=6570785><P class='tr'>&nbsp;
<SYNC Start=6571245><P class='tr'> 
<SYNC Start=6573975><P class='tr'>&nbsp;
<SYNC Start=6573975><P class='tr'> 
<SYNC Start=6575195><P class='tr'>&nbsp;
<SYNC Start=6578785><P class='tr'> 
<SYNC Start=6580615><P class='tr'>&nbsp;
<SYNC Start=6582825><P class='tr'> 
<SYNC Start=6585735><P class='tr'>&nbsp;
<SYNC Start=6585735><P class='tr'> 
<SYNC Start=6587615><P class='tr'>&nbsp;
<SYNC Start=6590255><P class='tr'> 
<SYNC Start=6593065><P class='tr'>&nbsp;
<SYNC Start=6593705><P class='tr'> 
<SYNC Start=6596345><P class='tr'>&nbsp;
<SYNC Start=6596695><P class='tr'> 
<SYNC Start=6599665><P class='tr'>&nbsp;
<SYNC Start=6599665><P class='tr'> 
<SYNC Start=6600665><P class='tr'>&nbsp;
<SYNC Start=6601095><P class='tr'> 
<SYNC Start=6604575><P class='tr'>&nbsp;
<SYNC Start=6605085><P class='tr'> 
<SYNC Start=6607235><P class='tr'>&nbsp;
<SYNC Start=6607825><P class='tr'> 
<SYNC Start=6609275><P class='tr'>&nbsp;
<SYNC Start=6611285><P class='tr'> 
<SYNC Start=6613185><P class='tr'>&nbsp;
<SYNC Start=6615905><P class='tr'> 
<SYNC Start=6618895><P class='tr'>&nbsp;
<SYNC Start=6619055><P class='tr'> 
<SYNC Start=6622065><P class='tr'>&nbsp;
<SYNC Start=6622085><P class='tr'> 
<SYNC Start=6624735><P class='tr'>&nbsp;
<SYNC Start=6624735><P class='tr'> 
<SYNC Start=6626485><P class='tr'>&nbsp;
<SYNC Start=6628085><P class='tr'> 
<SYNC Start=6629085><P class='tr'>&nbsp;
<SYNC Start=6630425><P class='tr'> 
<SYNC Start=6632555><P class='tr'>&nbsp;
<SYNC Start=6636725><P class='tr'> 
<SYNC Start=6637725><P class='tr'>&nbsp;
<SYNC Start=6638165><P class='tr'> 
<SYNC Start=6640455><P class='tr'>&nbsp;
<SYNC Start=6641035><P class='tr'> 
<SYNC Start=6643565><P class='tr'>&nbsp;
<SYNC Start=6645115><P class='tr'> 
<SYNC Start=6648615><P class='tr'>&nbsp;
<SYNC Start=6649025><P class='tr'> 
<SYNC Start=6650135><P class='tr'>&nbsp;
<SYNC Start=6652275><P class='tr'> 
<SYNC Start=6653275><P class='tr'>&nbsp;
<SYNC Start=6653645><P class='tr'> 
<SYNC Start=6654645><P class='tr'>&nbsp;
<SYNC Start=6655045><P class='tr'> 
<SYNC Start=6656325><P class='tr'>&nbsp;
<SYNC Start=6658275><P class='tr'> 
<SYNC Start=6660075><P class='tr'>&nbsp;
<SYNC Start=6661375><P class='tr'> 
<SYNC Start=6663895><P class='tr'>&nbsp;
<SYNC Start=6665065><P class='tr'> 
<SYNC Start=6666715><P class='tr'>&nbsp;
<SYNC Start=6666715><P class='tr'> 
<SYNC Start=6668415><P class='tr'>&nbsp;
<SYNC Start=6668415><P class='tr'> 
<SYNC Start=6671785><P class='tr'>&nbsp;
<SYNC Start=6671785><P class='tr'> 
<SYNC Start=6674645><P class='tr'>&nbsp;
<SYNC Start=6674765><P class='tr'> 
<SYNC Start=6677295><P class='tr'>&nbsp;
<SYNC Start=6677365><P class='tr'> 
<SYNC Start=6679475><P class='tr'>&nbsp;
<SYNC Start=6679475><P class='tr'> 
<SYNC Start=6682505><P class='tr'>&nbsp;
<SYNC Start=6682755><P class='tr'> 
<SYNC Start=6685625><P class='tr'>&nbsp;
<SYNC Start=6685625><P class='tr'> 
<SYNC Start=6687415><P class='tr'>&nbsp;
<SYNC Start=6688245><P class='tr'> 
<SYNC Start=6691215><P class='tr'>&nbsp;
<SYNC Start=6691215><P class='tr'> 
<SYNC Start=6692215><P class='tr'>&nbsp;
<SYNC Start=6692715><P class='tr'> 
<SYNC Start=6695705><P class='tr'>&nbsp;
<SYNC Start=6696075><P class='tr'> 
<SYNC Start=6697855><P class='tr'>&nbsp;
<SYNC Start=6699135><P class='tr'> 
<SYNC Start=6702165><P class='tr'>&nbsp;
<SYNC Start=6702165><P class='tr'> 
<SYNC Start=6704345><P class='tr'>&nbsp;
<SYNC Start=6705675><P class='tr'> 
<SYNC Start=6708795><P class='tr'>&nbsp;
<SYNC Start=6709025><P class='tr'> 
<SYNC Start=6712145><P class='tr'>&nbsp;
<SYNC Start=6712345><P class='tr'> 
<SYNC Start=6714565><P class='tr'>&nbsp;
<SYNC Start=6715065><P class='tr'> 
<SYNC Start=6716575><P class='tr'>&nbsp;
<SYNC Start=6717225><P class='tr'> 
<SYNC Start=6718355><P class='tr'>&nbsp;
<SYNC Start=6718755><P class='tr'> 
<SYNC Start=6721205><P class='tr'>&nbsp;
<SYNC Start=6723855><P class='tr'> 
<SYNC Start=6724855><P class='tr'>&nbsp;
<SYNC Start=6725485><P class='tr'> 
<SYNC Start=6728615><P class='tr'>&nbsp;
<SYNC Start=6728615><P class='tr'> 
<SYNC Start=6729975><P class='tr'>&nbsp;
<SYNC Start=6731195><P class='tr'> 
<SYNC Start=6734305><P class='tr'>&nbsp;
<SYNC Start=6734305><P class='tr'> 
<SYNC Start=6737455><P class='tr'>&nbsp;
<SYNC Start=6737715><P class='tr'> 
<SYNC Start=6739885><P class='tr'>&nbsp;
<SYNC Start=6739885><P class='tr'> 
<SYNC Start=6742605><P class='tr'>&nbsp;
<SYNC Start=6742605><P class='tr'> 
<SYNC Start=6745445><P class='tr'>&nbsp;
<SYNC Start=6745445><P class='tr'> 
<SYNC Start=6746495><P class='tr'>&nbsp;
<SYNC Start=6747465><P class='tr'> 
<SYNC Start=6749125><P class='tr'>&nbsp;
<SYNC Start=6750125><P class='tr'> 
<SYNC Start=6753235><P class='tr'>&nbsp;
<SYNC Start=6753235><P class='tr'> 
<SYNC Start=6755135><P class='tr'>&nbsp;
<SYNC Start=6757605><P class='tr'> 
<SYNC Start=6759425><P class='tr'>&nbsp;
<SYNC Start=6759425><P class='tr'> 
<SYNC Start=6762335><P class='tr'>&nbsp;
<SYNC Start=6762335><P class='tr'> 
<SYNC Start=6765445><P class='tr'>&nbsp;
<SYNC Start=6765445><P class='tr'> 
<SYNC Start=6767055><P class='tr'>&nbsp;
<SYNC Start=6767985><P class='tr'> 
<SYNC Start=6770185><P class='tr'>&nbsp;
<SYNC Start=6771295><P class='tr'> 
<SYNC Start=6773075><P class='tr'>&nbsp;
<SYNC Start=6773075><P class='tr'> 
<SYNC Start=6775195><P class='tr'>&nbsp;
<SYNC Start=6776495><P class='tr'> 
<SYNC Start=6778815><P class='tr'>&nbsp;
<SYNC Start=6782315><P class='tr'> 
<SYNC Start=6785465><P class='tr'>&nbsp;
<SYNC Start=6786415><P class='tr'> 
<SYNC Start=6788115><P class='tr'>&nbsp;
<SYNC Start=6792395><P class='tr'> 
<SYNC Start=6793395><P class='tr'>&nbsp;
<SYNC Start=6798815><P class='tr'> 
<SYNC Start=6801735><P class='tr'>&nbsp;
<SYNC Start=6801735><P class='tr'> 
<SYNC Start=6803275><P class='tr'>&nbsp;
<SYNC Start=6803625><P class='tr'> 
<SYNC Start=6804675><P class='tr'>&nbsp;
<SYNC Start=6805605><P class='tr'> 
<SYNC Start=6808305><P class='tr'>&nbsp;
<SYNC Start=6811485><P class='tr'> 
<SYNC Start=6812525><P class='tr'>&nbsp;
<SYNC Start=6814175><P class='tr'> 
<SYNC Start=6815335><P class='tr'>&nbsp;
<SYNC Start=6815735><P class='tr'> 
<SYNC Start=6816735><P class='tr'>&nbsp;
<SYNC Start=6817455><P class='tr'> 
<SYNC Start=6818615><P class='tr'>&nbsp;
<SYNC Start=6819615><P class='tr'> 
<SYNC Start=6822585><P class='tr'>&nbsp;
<SYNC Start=6822585><P class='tr'> 
<SYNC Start=6824405><P class='tr'>&nbsp;
<SYNC Start=6824825><P class='tr'> 
<SYNC Start=6826595><P class='tr'>&nbsp;
<SYNC Start=6827555><P class='tr'> 
<SYNC Start=6828555><P class='tr'>&nbsp;
<SYNC Start=6829745><P class='tr'> 
<SYNC Start=6832685><P class='tr'>&nbsp;
<SYNC Start=6832985><P class='tr'> 
<SYNC Start=6835635><P class='tr'>&nbsp;
<SYNC Start=6835635><P class='tr'> 
<SYNC Start=6838545><P class='tr'>&nbsp;
<SYNC Start=6838545><P class='tr'> 
<SYNC Start=6840785><P class='tr'>&nbsp;
<SYNC Start=6840785><P class='tr'> 
<SYNC Start=6842945><P class='tr'>&nbsp;
<SYNC Start=6843615><P class='tr'> 
<SYNC Start=6846675><P class='tr'>&nbsp;
<SYNC Start=6846675><P class='tr'> 
<SYNC Start=6848915><P class='tr'>&nbsp;
<SYNC Start=6848915><P class='tr'> 
<SYNC Start=6851785><P class='tr'>&nbsp;
<SYNC Start=6851905><P class='tr'> 
<SYNC Start=6854925><P class='tr'>&nbsp;
<SYNC Start=6854925><P class='tr'> 
<SYNC Start=6856985><P class='tr'>&nbsp;
<SYNC Start=6857655><P class='tr'> 
<SYNC Start=6860895><P class='tr'>&nbsp;
<SYNC Start=6861095><P class='tr'> 
<SYNC Start=6862095><P class='tr'>&nbsp;
<SYNC Start=6862455><P class='tr'> 
<SYNC Start=6865495><P class='tr'>&nbsp;
<SYNC Start=6866305><P class='tr'> 
<SYNC Start=6867625><P class='tr'>&nbsp;
<SYNC Start=6868145><P class='tr'> 
<SYNC Start=6871435><P class='tr'>&nbsp;
<SYNC Start=6871435><P class='tr'> 
<SYNC Start=6874385><P class='tr'>&nbsp;
<SYNC Start=6874385><P class='tr'> 
<SYNC Start=6876525><P class='tr'>&nbsp;
<SYNC Start=6877735><P class='tr'> 
<SYNC Start=6880085><P class='tr'>&nbsp;
<SYNC Start=6880625><P class='tr'> 
<SYNC Start=6883205><P class='tr'>&nbsp;
<SYNC Start=6884295><P class='tr'> 
<SYNC Start=6885655><P class='tr'>&nbsp;
<SYNC Start=6887675><P class='tr'> 
<SYNC Start=6888675><P class='tr'>&nbsp;
<SYNC Start=6890205><P class='tr'> 
<SYNC Start=6893495><P class='tr'>&nbsp;
<SYNC Start=6893715><P class='tr'> 
<SYNC Start=6895495><P class='tr'>&nbsp;
<SYNC Start=6896215><P class='tr'> 
<SYNC Start=6899235><P class='tr'>&nbsp;
<SYNC Start=6899235><P class='tr'> 
<SYNC Start=6900715><P class='tr'>&nbsp;
<SYNC Start=6900715><P class='tr'> 
<SYNC Start=6903655><P class='tr'>&nbsp;
<SYNC Start=6903655><P class='tr'> 
<SYNC Start=6906195><P class='tr'>&nbsp;
<SYNC Start=6906195><P class='tr'> 
<SYNC Start=6909345><P class='tr'>&nbsp;
<SYNC Start=6909345><P class='tr'> 
<SYNC Start=6912425><P class='tr'>&nbsp;
<SYNC Start=6912425><P class='tr'> 
<SYNC Start=6915805><P class='tr'>&nbsp;
<SYNC Start=6916365><P class='tr'> 
<SYNC Start=6918235><P class='tr'>&nbsp;
<SYNC Start=6918855><P class='tr'> 
<SYNC Start=6920235><P class='tr'>&nbsp;
<SYNC Start=6922825><P class='tr'> 
<SYNC Start=6924115><P class='tr'>&nbsp;
<SYNC Start=6925675><P class='tr'> 
<SYNC Start=6926675><P class='tr'>&nbsp;
<SYNC Start=6927325><P class='tr'> 
<SYNC Start=6930065><P class='tr'>&nbsp;
<SYNC Start=6931025><P class='tr'> 
<SYNC Start=6932735><P class='tr'>&nbsp;
<SYNC Start=6933935><P class='tr'> 
<SYNC Start=6936485><P class='tr'>&nbsp;
<SYNC Start=6936485><P class='tr'> 
<SYNC Start=6938875><P class='tr'>&nbsp;
<SYNC Start=6938875><P class='tr'> 
<SYNC Start=6941415><P class='tr'>&nbsp;
<SYNC Start=6944605><P class='tr'> 
<SYNC Start=6945755><P class='tr'>&nbsp;
<SYNC Start=6949775><P class='tr'> 
<SYNC Start=6952235><P class='tr'>&nbsp;
<SYNC Start=6952235><P class='tr'> 
<SYNC Start=6955015><P class='tr'>&nbsp;
<SYNC Start=6955015><P class='tr'> 
<SYNC Start=6958035><P class='tr'>&nbsp;
<SYNC Start=6958035><P class='tr'> 
<SYNC Start=6960785><P class='tr'>&nbsp;
<SYNC Start=6961275><P class='tr'> 
<SYNC Start=6962495><P class='tr'>&nbsp;
<SYNC Start=6962955><P class='tr'> 
<SYNC Start=6964425><P class='tr'>&nbsp;
<SYNC Start=6972275><P class='tr'> 
<SYNC Start=6974335><P class='tr'>&nbsp;
<SYNC Start=6975635><P class='tr'> 
<SYNC Start=6976635><P class='tr'>&nbsp;
<SYNC Start=6976675><P class='tr'> 
<SYNC Start=6979255><P class='tr'>&nbsp;
<SYNC Start=6979255><P class='tr'> 
<SYNC Start=6980305><P class='tr'>&nbsp;
<SYNC Start=6980665><P class='tr'> 
<SYNC Start=6981605><P class='tr'>&nbsp;
<SYNC Start=6981605><P class='tr'> 
<SYNC Start=6983155><P class='tr'>&nbsp;
<SYNC Start=6984505><P class='tr'> 
<SYNC Start=6987645><P class='tr'>&nbsp;
<SYNC Start=6987755><P class='tr'> 
<SYNC Start=6990795><P class='tr'>&nbsp;
<SYNC Start=6991915><P class='tr'> 
<SYNC Start=6994935><P class='tr'>&nbsp;
<SYNC Start=6994935><P class='tr'> 
<SYNC Start=6997815><P class='tr'>&nbsp;
<SYNC Start=6997815><P class='tr'> 
<SYNC Start=7000805><P class='tr'>&nbsp;
<SYNC Start=7000805><P class='tr'> 
<SYNC Start=7003915><P class='tr'>&nbsp;
<SYNC Start=7003915><P class='tr'> 
<SYNC Start=7006015><P class='tr'>&nbsp;
<SYNC Start=7006335><P class='tr'> 
<SYNC Start=7007335><P class='tr'>&nbsp;
<SYNC Start=7008055><P class='tr'> 
<SYNC Start=7010515><P class='tr'>&nbsp;
<SYNC Start=7010515><P class='tr'> 
<SYNC Start=7013445><P class='tr'>&nbsp;
<SYNC Start=7013445><P class='tr'> 
<SYNC Start=7016375><P class='tr'>&nbsp;
<SYNC Start=7017165><P class='tr'> 
<SYNC Start=7018165><P class='tr'>&nbsp;
<SYNC Start=7018765><P class='tr'> 
<SYNC Start=7022255><P class='tr'>&nbsp;
<SYNC Start=7023155><P class='tr'> 
<SYNC Start=7026485><P class='tr'>&nbsp;
<SYNC Start=7026895><P class='tr'> 
<SYNC Start=7029875><P class='tr'>&nbsp;
<SYNC Start=7029875><P class='tr'> 
<SYNC Start=7031015><P class='tr'>&nbsp;
<SYNC Start=7031505><P class='tr'> 
<SYNC Start=7034185><P class='tr'>&nbsp;
<SYNC Start=7034185><P class='tr'> 
<SYNC Start=7036875><P class='tr'>&nbsp;
<SYNC Start=7036875><P class='tr'> 
<SYNC Start=7039085><P class='tr'>&nbsp;
<SYNC Start=7039085><P class='tr'> 
<SYNC Start=7041385><P class='tr'>&nbsp;
<SYNC Start=7041525><P class='tr'> 
<SYNC Start=7044515><P class='tr'>&nbsp;
<SYNC Start=7044635><P class='tr'> 
<SYNC Start=7047205><P class='tr'>&nbsp;
<SYNC Start=7047205><P class='tr'> 
<SYNC Start=7050475><P class='tr'>&nbsp;
<SYNC Start=7050475><P class='tr'> 
<SYNC Start=7053685><P class='tr'>&nbsp;
<SYNC Start=7053685><P class='tr'> 
<SYNC Start=7056325><P class='tr'>&nbsp;
<SYNC Start=7056325><P class='tr'> 
<SYNC Start=7059175><P class='tr'>&nbsp;
<SYNC Start=7059175><P class='tr'> 
<SYNC Start=7060865><P class='tr'>&nbsp;
<SYNC Start=7061625><P class='tr'> 
<SYNC Start=7064825><P class='tr'>&nbsp;
<SYNC Start=7064825><P class='tr'> 
<SYNC Start=7067455><P class='tr'>&nbsp;
<SYNC Start=7068355><P class='tr'> 
<SYNC Start=7071375><P class='tr'>&nbsp;
<SYNC Start=7071375><P class='tr'> 
<SYNC Start=7073305><P class='tr'>&nbsp;
<SYNC Start=7073975><P class='tr'> 
<SYNC Start=7077305><P class='tr'>&nbsp;
<SYNC Start=7077365><P class='tr'> 
<SYNC Start=7080265><P class='tr'>&nbsp;
<SYNC Start=7080475><P class='tr'> 
<SYNC Start=7083365><P class='tr'>&nbsp;
<SYNC Start=7083365><P class='tr'> 
<SYNC Start=7084865><P class='tr'>&nbsp;
<SYNC Start=7085515><P class='tr'> 
<SYNC Start=7087105><P class='tr'>&nbsp;
<SYNC Start=7087815><P class='tr'> 
<SYNC Start=7091115><P class='tr'>&nbsp;
<SYNC Start=7092145><P class='tr'> 
<SYNC Start=7095145><P class='tr'>&nbsp;
<SYNC Start=7095145><P class='tr'> 
<SYNC Start=7097595><P class='tr'>&nbsp;
<SYNC Start=7098035><P class='tr'> 
<SYNC Start=7100845><P class='tr'>&nbsp;
<SYNC Start=7100845><P class='tr'> 
<SYNC Start=7103455><P class='tr'>&nbsp;
<SYNC Start=7103455><P class='tr'> 
<SYNC Start=7106245><P class='tr'>&nbsp;
<SYNC Start=7106705><P class='tr'> 
<SYNC Start=7109465><P class='tr'>&nbsp;
<SYNC Start=7109465><P class='tr'> 
<SYNC Start=7111105><P class='tr'>&nbsp;
<SYNC Start=7111505><P class='tr'> 
<SYNC Start=7113425><P class='tr'>&nbsp;
<SYNC Start=7113425><P class='tr'> 
<SYNC Start=7115045><P class='tr'>&nbsp;
<SYNC Start=7115965><P class='tr'> 
<SYNC Start=7119105><P class='tr'>&nbsp;
<SYNC Start=7120495><P class='tr'> 
<SYNC Start=7123465><P class='tr'>&nbsp;
<SYNC Start=7124435><P class='tr'> 
<SYNC Start=7127055><P class='tr'>&nbsp;
<SYNC Start=7127055><P class='tr'> 
<SYNC Start=7129515><P class='tr'>&nbsp;
<SYNC Start=7129825><P class='tr'> 
<SYNC Start=7132985><P class='tr'>&nbsp;
<SYNC Start=7133535><P class='tr'> 
<SYNC Start=7135375><P class='tr'>&nbsp;
<SYNC Start=7135945><P class='tr'> 
<SYNC Start=7139395><P class='tr'>&nbsp;
<SYNC Start=7139395><P class='tr'> 
<SYNC Start=7140395><P class='tr'>&nbsp;
<SYNC Start=7141415><P class='tr'> 
<SYNC Start=7144015><P class='tr'>&nbsp;
<SYNC Start=7144785><P class='tr'> 
<SYNC Start=7147815><P class='tr'>&nbsp;
<SYNC Start=7147815><P class='tr'> 
<SYNC Start=7150495><P class='tr'>&nbsp;
<SYNC Start=7151755><P class='tr'> 
<SYNC Start=7153575><P class='tr'>&nbsp;
<SYNC Start=7155515><P class='tr'> 
<SYNC Start=7158405><P class='tr'>&nbsp;
<SYNC Start=7158405><P class='tr'> 
<SYNC Start=7161665><P class='tr'>&nbsp;
<SYNC Start=7162145><P class='tr'> 
<SYNC Start=7165145><P class='tr'>&nbsp;
<SYNC Start=7165145><P class='tr'> 
<SYNC Start=7167895><P class='tr'>&nbsp;
<SYNC Start=7167895><P class='tr'> 
<SYNC Start=7168895><P class='tr'>&nbsp;
<SYNC Start=7169735><P class='tr'> 
<SYNC Start=7172605><P class='tr'>&nbsp;
<SYNC Start=7173785><P class='tr'> 
<SYNC Start=7175935><P class='tr'>&nbsp;
<SYNC Start=7176835><P class='tr'> 
<SYNC Start=7177855><P class='tr'>&nbsp;
<SYNC Start=7178815><P class='tr'> 
<SYNC Start=7181795><P class='tr'>&nbsp;
<SYNC Start=7181795><P class='tr'> 
<SYNC Start=7185095><P class='tr'>&nbsp;
<SYNC Start=7186025><P class='tr'> 
<SYNC Start=7188325><P class='tr'>&nbsp;
<SYNC Start=7188825><P class='tr'> 
<SYNC Start=7190615><P class='tr'>&nbsp;
<SYNC Start=7191085><P class='tr'> 
<SYNC Start=7193335><P class='tr'>&nbsp;
<SYNC Start=7193765><P class='tr'> 
<SYNC Start=7197235><P class='tr'>&nbsp;
<SYNC Start=7197605><P class='tr'> 
<SYNC Start=7200515><P class='tr'>&nbsp;
<SYNC Start=7200515><P class='tr'> 
<SYNC Start=7203415><P class='tr'>&nbsp;
<SYNC Start=7203635><P class='tr'> 
<SYNC Start=7206855><P class='tr'>&nbsp;
<SYNC Start=7206855><P class='tr'> 
<SYNC Start=7208035><P class='tr'>&nbsp;
<SYNC Start=7209035><P class='tr'> 
<SYNC Start=7210035><P class='tr'>&nbsp;
<SYNC Start=7211955><P class='tr'> 
<SYNC Start=7214535><P class='tr'>&nbsp;
<SYNC Start=7215135><P class='tr'> 
<SYNC Start=7217825><P class='tr'>&nbsp;
<SYNC Start=7218325><P class='tr'> 
<SYNC Start=7221325><P class='tr'>&nbsp;
<SYNC Start=7221325><P class='tr'> 
<SYNC Start=7223575><P class='tr'>&nbsp;
<SYNC Start=7223975><P class='tr'> 
<SYNC Start=7226835><P class='tr'>&nbsp;
<SYNC Start=7226835><P class='tr'> 
<SYNC Start=7227835><P class='tr'>&nbsp;
<SYNC Start=7228635><P class='tr'> 
<SYNC Start=7231495><P class='tr'>&nbsp;
<SYNC Start=7231685><P class='tr'> 
<SYNC Start=7234665><P class='tr'>&nbsp;
<SYNC Start=7234665><P class='tr'> 
<SYNC Start=7235755><P class='tr'>&nbsp;
<SYNC Start=7236375><P class='tr'> 
<SYNC Start=7238775><P class='tr'>&nbsp;
<SYNC Start=7239125><P class='tr'> 
<SYNC Start=7242515><P class='tr'>&nbsp;
<SYNC Start=7242655><P class='tr'> 
<SYNC Start=7245805><P class='tr'>&nbsp;
<SYNC Start=7245995><P class='tr'> 
<SYNC Start=7248955><P class='tr'>&nbsp;
<SYNC Start=7248955><P class='tr'> 
<SYNC Start=7251995><P class='tr'>&nbsp;
<SYNC Start=7251995><P class='tr'> 
<SYNC Start=7255015><P class='tr'>&nbsp;
<SYNC Start=7255015><P class='tr'> 
<SYNC Start=7258235><P class='tr'>&nbsp;
<SYNC Start=7258235><P class='tr'> 
<SYNC Start=7261395><P class='tr'>&nbsp;
<SYNC Start=7261395><P class='tr'> 
<SYNC Start=7264265><P class='tr'>&nbsp;
<SYNC Start=7264265><P class='tr'> 
<SYNC Start=7265585><P class='tr'>&nbsp;
<SYNC Start=7267675><P class='tr'> 
<SYNC Start=7270755><P class='tr'>&nbsp;
<SYNC Start=7271535><P class='tr'> 
<SYNC Start=7273195><P class='tr'>&nbsp;
<SYNC Start=7273915><P class='tr'> 
<SYNC Start=7274915><P class='tr'>&nbsp;
<SYNC Start=7275465><P class='tr'> 
<SYNC Start=7277515><P class='tr'>&nbsp;
<SYNC Start=7278735><P class='tr'> 
<SYNC Start=7280815><P class='tr'>&nbsp;
<SYNC Start=7282545><P class='tr'> 
<SYNC Start=7285435><P class='tr'>&nbsp;
<SYNC Start=7286035><P class='tr'> 
<SYNC Start=7288535><P class='tr'>&nbsp;
<SYNC Start=7288535><P class='tr'> 
<SYNC Start=7290545><P class='tr'>&nbsp;
<SYNC Start=7291315><P class='tr'> 
<SYNC Start=7294035><P class='tr'>&nbsp;
<SYNC Start=7295705><P class='tr'> 
<SYNC Start=7298515><P class='tr'>&nbsp;
<SYNC Start=7298805><P class='tr'> 
<SYNC Start=7301705><P class='tr'>&nbsp;
<SYNC Start=7301705><P class='tr'> 
<SYNC Start=7303535><P class='tr'>&nbsp;
<SYNC Start=7303985><P class='tr'> 
<SYNC Start=7306895><P class='tr'>&nbsp;
<SYNC Start=7306895><P class='tr'> 
<SYNC Start=7309825><P class='tr'>&nbsp;
<SYNC Start=7309825><P class='tr'> 
<SYNC Start=7312325><P class='tr'>&nbsp;
<SYNC Start=7312325><P class='tr'> 
<SYNC Start=7313865><P class='tr'>&nbsp;
<SYNC Start=7314455><P class='tr'> 
<SYNC Start=7315805><P class='tr'>&nbsp;
<SYNC Start=7316315><P class='tr'> 
<SYNC Start=7319675><P class='tr'>&nbsp;
<SYNC Start=7321055><P class='tr'> 
<SYNC Start=7324375><P class='tr'>&nbsp;
<SYNC Start=7325005><P class='tr'> 
<SYNC Start=7328315><P class='tr'>&nbsp;
<SYNC Start=7330035><P class='tr'> 
<SYNC Start=7331035><P class='tr'>&nbsp;
<SYNC Start=7332275><P class='tr'> 
<SYNC Start=7334315><P class='tr'>&nbsp;
<SYNC Start=7334855><P class='tr'> 
<SYNC Start=7337345><P class='tr'>&nbsp;
<SYNC Start=7337345><P class='tr'> 
<SYNC Start=7338835><P class='tr'>&nbsp;
<SYNC Start=7339475><P class='tr'> 
<SYNC Start=7340475><P class='tr'>&nbsp;
<SYNC Start=7341225><P class='tr'> 
<SYNC Start=7344195><P class='tr'>&nbsp;
<SYNC Start=7345445><P class='tr'> 
<SYNC Start=7348875><P class='tr'>&nbsp;
<SYNC Start=7349295><P class='tr'> 
<SYNC Start=7351965><P class='tr'>&nbsp;
<SYNC Start=7352815><P class='tr'> 
<SYNC Start=7354915><P class='tr'>&nbsp;
<SYNC Start=7355145><P class='tr'> 
<SYNC Start=7358275><P class='tr'>&nbsp;
<SYNC Start=7358815><P class='tr'> 
<SYNC Start=7361445><P class='tr'>&nbsp;
<SYNC Start=7363595><P class='tr'> 
<SYNC Start=7365755><P class='tr'>&nbsp;
<SYNC Start=7367025><P class='tr'> 
<SYNC Start=7369355><P class='tr'>&nbsp;
<SYNC Start=7370215><P class='tr'> 
<SYNC Start=7371715><P class='tr'>&nbsp;
<SYNC Start=7372115><P class='tr'> 
<SYNC Start=7373495><P class='tr'>&nbsp;
<SYNC Start=7374345><P class='tr'> 
<SYNC Start=7375345><P class='tr'>&nbsp;
<SYNC Start=7376075><P class='tr'> 
<SYNC Start=7377075><P class='tr'>&nbsp;
<SYNC Start=7377395><P class='tr'> 
<SYNC Start=7380295><P class='tr'>&nbsp;
<SYNC Start=7380295><P class='tr'> 
<SYNC Start=7382155><P class='tr'>&nbsp;
<SYNC Start=7382875><P class='tr'> 
<SYNC Start=7385645><P class='tr'>&nbsp;
<SYNC Start=7385645><P class='tr'> 
<SYNC Start=7388295><P class='tr'>&nbsp;
<SYNC Start=7388295><P class='tr'> 
<SYNC Start=7389575><P class='tr'>&nbsp;
<SYNC Start=7390675><P class='tr'> 
<SYNC Start=7393575><P class='tr'>&nbsp;
<SYNC Start=7393575><P class='tr'> 
<SYNC Start=7396225><P class='tr'>&nbsp;
<SYNC Start=7396225><P class='tr'> 
<SYNC Start=7397865><P class='tr'>&nbsp;
<SYNC Start=7398265><P class='tr'> 
<SYNC Start=7401275><P class='tr'>&nbsp;
<SYNC Start=7405035><P class='tr'> 
<SYNC Start=7406715><P class='tr'>&nbsp;
<SYNC Start=7408955><P class='tr'> 
<SYNC Start=7409955><P class='tr'>&nbsp;
<SYNC Start=7411155><P class='tr'> 
<SYNC Start=7413255><P class='tr'>&nbsp;
<SYNC Start=7413255><P class='tr'> 
<SYNC Start=7414865><P class='tr'>&nbsp;
<SYNC Start=7416375><P class='tr'> 
<SYNC Start=7418345><P class='tr'>&nbsp;
<SYNC Start=7418705><P class='tr'> 
<SYNC Start=7420965><P class='tr'>&nbsp;
<SYNC Start=7422215><P class='tr'> 
<SYNC Start=7423495><P class='tr'>&nbsp;
<SYNC Start=7425675><P class='tr'> 
<SYNC Start=7428645><P class='tr'>&nbsp;
<SYNC Start=7428765><P class='tr'> 
<SYNC Start=7429815><P class='tr'>&nbsp;
<SYNC Start=7430685><P class='tr'> 
<SYNC Start=7433185><P class='tr'>&nbsp;
<SYNC Start=7433605><P class='tr'> 
<SYNC Start=7436485><P class='tr'>&nbsp;
<SYNC Start=7436485><P class='tr'> 
<SYNC Start=7437855><P class='tr'>&nbsp;
<SYNC Start=7440835><P class='tr'> 
<SYNC Start=7441935><P class='tr'>&nbsp;
<SYNC Start=7444055><P class='tr'> 
<SYNC Start=7445655><P class='tr'>&nbsp;
<SYNC Start=7448235><P class='tr'> 
<SYNC Start=7449945><P class='tr'>&nbsp;
<SYNC Start=7451145><P class='tr'> 
<SYNC Start=7452595><P class='tr'>&nbsp;
<SYNC Start=7453125><P class='tr'> 
<SYNC Start=7454125><P class='tr'>&nbsp;
<SYNC Start=7454705><P class='tr'> 
<SYNC Start=7457155><P class='tr'>&nbsp;
<SYNC Start=7457785><P class='tr'> 
<SYNC Start=7460825><P class='tr'>&nbsp;
<SYNC Start=7462465><P class='tr'> 
<SYNC Start=7463465><P class='tr'>&nbsp;
<SYNC Start=7463815><P class='tr'> 
<SYNC Start=7465565><P class='tr'>&nbsp;
<SYNC Start=7465905><P class='tr'> 
<SYNC Start=7466995><P class='tr'>&nbsp;
<SYNC Start=7467945><P class='tr'> 
<SYNC Start=7470465><P class='tr'>&nbsp;
<SYNC Start=7470465><P class='tr'> 
<SYNC Start=7473835><P class='tr'>&nbsp;
<SYNC Start=7473885><P class='tr'> 
<SYNC Start=7474885><P class='tr'>&nbsp;
<SYNC Start=7475585><P class='tr'> 
<SYNC Start=7478425><P class='tr'>&nbsp;
<SYNC Start=7478425><P class='tr'> 
<SYNC Start=7481755><P class='tr'>&nbsp;
<SYNC Start=7482145><P class='tr'> 
<SYNC Start=7483795><P class='tr'>&nbsp;
<SYNC Start=7483795><P class='tr'> 
<SYNC Start=7486685><P class='tr'>&nbsp;
<SYNC Start=7488015><P class='tr'> 
<SYNC Start=7491315><P class='tr'>&nbsp;
<SYNC Start=7492405><P class='tr'> 
<SYNC Start=7493805><P class='tr'>&nbsp;
<SYNC Start=7494305><P class='tr'> 
<SYNC Start=7497155><P class='tr'>&nbsp;
<SYNC Start=7498235><P class='tr'> 
<SYNC Start=7501095><P class='tr'>&nbsp;
<SYNC Start=7502885><P class='tr'> 
<SYNC Start=7505015><P class='tr'>&nbsp;
<SYNC Start=7505865><P class='tr'> 
<SYNC Start=7508765><P class='tr'>&nbsp;
<SYNC Start=7508765><P class='tr'> 
<SYNC Start=7510035><P class='tr'>&nbsp;
<SYNC Start=7511675><P class='tr'> 
<SYNC Start=7514335><P class='tr'>&nbsp;
<SYNC Start=7514545><P class='tr'> 
<SYNC Start=7517835><P class='tr'>&nbsp;
<SYNC Start=7518595><P class='tr'> 
<SYNC Start=7521575><P class='tr'>&nbsp;
<SYNC Start=7521575><P class='tr'> 
<SYNC Start=7522575><P class='tr'>&nbsp;
<SYNC Start=7523235><P class='tr'> 
<SYNC Start=7526025><P class='tr'>&nbsp;
<SYNC Start=7526025><P class='tr'> 
<SYNC Start=7528405><P class='tr'>&nbsp;
<SYNC Start=7528405><P class='tr'> 
<SYNC Start=7531485><P class='tr'>&nbsp;
<SYNC Start=7531485><P class='tr'> 
<SYNC Start=7534655><P class='tr'>&nbsp;
<SYNC Start=7534655><P class='tr'> 
<SYNC Start=7537355><P class='tr'>&nbsp;
<SYNC Start=7537355><P class='tr'> 
<SYNC Start=7539875><P class='tr'>&nbsp;
<SYNC Start=7540195><P class='tr'> 
<SYNC Start=7543165><P class='tr'>&nbsp;
<SYNC Start=7543165><P class='tr'> 
<SYNC Start=7544165><P class='tr'>&nbsp;
<SYNC Start=7544575><P class='tr'> 
<SYNC Start=7547315><P class='tr'>&nbsp;
<SYNC Start=7548085><P class='tr'> 
<SYNC Start=7551065><P class='tr'>&nbsp;
<SYNC Start=7551065><P class='tr'> 
<SYNC Start=7554295><P class='tr'>&nbsp;
<SYNC Start=7554295><P class='tr'> 
<SYNC Start=7557465><P class='tr'>&nbsp;
<SYNC Start=7558035><P class='tr'> 
<SYNC Start=7559755><P class='tr'>&nbsp;
<SYNC Start=7560515><P class='tr'> 
<SYNC Start=7563535><P class='tr'>&nbsp;
<SYNC Start=7564285><P class='tr'> 
<SYNC Start=7567295><P class='tr'>&nbsp;
<SYNC Start=7567295><P class='tr'> 
<SYNC Start=7568275><P class='tr'>&nbsp;
<SYNC Start=7568275><P class='tr'> 
<SYNC Start=7571265><P class='tr'>&nbsp;
<SYNC Start=7571265><P class='tr'> 
<SYNC Start=7574245><P class='tr'>&nbsp;
<SYNC Start=7574245><P class='tr'> 
<SYNC Start=7577275><P class='tr'>&nbsp;
<SYNC Start=7577275><P class='tr'> 
<SYNC Start=7580165><P class='tr'>&nbsp;
<SYNC Start=7580165><P class='tr'> 
<SYNC Start=7581745><P class='tr'>&nbsp;
<SYNC Start=7582905><P class='tr'> 
<SYNC Start=7584065><P class='tr'>&nbsp;
<SYNC Start=7585405><P class='tr'> 
<SYNC Start=7588155><P class='tr'>&nbsp;
<SYNC Start=7588155><P class='tr'> 
<SYNC Start=7590305><P class='tr'>&nbsp;
<SYNC Start=7591805><P class='tr'> 
<SYNC Start=7593475><P class='tr'>&nbsp;
<SYNC Start=7595375><P class='tr'> 
<SYNC Start=7597465><P class='tr'>&nbsp;
<SYNC Start=7600405><P class='tr'> 
<SYNC Start=7602355><P class='tr'>&nbsp;
<SYNC Start=7608705><P class='tr'> 
<SYNC Start=7610955><P class='tr'>&nbsp;
<SYNC Start=7611355><P class='tr'> 
<SYNC Start=7613965><P class='tr'>&nbsp;
<SYNC Start=7615545><P class='tr'> 
<SYNC Start=7618445><P class='tr'>&nbsp;
<SYNC Start=7618445><P class='tr'> 
<SYNC Start=7621205><P class='tr'>&nbsp;
<SYNC Start=7621205><P class='tr'> 
<SYNC Start=7623515><P class='tr'>&nbsp;
<SYNC Start=7624235><P class='tr'> 
<SYNC Start=7626855><P class='tr'>&nbsp;
<SYNC Start=7626855><P class='tr'> 
<SYNC Start=7628245><P class='tr'>&nbsp;
<SYNC Start=7628925><P class='tr'> 
<SYNC Start=7631795><P class='tr'>&nbsp;
<SYNC Start=7631795><P class='tr'> 
<SYNC Start=7634205><P class='tr'>&nbsp;
<SYNC Start=7634535><P class='tr'> 
<SYNC Start=7637685><P class='tr'>&nbsp;
<SYNC Start=7638045><P class='tr'> 
<SYNC Start=7641455><P class='tr'>&nbsp;
<SYNC Start=7641535><P class='tr'> 
<SYNC Start=7644035><P class='tr'>&nbsp;
<SYNC Start=7644035><P class='tr'> 
<SYNC Start=7647405><P class='tr'>&nbsp;
<SYNC Start=7647405><P class='tr'> 
<SYNC Start=7650325><P class='tr'>&nbsp;
<SYNC Start=7650325><P class='tr'> 
<SYNC Start=7653335><P class='tr'>&nbsp;
<SYNC Start=7653335><P class='tr'> 
<SYNC Start=7656305><P class='tr'>&nbsp;
<SYNC Start=7656355><P class='tr'> 
<SYNC Start=7659225><P class='tr'>&nbsp;
<SYNC Start=7659225><P class='tr'> 
<SYNC Start=7662235><P class='tr'>&nbsp;
<SYNC Start=7662235><P class='tr'> 
<SYNC Start=7664195><P class='tr'>&nbsp;
<SYNC Start=7664195><P class='tr'> 
<SYNC Start=7666065><P class='tr'>&nbsp;
<SYNC Start=7666525><P class='tr'> 
<SYNC Start=7669165><P class='tr'>&nbsp;
<SYNC Start=7669165><P class='tr'> 
<SYNC Start=7670955><P class='tr'>&nbsp;
<SYNC Start=7671685><P class='tr'> 
<SYNC Start=7674925><P class='tr'>&nbsp;
<SYNC Start=7675575><P class='tr'> 
<SYNC Start=7676885><P class='tr'>&nbsp;
<SYNC Start=7677875><P class='tr'> 
<SYNC Start=7679005><P class='tr'>&nbsp;
<SYNC Start=7679865><P class='tr'> 
<SYNC Start=7682975><P class='tr'>&nbsp;
<SYNC Start=7682975><P class='tr'> 
<SYNC Start=7684385><P class='tr'>&nbsp;
<SYNC Start=7685085><P class='tr'> 
<SYNC Start=7687845><P class='tr'>&nbsp;
<SYNC Start=7688075><P class='tr'> 
<SYNC Start=7691485><P class='tr'>&nbsp;
<SYNC Start=7693765><P class='tr'> 
<SYNC Start=7694965><P class='tr'>&nbsp;
<SYNC Start=7698185><P class='tr'> 
<SYNC Start=7699315><P class='tr'>&nbsp;
<SYNC Start=7701435><P class='tr'> 
<SYNC Start=7702585><P class='tr'>&nbsp;
<SYNC Start=7704285><P class='tr'> 
<SYNC Start=7705765><P class='tr'>&nbsp;
<SYNC Start=7708085><P class='tr'> 
<SYNC Start=7710055><P class='tr'>&nbsp;
<SYNC Start=7711155><P class='tr'> 
<SYNC Start=7713965><P class='tr'>&nbsp;
<SYNC Start=7713965><P class='tr'> 
<SYNC Start=7715245><P class='tr'>&nbsp;
<SYNC Start=7715755><P class='tr'> 
<SYNC Start=7718425><P class='tr'>&nbsp;
<SYNC Start=7719195><P class='tr'> 
<SYNC Start=7722285><P class='tr'>&nbsp;
<SYNC Start=7722285><P class='tr'> 
<SYNC Start=7724915><P class='tr'>&nbsp;
<SYNC Start=7724915><P class='tr'> 
<SYNC Start=7726045><P class='tr'>&nbsp;
<SYNC Start=7730475><P class='tr'> 
<SYNC Start=7732345><P class='tr'>&nbsp;
<SYNC Start=7733005><P class='tr'> 
<SYNC Start=7734175><P class='tr'>&nbsp;
<SYNC Start=7734495><P class='tr'> 
<SYNC Start=7737325><P class='tr'>&nbsp;
<SYNC Start=7737325><P class='tr'> 
<SYNC Start=7739665><P class='tr'>&nbsp;
<SYNC Start=7740045><P class='tr'> 
<SYNC Start=7742355><P class='tr'>&nbsp;
<SYNC Start=7743165><P class='tr'> 
<SYNC Start=7746265><P class='tr'>&nbsp;
<SYNC Start=7747695><P class='tr'> 
<SYNC Start=7749495><P class='tr'>&nbsp;
<SYNC Start=7750395><P class='tr'> 
<SYNC Start=7752025><P class='tr'>&nbsp;
<SYNC Start=7753335><P class='tr'> 
<SYNC Start=7754825><P class='tr'>&nbsp;
<SYNC Start=7757535><P class='tr'> 
<SYNC Start=7758915><P class='tr'>&nbsp;
<SYNC Start=7760535><P class='tr'> 
<SYNC Start=7763285><P class='tr'>&nbsp;
<SYNC Start=7763285><P class='tr'> 
<SYNC Start=7766065><P class='tr'>&nbsp;
<SYNC Start=7766065><P class='tr'> 
<SYNC Start=7768925><P class='tr'>&nbsp;
<SYNC Start=7768925><P class='tr'> 
<SYNC Start=7770615><P class='tr'>&nbsp;
<SYNC Start=7771075><P class='tr'> 
<SYNC Start=7773825><P class='tr'>&nbsp;
<SYNC Start=7773825><P class='tr'> 
<SYNC Start=7775305><P class='tr'>&nbsp;
<SYNC Start=7775725><P class='tr'> 
<SYNC Start=7776995><P class='tr'>&nbsp;
<SYNC Start=7778775><P class='tr'> 
<SYNC Start=7781775><P class='tr'>&nbsp;
<SYNC Start=7782485><P class='tr'> 
<SYNC Start=7784645><P class='tr'>&nbsp;
<SYNC Start=7784645><P class='tr'> 
<SYNC Start=7786115><P class='tr'>&nbsp;
<SYNC Start=7786615><P class='tr'> 
<SYNC Start=7789415><P class='tr'>&nbsp;
<SYNC Start=7789415><P class='tr'> 
<SYNC Start=7792485><P class='tr'>&nbsp;
<SYNC Start=7792985><P class='tr'> 
<SYNC Start=7795955><P class='tr'>&nbsp;
<SYNC Start=7795955><P class='tr'> 
<SYNC Start=7796955><P class='tr'>&nbsp;
<SYNC Start=7797625><P class='tr'> 
<SYNC Start=7800415><P class='tr'>&nbsp;
<SYNC Start=7801745><P class='tr'> 
<SYNC Start=7802745><P class='tr'>&nbsp;
<SYNC Start=7803595><P class='tr'> 
<SYNC Start=7804935><P class='tr'>&nbsp;
<SYNC Start=7805385><P class='tr'> 
<SYNC Start=7807915><P class='tr'>&nbsp;
<SYNC Start=7807915><P class='tr'> 
<SYNC Start=7810015><P class='tr'>&nbsp;
<SYNC Start=7810875><P class='tr'> 
<SYNC Start=7814105><P class='tr'>&nbsp;
<SYNC Start=7814445><P class='tr'> 
<SYNC Start=7817485><P class='tr'>&nbsp;
<SYNC Start=7817485><P class='tr'> 
<SYNC Start=7820535><P class='tr'>&nbsp;
<SYNC Start=7820535><P class='tr'> 
<SYNC Start=7823155><P class='tr'>&nbsp;
<SYNC Start=7823155><P class='tr'> 
<SYNC Start=7826555><P class='tr'>&nbsp;
<SYNC Start=7827155><P class='tr'> 
<SYNC Start=7830025><P class='tr'>&nbsp;
<SYNC Start=7830475><P class='tr'> 
<SYNC Start=7833475><P class='tr'>&nbsp;
<SYNC Start=7833475><P class='tr'> 
<SYNC Start=7836535><P class='tr'>&nbsp;
<SYNC Start=7836535><P class='tr'> 
<SYNC Start=7837535><P class='tr'>&nbsp;
<SYNC Start=7838135><P class='tr'> 
<SYNC Start=7840825><P class='tr'>&nbsp;
<SYNC Start=7841355><P class='tr'> 
<SYNC Start=7844215><P class='tr'>&nbsp;
<SYNC Start=7844215><P class='tr'> 
<SYNC Start=7846675><P class='tr'>&nbsp;
<SYNC Start=7846935><P class='tr'> 
<SYNC Start=7848375><P class='tr'>&nbsp;
<SYNC Start=7848815><P class='tr'> 
<SYNC Start=7851435><P class='tr'>&nbsp;
<SYNC Start=7851745><P class='tr'> 
<SYNC Start=7853925><P class='tr'>&nbsp;
<SYNC Start=7854465><P class='tr'> 
<SYNC Start=7857535><P class='tr'>&nbsp;
<SYNC Start=7858485><P class='tr'> 
<SYNC Start=7859845><P class='tr'>&nbsp;
<SYNC Start=7862005><P class='tr'> 
<SYNC Start=7863955><P class='tr'>&nbsp;
<SYNC Start=7864905><P class='tr'> 
<SYNC Start=7865905><P class='tr'>&nbsp;
<SYNC Start=7867005><P class='tr'> 
<SYNC Start=7868005><P class='tr'>&nbsp;
<SYNC Start=7869365><P class='tr'> 
<SYNC Start=7871595><P class='tr'>&nbsp;
<SYNC Start=7872915><P class='tr'> 
<SYNC Start=7873935><P class='tr'>&nbsp;
<SYNC Start=7875115><P class='tr'> 
<SYNC Start=7877235><P class='tr'>&nbsp;
<SYNC Start=7877985><P class='tr'> 
<SYNC Start=7878985><P class='tr'>&nbsp;
<SYNC Start=7880485><P class='tr'> 
<SYNC Start=7883815><P class='tr'>&nbsp;
<SYNC Start=7884565><P class='tr'> 
<SYNC Start=7887495><P class='tr'>&nbsp;
<SYNC Start=7887495><P class='tr'> 
<SYNC Start=7889405><P class='tr'>&nbsp;
<SYNC Start=7890545><P class='tr'> 
<SYNC Start=7893625><P class='tr'>&nbsp;
<SYNC Start=7893635><P class='tr'> 
<SYNC Start=7895465><P class='tr'>&nbsp;
<SYNC Start=7896085><P class='tr'> 
<SYNC Start=7899075><P class='tr'>&nbsp;
<SYNC Start=7899075><P class='tr'> 
<SYNC Start=7902555><P class='tr'>&nbsp;
<SYNC Start=7904295><P class='tr'> 
<SYNC Start=7905295><P class='tr'>&nbsp;
<SYNC Start=7905815><P class='tr'> 
<SYNC Start=7907355><P class='tr'>&nbsp;
<SYNC Start=7909125><P class='tr'> 
<SYNC Start=7912125><P class='tr'>&nbsp;
<SYNC Start=7912375><P class='tr'> 
<SYNC Start=7914735><P class='tr'>&nbsp;
<SYNC Start=7917275><P class='tr'> 
<SYNC Start=7919735><P class='tr'>&nbsp;
<SYNC Start=7919865><P class='tr'> 
<SYNC Start=7923355><P class='tr'>&nbsp;
<SYNC Start=7923445><P class='tr'> 
<SYNC Start=7926155><P class='tr'>&nbsp;
<SYNC Start=7926155><P class='tr'> 
<SYNC Start=7929175><P class='tr'>&nbsp;
<SYNC Start=7929175><P class='tr'> 
<SYNC Start=7931985><P class='tr'>&nbsp;
<SYNC Start=7933085><P class='tr'> 
<SYNC Start=7936205><P class='tr'>&nbsp;
<SYNC Start=7936695><P class='tr'> 
<SYNC Start=7939145><P class='tr'>&nbsp;
<SYNC Start=7939145><P class='tr'> 
<SYNC Start=7940305><P class='tr'>&nbsp;
<SYNC Start=7940655><P class='tr'> 
<SYNC Start=7941955><P class='tr'>&nbsp;
<SYNC Start=7942405><P class='tr'> 
<SYNC Start=7943395><P class='tr'>&nbsp;
<SYNC Start=7943395><P class='tr'> 
<SYNC Start=7946405><P class='tr'>&nbsp;
<SYNC Start=7946405><P class='tr'> 
<SYNC Start=7949065><P class='tr'>&nbsp;
<SYNC Start=7949065><P class='tr'> 
<SYNC Start=7952525><P class='tr'>&nbsp;
<SYNC Start=7953355><P class='tr'> 
<SYNC Start=7955515><P class='tr'>&nbsp;
<SYNC Start=7956095><P class='tr'> 
<SYNC Start=7957285><P class='tr'>&nbsp;
<SYNC Start=7957705><P class='tr'> 
<SYNC Start=7960045><P class='tr'>&nbsp;
<SYNC Start=7961255><P class='tr'> 
<SYNC Start=7962525><P class='tr'>&nbsp;
<SYNC Start=7963385><P class='tr'> 
<SYNC Start=7966005><P class='tr'>&nbsp;
<SYNC Start=7966105><P class='tr'> 
<SYNC Start=7968995><P class='tr'>&nbsp;
<SYNC Start=7969655><P class='tr'> 
<SYNC Start=7972505><P class='tr'>&nbsp;
<SYNC Start=7972505><P class='tr'> 
<SYNC Start=7973885><P class='tr'>&nbsp;
<SYNC Start=7974315><P class='tr'> 
<SYNC Start=7976365><P class='tr'>&nbsp;
<SYNC Start=7976675><P class='tr'> 
<SYNC Start=7979695><P class='tr'>&nbsp;
<SYNC Start=7979695><P class='tr'> 
<SYNC Start=7982705><P class='tr'>&nbsp;
<SYNC Start=7982705><P class='tr'> 
<SYNC Start=7984745><P class='tr'>&nbsp;
<SYNC Start=7985135><P class='tr'> 
<SYNC Start=7987705><P class='tr'>&nbsp;
<SYNC Start=7988135><P class='tr'> 
<SYNC Start=7990625><P class='tr'>&nbsp;
<SYNC Start=7991415><P class='tr'> 
<SYNC Start=7994325><P class='tr'>&nbsp;
<SYNC Start=7995235><P class='tr'> 
<SYNC Start=7998505><P class='tr'>&nbsp;
<SYNC Start=7999275><P class='tr'> 
<SYNC Start=8002015><P class='tr'>&nbsp;
<SYNC Start=8002365><P class='tr'> 
<SYNC Start=8004475><P class='tr'>&nbsp;
<SYNC Start=8005455><P class='tr'> 
<SYNC Start=8008305><P class='tr'>&nbsp;
<SYNC Start=8008305><P class='tr'> 
<SYNC Start=8009585><P class='tr'>&nbsp;
<SYNC Start=8010335><P class='tr'> 
<SYNC Start=8011485><P class='tr'>&nbsp;
<SYNC Start=8012025><P class='tr'> 
<SYNC Start=8014945><P class='tr'>&nbsp;
<SYNC Start=8014945><P class='tr'> 
<SYNC Start=8016185><P class='tr'>&nbsp;
<SYNC Start=8017385><P class='tr'> 
<SYNC Start=8020315><P class='tr'>&nbsp;
<SYNC Start=8020475><P class='tr'> 
<SYNC Start=8023155><P class='tr'>&nbsp;
<SYNC Start=8023335><P class='tr'> 
<SYNC Start=8025935><P class='tr'>&nbsp;
<SYNC Start=8025935><P class='tr'> 
<SYNC Start=8028975><P class='tr'>&nbsp;
<SYNC Start=8028975><P class='tr'> 
<SYNC Start=8030625><P class='tr'>&nbsp;
<SYNC Start=8031225><P class='tr'> 
<SYNC Start=8034385><P class='tr'>&nbsp;
<SYNC Start=8035265><P class='tr'> 
<SYNC Start=8036265><P class='tr'>&nbsp;
<SYNC Start=8037015><P class='tr'> 
<SYNC Start=8040085><P class='tr'>&nbsp;
<SYNC Start=8040085><P class='tr'> 
<SYNC Start=8041505><P class='tr'>&nbsp;
<SYNC Start=8042115><P class='tr'> 
<SYNC Start=8043725><P class='tr'>&nbsp;
<SYNC Start=8044855><P class='tr'> 
<SYNC Start=8047985><P class='tr'>&nbsp;
<SYNC Start=8047985><P class='tr'> 
<SYNC Start=8050495><P class='tr'>&nbsp;
<SYNC Start=8051295><P class='tr'> 
<SYNC Start=8054085><P class='tr'>&nbsp;
<SYNC Start=8054085><P class='tr'> 
<SYNC Start=8056945><P class='tr'>&nbsp;
<SYNC Start=8056945><P class='tr'> 
<SYNC Start=8057945><P class='tr'>&nbsp;
<SYNC Start=8058455><P class='tr'> 
<SYNC Start=8059555><P class='tr'>&nbsp;
<SYNC Start=8060245><P class='tr'> 
<SYNC Start=8061245><P class='tr'>&nbsp;
<SYNC Start=8062065><P class='tr'> 
<SYNC Start=8065075><P class='tr'>&nbsp;
<SYNC Start=8065075><P class='tr'> 
<SYNC Start=8066075><P class='tr'>&nbsp;
<SYNC Start=8066445><P class='tr'> 
<SYNC Start=8069205><P class='tr'>&nbsp;
<SYNC Start=8069205><P class='tr'> 
<SYNC Start=8072195><P class='tr'>&nbsp;
<SYNC Start=8072195><P class='tr'> 
<SYNC Start=8073195><P class='tr'>&nbsp;
<SYNC Start=8073805><P class='tr'> 
<SYNC Start=8076815><P class='tr'>&nbsp;
<SYNC Start=8076815><P class='tr'> 
<SYNC Start=8077815><P class='tr'>&nbsp;
<SYNC Start=8077965><P class='tr'> 
<SYNC Start=8080195><P class='tr'>&nbsp;
<SYNC Start=8080645><P class='tr'> 
<SYNC Start=8083765><P class='tr'>&nbsp;
<SYNC Start=8083765><P class='tr'> 
<SYNC Start=8086265><P class='tr'>&nbsp;
<SYNC Start=8086265><P class='tr'> 
<SYNC Start=8088565><P class='tr'>&nbsp;
<SYNC Start=8089565><P class='tr'> 
<SYNC Start=8092535><P class='tr'>&nbsp;
<SYNC Start=8092535><P class='tr'> 
<SYNC Start=8094995><P class='tr'>&nbsp;
<SYNC Start=8094995><P class='tr'> 
<SYNC Start=8096605><P class='tr'>&nbsp;
<SYNC Start=8097115><P class='tr'> 
<SYNC Start=8098625><P class='tr'>&nbsp;
<SYNC Start=8099565><P class='tr'> 
<SYNC Start=8100855><P class='tr'>&nbsp;
<SYNC Start=8101455><P class='tr'> 
<SYNC Start=8104575><P class='tr'>&nbsp;
<SYNC Start=8105455><P class='tr'> 
<SYNC Start=8106525><P class='tr'>&nbsp;
<SYNC Start=8109565><P class='tr'> 
<SYNC Start=8110565><P class='tr'>&nbsp;
<SYNC Start=8111505><P class='tr'> 
<SYNC Start=8114345><P class='tr'>&nbsp;
<SYNC Start=8114405><P class='tr'> 
<SYNC Start=8115635><P class='tr'>&nbsp;
<SYNC Start=8115965><P class='tr'> 
<SYNC Start=8116965><P class='tr'>&nbsp;
<SYNC Start=8118175><P class='tr'> 
<SYNC Start=8120745><P class='tr'>&nbsp;
<SYNC Start=8120745><P class='tr'> 
<SYNC Start=8123995><P class='tr'>&nbsp;
<SYNC Start=8124105><P class='tr'> 
<SYNC Start=8125975><P class='tr'>&nbsp;
<SYNC Start=8126545><P class='tr'> 
<SYNC Start=8128655><P class='tr'>&nbsp;
<SYNC Start=8129375><P class='tr'> 
<SYNC Start=8132435><P class='tr'>&nbsp;
<SYNC Start=8132435><P class='tr'> 
<SYNC Start=8133435><P class='tr'>&nbsp;
<SYNC Start=8133795><P class='tr'> 
<SYNC Start=8136305><P class='tr'>&nbsp;
<SYNC Start=8136305><P class='tr'> 
<SYNC Start=8138725><P class='tr'>&nbsp;
<SYNC Start=8138725><P class='tr'> 
<SYNC Start=8141745><P class='tr'>&nbsp;
<SYNC Start=8141825><P class='tr'> 
<SYNC Start=8144875><P class='tr'>&nbsp;
<SYNC Start=8144875><P class='tr'> 
<SYNC Start=8147925><P class='tr'>&nbsp;
<SYNC Start=8147925><P class='tr'> 
<SYNC Start=8149375><P class='tr'>&nbsp;
<SYNC Start=8150245><P class='tr'> 
<SYNC Start=8152735><P class='tr'>&nbsp;
<SYNC Start=8154695><P class='tr'> 
<SYNC Start=8156605><P class='tr'>&nbsp;
<SYNC Start=8157115><P class='tr'> 
<SYNC Start=8160015><P class='tr'>&nbsp;
<SYNC Start=8160925><P class='tr'> 
<SYNC Start=8162135><P class='tr'>&nbsp;
<SYNC Start=8163595><P class='tr'> 
<SYNC Start=8166575><P class='tr'>&nbsp;
<SYNC Start=8166605><P class='tr'> 
<SYNC Start=8169165><P class='tr'>&nbsp;
<SYNC Start=8170295><P class='tr'> 
<SYNC Start=8172745><P class='tr'>&nbsp;
<SYNC Start=8174165><P class='tr'> 
<SYNC Start=8177045><P class='tr'>&nbsp;
<SYNC Start=8177715><P class='tr'> 
<SYNC Start=8180425><P class='tr'>&nbsp;
<SYNC Start=8182335><P class='tr'> 
<SYNC Start=8183515><P class='tr'>&nbsp;
<SYNC Start=8184825><P class='tr'> 
<SYNC Start=8186605><P class='tr'>&nbsp;
<SYNC Start=8188845><P class='tr'> 
<SYNC Start=8189845><P class='tr'>&nbsp;
<SYNC Start=8194115><P class='tr'> 
<SYNC Start=8195145><P class='tr'>&nbsp;
<SYNC Start=8198335><P class='tr'> 
<SYNC Start=8200135><P class='tr'>&nbsp;
<SYNC Start=8200894><P class='tr'> 
<SYNC Start=8202914><P class='tr'>&nbsp;
<SYNC Start=8205644><P class='tr'> 
<SYNC Start=8208564><P class='tr'>&nbsp;
<SYNC Start=8208565><P class='tr'> 
<SYNC Start=8211675><P class='tr'>&nbsp;
<SYNC Start=8211675><P class='tr'> 
<SYNC Start=8213195><P class='tr'>&nbsp;
<SYNC Start=8214245><P class='tr'> 
<SYNC Start=8217205><P class='tr'>&nbsp;
<SYNC Start=8217205><P class='tr'> 
<SYNC Start=8218205><P class='tr'>&nbsp;
<SYNC Start=8218825><P class='tr'> 
<SYNC Start=8222115><P class='tr'>&nbsp;
<SYNC Start=8222255><P class='tr'> 
<SYNC Start=8225325><P class='tr'>&nbsp;
<SYNC Start=8225325><P class='tr'> 
<SYNC Start=8228235><P class='tr'>&nbsp;
<SYNC Start=8228235><P class='tr'> 
<SYNC Start=8229445><P class='tr'>&nbsp;
<SYNC Start=8230165><P class='tr'> 
<SYNC Start=8231465><P class='tr'>&nbsp;
<SYNC Start=8231785><P class='tr'> 
<SYNC Start=8234875><P class='tr'>&nbsp;
<SYNC Start=8234875><P class='tr'> 
<SYNC Start=8236025><P class='tr'>&nbsp;
<SYNC Start=8236525><P class='tr'> 
<SYNC Start=8239545><P class='tr'>&nbsp;
<SYNC Start=8239545><P class='tr'> 
<SYNC Start=8240925><P class='tr'>&nbsp;
<SYNC Start=8242065><P class='tr'> 
<SYNC Start=8243065><P class='tr'>&nbsp;
<SYNC Start=8243205><P class='tr'> 
<SYNC Start=8245005><P class='tr'>&nbsp;
<SYNC Start=8246605><P class='tr'> 
<SYNC Start=8249315><P class='tr'>&nbsp;
<SYNC Start=8249575><P class='tr'> 
<SYNC Start=8250985><P class='tr'>&nbsp;
<SYNC Start=8252135><P class='tr'> 
<SYNC Start=8255085><P class='tr'>&nbsp;
<SYNC Start=8255085><P class='tr'> 
<SYNC Start=8256245><P class='tr'>&nbsp;
<SYNC Start=8256844><P class='tr'> 
<SYNC Start=8257954><P class='tr'>&nbsp;
<SYNC Start=8259724><P class='tr'> 
<SYNC Start=8262644><P class='tr'>&nbsp;
<SYNC Start=8263245><P class='tr'> 
<SYNC Start=8266235><P class='tr'>&nbsp;
<SYNC Start=8266235><P class='tr'> 
<SYNC Start=8267235><P class='tr'>&nbsp;
<SYNC Start=8267764><P class='tr'> 
<SYNC Start=8270424><P class='tr'>&nbsp;
<SYNC Start=8270425><P class='tr'> 
<SYNC Start=8271835><P class='tr'>&nbsp;
<SYNC Start=8273094><P class='tr'> 
<SYNC Start=8276124><P class='tr'>&nbsp;
<SYNC Start=8276125><P class='tr'> 
<SYNC Start=8277395><P class='tr'>&nbsp;
<SYNC Start=8277934><P class='tr'> 
<SYNC Start=8280444><P class='tr'>&nbsp;
<SYNC Start=8280445><P class='tr'> 
<SYNC Start=8282055><P class='tr'>&nbsp;
<SYNC Start=8282465><P class='tr'> 
<SYNC Start=8285035><P class='tr'>&nbsp;
<SYNC Start=8285035><P class='tr'> 
<SYNC Start=8286625><P class='tr'>&nbsp;
<SYNC Start=8286625><P class='tr'> 
<SYNC Start=8289085><P class='tr'>&nbsp;
<SYNC Start=8289974><P class='tr'> 
<SYNC Start=8293164><P class='tr'>&nbsp;
<SYNC Start=8293165><P class='tr'> 
<SYNC Start=8295465><P class='tr'>&nbsp;
<SYNC Start=8295465><P class='tr'> 
<SYNC Start=8298425><P class='tr'>&nbsp;
<SYNC Start=8298425><P class='tr'> 
<SYNC Start=8301015><P class='tr'>&nbsp;
<SYNC Start=8301014><P class='tr'> 
<SYNC Start=8304114><P class='tr'>&nbsp;
<SYNC Start=8304115><P class='tr'> 
<SYNC Start=8306935><P class='tr'>&nbsp;
<SYNC Start=8306934><P class='tr'> 
<SYNC Start=8310024><P class='tr'>&nbsp;
<SYNC Start=8310605><P class='tr'> 
<SYNC Start=8313635><P class='tr'>&nbsp;
<SYNC Start=8313635><P class='tr'> 
<SYNC Start=8316975><P class='tr'>&nbsp;
<SYNC Start=8317005><P class='tr'> 
<SYNC Start=8320105><P class='tr'>&nbsp;
<SYNC Start=8320105><P class='tr'> 
<SYNC Start=8321965><P class='tr'>&nbsp;
<SYNC Start=8322385><P class='tr'> 
<SYNC Start=8325425><P class='tr'>&nbsp;
<SYNC Start=8325425><P class='tr'> 
<SYNC Start=8328505><P class='tr'>&nbsp;
<SYNC Start=8329065><P class='tr'> 
<SYNC Start=8331395><P class='tr'>&nbsp;
<SYNC Start=8332135><P class='tr'> 
<SYNC Start=8334575><P class='tr'>&nbsp;
<SYNC Start=8335855><P class='tr'> 
<SYNC Start=8338865><P class='tr'>&nbsp;
<SYNC Start=8338865><P class='tr'> 
<SYNC Start=8340895><P class='tr'>&nbsp;
<SYNC Start=8341335><P class='tr'> 
<SYNC Start=8344715><P class='tr'>&nbsp;
<SYNC Start=8344755><P class='tr'> 
<SYNC Start=8347715><P class='tr'>&nbsp;
<SYNC Start=8348715><P class='tr'> 
<SYNC Start=8351655><P class='tr'>&nbsp;
<SYNC Start=8351925><P class='tr'> 
<SYNC Start=8354465><P class='tr'>&nbsp;
<SYNC Start=8354465><P class='tr'> 
<SYNC Start=8357715><P class='tr'>&nbsp;
<SYNC Start=8358085><P class='tr'> 
<SYNC Start=8361145><P class='tr'>&nbsp;
<SYNC Start=8361144><P class='tr'> 
<SYNC Start=8364354><P class='tr'>&nbsp;
<SYNC Start=8364445><P class='tr'> 
<SYNC Start=8366205><P class='tr'>&nbsp;
<SYNC Start=8367135><P class='tr'> 
<SYNC Start=8369865><P class='tr'>&nbsp;
<SYNC Start=8369865><P class='tr'> 
<SYNC Start=8372535><P class='tr'>&nbsp;
<SYNC Start=8373155><P class='tr'> 
<SYNC Start=8376135><P class='tr'>&nbsp;
<SYNC Start=8376135><P class='tr'> 
<SYNC Start=8377545><P class='tr'>&nbsp;
<SYNC Start=8378115><P class='tr'> 
<SYNC Start=8381145><P class='tr'>&nbsp;
<SYNC Start=8381205><P class='tr'> 
<SYNC Start=8383835><P class='tr'>&nbsp;
<SYNC Start=8384215><P class='tr'> 
<SYNC Start=8386535><P class='tr'>&nbsp;
<SYNC Start=8386885><P class='tr'> 
<SYNC Start=8388985><P class='tr'>&nbsp;
<SYNC Start=8389555><P class='tr'> 
<SYNC Start=8391635><P class='tr'>&nbsp;
<SYNC Start=8392165><P class='tr'> 
<SYNC Start=8394245><P class='tr'>&nbsp;
<SYNC Start=8395005><P class='tr'> 
<SYNC Start=8398025><P class='tr'>&nbsp;
<SYNC Start=8399935><P class='tr'> 
<SYNC Start=8402135><P class='tr'>&nbsp;
<SYNC Start=8403375><P class='tr'> 
<SYNC Start=8405355><P class='tr'>&nbsp;
<SYNC Start=8405905><P class='tr'> 
<SYNC Start=8407725><P class='tr'>&nbsp;
<SYNC Start=8408915><P class='tr'> 
<SYNC Start=8410515><P class='tr'>&nbsp;
<SYNC Start=8411885><P class='tr'> 
<SYNC Start=8413405><P class='tr'>&nbsp;
<SYNC Start=8414615><P class='tr'> 
<SYNC Start=8417565><P class='tr'>&nbsp;
<SYNC Start=8417565><P class='tr'> 
<SYNC Start=8420385><P class='tr'>&nbsp;
<SYNC Start=8420945><P class='tr'> 
<SYNC Start=8421945><P class='tr'>&nbsp;
<SYNC Start=8422675><P class='tr'> 
<SYNC Start=8424105><P class='tr'>&nbsp;
<SYNC Start=8424505><P class='tr'> 
<SYNC Start=8427395><P class='tr'>&nbsp;
<SYNC Start=8427395><P class='tr'> 
<SYNC Start=8429865><P class='tr'>&nbsp;
<SYNC Start=8429865><P class='tr'> 
<SYNC Start=8432805><P class='tr'>&nbsp;
<SYNC Start=8432805><P class='tr'> 
<SYNC Start=8433805><P class='tr'>&nbsp;
<SYNC Start=8434585><P class='tr'> 
<SYNC Start=8438075><P class='tr'>&nbsp;
<SYNC Start=8438895><P class='tr'> 
<SYNC Start=8441845><P class='tr'>&nbsp;
<SYNC Start=8442085><P class='tr'> 
<SYNC Start=8443895><P class='tr'>&nbsp;
<SYNC Start=8444605><P class='tr'> 
<SYNC Start=8447095><P class='tr'>&nbsp;
<SYNC Start=8447095><P class='tr'> 
<SYNC Start=8450015><P class='tr'>&nbsp;
<SYNC Start=8450015><P class='tr'> 
<SYNC Start=8452325><P class='tr'>&nbsp;
<SYNC Start=8452325><P class='tr'> 
<SYNC Start=8454485><P class='tr'>&nbsp;
<SYNC Start=8455115><P class='tr'> 
<SYNC Start=8456735><P class='tr'>&nbsp;
<SYNC Start=8457115><P class='tr'> 
<SYNC Start=8459695><P class='tr'>&nbsp;
<SYNC Start=8459705><P class='tr'> 
<SYNC Start=8462075><P class='tr'>&nbsp;
<SYNC Start=8462195><P class='tr'> 
<SYNC Start=8464955><P class='tr'>&nbsp;
<SYNC Start=8464955><P class='tr'> 
<SYNC Start=8467755><P class='tr'>&nbsp;
<SYNC Start=8467755><P class='tr'> 
<SYNC Start=8469305><P class='tr'>&nbsp;
<SYNC Start=8469735><P class='tr'> 
<SYNC Start=8473135><P class='tr'>&nbsp;
<SYNC Start=8473525><P class='tr'> 
<SYNC Start=8476815><P class='tr'>&nbsp;
<SYNC Start=8476825><P class='tr'> 
<SYNC Start=8479945><P class='tr'>&nbsp;
<SYNC Start=8480165><P class='tr'> 
<SYNC Start=8482785><P class='tr'>&nbsp;
<SYNC Start=8482785><P class='tr'> 
<SYNC Start=8485325><P class='tr'>&nbsp;
<SYNC Start=8485735><P class='tr'> 
<SYNC Start=8488815><P class='tr'>&nbsp;
<SYNC Start=8489455><P class='tr'> 
<SYNC Start=8490625><P class='tr'>&nbsp;
<SYNC Start=8490625><P class='tr'> 
<SYNC Start=8493685><P class='tr'>&nbsp;
<SYNC Start=8493685><P class='tr'> 
<SYNC Start=8495375><P class='tr'>&nbsp;
<SYNC Start=8496095><P class='tr'> 
<SYNC Start=8497095><P class='tr'>&nbsp;
<SYNC Start=8497775><P class='tr'> 
<SYNC Start=8499805><P class='tr'>&nbsp;
<SYNC Start=8500305><P class='tr'> 
<SYNC Start=8502395><P class='tr'>&nbsp;
<SYNC Start=8502395><P class='tr'> 
<SYNC Start=8504605><P class='tr'>&nbsp;
<SYNC Start=8505555><P class='tr'> 
<SYNC Start=8507915><P class='tr'>&nbsp;
<SYNC Start=8508765><P class='tr'> 
<SYNC Start=8509995><P class='tr'>&nbsp;
<SYNC Start=8511645><P class='tr'> 
<SYNC Start=8514815><P class='tr'>&nbsp;
<SYNC Start=8515015><P class='tr'> 
<SYNC Start=8517665><P class='tr'>&nbsp;
<SYNC Start=8517845><P class='tr'> 
<SYNC Start=8519305><P class='tr'>&nbsp;
<SYNC Start=8519755><P class='tr'> 
<SYNC Start=8522745><P class='tr'>&nbsp;
<SYNC Start=8522745><P class='tr'> 
<SYNC Start=8525495><P class='tr'>&nbsp;
<SYNC Start=8525965><P class='tr'> 
<SYNC Start=8528275><P class='tr'>&nbsp;
<SYNC Start=8529515><P class='tr'> 
<SYNC Start=8532655><P class='tr'>&nbsp;
<SYNC Start=8532705><P class='tr'> 
<SYNC Start=8534245><P class='tr'>&nbsp;
<SYNC Start=8534845><P class='tr'> 
<SYNC Start=8536985><P class='tr'>&nbsp;
<SYNC Start=8536985><P class='tr'> 
<SYNC Start=8539535><P class='tr'>&nbsp;
<SYNC Start=8539535><P class='tr'> 
<SYNC Start=8542815><P class='tr'>&nbsp;
<SYNC Start=8544125><P class='tr'> 
<SYNC Start=8546305><P class='tr'>&nbsp;
<SYNC Start=8546645><P class='tr'> 
<SYNC Start=8548535><P class='tr'>&nbsp;
<SYNC Start=8548535><P class='tr'> 
<SYNC Start=8550505><P class='tr'>&nbsp;
<SYNC Start=8551115><P class='tr'> 
<SYNC Start=8553955><P class='tr'>&nbsp;
<SYNC Start=8553955><P class='tr'> 
<SYNC Start=8557095><P class='tr'>&nbsp;
<SYNC Start=8557095><P class='tr'> 
<SYNC Start=8560415><P class='tr'>&nbsp;
<SYNC Start=8560445><P class='tr'> 
<SYNC Start=8563415><P class='tr'>&nbsp;
<SYNC Start=8563415><P class='tr'> 
<SYNC Start=8566285><P class='tr'>&nbsp;
<SYNC Start=8566445><P class='tr'> 
<SYNC Start=8569595><P class='tr'>&nbsp;
<SYNC Start=8569595><P class='tr'> 
<SYNC Start=8572475><P class='tr'>&nbsp;
<SYNC Start=8572475><P class='tr'> 
<SYNC Start=8575485><P class='tr'>&nbsp;
<SYNC Start=8575485><P class='tr'> 
<SYNC Start=8578815><P class='tr'>&nbsp;
<SYNC Start=8578975><P class='tr'> 
<SYNC Start=8579975><P class='tr'>&nbsp;
<SYNC Start=8580335><P class='tr'> 
<SYNC Start=8582985><P class='tr'>&nbsp;
<SYNC Start=8582985><P class='tr'> 
<SYNC Start=8585445><P class='tr'>&nbsp;
<SYNC Start=8585625><P class='tr'> 
<SYNC Start=8588425><P class='tr'>&nbsp;
<SYNC Start=8588425><P class='tr'> 
<SYNC Start=8591465><P class='tr'>&nbsp;
<SYNC Start=8591465><P class='tr'> 
<SYNC Start=8594115><P class='tr'>&nbsp;
<SYNC Start=8594825><P class='tr'> 
<SYNC Start=8596045><P class='tr'>&nbsp;
<SYNC Start=8596455><P class='tr'> 
<SYNC Start=8598265><P class='tr'>&nbsp;
<SYNC Start=8599625><P class='tr'> 
<SYNC Start=8602695><P class='tr'>&nbsp;
<SYNC Start=8603665><P class='tr'> 
<SYNC Start=8605135><P class='tr'>&nbsp;
<SYNC Start=8605945><P class='tr'> 
<SYNC Start=8607605><P class='tr'>&nbsp;
<SYNC Start=8608175><P class='tr'> 
<SYNC Start=8610935><P class='tr'>&nbsp;
<SYNC Start=8610935><P class='tr'> 
<SYNC Start=8613455><P class='tr'>&nbsp;
<SYNC Start=8614005><P class='tr'> 
<SYNC Start=8617115><P class='tr'>&nbsp;
<SYNC Start=8617115><P class='tr'> 
<SYNC Start=8618815><P class='tr'>&nbsp;
<SYNC Start=8619945><P class='tr'> 
<SYNC Start=8622395><P class='tr'>&nbsp;
<SYNC Start=8622655><P class='tr'> 
<SYNC Start=8624715><P class='tr'>&nbsp;
<SYNC Start=8625195><P class='tr'> 
<SYNC Start=8628045><P class='tr'>&nbsp;
<SYNC Start=8628185><P class='tr'> 
<SYNC Start=8631185><P class='tr'>&nbsp;
<SYNC Start=8631185><P class='tr'> 
<SYNC Start=8634545><P class='tr'>&nbsp;
<SYNC Start=8635205><P class='tr'> 
<SYNC Start=8637695><P class='tr'>&nbsp;
<SYNC Start=8638455><P class='tr'> 
<SYNC Start=8640495><P class='tr'>&nbsp;
<SYNC Start=8641615><P class='tr'> 
<SYNC Start=8644595><P class='tr'>&nbsp;
<SYNC Start=8644595><P class='tr'> 
<SYNC Start=8646895><P class='tr'>&nbsp;
<SYNC Start=8647505><P class='tr'> 
<SYNC Start=8648625><P class='tr'>&nbsp;
<SYNC Start=8649985><P class='tr'> 
<SYNC Start=8652835><P class='tr'>&nbsp;
<SYNC Start=8652835><P class='tr'> 
<SYNC Start=8653845><P class='tr'>&nbsp;
<SYNC Start=8654235><P class='tr'> 
<SYNC Start=8655905><P class='tr'>&nbsp;
<SYNC Start=8657005><P class='tr'> 
<SYNC Start=8658365><P class='tr'>&nbsp;
<SYNC Start=8658855><P class='tr'> 
<SYNC Start=8659995><P class='tr'>&nbsp;
<SYNC Start=8663605><P class='tr'> 
<SYNC Start=8665525><P class='tr'>&nbsp;
<SYNC Start=8666085><P class='tr'> 
<SYNC Start=8667415><P class='tr'>&nbsp;
<SYNC Start=8669315><P class='tr'> 
<SYNC Start=8671285><P class='tr'>&nbsp;
<SYNC Start=8673655><P class='tr'> 
<SYNC Start=8675375><P class='tr'>&nbsp;
<SYNC Start=8676385><P class='tr'> 
<SYNC Start=8678665><P class='tr'>&nbsp;
<SYNC Start=8680655><P class='tr'> 
<SYNC Start=8682175><P class='tr'>&nbsp;
<SYNC Start=8684905><P class='tr'> 
<SYNC Start=8685905><P class='tr'>&nbsp;
<SYNC Start=8686115><P class='tr'> 
<SYNC Start=8687515><P class='tr'>&nbsp;
<SYNC Start=8687865><P class='tr'> 
<SYNC Start=8689315><P class='tr'>&nbsp;
<SYNC Start=8690845><P class='tr'> 
<SYNC Start=8693255><P class='tr'>&nbsp;
<SYNC Start=8694575><P class='tr'> 
<SYNC Start=8697515><P class='tr'>&nbsp;
<SYNC Start=8697515><P class='tr'> 
<SYNC Start=8698795><P class='tr'>&nbsp;
<SYNC Start=8699985><P class='tr'> 
<SYNC Start=8703375><P class='tr'>&nbsp;
<SYNC Start=8703765><P class='tr'> 
<SYNC Start=8704975><P class='tr'>&nbsp;
<SYNC Start=8705725><P class='tr'> 
<SYNC Start=8708285><P class='tr'>&nbsp;
<SYNC Start=8708285><P class='tr'> 
<SYNC Start=8709315><P class='tr'>&nbsp;
<SYNC Start=8709725><P class='tr'> 
<SYNC Start=8712755><P class='tr'>&nbsp;
<SYNC Start=8713085><P class='tr'> 
<SYNC Start=8716025><P class='tr'>&nbsp;
<SYNC Start=8716025><P class='tr'> 
<SYNC Start=8718695><P class='tr'>&nbsp;
<SYNC Start=8718695><P class='tr'> 
<SYNC Start=8721095><P class='tr'>&nbsp;
<SYNC Start=8721095><P class='tr'> 
<SYNC Start=8722265><P class='tr'>&nbsp;
<SYNC Start=8723025><P class='tr'> 
<SYNC Start=8726435><P class='tr'>&nbsp;
<SYNC Start=8728135><P class='tr'> 
<SYNC Start=8730475><P class='tr'>&nbsp;
<SYNC Start=8731395><P class='tr'> 
<SYNC Start=8732905><P class='tr'>&nbsp;
<SYNC Start=8734245><P class='tr'> 
<SYNC Start=8736215><P class='tr'>&nbsp;
<SYNC Start=8736555><P class='tr'> 
<SYNC Start=8738135><P class='tr'>&nbsp;
<SYNC Start=8738135><P class='tr'> 
<SYNC Start=8740445><P class='tr'>&nbsp;
<SYNC Start=8740825><P class='tr'> 
<SYNC Start=8741835><P class='tr'>&nbsp;
<SYNC Start=8742805><P class='tr'> 
<SYNC Start=8745395><P class='tr'>&nbsp;
<SYNC Start=8745945><P class='tr'> 
<SYNC Start=8748925><P class='tr'>&nbsp;
<SYNC Start=8748925><P class='tr'> 
<SYNC Start=8752205><P class='tr'>&nbsp;
<SYNC Start=8752205><P class='tr'> 
<SYNC Start=8753975><P class='tr'>&nbsp;
<SYNC Start=8755365><P class='tr'> 
<SYNC Start=8757805><P class='tr'>&nbsp;
<SYNC Start=8757805><P class='tr'> 
<SYNC Start=8760015><P class='tr'>&nbsp;
<SYNC Start=8760015><P class='tr'> 
<SYNC Start=8763485><P class='tr'>&nbsp;
<SYNC Start=8764835><P class='tr'> 
<SYNC Start=8766935><P class='tr'>&nbsp;
<SYNC Start=8766935><P class='tr'> 
<SYNC Start=8770205><P class='tr'>&nbsp;
<SYNC Start=8771445><P class='tr'> 
<SYNC Start=8772445><P class='tr'>&nbsp;
<SYNC Start=8773135><P class='tr'> 
<SYNC Start=8775245><P class='tr'>&nbsp;
<SYNC Start=8776875><P class='tr'> 
<SYNC Start=8779245><P class='tr'>&nbsp;
<SYNC Start=8780505><P class='tr'> 
<SYNC Start=8783025><P class='tr'>&nbsp;
<SYNC Start=8785705><P class='tr'> 
<SYNC Start=8786705><P class='tr'>&nbsp;
<SYNC Start=8787285><P class='tr'> 
<SYNC Start=8788835><P class='tr'>&nbsp;
<SYNC Start=8790925><P class='tr'> 
<SYNC Start=8792535><P class='tr'>&nbsp;
<SYNC Start=8793505><P class='tr'> 
<SYNC Start=8796005><P class='tr'>&nbsp;
<SYNC Start=8802355><P class='tr'> 
<SYNC Start=8803355><P class='tr'>&nbsp;
<SYNC Start=8805405><P class='tr'> 
<SYNC Start=8806975><P class='tr'>&nbsp;
<SYNC Start=8808005><P class='tr'> 
<SYNC Start=8810935><P class='tr'>&nbsp;
<SYNC Start=8810935><P class='tr'> 
<SYNC Start=8812345><P class='tr'>&nbsp;
<SYNC Start=8813175><P class='tr'> 
<SYNC Start=8816675><P class='tr'>&nbsp;
<SYNC Start=8816995><P class='tr'> 
<SYNC Start=8818355><P class='tr'>&nbsp;
<SYNC Start=8819815><P class='tr'> 
<SYNC Start=8821155><P class='tr'>&nbsp;
<SYNC Start=8821535><P class='tr'> 
<SYNC Start=8824115><P class='tr'>&nbsp;
<SYNC Start=8824115><P class='tr'> 
<SYNC Start=8825195><P class='tr'>&nbsp;
<SYNC Start=8825505><P class='tr'> 
<SYNC Start=8828475><P class='tr'>&nbsp;
<SYNC Start=8828485><P class='tr'> 
<SYNC Start=8831375><P class='tr'>&nbsp;
<SYNC Start=8831375><P class='tr'> 
<SYNC Start=8832775><P class='tr'>&nbsp;
<SYNC Start=8833145><P class='tr'> 
<SYNC Start=8834245><P class='tr'>&nbsp;
<SYNC Start=8834645><P class='tr'> 
<SYNC Start=8837125><P class='tr'>&nbsp;
<SYNC Start=8837125><P class='tr'> 
<SYNC Start=8840235><P class='tr'>&nbsp;
<SYNC Start=8840235><P class='tr'> 
<SYNC Start=8843525><P class='tr'>&nbsp;
<SYNC Start=8843625><P class='tr'> 
<SYNC Start=8845705><P class='tr'>&nbsp;
<SYNC Start=8845705><P class='tr'> 
<SYNC Start=8847155><P class='tr'>&nbsp;
<SYNC Start=8847485><P class='tr'> 
<SYNC Start=8848555><P class='tr'>&nbsp;
<SYNC Start=8849685><P class='tr'> 
<SYNC Start=8853085><P class='tr'>&nbsp;
<SYNC Start=8854985><P class='tr'> 
<SYNC Start=8857415><P class='tr'>&nbsp;
<SYNC Start=8857415><P class='tr'> 
<SYNC Start=8860485><P class='tr'>&nbsp;
<SYNC Start=8860485><P class='tr'> 
<SYNC Start=8861555><P class='tr'>&nbsp;
<SYNC Start=8862075><P class='tr'> 
<SYNC Start=8865175><P class='tr'>&nbsp;
<SYNC Start=8865175><P class='tr'> 
<SYNC Start=8866875><P class='tr'>&nbsp;
<SYNC Start=8867235><P class='tr'> 
<SYNC Start=8869925><P class='tr'>&nbsp;
<SYNC Start=8869925><P class='tr'> 
<SYNC Start=8872985><P class='tr'>&nbsp;
<SYNC Start=8872985><P class='tr'> 
<SYNC Start=8876065><P class='tr'>&nbsp;
<SYNC Start=8876065><P class='tr'> 
<SYNC Start=8877115><P class='tr'>&nbsp;
<SYNC Start=8877595><P class='tr'> 
<SYNC Start=8880485><P class='tr'>&nbsp;
<SYNC Start=8881565><P class='tr'> 
<SYNC Start=8882565><P class='tr'>&nbsp;
<SYNC Start=8883125><P class='tr'> 
<SYNC Start=8884795><P class='tr'>&nbsp;
<SYNC Start=8885165><P class='tr'> 
<SYNC Start=8886745><P class='tr'>&nbsp;
<SYNC Start=8887475><P class='tr'> 
<SYNC Start=8890355><P class='tr'>&nbsp;
<SYNC Start=8890355><P class='tr'> 
<SYNC Start=8892785><P class='tr'>&nbsp;
<SYNC Start=8895685><P class='tr'> 
<SYNC Start=8898365><P class='tr'>&nbsp;
<SYNC Start=8899845><P class='tr'> 
<SYNC Start=8901705><P class='tr'>&nbsp;
<SYNC Start=8903865><P class='tr'> 
<SYNC Start=8904865><P class='tr'>&nbsp;
<SYNC Start=8906385><P class='tr'> 
<SYNC Start=8907915><P class='tr'>&nbsp;
<SYNC Start=8912205><P class='tr'> 
<SYNC Start=8914595><P class='tr'>&nbsp;
<SYNC Start=8914595><P class='tr'> 
<SYNC Start=8915885><P class='tr'>&nbsp;
<SYNC Start=8916575><P class='tr'> 
<SYNC Start=8917575><P class='tr'>&nbsp;
<SYNC Start=8917965><P class='tr'> 
<SYNC Start=8920895><P class='tr'>&nbsp;
<SYNC Start=8920895><P class='tr'> 
<SYNC Start=8923695><P class='tr'>&nbsp;
<SYNC Start=8923695><P class='tr'> 
<SYNC Start=8926945><P class='tr'>&nbsp;
<SYNC Start=8927795><P class='tr'> 
<SYNC Start=8928795><P class='tr'>&nbsp;
<SYNC Start=8932865><P class='tr'> 
<SYNC Start=8934205><P class='tr'>&nbsp;
<SYNC Start=8936505><P class='tr'> 
<SYNC Start=8939485><P class='tr'>&nbsp;
<SYNC Start=8939485><P class='tr'> 
<SYNC Start=8940485><P class='tr'>&nbsp;
<SYNC Start=8941885><P class='tr'> 
<SYNC Start=8944875><P class='tr'>&nbsp;
<SYNC Start=8944875><P class='tr'> 
<SYNC Start=8945955><P class='tr'>&nbsp;
<SYNC Start=8947005><P class='tr'> 
<SYNC Start=8948395><P class='tr'>&nbsp;
<SYNC Start=8951995><P class='tr'> 
<SYNC Start=8954335><P class='tr'>&nbsp;
<SYNC Start=8954845><P class='tr'> 
<SYNC Start=8956875><P class='tr'>&nbsp;
<SYNC Start=8957355><P class='tr'> 
<SYNC Start=8959835><P class='tr'>&nbsp;
<SYNC Start=8960435><P class='tr'> 
<SYNC Start=8961815><P class='tr'>&nbsp;
<SYNC Start=8963145><P class='tr'> 
<SYNC Start=8965965><P class='tr'>&nbsp;
<SYNC Start=8965965><P class='tr'> 
<SYNC Start=8968975><P class='tr'>&nbsp;
<SYNC Start=8968975><P class='tr'> 
<SYNC Start=8969975><P class='tr'>&nbsp;
<SYNC Start=8970355><P class='tr'> 
<SYNC Start=8972525><P class='tr'>&nbsp;
<SYNC Start=8973205><P class='tr'> 
<SYNC Start=8974835><P class='tr'>&nbsp;
<SYNC Start=8975345><P class='tr'> 
<SYNC Start=8976345><P class='tr'>&nbsp;
<SYNC Start=8978925><P class='tr'> 
<SYNC Start=8982375><P class='tr'>&nbsp;
<SYNC Start=8982715><P class='tr'> 
<SYNC Start=8985475><P class='tr'>&nbsp;
<SYNC Start=8985585><P class='tr'> 
<SYNC Start=8986735><P class='tr'>&nbsp;
<SYNC Start=8987145><P class='tr'> 
<SYNC Start=8988585><P class='tr'>&nbsp;
<SYNC Start=8989525><P class='tr'> 
<SYNC Start=8992525><P class='tr'>&nbsp;
<SYNC Start=8992525><P class='tr'> 
<SYNC Start=8995285><P class='tr'>&nbsp;
<SYNC Start=8995285><P class='tr'> 
<SYNC Start=8998385><P class='tr'>&nbsp;
<SYNC Start=8998385><P class='tr'> 
<SYNC Start=9001315><P class='tr'>&nbsp;
<SYNC Start=9001315><P class='tr'> 
<SYNC Start=9004255><P class='tr'>&nbsp;
<SYNC Start=9004255><P class='tr'> 
<SYNC Start=9007505><P class='tr'>&nbsp;
<SYNC Start=9007505><P class='tr'> 
<SYNC Start=9010435><P class='tr'>&nbsp;
<SYNC Start=9011615><P class='tr'> 
<SYNC Start=9014515><P class='tr'>&nbsp;
<SYNC Start=9014515><P class='tr'> 
<SYNC Start=9015515><P class='tr'>&nbsp;
<SYNC Start=9015785><P class='tr'> 
<SYNC Start=9018585><P class='tr'>&nbsp;
<SYNC Start=9018585><P class='tr'> 
<SYNC Start=9021305><P class='tr'>&nbsp;
<SYNC Start=9021455><P class='tr'> 
<SYNC Start=9023885><P class='tr'>&nbsp;
<SYNC Start=9023885><P class='tr'> 
<SYNC Start=9025255><P class='tr'>&nbsp;
<SYNC Start=9026105><P class='tr'> 
<SYNC Start=9029005><P class='tr'>&nbsp;
<SYNC Start=9029005><P class='tr'> 
<SYNC Start=9030005><P class='tr'>&nbsp;
<SYNC Start=9030565><P class='tr'> 
<SYNC Start=9032885><P class='tr'>&nbsp;
<SYNC Start=9032885><P class='tr'> 
<SYNC Start=9034225><P class='tr'>&nbsp;
<SYNC Start=9034835><P class='tr'> 
<SYNC Start=9037775><P class='tr'>&nbsp;
<SYNC Start=9037775><P class='tr'> 
<SYNC Start=9040775><P class='tr'>&nbsp;
<SYNC Start=9041595><P class='tr'> 
<SYNC Start=9044655><P class='tr'>&nbsp;
<SYNC Start=9044655><P class='tr'> 
<SYNC Start=9045655><P class='tr'>&nbsp;
<SYNC Start=9045825><P class='tr'> 
<SYNC Start=9048875><P class='tr'>&nbsp;
<SYNC Start=9048875><P class='tr'> 
<SYNC Start=9052025><P class='tr'>&nbsp;
<SYNC Start=9052025><P class='tr'> 
<SYNC Start=9053045><P class='tr'>&nbsp;
<SYNC Start=9053435><P class='tr'> 
<SYNC Start=9056535><P class='tr'>&nbsp;
<SYNC Start=9057005><P class='tr'> 
<SYNC Start=9058035><P class='tr'>&nbsp;
<SYNC Start=9058405><P class='tr'> 
<SYNC Start=9061115><P class='tr'>&nbsp;
<SYNC Start=9061805><P class='tr'> 
<SYNC Start=9064405><P class='tr'>&nbsp;
<SYNC Start=9065405><P class='tr'> 
<SYNC Start=9066405><P class='tr'>&nbsp;
<SYNC Start=9069205><P class='tr'> 
<SYNC Start=9070205><P class='tr'>&nbsp;
<SYNC Start=9071145><P class='tr'> 
<SYNC Start=9073985><P class='tr'>&nbsp;
<SYNC Start=9073985><P class='tr'> 
<SYNC Start=9076735><P class='tr'>&nbsp;
<SYNC Start=9076745><P class='tr'> 
<SYNC Start=9078095><P class='tr'>&nbsp;
<SYNC Start=9079415><P class='tr'> 
<SYNC Start=9081995><P class='tr'>&nbsp;
<SYNC Start=9082585><P class='tr'> 
<SYNC Start=9085575><P class='tr'>&nbsp;
<SYNC Start=9085575><P class='tr'> 
<SYNC Start=9087175><P class='tr'>&nbsp;
<SYNC Start=9087535><P class='tr'> 
<SYNC Start=9090665><P class='tr'>&nbsp;
<SYNC Start=9091185><P class='tr'> 
<SYNC Start=9094585><P class='tr'>&nbsp;
<SYNC Start=9095025><P class='tr'> 
<SYNC Start=9097415><P class='tr'>&nbsp;
<SYNC Start=9098245><P class='tr'> 
<SYNC Start=9099245><P class='tr'>&nbsp;
<SYNC Start=9099635><P class='tr'> 
<SYNC Start=9102645><P class='tr'>&nbsp;
<SYNC Start=9102645><P class='tr'> 
<SYNC Start=9105495><P class='tr'>&nbsp;
<SYNC Start=9105495><P class='tr'> 
<SYNC Start=9106865><P class='tr'>&nbsp;
<SYNC Start=9107975><P class='tr'> 
<SYNC Start=9110655><P class='tr'>&nbsp;
<SYNC Start=9110655><P class='tr'> 
<SYNC Start=9113825><P class='tr'>&nbsp;
<SYNC Start=9113825><P class='tr'> 
<SYNC Start=9115945><P class='tr'>&nbsp;
<SYNC Start=9116535><P class='tr'> 
<SYNC Start=9118445><P class='tr'>&nbsp;
<SYNC Start=9118775><P class='tr'> 
<SYNC Start=9120765><P class='tr'>&nbsp;
<SYNC Start=9122205><P class='tr'> 
<SYNC Start=9123605><P class='tr'>&nbsp;
<SYNC Start=9124225><P class='tr'> 
<SYNC Start=9125225><P class='tr'>&nbsp;
<SYNC Start=9126035><P class='tr'> 
<SYNC Start=9127035><P class='tr'>&nbsp;
<SYNC Start=9128085><P class='tr'> 
<SYNC Start=9129085><P class='tr'>&nbsp;
<SYNC Start=9129295><P class='tr'> 
<SYNC Start=9131745><P class='tr'>&nbsp;
<SYNC Start=9132445><P class='tr'> 
<SYNC Start=9134025><P class='tr'>&nbsp;
<SYNC Start=9136215><P class='tr'> 
<SYNC Start=9138245><P class='tr'>&nbsp;
<SYNC Start=9139915><P class='tr'> 
<SYNC Start=9141175><P class='tr'>&nbsp;
<SYNC Start=9143815><P class='tr'> 
<SYNC Start=9145695><P class='tr'>&nbsp;
<SYNC Start=9147705><P class='tr'> 
<SYNC Start=9148705><P class='tr'>&nbsp;
<SYNC Start=9149755><P class='tr'> 
<SYNC Start=9151865><P class='tr'>&nbsp;
<SYNC Start=9154295><P class='tr'> 
<SYNC Start=9155295><P class='tr'>&nbsp;
<SYNC Start=9155865><P class='tr'> 
<SYNC Start=9156865><P class='tr'>&nbsp;
<SYNC Start=9157695><P class='tr'> 
<SYNC Start=9159065><P class='tr'>&nbsp;
<SYNC Start=9160645><P class='tr'> 
<SYNC Start=9162085><P class='tr'>&nbsp;
<SYNC Start=9164025><P class='tr'> 
<SYNC Start=9167145><P class='tr'>&nbsp;
<SYNC Start=9167145><P class='tr'> 
<SYNC Start=9168375><P class='tr'>&nbsp;
<SYNC Start=9168585><P class='tr'> 
<SYNC Start=9170715><P class='tr'>&nbsp;
<SYNC Start=9172515><P class='tr'> 
<SYNC Start=9175555><P class='tr'>&nbsp;
<SYNC Start=9175885><P class='tr'> 
<SYNC Start=9179135><P class='tr'>&nbsp;
<SYNC Start=9179135><P class='tr'> 
<SYNC Start=9180135><P class='tr'>&nbsp;
<SYNC Start=9181185><P class='tr'> 
<SYNC Start=9184595><P class='tr'>&nbsp;
<SYNC Start=9185375><P class='tr'> 
<SYNC Start=9188455><P class='tr'>&nbsp;
<SYNC Start=9188455><P class='tr'> 
<SYNC Start=9189455><P class='tr'>&nbsp;
<SYNC Start=9189775><P class='tr'> 
<SYNC Start=9190775><P class='tr'>&nbsp;
<SYNC Start=9191035><P class='tr'> 
<SYNC Start=9193955><P class='tr'>&nbsp;
<SYNC Start=9194635><P class='tr'> 
<SYNC Start=9197695><P class='tr'>&nbsp;
<SYNC Start=9197915><P class='tr'> 
<SYNC Start=9200665><P class='tr'>&nbsp;
<SYNC Start=9200665><P class='tr'> 
<SYNC Start=9203295><P class='tr'>&nbsp;
<SYNC Start=9203295><P class='tr'> 
<SYNC Start=9206035><P class='tr'>&nbsp;
<SYNC Start=9206035><P class='tr'> 
<SYNC Start=9207745><P class='tr'>&nbsp;
<SYNC Start=9208485><P class='tr'> 
<SYNC Start=9209635><P class='tr'>&nbsp;
<SYNC Start=9210595><P class='tr'> 
<SYNC Start=9212705><P class='tr'>&nbsp;
<SYNC Start=9213795><P class='tr'> 
<SYNC Start=9216825><P class='tr'>&nbsp;
<SYNC Start=9216825><P class='tr'> 
<SYNC Start=9219495><P class='tr'>&nbsp;
<SYNC Start=9219495><P class='tr'> 
<SYNC Start=9220665><P class='tr'>&nbsp;
<SYNC Start=9221355><P class='tr'> 
<SYNC Start=9224425><P class='tr'>&nbsp;
<SYNC Start=9224955><P class='tr'> 
<SYNC Start=9226195><P class='tr'>&nbsp;
<SYNC Start=9231385><P class='tr'> 
<SYNC Start=9232945><P class='tr'>&nbsp;
<SYNC Start=9233585><P class='tr'> 
<SYNC Start=9236405><P class='tr'>&nbsp;
<SYNC Start=9236405><P class='tr'> 
<SYNC Start=9239645><P class='tr'>&nbsp;
<SYNC Start=9239645><P class='tr'> 
<SYNC Start=9242665><P class='tr'>&nbsp;
<SYNC Start=9242665><P class='tr'> 
<SYNC Start=9245135><P class='tr'>&nbsp;
<SYNC Start=9245135><P class='tr'> 
<SYNC Start=9248235><P class='tr'>&nbsp;
<SYNC Start=9248235><P class='tr'> 
<SYNC Start=9250565><P class='tr'>&nbsp;
<SYNC Start=9251425><P class='tr'> 
<SYNC Start=9253835><P class='tr'>&nbsp;
<SYNC Start=9256305><P class='tr'> 
<SYNC Start=9257525><P class='tr'>&nbsp;
<SYNC Start=9258665><P class='tr'> 
<SYNC Start=9260475><P class='tr'>&nbsp;
<SYNC Start=9264595><P class='tr'> 
<SYNC Start=9266125><P class='tr'>&nbsp;
<SYNC Start=9267455><P class='tr'> 
<SYNC Start=9270435><P class='tr'>&nbsp;
<SYNC Start=9270435><P class='tr'> 
<SYNC Start=9272065><P class='tr'>&nbsp;
<SYNC Start=9272485><P class='tr'> 
<SYNC Start=9275745><P class='tr'>&nbsp;
<SYNC Start=9275745><P class='tr'> 
<SYNC Start=9278815><P class='tr'>&nbsp;
<SYNC Start=9279845><P class='tr'> 
<SYNC Start=9282755><P class='tr'>&nbsp;
<SYNC Start=9282755><P class='tr'> 
<SYNC Start=9285215><P class='tr'>&nbsp;
<SYNC Start=9285825><P class='tr'> 
<SYNC Start=9287925><P class='tr'>&nbsp;
<SYNC Start=9288585><P class='tr'> 
<SYNC Start=9290485><P class='tr'>&nbsp;
<SYNC Start=9292265><P class='tr'> 
<SYNC Start=9293305><P class='tr'>&nbsp;
<SYNC Start=9293765><P class='tr'> 
<SYNC Start=9295205><P class='tr'>&nbsp;
<SYNC Start=9296215><P class='tr'> 
<SYNC Start=9297305><P class='tr'>&nbsp;
<SYNC Start=9298435><P class='tr'> 
<SYNC Start=9300595><P class='tr'>&nbsp;
<SYNC Start=9306375><P class='tr'> 
<SYNC Start=9308475><P class='tr'>&nbsp;
<SYNC Start=9310105><P class='tr'> 
<SYNC Start=9311105><P class='tr'>&nbsp;
<SYNC Start=9313225><P class='tr'> 
<SYNC Start=9315085><P class='tr'>&nbsp;
<SYNC Start=9317575><P class='tr'> 
<SYNC Start=9319135><P class='tr'>&nbsp;
<SYNC Start=9319935><P class='tr'> 
<SYNC Start=9322525><P class='tr'>&nbsp;
<SYNC Start=9322615><P class='tr'> 
<SYNC Start=9325555><P class='tr'>&nbsp;
<SYNC Start=9326165><P class='tr'> 
<SYNC Start=9328335><P class='tr'>&nbsp;
<SYNC Start=9329265><P class='tr'> 
<SYNC Start=9332195><P class='tr'>&nbsp;
<SYNC Start=9332885><P class='tr'> 
<SYNC Start=9335855><P class='tr'>&nbsp;
<SYNC Start=9335855><P class='tr'> 
<SYNC Start=9337085><P class='tr'>&nbsp;
<SYNC Start=9338125><P class='tr'> 
<SYNC Start=9340335><P class='tr'>&nbsp;
<SYNC Start=9340695><P class='tr'> 
<SYNC Start=9342295><P class='tr'>&nbsp;
<SYNC Start=9342795><P class='tr'> 
<SYNC Start=9344055><P class='tr'>&nbsp;
<SYNC Start=9345515><P class='tr'> 
<SYNC Start=9348245><P class='tr'>&nbsp;
<SYNC Start=9351125><P class='tr'> 
<SYNC Start=9353975><P class='tr'>&nbsp;
<SYNC Start=9353975><P class='tr'> 
<SYNC Start=9355715><P class='tr'>&nbsp;
<SYNC Start=9357435><P class='tr'> 
<SYNC Start=9358755><P class='tr'>&nbsp;
<SYNC Start=9361065><P class='tr'> 
<SYNC Start=9362795><P class='tr'>&nbsp;
<SYNC Start=9364845><P class='tr'> 
<SYNC Start=9365845><P class='tr'>&nbsp;
<SYNC Start=9366785><P class='tr'> 
<SYNC Start=9369035><P class='tr'>&nbsp;
<SYNC Start=9369305><P class='tr'> 
<SYNC Start=9372665><P class='tr'>&nbsp;
<SYNC Start=9373925><P class='tr'> 
<SYNC Start=9376585><P class='tr'>&nbsp;
<SYNC Start=9376585><P class='tr'> 
<SYNC Start=9378905><P class='tr'>&nbsp;
<SYNC Start=9379625><P class='tr'> 
<SYNC Start=9382465><P class='tr'>&nbsp;
<SYNC Start=9382965><P class='tr'> 
<SYNC Start=9385695><P class='tr'>&nbsp;
<SYNC Start=9386135><P class='tr'> 
<SYNC Start=9388345><P class='tr'>&nbsp;
<SYNC Start=9388345><P class='tr'> 
<SYNC Start=9390935><P class='tr'>&nbsp;
<SYNC Start=9391125><P class='tr'> 
<SYNC Start=9393825><P class='tr'>&nbsp;
<SYNC Start=9393825><P class='tr'> 
<SYNC Start=9395165><P class='tr'>&nbsp;
<SYNC Start=9395835><P class='tr'> 
<SYNC Start=9396835><P class='tr'>&nbsp;
<SYNC Start=9397745><P class='tr'> 
<SYNC Start=9400565><P class='tr'>&nbsp;
<SYNC Start=9400565><P class='tr'> 
<SYNC Start=9403695><P class='tr'>&nbsp;
<SYNC Start=9404025><P class='tr'> 
<SYNC Start=9405615><P class='tr'>&nbsp;
<SYNC Start=9406325><P class='tr'> 
<SYNC Start=9409355><P class='tr'>&nbsp;
<SYNC Start=9409355><P class='tr'> 
<SYNC Start=9410985><P class='tr'>&nbsp;
<SYNC Start=9411645><P class='tr'> 
<SYNC Start=9414805><P class='tr'>&nbsp;
<SYNC Start=9416555><P class='tr'> 
<SYNC Start=9417935><P class='tr'>&nbsp;
<SYNC Start=9418575><P class='tr'> 
<SYNC Start=9421735><P class='tr'>&nbsp;
<SYNC Start=9423755><P class='tr'> 
<SYNC Start=9425795><P class='tr'>&nbsp;
<SYNC Start=9427365><P class='tr'> 
<SYNC Start=9430405><P class='tr'>&nbsp;
<SYNC Start=9430405><P class='tr'> 
<SYNC Start=9431475><P class='tr'>&nbsp;
<SYNC Start=9432365><P class='tr'> 
<SYNC Start=9435275><P class='tr'>&nbsp;
<SYNC Start=9435275><P class='tr'> 
<SYNC Start=9436275><P class='tr'>&nbsp;
<SYNC Start=9438155><P class='tr'> 
<SYNC Start=9439485><P class='tr'>&nbsp;
<SYNC Start=9443105><P class='tr'> 
<SYNC Start=9446035><P class='tr'>&nbsp;
<SYNC Start=9446035><P class='tr'> 
<SYNC Start=9448535><P class='tr'>&nbsp;
<SYNC Start=9448845><P class='tr'> 
<SYNC Start=9451855><P class='tr'>&nbsp;
<SYNC Start=9451855><P class='tr'> 
<SYNC Start=9454935><P class='tr'>&nbsp;
<SYNC Start=9455805><P class='tr'> 
<SYNC Start=9457815><P class='tr'>&nbsp;
<SYNC Start=9458625><P class='tr'> 
<SYNC Start=9459995><P class='tr'>&nbsp;
<SYNC Start=9460315><P class='tr'> 
<SYNC Start=9463005><P class='tr'>&nbsp;
<SYNC Start=9463005><P class='tr'> 
<SYNC Start=9465665><P class='tr'>&nbsp;
<SYNC Start=9465665><P class='tr'> 
<SYNC Start=9468685><P class='tr'>&nbsp;
<SYNC Start=9468685><P class='tr'> 
<SYNC Start=9471475><P class='tr'>&nbsp;
<SYNC Start=9471475><P class='tr'> 
<SYNC Start=9473885><P class='tr'>&nbsp;
<SYNC Start=9475845><P class='tr'> 
<SYNC Start=9476955><P class='tr'>&nbsp;
<SYNC Start=9479015><P class='tr'> 
<SYNC Start=9480105><P class='tr'>&nbsp;
<SYNC Start=9481395><P class='tr'> 
<SYNC Start=9482395><P class='tr'>&nbsp;
<SYNC Start=9483395><P class='tr'> 
<SYNC Start=9484835><P class='tr'>&nbsp;
<SYNC Start=9486405><P class='tr'> 
<SYNC Start=9487765><P class='tr'>&nbsp;
<SYNC Start=9489075><P class='tr'> 
<SYNC Start=9491755><P class='tr'>&nbsp;
<SYNC Start=9491755><P class='tr'> 
<SYNC Start=9494815><P class='tr'>&nbsp;
<SYNC Start=9494815><P class='tr'> 
<SYNC Start=9495815><P class='tr'>&nbsp;
<SYNC Start=9495895><P class='tr'> 
<SYNC Start=9499075><P class='tr'>&nbsp;
<SYNC Start=9499075><P class='tr'> 
<SYNC Start=9502155><P class='tr'>&nbsp;
<SYNC Start=9502155><P class='tr'> 
<SYNC Start=9503155><P class='tr'>&nbsp;
<SYNC Start=9504135><P class='tr'> 
<SYNC Start=9507035><P class='tr'>&nbsp;
<SYNC Start=9507035><P class='tr'> 
<SYNC Start=9508495><P class='tr'>&nbsp;
<SYNC Start=9509355><P class='tr'> 
<SYNC Start=9512005><P class='tr'>&nbsp;
<SYNC Start=9512565><P class='tr'> 
<SYNC Start=9515245><P class='tr'>&nbsp;
<SYNC Start=9515245><P class='tr'> 
<SYNC Start=9517835><P class='tr'>&nbsp;
<SYNC Start=9517835><P class='tr'> 
<SYNC Start=9521065><P class='tr'>&nbsp;
<SYNC Start=9521065><P class='tr'> 
<SYNC Start=9523305><P class='tr'>&nbsp;
<SYNC Start=9524265><P class='tr'> 
<SYNC Start=9527325><P class='tr'>&nbsp;
<SYNC Start=9528725><P class='tr'> 
<SYNC Start=9532055><P class='tr'>&nbsp;
<SYNC Start=9532055><P class='tr'> 
<SYNC Start=9534805><P class='tr'>&nbsp;
<SYNC Start=9535335><P class='tr'> 
<SYNC Start=9538055><P class='tr'>&nbsp;
<SYNC Start=9538835><P class='tr'> 
<SYNC Start=9541045><P class='tr'>&nbsp;
<SYNC Start=9541045><P class='tr'> 
<SYNC Start=9544305><P class='tr'>&nbsp;
<SYNC Start=9544305><P class='tr'> 
<SYNC Start=9545515><P class='tr'>&nbsp;
<SYNC Start=9546195><P class='tr'> 
<SYNC Start=9548365><P class='tr'>&nbsp;
<SYNC Start=9550205><P class='tr'> 
<SYNC Start=9551405><P class='tr'>&nbsp;
<SYNC Start=9552775><P class='tr'> 
<SYNC Start=9554155><P class='tr'>&nbsp;
<SYNC Start=9555885><P class='tr'> 
<SYNC Start=9558945><P class='tr'>&nbsp;
<SYNC Start=9558945><P class='tr'> 
<SYNC Start=9561755><P class='tr'>&nbsp;
<SYNC Start=9561755><P class='tr'> 
<SYNC Start=9562935><P class='tr'>&nbsp;
<SYNC Start=9563375><P class='tr'> 
<SYNC Start=9565335><P class='tr'>&nbsp;
<SYNC Start=9566675><P class='tr'> 
<SYNC Start=9568485><P class='tr'>&nbsp;
<SYNC Start=9569875><P class='tr'> 
<SYNC Start=9572905><P class='tr'>&nbsp;
<SYNC Start=9572905><P class='tr'> 
<SYNC Start=9575495><P class='tr'>&nbsp;
<SYNC Start=9575495><P class='tr'> 
<SYNC Start=9578265><P class='tr'>&nbsp;
<SYNC Start=9578265><P class='tr'> 
<SYNC Start=9581455><P class='tr'>&nbsp;
<SYNC Start=9581455><P class='tr'> 
<SYNC Start=9582455><P class='tr'>&nbsp;
<SYNC Start=9583235><P class='tr'> 
<SYNC Start=9586365><P class='tr'>&nbsp;
<SYNC Start=9586365><P class='tr'> 
<SYNC Start=9588205><P class='tr'>&nbsp;
<SYNC Start=9588595><P class='tr'> 
<SYNC Start=9590865><P class='tr'>&nbsp;
<SYNC Start=9590865><P class='tr'> 
<SYNC Start=9593165><P class='tr'>&nbsp;
<SYNC Start=9593485><P class='tr'> 
<SYNC Start=9596465><P class='tr'>&nbsp;
<SYNC Start=9596465><P class='tr'> 
<SYNC Start=9598085><P class='tr'>&nbsp;
<SYNC Start=9598085><P class='tr'> 
<SYNC Start=9601305><P class='tr'>&nbsp;
<SYNC Start=9601305><P class='tr'> 
<SYNC Start=9604485><P class='tr'>&nbsp;
<SYNC Start=9604485><P class='tr'> 
<SYNC Start=9607175><P class='tr'>&nbsp;
<SYNC Start=9607285><P class='tr'> 
<SYNC Start=9610735><P class='tr'>&nbsp;
<SYNC Start=9611335><P class='tr'> 
<SYNC Start=9613395><P class='tr'>&nbsp;
<SYNC Start=9614065><P class='tr'> 
<SYNC Start=9615225><P class='tr'>&nbsp;
<SYNC Start=9616315><P class='tr'> 
<SYNC Start=9618435><P class='tr'>&nbsp;
<SYNC Start=9618435><P class='tr'> 
<SYNC Start=9621385><P class='tr'>&nbsp;
<SYNC Start=9621485><P class='tr'> 
<SYNC Start=9622955><P class='tr'>&nbsp;
<SYNC Start=9623515><P class='tr'> 
<SYNC Start=9625945><P class='tr'>&nbsp;
<SYNC Start=9626445><P class='tr'> 
<SYNC Start=9629385><P class='tr'>&nbsp;
<SYNC Start=9629385><P class='tr'> 
<SYNC Start=9630395><P class='tr'>&nbsp;
<SYNC Start=9630895><P class='tr'> 
<SYNC Start=9634035><P class='tr'>&nbsp;
<SYNC Start=9634145><P class='tr'> 
<SYNC Start=9635255><P class='tr'>&nbsp;
<SYNC Start=9636515><P class='tr'> 
<SYNC Start=9637705><P class='tr'>&nbsp;
<SYNC Start=9638605><P class='tr'> 
<SYNC Start=9641445><P class='tr'>&nbsp;
<SYNC Start=9641445><P class='tr'> 
<SYNC Start=9642445><P class='tr'>&nbsp;
<SYNC Start=9642455><P class='tr'> 
<SYNC Start=9644535><P class='tr'>&nbsp;
<SYNC Start=9645325><P class='tr'> 
<SYNC Start=9647615><P class='tr'>&nbsp;
<SYNC Start=9648185><P class='tr'> 
<SYNC Start=9650145><P class='tr'>&nbsp;
<SYNC Start=9651135><P class='tr'> 
<SYNC Start=9654535><P class='tr'>&nbsp;
<SYNC Start=9655165><P class='tr'> 
<SYNC Start=9657945><P class='tr'>&nbsp;
<SYNC Start=9657945><P class='tr'> 
<SYNC Start=9660625><P class='tr'>&nbsp;
<SYNC Start=9660625><P class='tr'> 
<SYNC Start=9663535><P class='tr'>&nbsp;
<SYNC Start=9664215><P class='tr'> 
<SYNC Start=9666695><P class='tr'>&nbsp;
<SYNC Start=9667375><P class='tr'> 
<SYNC Start=9670455><P class='tr'>&nbsp;
<SYNC Start=9670455><P class='tr'> 
<SYNC Start=9672485><P class='tr'>&nbsp;
<SYNC Start=9673525><P class='tr'> 
<SYNC Start=9674955><P class='tr'>&nbsp;
<SYNC Start=9675545><P class='tr'> 
<SYNC Start=9676975><P class='tr'>&nbsp;
<SYNC Start=9677315><P class='tr'> 
<SYNC Start=9678315><P class='tr'>&nbsp;
<SYNC Start=9679165><P class='tr'> 
<SYNC Start=9680165><P class='tr'>&nbsp;
<SYNC Start=9681245><P class='tr'> 
<SYNC Start=9684265><P class='tr'>&nbsp;
<SYNC Start=9684265><P class='tr'> 
<SYNC Start=9687075><P class='tr'>&nbsp;
<SYNC Start=9687075><P class='tr'> 
<SYNC Start=9690425><P class='tr'>&nbsp;
<SYNC Start=9690515><P class='tr'> 
<SYNC Start=9693495><P class='tr'>&nbsp;
<SYNC Start=9693495><P class='tr'> 
<SYNC Start=9694805><P class='tr'>&nbsp;
<SYNC Start=9695485><P class='tr'> 
<SYNC Start=9697435><P class='tr'>&nbsp;
<SYNC Start=9698745><P class='tr'> 
<SYNC Start=9702205><P class='tr'>&nbsp;
<SYNC Start=9702275><P class='tr'> 
<SYNC Start=9705125><P class='tr'>&nbsp;
<SYNC Start=9705225><P class='tr'> 
<SYNC Start=9707405><P class='tr'>&nbsp;
<SYNC Start=9708015><P class='tr'> 
<SYNC Start=9710755><P class='tr'>&nbsp;
<SYNC Start=9710755><P class='tr'> 
<SYNC Start=9711775><P class='tr'>&nbsp;
<SYNC Start=9712295><P class='tr'> 
<SYNC Start=9714885><P class='tr'>&nbsp;
<SYNC Start=9715295><P class='tr'> 
<SYNC Start=9718285><P class='tr'>&nbsp;
<SYNC Start=9718285><P class='tr'> 
<SYNC Start=9721525><P class='tr'>&nbsp;
<SYNC Start=9721715><P class='tr'> 
<SYNC Start=9724185><P class='tr'>&nbsp;
<SYNC Start=9725555><P class='tr'> 
<SYNC Start=9728235><P class='tr'>&nbsp;
<SYNC Start=9728435><P class='tr'> 
<SYNC Start=9731025><P class='tr'>&nbsp;
<SYNC Start=9731645><P class='tr'> 
<SYNC Start=9734655><P class='tr'>&nbsp;
<SYNC Start=9734655><P class='tr'> 
<SYNC Start=9737325><P class='tr'>&nbsp;
<SYNC Start=9737325><P class='tr'> 
<SYNC Start=9740335><P class='tr'>&nbsp;
<SYNC Start=9740335><P class='tr'> 
<SYNC Start=9743555><P class='tr'>&nbsp;
<SYNC Start=9743555><P class='tr'> 
<SYNC Start=9746275><P class='tr'>&nbsp;
<SYNC Start=9746275><P class='tr'> 
<SYNC Start=9749765><P class='tr'>&nbsp;
<SYNC Start=9751265><P class='tr'> 
<SYNC Start=9753425><P class='tr'>&nbsp;
<SYNC Start=9753855><P class='tr'> 
<SYNC Start=9757045><P class='tr'>&nbsp;
<SYNC Start=9757895><P class='tr'> 
<SYNC Start=9761355><P class='tr'>&nbsp;
<SYNC Start=9762285><P class='tr'> 
<SYNC Start=9765535><P class='tr'>&nbsp;
<SYNC Start=9765535><P class='tr'> 
<SYNC Start=9768895><P class='tr'>&nbsp;
<SYNC Start=9768895><P class='tr'> 
<SYNC Start=9772025><P class='tr'>&nbsp;
<SYNC Start=9772025><P class='tr'> 
<SYNC Start=9775075><P class='tr'>&nbsp;
<SYNC Start=9775075><P class='tr'> 
<SYNC Start=9776075><P class='tr'>&nbsp;
<SYNC Start=9776995><P class='tr'> 
<SYNC Start=9778155><P class='tr'>&nbsp;
<SYNC Start=9778885><P class='tr'> 
<SYNC Start=9780765><P class='tr'>&nbsp;
<SYNC Start=9781315><P class='tr'> 
<SYNC Start=9784435><P class='tr'>&nbsp;
<SYNC Start=9784435><P class='tr'> 
<SYNC Start=9786605><P class='tr'>&nbsp;
<SYNC Start=9787285><P class='tr'> 
<SYNC Start=9790155><P class='tr'>&nbsp;
<SYNC Start=9790155><P class='tr'> 
<SYNC Start=9793615><P class='tr'>&nbsp;
<SYNC Start=9794895><P class='tr'> 
<SYNC Start=9796925><P class='tr'>&nbsp;
<SYNC Start=9797655><P class='tr'> 
<SYNC Start=9799365><P class='tr'>&nbsp;
<SYNC Start=9799965><P class='tr'> 
<SYNC Start=9801365><P class='tr'>&nbsp;
<SYNC Start=9802545><P class='tr'> 
<SYNC Start=9805565><P class='tr'>&nbsp;
<SYNC Start=9806155><P class='tr'> 
<SYNC Start=9808825><P class='tr'>&nbsp;
<SYNC Start=9808825><P class='tr'> 
<SYNC Start=9811395><P class='tr'>&nbsp;
<SYNC Start=9812435><P class='tr'> 
<SYNC Start=9814835><P class='tr'>&nbsp;
<SYNC Start=9815575><P class='tr'> 
<SYNC Start=9818085><P class='tr'>&nbsp;
<SYNC Start=9818185><P class='tr'> 
<SYNC Start=9820015><P class='tr'>&nbsp;
<SYNC Start=9820905><P class='tr'> 
<SYNC Start=9823645><P class='tr'>&nbsp;
<SYNC Start=9825355><P class='tr'> 
<SYNC Start=9828515><P class='tr'>&nbsp;
<SYNC Start=9828515><P class='tr'> 
<SYNC Start=9830635><P class='tr'>&nbsp;
<SYNC Start=9830635><P class='tr'> 
<SYNC Start=9833575><P class='tr'>&nbsp;
<SYNC Start=9833575><P class='tr'> 
<SYNC Start=9837075><P class='tr'>&nbsp;
<SYNC Start=9837495><P class='tr'> 
<SYNC Start=9840115><P class='tr'>&nbsp;
<SYNC Start=9840115><P class='tr'> 
<SYNC Start=9841155><P class='tr'>&nbsp;
<SYNC Start=9842295><P class='tr'> 
<SYNC Start=9843545><P class='tr'>&nbsp;
<SYNC Start=9845705><P class='tr'> 
<SYNC Start=9848625><P class='tr'>&nbsp;
<SYNC Start=9848625><P class='tr'> 
<SYNC Start=9851005><P class='tr'>&nbsp;
<SYNC Start=9851465><P class='tr'> 
<SYNC Start=9854745><P class='tr'>&nbsp;
<SYNC Start=9854745><P class='tr'> 
<SYNC Start=9857795><P class='tr'>&nbsp;
<SYNC Start=9857795><P class='tr'> 
<SYNC Start=9860565><P class='tr'>&nbsp;
<SYNC Start=9860565><P class='tr'> 
<SYNC Start=9863485><P class='tr'>&nbsp;
<SYNC Start=9863485><P class='tr'> 
<SYNC Start=9866445><P class='tr'>&nbsp;
<SYNC Start=9866525><P class='tr'> 
<SYNC Start=9868825><P class='tr'>&nbsp;
<SYNC Start=9869575><P class='tr'> 
<SYNC Start=9872985><P class='tr'>&nbsp;
<SYNC Start=9873755><P class='tr'> 
<SYNC Start=9876325><P class='tr'>&nbsp;
<SYNC Start=9876945><P class='tr'> 
<SYNC Start=9878175><P class='tr'>&nbsp;
<SYNC Start=9878535><P class='tr'> 
<SYNC Start=9879885><P class='tr'>&nbsp;
<SYNC Start=9883485><P class='tr'> 
<SYNC Start=9884875><P class='tr'>&nbsp;
<SYNC Start=9885235><P class='tr'> 
<SYNC Start=9886645><P class='tr'>&nbsp;
<SYNC Start=9887495><P class='tr'> 
<SYNC Start=9888805><P class='tr'>&nbsp;
<SYNC Start=9892465><P class='tr'> 
<SYNC Start=9893615><P class='tr'>&nbsp;
<SYNC Start=9894585><P class='tr'> 
<SYNC Start=9896205><P class='tr'>&nbsp;
<SYNC Start=9897335><P class='tr'> 
<SYNC Start=9900595><P class='tr'>&nbsp;
<SYNC Start=9901045><P class='tr'> 
<SYNC Start=9904125><P class='tr'>&nbsp;
<SYNC Start=9904125><P class='tr'> 
<SYNC Start=9906985><P class='tr'>&nbsp;
<SYNC Start=9907085><P class='tr'> 
<SYNC Start=9910275><P class='tr'>&nbsp;
<SYNC Start=9910275><P class='tr'> 
<SYNC Start=9913275><P class='tr'>&nbsp;
<SYNC Start=9913275><P class='tr'> 
<SYNC Start=9916115><P class='tr'>&nbsp;
<SYNC Start=9916115><P class='tr'> 
<SYNC Start=9917465><P class='tr'>&nbsp;
<SYNC Start=9918275><P class='tr'> 
<SYNC Start=9921185><P class='tr'>&nbsp;
<SYNC Start=9921185><P class='tr'> 
<SYNC Start=9923155><P class='tr'>&nbsp;
<SYNC Start=9924505><P class='tr'> 
<SYNC Start=9926835><P class='tr'>&nbsp;
<SYNC Start=9927405><P class='tr'> 
<SYNC Start=9929325><P class='tr'>&nbsp;
<SYNC Start=9929645><P class='tr'> 
<SYNC Start=9931935><P class='tr'>&nbsp;
<SYNC Start=9932355><P class='tr'> 
<SYNC Start=9934515><P class='tr'>&nbsp;
<SYNC Start=9934515><P class='tr'> 
<SYNC Start=9937605><P class='tr'>&nbsp;
<SYNC Start=9937745><P class='tr'> 
<SYNC Start=9939115><P class='tr'>&nbsp;
<SYNC Start=9939385><P class='tr'> 
<SYNC Start=9942585><P class='tr'>&nbsp;
<SYNC Start=9943005><P class='tr'> 
<SYNC Start=9946005><P class='tr'>&nbsp;
<SYNC Start=9946005><P class='tr'> 
<SYNC Start=9949055><P class='tr'>&nbsp;
<SYNC Start=9951845><P class='tr'> 
<SYNC Start=9953635><P class='tr'>&nbsp;
<SYNC Start=9955835><P class='tr'> 
<SYNC Start=9958645><P class='tr'>&nbsp;
<SYNC Start=9959205><P class='tr'> 
<SYNC Start=9961245><P class='tr'>&nbsp;
<SYNC Start=9961635><P class='tr'> 
<SYNC Start=9964895><P class='tr'>&nbsp;
<SYNC Start=9964895><P class='tr'> 
<SYNC Start=9967895><P class='tr'>&nbsp;
<SYNC Start=9968025><P class='tr'> 
<SYNC Start=9971355><P class='tr'>&nbsp;
<SYNC Start=9971355><P class='tr'> 
<SYNC Start=9974165><P class='tr'>&nbsp;
<SYNC Start=9974995><P class='tr'> 
<SYNC Start=9976895><P class='tr'>&nbsp;
<SYNC Start=9977825><P class='tr'> 
<SYNC Start=9978825><P class='tr'>&nbsp;
<SYNC Start=9979705><P class='tr'> 
<SYNC Start=9982785><P class='tr'>&nbsp;
<SYNC Start=9982785><P class='tr'> 
<SYNC Start=9985605><P class='tr'>&nbsp;
<SYNC Start=9985605><P class='tr'> 
<SYNC Start=9988385><P class='tr'>&nbsp;
<SYNC Start=9988385><P class='tr'> 
<SYNC Start=9991435><P class='tr'>&nbsp;
<SYNC Start=9991435><P class='tr'> 
<SYNC Start=9994625><P class='tr'>&nbsp;
<SYNC Start=9994625><P class='tr'> 
<SYNC Start=9996705><P class='tr'>&nbsp;
<SYNC Start=9997225><P class='tr'> 
<SYNC Start=9999985><P class='tr'>&nbsp;
<SYNC Start=10000265><P class='tr'> 
<SYNC Start=10003735><P class='tr'>&nbsp;
<SYNC Start=10005595><P class='tr'> 
<SYNC Start=10007175><P class='tr'>&nbsp;
<SYNC Start=10008705><P class='tr'> 
<SYNC Start=10010315><P class='tr'>&nbsp;
<SYNC Start=10010835><P class='tr'> 
<SYNC Start=10011945><P class='tr'>&nbsp;
<SYNC Start=10013895><P class='tr'> 
<SYNC Start=10017175><P class='tr'>&nbsp;
<SYNC Start=10017175><P class='tr'> 
<SYNC Start=10020125><P class='tr'>&nbsp;
<SYNC Start=10020125><P class='tr'> 
<SYNC Start=10021805><P class='tr'>&nbsp;
<SYNC Start=10022785><P class='tr'> 
<SYNC Start=10025915><P class='tr'>&nbsp;
<SYNC Start=10025915><P class='tr'> 
<SYNC Start=10028175><P class='tr'>&nbsp;
<SYNC Start=10028845><P class='tr'> 
<SYNC Start=10030235><P class='tr'>&nbsp;
<SYNC Start=10031455><P class='tr'> 
<SYNC Start=10034585><P class='tr'>&nbsp;
<SYNC Start=10034765><P class='tr'> 
<SYNC Start=10036495><P class='tr'>&nbsp;
<SYNC Start=10037885><P class='tr'> 
<SYNC Start=10040865><P class='tr'>&nbsp;
<SYNC Start=10040865><P class='tr'> 
<SYNC Start=10043855><P class='tr'>&nbsp;
<SYNC Start=10043855><P class='tr'> 
<SYNC Start=10047255><P class='tr'>&nbsp;
<SYNC Start=10047815><P class='tr'> 
<SYNC Start=10050855><P class='tr'>&nbsp;
<SYNC Start=10050855><P class='tr'> 
<SYNC Start=10053125><P class='tr'>&nbsp;
<SYNC Start=10054535><P class='tr'> 
<SYNC Start=10056705><P class='tr'>&nbsp;
<SYNC Start=10057245><P class='tr'> 
<SYNC Start=10059725><P class='tr'>&nbsp;
<SYNC Start=10060715><P class='tr'> 
<SYNC Start=10063915><P class='tr'>&nbsp;
<SYNC Start=10065025><P class='tr'> 
<SYNC Start=10067715><P class='tr'>&nbsp;
<SYNC Start=10074475><P class='tr'> 
<SYNC Start=10076155><P class='tr'>&nbsp;
<SYNC Start=10079195><P class='tr'> 
<SYNC Start=10082475><P class='tr'>&nbsp;
<SYNC Start=10082945><P class='tr'> 
<SYNC Start=10085205><P class='tr'>&nbsp;
<SYNC Start=10086305><P class='tr'> 
<SYNC Start=10089175><P class='tr'>&nbsp;
<SYNC Start=10089175><P class='tr'> 
<SYNC Start=10092675><P class='tr'>&nbsp;
<SYNC Start=10093375><P class='tr'> 
<SYNC Start=10095065><P class='tr'>&nbsp;
<SYNC Start=10095705><P class='tr'> 
<SYNC Start=10098475><P class='tr'>&nbsp;
<SYNC Start=10099145><P class='tr'> 
<SYNC Start=10102585><P class='tr'>&nbsp;
<SYNC Start=10104845><P class='tr'> 
<SYNC Start=10107695><P class='tr'>&nbsp;
<SYNC Start=10107695><P class='tr'> 
<SYNC Start=10110885><P class='tr'>&nbsp;
<SYNC Start=10111035><P class='tr'> 
<SYNC Start=10113875><P class='tr'>&nbsp;
<SYNC Start=10113875><P class='tr'> 
<SYNC Start=10115735><P class='tr'>&nbsp;
<SYNC Start=10117785><P class='tr'> 
<SYNC Start=10119955><P class='tr'>&nbsp;
<SYNC Start=10121175><P class='tr'> 
<SYNC Start=10123745><P class='tr'>&nbsp;
<SYNC Start=10125145><P class='tr'> 
<SYNC Start=10127545><P class='tr'>&nbsp;
<SYNC Start=10127865><P class='tr'> 
<SYNC Start=10129675><P class='tr'>&nbsp;
<SYNC Start=10131115><P class='tr'> 
<SYNC Start=10133855><P class='tr'>&nbsp;
<SYNC Start=10133855><P class='tr'> 
<SYNC Start=10136585><P class='tr'>&nbsp;
<SYNC Start=10136585><P class='tr'> 
<SYNC Start=10137785><P class='tr'>&nbsp;
<SYNC Start=10138625><P class='tr'> 
<SYNC Start=10141225><P class='tr'>&nbsp;
<SYNC Start=10141225><P class='tr'> 
<SYNC Start=10143455><P class='tr'>&nbsp;
<SYNC Start=10144335><P class='tr'> 
<SYNC Start=10147325><P class='tr'>&nbsp;
<SYNC Start=10147815><P class='tr'> 
<SYNC Start=10150705><P class='tr'>&nbsp;
<SYNC Start=10151065><P class='tr'> 
<SYNC Start=10154095><P class='tr'>&nbsp;
<SYNC Start=10154095><P class='tr'> 
<SYNC Start=10155075><P class='tr'>&nbsp;
<SYNC Start=10155075><P class='tr'> 
<SYNC Start=10157545><P class='tr'>&nbsp;
<SYNC Start=10157545><P class='tr'> 
<SYNC Start=10160995><P class='tr'>&nbsp;
<SYNC Start=10161225><P class='tr'> 
<SYNC Start=10164415><P class='tr'>&nbsp;
<SYNC Start=10164905><P class='tr'> 
<SYNC Start=10167575><P class='tr'>&nbsp;
<SYNC Start=10167575><P class='tr'> 
<SYNC Start=10168575><P class='tr'>&nbsp;
<SYNC Start=10168935><P class='tr'> 
<SYNC Start=10171355><P class='tr'>&nbsp;
<SYNC Start=10171355><P class='tr'> 
<SYNC Start=10173925><P class='tr'>&nbsp;
<SYNC Start=10173925><P class='tr'> 
<SYNC Start=10176015><P class='tr'>&nbsp;
<SYNC Start=10177055><P class='tr'> 
<SYNC Start=10178675><P class='tr'>&nbsp;
<SYNC Start=10179385><P class='tr'> 
<SYNC Start=10182295><P class='tr'>&nbsp;
<SYNC Start=10182295><P class='tr'> 
<SYNC Start=10183295><P class='tr'>&nbsp;
<SYNC Start=10183475><P class='tr'> 
<SYNC Start=10186275><P class='tr'>&nbsp;
<SYNC Start=10186275><P class='tr'> 
<SYNC Start=10188575><P class='tr'>&nbsp;
<SYNC Start=10189285><P class='tr'> 
<SYNC Start=10192275><P class='tr'>&nbsp;
<SYNC Start=10192275><P class='tr'> 
<SYNC Start=10195445><P class='tr'>&nbsp;
<SYNC Start=10195445><P class='tr'> 
<SYNC Start=10198375><P class='tr'>&nbsp;
<SYNC Start=10198375><P class='tr'> 
<SYNC Start=10201195><P class='tr'>&nbsp;
<SYNC Start=10201195><P class='tr'> 
<SYNC Start=10204405><P class='tr'>&nbsp;
<SYNC Start=10204405><P class='tr'> 
<SYNC Start=10207675><P class='tr'>&nbsp;
<SYNC Start=10207675><P class='tr'> 
<SYNC Start=10209305><P class='tr'>&nbsp;
<SYNC Start=10209755><P class='tr'> 
<SYNC Start=10212755><P class='tr'>&nbsp;
<SYNC Start=10212755><P class='tr'> 
<SYNC Start=10215575><P class='tr'>&nbsp;
<SYNC Start=10215575><P class='tr'> 
<SYNC Start=10218155><P class='tr'>&nbsp;
<SYNC Start=10218155><P class='tr'> 
<SYNC Start=10220705><P class='tr'>&nbsp;
<SYNC Start=10221115><P class='tr'> 
<SYNC Start=10223425><P class='tr'>&nbsp;
<SYNC Start=10223425><P class='tr'> 
<SYNC Start=10225525><P class='tr'>&nbsp;
<SYNC Start=10226435><P class='tr'> 
<SYNC Start=10228435><P class='tr'>&nbsp;
<SYNC Start=10228765><P class='tr'> 
<SYNC Start=10231725><P class='tr'>&nbsp;
<SYNC Start=10232155><P class='tr'> 
<SYNC Start=10234425><P class='tr'>&nbsp;
<SYNC Start=10235885><P class='tr'> 
<SYNC Start=10237005><P class='tr'>&nbsp;
<SYNC Start=10238445><P class='tr'> 
<SYNC Start=10240295><P class='tr'>&nbsp;
<SYNC Start=10243385><P class='tr'> 
<SYNC Start=10246285><P class='tr'>&nbsp;
<SYNC Start=10246285><P class='tr'> 
<SYNC Start=10248995><P class='tr'>&nbsp;
<SYNC Start=10248995><P class='tr'> 
<SYNC Start=10252045><P class='tr'>&nbsp;
<SYNC Start=10252045><P class='tr'> 
<SYNC Start=10255465><P class='tr'>&nbsp;
<SYNC Start=10256195><P class='tr'> 
<SYNC Start=10258705><P class='tr'>&nbsp;
<SYNC Start=10258705><P class='tr'> 
<SYNC Start=10260935><P class='tr'>&nbsp;
<SYNC Start=10261455><P class='tr'> 
<SYNC Start=10264345><P class='tr'>&nbsp;
<SYNC Start=10264345><P class='tr'> 
<SYNC Start=10267395><P class='tr'>&nbsp;
<SYNC Start=10267525><P class='tr'> 
<SYNC Start=10268935><P class='tr'>&nbsp;
<SYNC Start=10270815><P class='tr'> 
<SYNC Start=10272225><P class='tr'>&nbsp;
<SYNC Start=10274505><P class='tr'> 
<SYNC Start=10275505><P class='tr'>&nbsp;
<SYNC Start=10275775><P class='tr'> 
<SYNC Start=10279165><P class='tr'>&nbsp;
<SYNC Start=10279185><P class='tr'> 
<SYNC Start=10281415><P class='tr'>&nbsp;
<SYNC Start=10282415><P class='tr'> 
<SYNC Start=10285195><P class='tr'>&nbsp;
<SYNC Start=10285195><P class='tr'> 
<SYNC Start=10288475><P class='tr'>&nbsp;
<SYNC Start=10288475><P class='tr'> 
<SYNC Start=10291015><P class='tr'>&nbsp;
<SYNC Start=10291015><P class='tr'> 
<SYNC Start=10293805><P class='tr'>&nbsp;
<SYNC Start=10293805><P class='tr'> 
<SYNC Start=10295715><P class='tr'>&nbsp;
<SYNC Start=10295715><P class='tr'> 
<SYNC Start=10298855><P class='tr'>&nbsp;
<SYNC Start=10298855><P class='tr'> 
<SYNC Start=10300975><P class='tr'>&nbsp;
<SYNC Start=10300975><P class='tr'> 
<SYNC Start=10303065><P class='tr'>&nbsp;
<SYNC Start=10303555><P class='tr'> 
<SYNC Start=10306085><P class='tr'>&nbsp;
<SYNC Start=10306085><P class='tr'> 
<SYNC Start=10308595><P class='tr'>&nbsp;
<SYNC Start=10308595><P class='tr'> 
<SYNC Start=10310395><P class='tr'>&nbsp;
<SYNC Start=10311425><P class='tr'> 
<SYNC Start=10314455><P class='tr'>&nbsp;
<SYNC Start=10315075><P class='tr'> 
<SYNC Start=10317615><P class='tr'>&nbsp;
<SYNC Start=10317615><P class='tr'> 
<SYNC Start=10320115><P class='tr'>&nbsp;
<SYNC Start=10320115><P class='tr'> 
<SYNC Start=10323235><P class='tr'>&nbsp;
<SYNC Start=10324105><P class='tr'> 
<SYNC Start=10327295><P class='tr'>&nbsp;
<SYNC Start=10327295><P class='tr'> 
<SYNC Start=10330005><P class='tr'>&nbsp;
<SYNC Start=10330005><P class='tr'> 
<SYNC Start=10333095><P class='tr'>&nbsp;
<SYNC Start=10333095><P class='tr'> 
<SYNC Start=10334855><P class='tr'>&nbsp;
<SYNC Start=10335485><P class='tr'> 
<SYNC Start=10338715><P class='tr'>&nbsp;
<SYNC Start=10339795><P class='tr'> 
<SYNC Start=10340795><P class='tr'>&nbsp;
<SYNC Start=10340915><P class='tr'> 
<SYNC Start=10343975><P class='tr'>&nbsp;
<SYNC Start=10343975><P class='tr'> 
<SYNC Start=10345815><P class='tr'>&nbsp;
<SYNC Start=10346155><P class='tr'> 
<SYNC Start=10349005><P class='tr'>&nbsp;
<SYNC Start=10349005><P class='tr'> 
<SYNC Start=10351865><P class='tr'>&nbsp;
<SYNC Start=10351865><P class='tr'> 
<SYNC Start=10353855><P class='tr'>&nbsp;
<SYNC Start=10355135><P class='tr'> 
<SYNC Start=10358225><P class='tr'>&nbsp;
<SYNC Start=10358225><P class='tr'> 
<SYNC Start=10361265><P class='tr'>&nbsp;
<SYNC Start=10361265><P class='tr'> 
<SYNC Start=10364085><P class='tr'>&nbsp;
<SYNC Start=10364085><P class='tr'> 
<SYNC Start=10365655><P class='tr'>&nbsp;
<SYNC Start=10366085><P class='tr'> 
<SYNC Start=10367265><P class='tr'>&nbsp;
<SYNC Start=10368295><P class='tr'> 
<SYNC Start=10370985><P class='tr'>&nbsp;
<SYNC Start=10370985><P class='tr'> 
<SYNC Start=10373805><P class='tr'>&nbsp;
<SYNC Start=10373935><P class='tr'> 
<SYNC Start=10376935><P class='tr'>&nbsp;
<SYNC Start=10376935><P class='tr'> 
<SYNC Start=10379815><P class='tr'>&nbsp;
<SYNC Start=10379815><P class='tr'> 
<SYNC Start=10382765><P class='tr'>&nbsp;
<SYNC Start=10383155><P class='tr'> 
<SYNC Start=10385875><P class='tr'>&nbsp;
<SYNC Start=10385875><P class='tr'> 
<SYNC Start=10388775><P class='tr'>&nbsp;
<SYNC Start=10388915><P class='tr'> 
<SYNC Start=10391405><P class='tr'>&nbsp;
<SYNC Start=10391405><P class='tr'> 
<SYNC Start=10394115><P class='tr'>&nbsp;
<SYNC Start=10394115><P class='tr'> 
<SYNC Start=10397155><P class='tr'>&nbsp;
<SYNC Start=10397155><P class='tr'> 
<SYNC Start=10399725><P class='tr'>&nbsp;
<SYNC Start=10399725><P class='tr'> 
<SYNC Start=10402465><P class='tr'>&nbsp;
<SYNC Start=10402465><P class='tr'> 
<SYNC Start=10404865><P class='tr'>&nbsp;
<SYNC Start=10405355><P class='tr'> 
<SYNC Start=10408075><P class='tr'>&nbsp;
<SYNC Start=10408125><P class='tr'> 
<SYNC Start=10410235><P class='tr'>&nbsp;
<SYNC Start=10415335><P class='tr'> 
<SYNC Start=10418135><P class='tr'>&nbsp;
<SYNC Start=10418135><P class='tr'> 
<SYNC Start=10420775><P class='tr'>&nbsp;
<SYNC Start=10420775><P class='tr'> 
<SYNC Start=10423975><P class='tr'>&nbsp;
<SYNC Start=10424385><P class='tr'> 
<SYNC Start=10427255><P class='tr'>&nbsp;
<SYNC Start=10429245><P class='tr'> 
<SYNC Start=10430245><P class='tr'>&nbsp;
<SYNC Start=10431055><P class='tr'> 
<SYNC Start=10432665><P class='tr'>&nbsp;
<SYNC Start=10433475><P class='tr'> 
<SYNC Start=10434965><P class='tr'>&nbsp;
<SYNC Start=10437965><P class='tr'> 
<SYNC Start=10439285><P class='tr'>&nbsp;
<SYNC Start=10440445><P class='tr'> 
<SYNC Start=10441585><P class='tr'>&nbsp;
<SYNC Start=10442615><P class='tr'> 
<SYNC Start=10445805><P class='tr'>&nbsp;
<SYNC Start=10446545><P class='tr'> 
<SYNC Start=10447905><P class='tr'>&nbsp;
<SYNC Start=10450655><P class='tr'> 
<SYNC Start=10452015><P class='tr'>&nbsp;
<SYNC Start=10452595><P class='tr'> 
<SYNC Start=10454155><P class='tr'>&nbsp;
<SYNC Start=10455465><P class='tr'> 
<SYNC Start=10458565><P class='tr'>&nbsp;
<SYNC Start=10458605><P class='tr'> 
<SYNC Start=10461465><P class='tr'>&nbsp;
<SYNC Start=10461795><P class='tr'> 
<SYNC Start=10464755><P class='tr'>&nbsp;
<SYNC Start=10465585><P class='tr'> 
<SYNC Start=10466585><P class='tr'>&nbsp;
<SYNC Start=10468125><P class='tr'> 
<SYNC Start=10470275><P class='tr'>&nbsp;
<SYNC Start=10470655><P class='tr'> 
<SYNC Start=10473695><P class='tr'>&nbsp;
<SYNC Start=10473695><P class='tr'> 
<SYNC Start=10476915><P class='tr'>&nbsp;
<SYNC Start=10476915><P class='tr'> 
<SYNC Start=10479745><P class='tr'>&nbsp;
<SYNC Start=10479745><P class='tr'> 
<SYNC Start=10481995><P class='tr'>&nbsp;
<SYNC Start=10488275><P class='tr'> 
<SYNC Start=10491345><P class='tr'>&nbsp;
<SYNC Start=10491345><P class='tr'> 
<SYNC Start=10494535><P class='tr'>&nbsp;
<SYNC Start=10494535><P class='tr'> 
<SYNC Start=10496765><P class='tr'>&nbsp;
<SYNC Start=10497425><P class='tr'> 
<SYNC Start=10500445><P class='tr'>&nbsp;
<SYNC Start=10500445><P class='tr'> 
<SYNC Start=10503325><P class='tr'>&nbsp;
<SYNC Start=10503325><P class='tr'> 
<SYNC Start=10506215><P class='tr'>&nbsp;
<SYNC Start=10506215><P class='tr'> 
<SYNC Start=10509645><P class='tr'>&nbsp;
<SYNC Start=10510105><P class='tr'> 
<SYNC Start=10513125><P class='tr'>&nbsp;
<SYNC Start=10513125><P class='tr'> 
<SYNC Start=10516055><P class='tr'>&nbsp;
<SYNC Start=10516055><P class='tr'> 
<SYNC Start=10519015><P class='tr'>&nbsp;
<SYNC Start=10519015><P class='tr'> 
<SYNC Start=10521665><P class='tr'>&nbsp;
<SYNC Start=10522655><P class='tr'> 
<SYNC Start=10525505><P class='tr'>&nbsp;
<SYNC Start=10525725><P class='tr'> 
<SYNC Start=10528765><P class='tr'>&nbsp;
<SYNC Start=10528765><P class='tr'> 
<SYNC Start=10532055><P class='tr'>&nbsp;
<SYNC Start=10532055><P class='tr'> 
<SYNC Start=10534825><P class='tr'>&nbsp;
<SYNC Start=10535705><P class='tr'> 
<SYNC Start=10539045><P class='tr'>&nbsp;
<SYNC Start=10539045><P class='tr'> 
<SYNC Start=10542215><P class='tr'>&nbsp;
<SYNC Start=10542215><P class='tr'> 
<SYNC Start=10543215><P class='tr'>&nbsp;
<SYNC Start=10543265><P class='tr'> 
<SYNC Start=10546335><P class='tr'>&nbsp;
<SYNC Start=10547475><P class='tr'> 
<SYNC Start=10549725><P class='tr'>&nbsp;
<SYNC Start=10549725><P class='tr'> 
<SYNC Start=10551925><P class='tr'>&nbsp;
<SYNC Start=10551925><P class='tr'> 
<SYNC Start=10553565><P class='tr'>&nbsp;
<SYNC Start=10554125><P class='tr'> 
<SYNC Start=10557095><P class='tr'>&nbsp;
<SYNC Start=10557095><P class='tr'> 
<SYNC Start=10559475><P class='tr'>&nbsp;
<SYNC Start=10559475><P class='tr'> 
<SYNC Start=10560735><P class='tr'>&nbsp;
<SYNC Start=10561285><P class='tr'> 
<SYNC Start=10564285><P class='tr'>&nbsp;
<SYNC Start=10564285><P class='tr'> 
<SYNC Start=10567105><P class='tr'>&nbsp;
<SYNC Start=10567105><P class='tr'> 
<SYNC Start=10569215><P class='tr'>&nbsp;
<SYNC Start=10569215><P class='tr'> 
<SYNC Start=10570615><P class='tr'>&nbsp;
<SYNC Start=10572095><P class='tr'> 
<SYNC Start=10575145><P class='tr'>&nbsp;
<SYNC Start=10575145><P class='tr'> 
<SYNC Start=10577755><P class='tr'>&nbsp;
<SYNC Start=10577755><P class='tr'> 
<SYNC Start=10580785><P class='tr'>&nbsp;
<SYNC Start=10580785><P class='tr'> 
<SYNC Start=10581785><P class='tr'>&nbsp;
<SYNC Start=10581935><P class='tr'> 
<SYNC Start=10585165><P class='tr'>&nbsp;
<SYNC Start=10585165><P class='tr'> 
<SYNC Start=10588005><P class='tr'>&nbsp;
<SYNC Start=10588005><P class='tr'> 
<SYNC Start=10589005><P class='tr'>&nbsp;
<SYNC Start=10589775><P class='tr'> 
<SYNC Start=10592605><P class='tr'>&nbsp;
<SYNC Start=10592605><P class='tr'> 
<SYNC Start=10593995><P class='tr'>&nbsp;
<SYNC Start=10594475><P class='tr'> 
<SYNC Start=10595785><P class='tr'>&nbsp;
<SYNC Start=10596145><P class='tr'> 
<SYNC Start=10598355><P class='tr'>&nbsp;
<SYNC Start=10603245><P class='tr'> 
<SYNC Start=10604315><P class='tr'>&nbsp;
<SYNC Start=10604725><P class='tr'> 
<SYNC Start=10607735><P class='tr'>&nbsp;
<SYNC Start=10607815><P class='tr'> 
<SYNC Start=10610935><P class='tr'>&nbsp;
<SYNC Start=10610935><P class='tr'> 
<SYNC Start=10613355><P class='tr'>&nbsp;
<SYNC Start=10614175><P class='tr'> 
<SYNC Start=10615545><P class='tr'>&nbsp;
<SYNC Start=10616785><P class='tr'> 
<SYNC Start=10619565><P class='tr'>&nbsp;
<SYNC Start=10619565><P class='tr'> 
<SYNC Start=10620565><P class='tr'>&nbsp;
<SYNC Start=10621425><P class='tr'> 
<SYNC Start=10623285><P class='tr'>&nbsp;
<SYNC Start=10624445><P class='tr'> 
<SYNC Start=10626125><P class='tr'>&nbsp;
<SYNC Start=10627045><P class='tr'> 
<SYNC Start=10628865><P class='tr'>&nbsp;
<SYNC Start=10629135><P class='tr'> 
<SYNC Start=10631565><P class='tr'>&nbsp;
<SYNC Start=10631825><P class='tr'> 
<SYNC Start=10634975><P class='tr'>&nbsp;
<SYNC Start=10635585><P class='tr'> 
<SYNC Start=10637505><P class='tr'>&nbsp;
<SYNC Start=10637975><P class='tr'> 
<SYNC Start=10640715><P class='tr'>&nbsp;
<SYNC Start=10640715><P class='tr'> 
<SYNC Start=10642805><P class='tr'>&nbsp;
<SYNC Start=10643845><P class='tr'> 
<SYNC Start=10646665><P class='tr'>&nbsp;
<SYNC Start=10648455><P class='tr'> 
<SYNC Start=10650505><P class='tr'>&nbsp;
<SYNC Start=10651515><P class='tr'> 
<SYNC Start=10654325><P class='tr'>&nbsp;
<SYNC Start=10654325><P class='tr'> 
<SYNC Start=10655925><P class='tr'>&nbsp;
<SYNC Start=10656425><P class='tr'> 
<SYNC Start=10657905><P class='tr'>&nbsp;
<SYNC Start=10658575><P class='tr'> 
<SYNC Start=10660745><P class='tr'>&nbsp;
<SYNC Start=10661835><P class='tr'> 
<SYNC Start=10664645><P class='tr'>&nbsp;
<SYNC Start=10664645><P class='tr'> 
<SYNC Start=10665645><P class='tr'>&nbsp;
<SYNC Start=10666365><P class='tr'> 
<SYNC Start=10669365><P class='tr'>&nbsp;
<SYNC Start=10669365><P class='tr'> 
<SYNC Start=10671945><P class='tr'>&nbsp;
<SYNC Start=10672505><P class='tr'> 
<SYNC Start=10675745><P class='tr'>&nbsp;
<SYNC Start=10675745><P class='tr'> 
<SYNC Start=10678485><P class='tr'>&nbsp;
<SYNC Start=10678575><P class='tr'> 
<SYNC Start=10682055><P class='tr'>&nbsp;
<SYNC Start=10682235><P class='tr'> 
<SYNC Start=10683235><P class='tr'>&nbsp;
<SYNC Start=10683445><P class='tr'> 
<SYNC Start=10685575><P class='tr'>&nbsp;
<SYNC Start=10686535><P class='tr'> 
<SYNC Start=10687595><P class='tr'>&nbsp;
<SYNC Start=10688555><P class='tr'> 
<SYNC Start=10691255><P class='tr'>&nbsp;
<SYNC Start=10691255><P class='tr'> 
<SYNC Start=10692265><P class='tr'>&nbsp;
<SYNC Start=10692575><P class='tr'> 
<SYNC Start=10695265><P class='tr'>&nbsp;
<SYNC Start=10696985><P class='tr'> 
<SYNC Start=10698635><P class='tr'>&nbsp;
<SYNC Start=10699045><P class='tr'> 
<SYNC Start=10702045><P class='tr'>&nbsp;
<SYNC Start=10702045><P class='tr'> 
<SYNC Start=10705205><P class='tr'>&nbsp;
<SYNC Start=10705635><P class='tr'> 
<SYNC Start=10708795><P class='tr'>&nbsp;
<SYNC Start=10708795><P class='tr'> 
<SYNC Start=10709925><P class='tr'>&nbsp;
<SYNC Start=10710825><P class='tr'> 
<SYNC Start=10714125><P class='tr'>&nbsp;
<SYNC Start=10716445><P class='tr'> 
<SYNC Start=10719385><P class='tr'>&nbsp;
<SYNC Start=10719385><P class='tr'> 
<SYNC Start=10722705><P class='tr'>&nbsp;
<SYNC Start=10723665><P class='tr'> 
<SYNC Start=10726645><P class='tr'>&nbsp;
<SYNC Start=10727705><P class='tr'> 
<SYNC Start=10730965><P class='tr'>&nbsp;
<SYNC Start=10730965><P class='tr'> 
<SYNC Start=10732395><P class='tr'>&nbsp;
<SYNC Start=10733685><P class='tr'> 
<SYNC Start=10736075><P class='tr'>&nbsp;
<SYNC Start=10736525><P class='tr'> 
<SYNC Start=10738335><P class='tr'>&nbsp;
<SYNC Start=10739825><P class='tr'> 
<SYNC Start=10742905><P class='tr'>&nbsp;
<SYNC Start=10742905><P class='tr'> 
<SYNC Start=10746265><P class='tr'>&nbsp;
<SYNC Start=10746555><P class='tr'> 
<SYNC Start=10749225><P class='tr'>&nbsp;
<SYNC Start=10749225><P class='tr'> 
<SYNC Start=10751745><P class='tr'>&nbsp;
<SYNC Start=10751745><P class='tr'> 
<SYNC Start=10754445><P class='tr'>&nbsp;
<SYNC Start=10754445><P class='tr'> 
<SYNC Start=10757505><P class='tr'>&nbsp;
<SYNC Start=10757505><P class='tr'> 
<SYNC Start=10758505><P class='tr'>&nbsp;
<SYNC Start=10758575><P class='tr'> 
<SYNC Start=10759575><P class='tr'>&nbsp;
<SYNC Start=10759935><P class='tr'> 
<SYNC Start=10763315><P class='tr'>&nbsp;
<SYNC Start=10763605><P class='tr'> 
<SYNC Start=10765915><P class='tr'>&nbsp;
<SYNC Start=10765915><P class='tr'> 
<SYNC Start=10768985><P class='tr'>&nbsp;
<SYNC Start=10768985><P class='tr'> 
<SYNC Start=10770135><P class='tr'>&nbsp;
<SYNC Start=10770885><P class='tr'> 
<SYNC Start=10774055><P class='tr'>&nbsp;
<SYNC Start=10774335><P class='tr'> 
<SYNC Start=10775955><P class='tr'>&nbsp;
<SYNC Start=10776495><P class='tr'> 
<SYNC Start=10779565><P class='tr'>&nbsp;
<SYNC Start=10779565><P class='tr'> 
<SYNC Start=10782675><P class='tr'>&nbsp;
<SYNC Start=10785325><P class='tr'> 
<SYNC Start=10786555><P class='tr'>&nbsp;
<SYNC Start=10789735><P class='tr'> 
<SYNC Start=10791765><P class='tr'>&nbsp;
<SYNC Start=10794645><P class='tr'> 
<SYNC Start=10795645><P class='tr'>&nbsp;
<SYNC Start=10795925><P class='tr'> 
<SYNC Start=10798765><P class='tr'>&nbsp;
<SYNC Start=10798765><P class='tr'> 
<SYNC Start=10801355><P class='tr'>&nbsp;
<SYNC Start=10801355><P class='tr'> 
<SYNC Start=10804125><P class='tr'>&nbsp;
<SYNC Start=10804125><P class='tr'> 
<SYNC Start=10807405><P class='tr'>&nbsp;
<SYNC Start=10808515><P class='tr'> 
<SYNC Start=10810815><P class='tr'>&nbsp;
<SYNC Start=10812095><P class='tr'> 
<SYNC Start=10815225><P class='tr'>&nbsp;
<SYNC Start=10815225><P class='tr'> 
<SYNC Start=10817705><P class='tr'>&nbsp;
<SYNC Start=10818245><P class='tr'> 
<SYNC Start=10821425><P class='tr'>&nbsp;
<SYNC Start=10823535><P class='tr'> 
<SYNC Start=10824655><P class='tr'>&nbsp;
<SYNC Start=10825265><P class='tr'> 
<SYNC Start=10826495><P class='tr'>&nbsp;
<SYNC Start=10826845><P class='tr'> 
<SYNC Start=10829535><P class='tr'>&nbsp;
<SYNC Start=10829915><P class='tr'> 
<SYNC Start=10830995><P class='tr'>&nbsp;
<SYNC Start=10831885><P class='tr'> 
<SYNC Start=10833355><P class='tr'>&nbsp;
<SYNC Start=10834575><P class='tr'> 
<SYNC Start=10837585><P class='tr'>&nbsp;
<SYNC Start=10837585><P class='tr'> 
<SYNC Start=10840925><P class='tr'>&nbsp;
<SYNC Start=10841805><P class='tr'> 
<SYNC Start=10844925><P class='tr'>&nbsp;
<SYNC Start=10844925><P class='tr'> 
<SYNC Start=10847825><P class='tr'>&nbsp;
<SYNC Start=10847825><P class='tr'> 
<SYNC Start=10850515><P class='tr'>&nbsp;
<SYNC Start=10850515><P class='tr'> 
<SYNC Start=10853195><P class='tr'>&nbsp;
<SYNC Start=10853195><P class='tr'> 
<SYNC Start=10854225><P class='tr'>&nbsp;
<SYNC Start=10856315><P class='tr'> 
<SYNC Start=10857315><P class='tr'>&nbsp;
<SYNC Start=10857595><P class='tr'> 
<SYNC Start=10858595><P class='tr'>&nbsp;
<SYNC Start=10859105><P class='tr'> 
<SYNC Start=10860105><P class='tr'>&nbsp;
<SYNC Start=10862215><P class='tr'> 
<SYNC Start=10864965><P class='tr'>&nbsp;
<SYNC Start=10864965><P class='tr'> 
<SYNC Start=10868405><P class='tr'>&nbsp;
<SYNC Start=10868405><P class='tr'> 
<SYNC Start=10869535><P class='tr'>&nbsp;
<SYNC Start=10870005><P class='tr'> 
<SYNC Start=10871995><P class='tr'>&nbsp;
<SYNC Start=10871995><P class='tr'> 
<SYNC Start=10874925><P class='tr'>&nbsp;
<SYNC Start=10874925><P class='tr'> 
<SYNC Start=10878365><P class='tr'>&nbsp;
<SYNC Start=10878715><P class='tr'> 
<SYNC Start=10881925><P class='tr'>&nbsp;
<SYNC Start=10881955><P class='tr'> 
<SYNC Start=10882955><P class='tr'>&nbsp;
<SYNC Start=10884115><P class='tr'> 
<SYNC Start=10885115><P class='tr'>&nbsp;
<SYNC Start=10885865><P class='tr'> 
<SYNC Start=10886915><P class='tr'>&nbsp;
<SYNC Start=10887435><P class='tr'> 
<SYNC Start=10890395><P class='tr'>&nbsp;
<SYNC Start=10890395><P class='tr'> 
<SYNC Start=10893205><P class='tr'>&nbsp;
<SYNC Start=10893205><P class='tr'> 
<SYNC Start=10896155><P class='tr'>&nbsp;
<SYNC Start=10896545><P class='tr'> 
<SYNC Start=10897545><P class='tr'>&nbsp;
<SYNC Start=10899015><P class='tr'> 
<SYNC Start=10901445><P class='tr'>&nbsp;
<SYNC Start=10902815><P class='tr'> 
<SYNC Start=10903895><P class='tr'>&nbsp;
<SYNC Start=10904265><P class='tr'> 
<SYNC Start=10905805><P class='tr'>&nbsp;
<SYNC Start=10905805><P class='tr'> 
<SYNC Start=10908375><P class='tr'>&nbsp;
<SYNC Start=10909675><P class='tr'> 
<SYNC Start=10911675><P class='tr'>&nbsp;
<SYNC Start=10912895><P class='tr'> 
<SYNC Start=10915305><P class='tr'>&nbsp;
<SYNC Start=10915305><P class='tr'> 
<SYNC Start=10917325><P class='tr'>&nbsp;
<SYNC Start=10917795><P class='tr'> 
<SYNC Start=10920805><P class='tr'>&nbsp;
<SYNC Start=10921095><P class='tr'> 
<SYNC Start=10924005><P class='tr'>&nbsp;
<SYNC Start=10924635><P class='tr'> 
<SYNC Start=10927945><P class='tr'>&nbsp;
<SYNC Start=10928985><P class='tr'> 
<SYNC Start=10931805><P class='tr'>&nbsp;
<SYNC Start=10931805><P class='tr'> 
<SYNC Start=10934815><P class='tr'>&nbsp;
<SYNC Start=10934815><P class='tr'> 
<SYNC Start=10937755><P class='tr'>&nbsp;
<SYNC Start=10937755><P class='tr'> 
<SYNC Start=10938855><P class='tr'>&nbsp;
<SYNC Start=10939375><P class='tr'> 
<SYNC Start=10942505><P class='tr'>&nbsp;
<SYNC Start=10942955><P class='tr'> 
<SYNC Start=10946455><P class='tr'>&nbsp;
<SYNC Start=10946755><P class='tr'> 
<SYNC Start=10950055><P class='tr'>&nbsp;
<SYNC Start=10950445><P class='tr'> 
<SYNC Start=10953055><P class='tr'>&nbsp;
<SYNC Start=10953055><P class='tr'> 
<SYNC Start=10956115><P class='tr'>&nbsp;
<SYNC Start=10956115><P class='tr'> 
<SYNC Start=10959325><P class='tr'>&nbsp;
<SYNC Start=10959605><P class='tr'> 
<SYNC Start=10962575><P class='tr'>&nbsp;
<SYNC Start=10962575><P class='tr'> 
<SYNC Start=10963575><P class='tr'>&nbsp;
<SYNC Start=10963945><P class='tr'> 
<SYNC Start=10967015><P class='tr'>&nbsp;
<SYNC Start=10967015><P class='tr'> 
<SYNC Start=10969685><P class='tr'>&nbsp;
<SYNC Start=10969685><P class='tr'> 
<SYNC Start=10972375><P class='tr'>&nbsp;
<SYNC Start=10972745><P class='tr'> 
<SYNC Start=10975775><P class='tr'>&nbsp;
<SYNC Start=10975775><P class='tr'> 
<SYNC Start=10978695><P class='tr'>&nbsp;
<SYNC Start=10978695><P class='tr'> 
<SYNC Start=10979985><P class='tr'>&nbsp;
<SYNC Start=10980435><P class='tr'> 
<SYNC Start=10983125><P class='tr'>&nbsp;
<SYNC Start=10983125><P class='tr'> 
<SYNC Start=10985945><P class='tr'>&nbsp;
<SYNC Start=10986185><P class='tr'> 
<SYNC Start=10989045><P class='tr'>&nbsp;
<SYNC Start=10989045><P class='tr'> 
<SYNC Start=10991615><P class='tr'>&nbsp;
<SYNC Start=10991615><P class='tr'> 
<SYNC Start=10994375><P class='tr'>&nbsp;
<SYNC Start=10994375><P class='tr'> 
<SYNC Start=10996835><P class='tr'>&nbsp;
<SYNC Start=10996835><P class='tr'> 
<SYNC Start=10999845><P class='tr'>&nbsp;
<SYNC Start=10999845><P class='tr'> 
<SYNC Start=11002865><P class='tr'>&nbsp;
<SYNC Start=11002865><P class='tr'> 
<SYNC Start=11005815><P class='tr'>&nbsp;
<SYNC Start=11006185><P class='tr'> 
<SYNC Start=11009205><P class='tr'>&nbsp;
<SYNC Start=11009205><P class='tr'> 
<SYNC Start=11011075><P class='tr'>&nbsp;
<SYNC Start=11011815><P class='tr'> 
<SYNC Start=11014585><P class='tr'>&nbsp;
<SYNC Start=11014585><P class='tr'> 
<SYNC Start=11017445><P class='tr'>&nbsp;
<SYNC Start=11017445><P class='tr'> 
<SYNC Start=11020735><P class='tr'>&nbsp;
<SYNC Start=11020735><P class='tr'> 
<SYNC Start=11022845><P class='tr'>&nbsp;
<SYNC Start=11024305><P class='tr'> 
<SYNC Start=11026995><P class='tr'>&nbsp;
<SYNC Start=11027405><P class='tr'> 
<SYNC Start=11028685><P class='tr'>&nbsp;
<SYNC Start=11029915><P class='tr'> 
<SYNC Start=11031685><P class='tr'>&nbsp;
<SYNC Start=11032955><P class='tr'> 
<SYNC Start=11033955><P class='tr'>&nbsp;
<SYNC Start=11034235><P class='tr'> 
<SYNC Start=11035235><P class='tr'>&nbsp;
<SYNC Start=11035825><P class='tr'> 
<SYNC Start=11036825><P class='tr'>&nbsp;
<SYNC Start=11038075><P class='tr'> 
<SYNC Start=11040965><P class='tr'>&nbsp;
<SYNC Start=11040965><P class='tr'> 
<SYNC Start=11043615><P class='tr'>&nbsp;
<SYNC Start=11044645><P class='tr'> 
<SYNC Start=11046785><P class='tr'>&nbsp;
<SYNC Start=11047345><P class='tr'> 
<SYNC Start=11050225><P class='tr'>&nbsp;
<SYNC Start=11050225><P class='tr'> 
<SYNC Start=11052375><P class='tr'>&nbsp;
<SYNC Start=11053055><P class='tr'> 
<SYNC Start=11054655><P class='tr'>&nbsp;
<SYNC Start=11055065><P class='tr'> 
<SYNC Start=11058095><P class='tr'>&nbsp;
<SYNC Start=11058095><P class='tr'> 
<SYNC Start=11059645><P class='tr'>&nbsp;
<SYNC Start=11060415><P class='tr'> 
<SYNC Start=11063485><P class='tr'>&nbsp;
<SYNC Start=11063485><P class='tr'> 
<SYNC Start=11064485><P class='tr'>&nbsp;
<SYNC Start=11064745><P class='tr'> 
<SYNC Start=11066865><P class='tr'>&nbsp;
<SYNC Start=11067185><P class='tr'> 
<SYNC Start=11070025><P class='tr'>&nbsp;
<SYNC Start=11070225><P class='tr'> 
<SYNC Start=11073265><P class='tr'>&nbsp;
<SYNC Start=11073265><P class='tr'> 
<SYNC Start=11076345><P class='tr'>&nbsp;
<SYNC Start=11076695><P class='tr'> 
<SYNC Start=11077695><P class='tr'>&nbsp;
<SYNC Start=11078065><P class='tr'> 
<SYNC Start=11080795><P class='tr'>&nbsp;
<SYNC Start=11080795><P class='tr'> 
<SYNC Start=11084275><P class='tr'>&nbsp;
<SYNC Start=11084315><P class='tr'> 
<SYNC Start=11087735><P class='tr'>&nbsp;
<SYNC Start=11087895><P class='tr'> 
<SYNC Start=11090895><P class='tr'>&nbsp;
<SYNC Start=11090895><P class='tr'> 
<SYNC Start=11092265><P class='tr'>&nbsp;
<SYNC Start=11092755><P class='tr'> 
<SYNC Start=11095765><P class='tr'>&nbsp;
<SYNC Start=11095765><P class='tr'> 
<SYNC Start=11099105><P class='tr'>&nbsp;
<SYNC Start=11099175><P class='tr'> 
<SYNC Start=11101905><P class='tr'>&nbsp;
<SYNC Start=11101905><P class='tr'> 
<SYNC Start=11104805><P class='tr'>&nbsp;
<SYNC Start=11104805><P class='tr'> 
<SYNC Start=11108125><P class='tr'>&nbsp;
<SYNC Start=11108125><P class='tr'> 
<SYNC Start=11110835><P class='tr'>&nbsp;
<SYNC Start=11110835><P class='tr'> 
<SYNC Start=11113455><P class='tr'>&nbsp;
<SYNC Start=11113455><P class='tr'> 
<SYNC Start=11116405><P class='tr'>&nbsp;
<SYNC Start=11116405><P class='tr'> 
<SYNC Start=11119225><P class='tr'>&nbsp;
<SYNC Start=11119225><P class='tr'> 
<SYNC Start=11121775><P class='tr'>&nbsp;
<SYNC Start=11123085><P class='tr'> 
<SYNC Start=11126445><P class='tr'>&nbsp;
<SYNC Start=11127315><P class='tr'> 
<SYNC Start=11130515><P class='tr'>&nbsp;
<SYNC Start=11130845><P class='tr'> 
<SYNC Start=11133915><P class='tr'>&nbsp;
<SYNC Start=11133915><P class='tr'> 
<SYNC Start=11136985><P class='tr'>&nbsp;
<SYNC Start=11136985><P class='tr'> 
<SYNC Start=11140005><P class='tr'>&nbsp;
<SYNC Start=11140005><P class='tr'> 
<SYNC Start=11141005><P class='tr'>&nbsp;
<SYNC Start=11141645><P class='tr'> 
<SYNC Start=11144715><P class='tr'>&nbsp;
<SYNC Start=11144715><P class='tr'> 
<SYNC Start=11147775><P class='tr'>&nbsp;
<SYNC Start=11147775><P class='tr'> 
<SYNC Start=11150385><P class='tr'>&nbsp;
<SYNC Start=11150385><P class='tr'> 
<SYNC Start=11153305><P class='tr'>&nbsp;
<SYNC Start=11153305><P class='tr'> 
<SYNC Start=11155455><P class='tr'>&nbsp;
<SYNC Start=11156085><P class='tr'> 
<SYNC Start=11158875><P class='tr'>&nbsp;
<SYNC Start=11158875><P class='tr'> 
<SYNC Start=11161535><P class='tr'>&nbsp;
<SYNC Start=11161535><P class='tr'> 
<SYNC Start=11164675><P class='tr'>&nbsp;
<SYNC Start=11164675><P class='tr'> 
<SYNC Start=11167535><P class='tr'>&nbsp;
<SYNC Start=11167535><P class='tr'> 
<SYNC Start=11170755><P class='tr'>&nbsp;
<SYNC Start=11170755><P class='tr'> 
<SYNC Start=11173715><P class='tr'>&nbsp;
<SYNC Start=11173715><P class='tr'> 
<SYNC Start=11176555><P class='tr'>&nbsp;
<SYNC Start=11176555><P class='tr'> 
<SYNC Start=11177755><P class='tr'>&nbsp;
<SYNC Start=11178285><P class='tr'> 
<SYNC Start=11181435><P class='tr'>&nbsp;
<SYNC Start=11181435><P class='tr'> 
<SYNC Start=11183245><P class='tr'>&nbsp;
<SYNC Start=11183585><P class='tr'> 
<SYNC Start=11186675><P class='tr'>&nbsp;
<SYNC Start=11186895><P class='tr'> 
<SYNC Start=11189935><P class='tr'>&nbsp;
<SYNC Start=11189935><P class='tr'> 
<SYNC Start=11192155><P class='tr'>&nbsp;
<SYNC Start=11193075><P class='tr'> 
<SYNC Start=11195915><P class='tr'>&nbsp;
<SYNC Start=11195955><P class='tr'> 
<SYNC Start=11198975><P class='tr'>&nbsp;
<SYNC Start=11198975><P class='tr'> 
<SYNC Start=11200965><P class='tr'>&nbsp;
<SYNC Start=11201885><P class='tr'> 
<SYNC Start=11204975><P class='tr'>&nbsp;
<SYNC Start=11204975><P class='tr'> 
<SYNC Start=11208185><P class='tr'>&nbsp;
<SYNC Start=11208185><P class='tr'> 
<SYNC Start=11210715><P class='tr'>&nbsp;
<SYNC Start=11211245><P class='tr'> 
<SYNC Start=11214725><P class='tr'>&nbsp;
<SYNC Start=11215085><P class='tr'> 
<SYNC Start=11217635><P class='tr'>&nbsp;
<SYNC Start=11218075><P class='tr'> 
<SYNC Start=11219625><P class='tr'>&nbsp;
<SYNC Start=11219625><P class='tr'> 
<SYNC Start=11221665><P class='tr'>&nbsp;
<SYNC Start=11222695><P class='tr'> 
<SYNC Start=11224755><P class='tr'>&nbsp;
<SYNC Start=11225665><P class='tr'> 
<SYNC Start=11228705><P class='tr'>&nbsp;
<SYNC Start=11228705><P class='tr'> 
<SYNC Start=11231545><P class='tr'>&nbsp;
<SYNC Start=11231545><P class='tr'> 
<SYNC Start=11235015><P class='tr'>&nbsp;
<SYNC Start=11235465><P class='tr'> 
<SYNC Start=11238485><P class='tr'>&nbsp;
<SYNC Start=11238485><P class='tr'> 
<SYNC Start=11240155><P class='tr'>&nbsp;
<SYNC Start=11242135><P class='tr'> 
<SYNC Start=11245165><P class='tr'>&nbsp;
<SYNC Start=11245165><P class='tr'> 
<SYNC Start=11247205><P class='tr'>&nbsp;
<SYNC Start=11247955><P class='tr'> 
<SYNC Start=11249775><P class='tr'>&nbsp;
<SYNC Start=11250535><P class='tr'> 
<SYNC Start=11253065><P class='tr'>&nbsp;
<SYNC Start=11253065><P class='tr'> 
<SYNC Start=11255045><P class='tr'>&nbsp;
<SYNC Start=11255745><P class='tr'> 
<SYNC Start=11256985><P class='tr'>&nbsp;
<SYNC Start=11257775><P class='tr'> 
<SYNC Start=11260715><P class='tr'>&nbsp;
<SYNC Start=11260715><P class='tr'> 
<SYNC Start=11263425><P class='tr'>&nbsp;
<SYNC Start=11264315><P class='tr'> 
<SYNC Start=11267015><P class='tr'>&nbsp;
<SYNC Start=11267015><P class='tr'> 
<SYNC Start=11268595><P class='tr'>&nbsp;
<SYNC Start=11269495><P class='tr'> 
<SYNC Start=11272775><P class='tr'>&nbsp;
<SYNC Start=11272775><P class='tr'> 
<SYNC Start=11276275><P class='tr'>&nbsp;
<SYNC Start=11276595><P class='tr'> 
<SYNC Start=11278235><P class='tr'>&nbsp;
<SYNC Start=11279295><P class='tr'> 
<SYNC Start=11280295><P class='tr'>&nbsp;
<SYNC Start=11280995><P class='tr'> 
<SYNC Start=11283965><P class='tr'>&nbsp;
<SYNC Start=11283965><P class='tr'> 
<SYNC Start=11286905><P class='tr'>&nbsp;
<SYNC Start=11286905><P class='tr'> 
<SYNC Start=11288335><P class='tr'>&nbsp;
<SYNC Start=11289265><P class='tr'> 
<SYNC Start=11292225><P class='tr'>&nbsp;
<SYNC Start=11292225><P class='tr'> 
<SYNC Start=11295555><P class='tr'>&nbsp;
<SYNC Start=11296015><P class='tr'> 
<SYNC Start=11298925><P class='tr'>&nbsp;
<SYNC Start=11299205><P class='tr'> 
<SYNC Start=11302075><P class='tr'>&nbsp;
<SYNC Start=11302075><P class='tr'> 
<SYNC Start=11304965><P class='tr'>&nbsp;
<SYNC Start=11304975><P class='tr'> 
<SYNC Start=11307745><P class='tr'>&nbsp;
<SYNC Start=11307745><P class='tr'> 
<SYNC Start=11308745><P class='tr'>&nbsp;
<SYNC Start=11309055><P class='tr'> 
<SYNC Start=11311795><P class='tr'>&nbsp;
<SYNC Start=11311795><P class='tr'> 
<SYNC Start=11314775><P class='tr'>&nbsp;
<SYNC Start=11314995><P class='tr'> 
<SYNC Start=11316915><P class='tr'>&nbsp;
<SYNC Start=11317645><P class='tr'> 
<SYNC Start=11319535><P class='tr'>&nbsp;
<SYNC Start=11320115><P class='tr'> 
<SYNC Start=11321415><P class='tr'>&nbsp;
<SYNC Start=11321965><P class='tr'> 
<SYNC Start=11323195><P class='tr'>&nbsp;
<SYNC Start=11323775><P class='tr'> 
<SYNC Start=11326155><P class='tr'>&nbsp;
<SYNC Start=11326745><P class='tr'> 
<SYNC Start=11327745><P class='tr'>&nbsp;
<SYNC Start=11327935><P class='tr'> 
<SYNC Start=11329615><P class='tr'>&nbsp;
<SYNC Start=11330665><P class='tr'> 
<SYNC Start=11333205><P class='tr'>&nbsp;
<SYNC Start=11333925><P class='tr'> 
<SYNC Start=11336715><P class='tr'>&nbsp;
<SYNC Start=11336715><P class='tr'> 
<SYNC Start=11339995><P class='tr'>&nbsp;
<SYNC Start=11340145><P class='tr'> 
<SYNC Start=11342615><P class='tr'>&nbsp;
<SYNC Start=11343065><P class='tr'> 
<SYNC Start=11345635><P class='tr'>&nbsp;
<SYNC Start=11346515><P class='tr'> 
<SYNC Start=11349715><P class='tr'>&nbsp;
<SYNC Start=11350975><P class='tr'> 
<SYNC Start=11354085><P class='tr'>&nbsp;
<SYNC Start=11354245><P class='tr'> 
<SYNC Start=11355395><P class='tr'>&nbsp;
<SYNC Start=11356215><P class='tr'> 
<SYNC Start=11359685><P class='tr'>&nbsp;
<SYNC Start=11360215><P class='tr'> 
<SYNC Start=11361955><P class='tr'>&nbsp;
<SYNC Start=11362895><P class='tr'> 
<SYNC Start=11364405><P class='tr'>&nbsp;
<SYNC Start=11366065><P class='tr'> 
<SYNC Start=11368885><P class='tr'>&nbsp;
<SYNC Start=11368885><P class='tr'> 
<SYNC Start=11369885><P class='tr'>&nbsp;
<SYNC Start=11370385><P class='tr'> 
<SYNC Start=11373335><P class='tr'>&nbsp;
<SYNC Start=11373695><P class='tr'> 
<SYNC Start=11375535><P class='tr'>&nbsp;
<SYNC Start=11375915><P class='tr'> 
<SYNC Start=11376915><P class='tr'>&nbsp;
<SYNC Start=11378385><P class='tr'> 
<SYNC Start=11379385><P class='tr'>&nbsp;
<SYNC Start=11379725><P class='tr'> 
<SYNC Start=11382885><P class='tr'>&nbsp;
<SYNC Start=11383805><P class='tr'> 
<SYNC Start=11385365><P class='tr'>&nbsp;
<SYNC Start=11386315><P class='tr'> 
<SYNC Start=11389085><P class='tr'>&nbsp;
<SYNC Start=11390425><P class='tr'> 
<SYNC Start=11392055><P class='tr'>&nbsp;
<SYNC Start=11394875><P class='tr'> 
<SYNC Start=11395875><P class='tr'>&nbsp;
<SYNC Start=11397225><P class='tr'> 
<SYNC Start=11400715><P class='tr'>&nbsp;
<SYNC Start=11401345><P class='tr'> 
<SYNC Start=11403785><P class='tr'>&nbsp;
<SYNC Start=11403785><P class='tr'> 
<SYNC Start=11406415><P class='tr'>&nbsp;
<SYNC Start=11407955><P class='tr'> 
<SYNC Start=11410245><P class='tr'>&nbsp;
<SYNC Start=11410245><P class='tr'> 
<SYNC Start=11413715><P class='tr'>&nbsp;
<SYNC Start=11413935><P class='tr'> 
<SYNC Start=11417025><P class='tr'>&nbsp;
<SYNC Start=11417025><P class='tr'> 
<SYNC Start=11419075><P class='tr'>&nbsp;
<SYNC Start=11420165><P class='tr'> 
<SYNC Start=11423295><P class='tr'>&nbsp;
<SYNC Start=11423295><P class='tr'> 
<SYNC Start=11426075><P class='tr'>&nbsp;
<SYNC Start=11426075><P class='tr'> 
<SYNC Start=11427875><P class='tr'>&nbsp;
<SYNC Start=11428345><P class='tr'> 
<SYNC Start=11429415><P class='tr'>&nbsp;
<SYNC Start=11430205><P class='tr'> 
<SYNC Start=11431835><P class='tr'>&nbsp;
<SYNC Start=11432405><P class='tr'> 
<SYNC Start=11433695><P class='tr'>&nbsp;
<SYNC Start=11435635><P class='tr'> 
<SYNC Start=11436635><P class='tr'>&nbsp;
<SYNC Start=11437045><P class='tr'> 
<SYNC Start=11438435><P class='tr'>&nbsp;
<SYNC Start=11438795><P class='tr'> 
<SYNC Start=11440735><P class='tr'>&nbsp;
<SYNC Start=11443905><P class='tr'> 
<SYNC Start=11444955><P class='tr'>&nbsp;
<SYNC Start=11446555><P class='tr'> 
<SYNC Start=11448145><P class='tr'>&nbsp;
<SYNC Start=11448475><P class='tr'> 
<SYNC Start=11449885><P class='tr'>&nbsp;
<SYNC Start=11450805><P class='tr'> 
<SYNC Start=11452715><P class='tr'>&nbsp;
<SYNC Start=11453205><P class='tr'> 
<SYNC Start=11455315><P class='tr'>&nbsp;
<SYNC Start=11457115><P class='tr'> 
<SYNC Start=11458115><P class='tr'>&nbsp;
<SYNC Start=11458575><P class='tr'> 
<SYNC Start=11461475><P class='tr'>&nbsp;
<SYNC Start=11461475><P class='tr'> 
<SYNC Start=11464245><P class='tr'>&nbsp;
<SYNC Start=11464245><P class='tr'> 
<SYNC Start=11467015><P class='tr'>&nbsp;
<SYNC Start=11467015><P class='tr'> 
<SYNC Start=11469855><P class='tr'>&nbsp;
<SYNC Start=11470235><P class='tr'> 
<SYNC Start=11473735><P class='tr'>&nbsp;
<SYNC Start=11473855><P class='tr'> 
<SYNC Start=11476725><P class='tr'>&nbsp;
<SYNC Start=11477075><P class='tr'> 
<SYNC Start=11480225><P class='tr'>&nbsp;
<SYNC Start=11480245><P class='tr'> 
<SYNC Start=11483465><P class='tr'>&nbsp;
<SYNC Start=11483465><P class='tr'> 
<SYNC Start=11485775><P class='tr'>&nbsp;
<SYNC Start=11486275><P class='tr'> 
<SYNC Start=11489105><P class='tr'>&nbsp;
<SYNC Start=11489395><P class='tr'> 
<SYNC Start=11491485><P class='tr'>&nbsp;
<SYNC Start=11493975><P class='tr'> 
<SYNC Start=11496235><P class='tr'>&nbsp;
<SYNC Start=11496235><P class='tr'> 
<SYNC Start=11499265><P class='tr'>&nbsp;
<SYNC Start=11499265><P class='tr'> 
<SYNC Start=11501905><P class='tr'>&nbsp;
<SYNC Start=11502315><P class='tr'> 
<SYNC Start=11505295><P class='tr'>&nbsp;
<SYNC Start=11505295><P class='tr'> 
<SYNC Start=11508285><P class='tr'>&nbsp;
<SYNC Start=11509025><P class='tr'> 
<SYNC Start=11512195><P class='tr'>&nbsp;
<SYNC Start=11512195><P class='tr'> 
<SYNC Start=11515165><P class='tr'>&nbsp;
<SYNC Start=11515165><P class='tr'> 
<SYNC Start=11517885><P class='tr'>&nbsp;
<SYNC Start=11517885><P class='tr'> 
<SYNC Start=11520815><P class='tr'>&nbsp;
<SYNC Start=11520815><P class='tr'> 
<SYNC Start=11523695><P class='tr'>&nbsp;
<SYNC Start=11523695><P class='tr'> 
<SYNC Start=11524695><P class='tr'>&nbsp;
<SYNC Start=11525635><P class='tr'> 
<SYNC Start=11526635><P class='tr'>&nbsp;
<SYNC Start=11527145><P class='tr'> 
<SYNC Start=11530005><P class='tr'>&nbsp;
<SYNC Start=11530005><P class='tr'> 
<SYNC Start=11533165><P class='tr'>&nbsp;
<SYNC Start=11533165><P class='tr'> 
<SYNC Start=11536105><P class='tr'>&nbsp;
<SYNC Start=11536105><P class='tr'> 
<SYNC Start=11538945><P class='tr'>&nbsp;
<SYNC Start=11538945><P class='tr'> 
<SYNC Start=11539945><P class='tr'>&nbsp;
<SYNC Start=11541315><P class='tr'> 
<SYNC Start=11543915><P class='tr'>&nbsp;
<SYNC Start=11544375><P class='tr'> 
<SYNC Start=11547115><P class='tr'>&nbsp;
<SYNC Start=11547275><P class='tr'> 
<SYNC Start=11549495><P class='tr'>&nbsp;
<SYNC Start=11549995><P class='tr'> 
<SYNC Start=11553465><P class='tr'>&nbsp;
<SYNC Start=11553635><P class='tr'> 
<SYNC Start=11556575><P class='tr'>&nbsp;
<SYNC Start=11556635><P class='tr'> 
<SYNC Start=11559555><P class='tr'>&nbsp;
<SYNC Start=11559555><P class='tr'> 
<SYNC Start=11560555><P class='tr'>&nbsp;
<SYNC Start=11561855><P class='tr'> 
<SYNC Start=11564875><P class='tr'>&nbsp;
<SYNC Start=11564875><P class='tr'> 
<SYNC Start=11565875><P class='tr'>&nbsp;
<SYNC Start=11566875><P class='tr'> 
<SYNC Start=11567875><P class='tr'>&nbsp;
<SYNC Start=11568115><P class='tr'> 
<SYNC Start=11569175><P class='tr'>&nbsp;
<SYNC Start=11570975><P class='tr'> 
<SYNC Start=11572115><P class='tr'>&nbsp;
<SYNC Start=11572585><P class='tr'> 
<SYNC Start=11573985><P class='tr'>&nbsp;
<SYNC Start=11575745><P class='tr'> 
<SYNC Start=11577035><P class='tr'>&nbsp;
<SYNC Start=11577385><P class='tr'> 
<SYNC Start=11579625><P class='tr'>&nbsp;
<SYNC Start=11579625><P class='tr'> 
<SYNC Start=11581435><P class='tr'>&nbsp;
<SYNC Start=11582145><P class='tr'> 
<SYNC Start=11584005><P class='tr'>&nbsp;
<SYNC Start=11584005><P class='tr'> 
<SYNC Start=11586255><P class='tr'>&nbsp;
<SYNC Start=11587315><P class='tr'> 
<SYNC Start=11588505><P class='tr'>&nbsp;
<SYNC Start=11589095><P class='tr'> 
<SYNC Start=11591475><P class='tr'>&nbsp;
<SYNC Start=11591475><P class='tr'> 
<SYNC Start=11594905><P class='tr'>&nbsp;
<SYNC Start=11595825><P class='tr'> 
<SYNC Start=11597285><P class='tr'>&nbsp;
<SYNC Start=11597755><P class='tr'> 
<SYNC Start=11601085><P class='tr'>&nbsp;
<SYNC Start=11601825><P class='tr'> 
<SYNC Start=11604585><P class='tr'>&nbsp;
<SYNC Start=11605575><P class='tr'> 
<SYNC Start=11606575><P class='tr'>&nbsp;
<SYNC Start=11606975><P class='tr'> 
<SYNC Start=11608525><P class='tr'>&nbsp;
<SYNC Start=11609445><P class='tr'> 
<SYNC Start=11612675><P class='tr'>&nbsp;
<SYNC Start=11612765><P class='tr'> 
<SYNC Start=11614265><P class='tr'>&nbsp;
<SYNC Start=11615145><P class='tr'> 
<SYNC Start=11616515><P class='tr'>&nbsp;
<SYNC Start=11617045><P class='tr'> 
<SYNC Start=11619515><P class='tr'>&nbsp;
<SYNC Start=11622545><P class='tr'> 
<SYNC Start=11625085><P class='tr'>&nbsp;
<SYNC Start=11625085><P class='tr'> 
<SYNC Start=11626725><P class='tr'>&nbsp;
<SYNC Start=11628875><P class='tr'> 
<SYNC Start=11630065><P class='tr'>&nbsp;
<SYNC Start=11631085><P class='tr'> 
<SYNC Start=11632525><P class='tr'>&nbsp;
<SYNC Start=11633405><P class='tr'> 
<SYNC Start=11636275><P class='tr'>&nbsp;
<SYNC Start=11636605><P class='tr'> 
<SYNC Start=11638875><P class='tr'>&nbsp;
<SYNC Start=11639765><P class='tr'> 
<SYNC Start=11642665><P class='tr'>&nbsp;
<SYNC Start=11642665><P class='tr'> 
<SYNC Start=11645735><P class='tr'>&nbsp;
<SYNC Start=11645735><P class='tr'> 
<SYNC Start=11647365><P class='tr'>&nbsp;
<SYNC Start=11648925><P class='tr'> 
<SYNC Start=11649975><P class='tr'>&nbsp;
<SYNC Start=11650315><P class='tr'> 
<SYNC Start=11651515><P class='tr'>&nbsp;
<SYNC Start=11652305><P class='tr'> 
<SYNC Start=11653575><P class='tr'>&nbsp;
<SYNC Start=11654545><P class='tr'> 
<SYNC Start=11656755><P class='tr'>&nbsp;
<SYNC Start=11657995><P class='tr'> 
<SYNC Start=11661455><P class='tr'>&nbsp;
<SYNC Start=11661495><P class='tr'> 
<SYNC Start=11663645><P class='tr'>&nbsp;
<SYNC Start=11664135><P class='tr'> 
<SYNC Start=11667305><P class='tr'>&nbsp;
<SYNC Start=11667305><P class='tr'> 
<SYNC Start=11669755><P class='tr'>&nbsp;
<SYNC Start=11669755><P class='tr'> 
<SYNC Start=11672805><P class='tr'>&nbsp;
<SYNC Start=11672805><P class='tr'> 
<SYNC Start=11675785><P class='tr'>&nbsp;
<SYNC Start=11675785><P class='tr'> 
<SYNC Start=11677175><P class='tr'>&nbsp;
<SYNC Start=11678275><P class='tr'> 
<SYNC Start=11680995><P class='tr'>&nbsp;
<SYNC Start=11680995><P class='tr'> 
<SYNC Start=11683765><P class='tr'>&nbsp;
<SYNC Start=11683765><P class='tr'> 
<SYNC Start=11686085><P class='tr'>&nbsp;
<SYNC Start=11687645><P class='tr'> 
<SYNC Start=11688645><P class='tr'>&nbsp;
<SYNC Start=11689725><P class='tr'> 
<SYNC Start=11691355><P class='tr'>&nbsp;
<SYNC Start=11691855><P class='tr'> 
<SYNC Start=11694885><P class='tr'>&nbsp;
<SYNC Start=11694885><P class='tr'> 
<SYNC Start=11697805><P class='tr'>&nbsp;
<SYNC Start=11697805><P class='tr'> 
<SYNC Start=11699105><P class='tr'>&nbsp;
<SYNC Start=11699575><P class='tr'> 
<SYNC Start=11700725><P class='tr'>&nbsp;
<SYNC Start=11701145><P class='tr'> 
<SYNC Start=11704085><P class='tr'>&nbsp;
<SYNC Start=11704085><P class='tr'> 
<SYNC Start=11705085><P class='tr'>&nbsp;
<SYNC Start=11705545><P class='tr'> 
<SYNC Start=11708525><P class='tr'>&nbsp;
<SYNC Start=11708525><P class='tr'> 
<SYNC Start=11710735><P class='tr'>&nbsp;
<SYNC Start=11711225><P class='tr'> 
<SYNC Start=11714665><P class='tr'>&nbsp;
<SYNC Start=11714865><P class='tr'> 
<SYNC Start=11717495><P class='tr'>&nbsp;
<SYNC Start=11718005><P class='tr'> 
<SYNC Start=11720775><P class='tr'>&nbsp;
<SYNC Start=11720925><P class='tr'> 
<SYNC Start=11721925><P class='tr'>&nbsp;
<SYNC Start=11722405><P class='tr'> 
<SYNC Start=11723635><P class='tr'>&nbsp;
<SYNC Start=11724395><P class='tr'> 
<SYNC Start=11727545><P class='tr'>&nbsp;
<SYNC Start=11727545><P class='tr'> 
<SYNC Start=11728545><P class='tr'>&nbsp;
<SYNC Start=11729565><P class='tr'> 
<SYNC Start=11732845><P class='tr'>&nbsp;
<SYNC Start=11732845><P class='tr'> 
<SYNC Start=11736075><P class='tr'>&nbsp;
<SYNC Start=11736075><P class='tr'> 
<SYNC Start=11738475><P class='tr'>&nbsp;
<SYNC Start=11738975><P class='tr'> 
<SYNC Start=11741825><P class='tr'>&nbsp;
<SYNC Start=11741825><P class='tr'> 
<SYNC Start=11744885><P class='tr'>&nbsp;
<SYNC Start=11744885><P class='tr'> 
<SYNC Start=11747975><P class='tr'>&nbsp;
<SYNC Start=11748845><P class='tr'> 
<SYNC Start=11751025><P class='tr'>&nbsp;
<SYNC Start=11751025><P class='tr'> 
<SYNC Start=11754025><P class='tr'>&nbsp;
<SYNC Start=11754025><P class='tr'> 
<SYNC Start=11757405><P class='tr'>&nbsp;
<SYNC Start=11757925><P class='tr'> 
<SYNC Start=11760795><P class='tr'>&nbsp;
<SYNC Start=11760795><P class='tr'> 
<SYNC Start=11762865><P class='tr'>&nbsp;
<SYNC Start=11764045><P class='tr'> 
<SYNC Start=11766285><P class='tr'>&nbsp;
<SYNC Start=11767045><P class='tr'> 
<SYNC Start=11770295><P class='tr'>&nbsp;
<SYNC Start=11770295><P class='tr'> 
<SYNC Start=11772325><P class='tr'>&nbsp;
<SYNC Start=11773295><P class='tr'> 
<SYNC Start=11776095><P class='tr'>&nbsp;
<SYNC Start=11776095><P class='tr'> 
<SYNC Start=11779355><P class='tr'>&nbsp;
<SYNC Start=11779825><P class='tr'> 
<SYNC Start=11782495><P class='tr'>&nbsp;
<SYNC Start=11783135><P class='tr'> 
<SYNC Start=11785935><P class='tr'>&nbsp;
<SYNC Start=11785935><P class='tr'> 
<SYNC Start=11788745><P class='tr'>&nbsp;
<SYNC Start=11788745><P class='tr'> 
<SYNC Start=11791265><P class='tr'>&nbsp;
<SYNC Start=11791385><P class='tr'> 
<SYNC Start=11794315><P class='tr'>&nbsp;
<SYNC Start=11794315><P class='tr'> 
<SYNC Start=11797315><P class='tr'>&nbsp;
<SYNC Start=11797315><P class='tr'> 
<SYNC Start=11800235><P class='tr'>&nbsp;
<SYNC Start=11800235><P class='tr'> 
<SYNC Start=11803255><P class='tr'>&nbsp;
<SYNC Start=11803705><P class='tr'> 
<SYNC Start=11806215><P class='tr'>&nbsp;
<SYNC Start=11806215><P class='tr'> 
<SYNC Start=11808665><P class='tr'>&nbsp;
<SYNC Start=11809075><P class='tr'> 
<SYNC Start=11811795><P class='tr'>&nbsp;
<SYNC Start=11811795><P class='tr'> 
<SYNC Start=11814375><P class='tr'>&nbsp;
<SYNC Start=11814375><P class='tr'> 
<SYNC Start=11817455><P class='tr'>&nbsp;
<SYNC Start=11817905><P class='tr'> 
<SYNC Start=11820775><P class='tr'>&nbsp;
<SYNC Start=11820775><P class='tr'> 
<SYNC Start=11822125><P class='tr'>&nbsp;
<SYNC Start=11822445><P class='tr'> 
<SYNC Start=11825515><P class='tr'>&nbsp;
<SYNC Start=11825515><P class='tr'> 
<SYNC Start=11828805><P class='tr'>&nbsp;
<SYNC Start=11828995><P class='tr'> 
<SYNC Start=11831755><P class='tr'>&nbsp;
<SYNC Start=11831755><P class='tr'> 
<SYNC Start=11833675><P class='tr'>&nbsp;
<SYNC Start=11834295><P class='tr'> 
<SYNC Start=11836425><P class='tr'>&nbsp;
<SYNC Start=11837145><P class='tr'> 
<SYNC Start=11838145><P class='tr'>&nbsp;
<SYNC Start=11839215><P class='tr'> 
<SYNC Start=11841555><P class='tr'>&nbsp;
<SYNC Start=11842325><P class='tr'> 
<SYNC Start=11845635><P class='tr'>&nbsp;
<SYNC Start=11847445><P class='tr'> 
<SYNC Start=11849785><P class='tr'>&nbsp;
<SYNC Start=11849785><P class='tr'> 
<SYNC Start=11852495><P class='tr'>&nbsp;
<SYNC Start=11852495><P class='tr'> 
<SYNC Start=11854125><P class='tr'>&nbsp;
<SYNC Start=11854835><P class='tr'> 
<SYNC Start=11857695><P class='tr'>&nbsp;
<SYNC Start=11858375><P class='tr'> 
<SYNC Start=11859285><P class='tr'>&nbsp;
<SYNC Start=11859285><P class='tr'> 
<SYNC Start=11862415><P class='tr'>&nbsp;
<SYNC Start=11862415><P class='tr'> 
<SYNC Start=11865255><P class='tr'>&nbsp;
<SYNC Start=11865255><P class='tr'> 
<SYNC Start=11867155><P class='tr'>&nbsp;
<SYNC Start=11867665><P class='tr'> 
<SYNC Start=11869095><P class='tr'>&nbsp;
<SYNC Start=11869445><P class='tr'> 
<SYNC Start=11870915><P class='tr'>&nbsp;
<SYNC Start=11872115><P class='tr'> 
<SYNC Start=11874425><P class='tr'>&nbsp;
<SYNC Start=11874425><P class='tr'> 
<SYNC Start=11875965><P class='tr'>&nbsp;
<SYNC Start=11876805><P class='tr'> 
<SYNC Start=11879555><P class='tr'>&nbsp;
<SYNC Start=11880595><P class='tr'> 
<SYNC Start=11881595><P class='tr'>&nbsp;
<SYNC Start=11882945><P class='tr'> 
<SYNC Start=11885555><P class='tr'>&nbsp;
<SYNC Start=11886205><P class='tr'> 
<SYNC Start=11887345><P class='tr'>&nbsp;
<SYNC Start=11887805><P class='tr'> 
<SYNC Start=11890715><P class='tr'>&nbsp;
<SYNC Start=11890715><P class='tr'> 
<SYNC Start=11893995><P class='tr'>&nbsp;
<SYNC Start=11893995><P class='tr'> 
<SYNC Start=11894995><P class='tr'>&nbsp;
<SYNC Start=11896045><P class='tr'> 
<SYNC Start=11897565><P class='tr'>&nbsp;
<SYNC Start=11899535><P class='tr'> 
<SYNC Start=11902485><P class='tr'>&nbsp;
<SYNC Start=11903175><P class='tr'> 
<SYNC Start=11906295><P class='tr'>&nbsp;
<SYNC Start=11906295><P class='tr'> 
<SYNC Start=11909145><P class='tr'>&nbsp;
<SYNC Start=11909545><P class='tr'> 
<SYNC Start=11912475><P class='tr'>&nbsp;
<SYNC Start=11912475><P class='tr'> 
<SYNC Start=11915105><P class='tr'>&nbsp;
<SYNC Start=11915835><P class='tr'> 
<SYNC Start=11916805><P class='tr'>&nbsp;
<SYNC Start=11916805><P class='tr'> 
<SYNC Start=11917905><P class='tr'>&nbsp;
<SYNC Start=11918325><P class='tr'> 
<SYNC Start=11921515><P class='tr'>&nbsp;
<SYNC Start=11922485><P class='tr'> 
<SYNC Start=11925455><P class='tr'>&nbsp;
<SYNC Start=11925455><P class='tr'> 
<SYNC Start=11928955><P class='tr'>&nbsp;
<SYNC Start=11929365><P class='tr'> 
<SYNC Start=11931745><P class='tr'>&nbsp;
<SYNC Start=11932285><P class='tr'> 
<SYNC Start=11933285><P class='tr'>&nbsp;
<SYNC Start=11935115><P class='tr'> 
<SYNC Start=11936385><P class='tr'>&nbsp;
<SYNC Start=11937585><P class='tr'> 
<SYNC Start=11940365><P class='tr'>&nbsp;
<SYNC Start=11940365><P class='tr'> 
<SYNC Start=11943285><P class='tr'>&nbsp;
<SYNC Start=11943595><P class='tr'> 
<SYNC Start=11944715><P class='tr'>&nbsp;
<SYNC Start=11945695><P class='tr'> 
<SYNC Start=11947155><P class='tr'>&nbsp;
<SYNC Start=11947635><P class='tr'> 
<SYNC Start=11950085><P class='tr'>&nbsp;
<SYNC Start=11950085><P class='tr'> 
<SYNC Start=11953095><P class='tr'>&nbsp;
<SYNC Start=11953095><P class='tr'> 
<SYNC Start=11956045><P class='tr'>&nbsp;
<SYNC Start=11956465><P class='tr'> 
<SYNC Start=11959555><P class='tr'>&nbsp;
<SYNC Start=11959555><P class='tr'> 
<SYNC Start=11962095><P class='tr'>&nbsp;
<SYNC Start=11964075><P class='tr'> 
<SYNC Start=11966255><P class='tr'>&nbsp;
<SYNC Start=11966745><P class='tr'> 
<SYNC Start=11969635><P class='tr'>&nbsp;
<SYNC Start=11969635><P class='tr'> 
<SYNC Start=11971045><P class='tr'>&nbsp;
<SYNC Start=11971645><P class='tr'> 
<SYNC Start=11974255><P class='tr'>&nbsp;
<SYNC Start=11974995><P class='tr'> 
<SYNC Start=11978495><P class='tr'>&nbsp;
<SYNC Start=11978645><P class='tr'> 
<SYNC Start=11981505><P class='tr'>&nbsp;
<SYNC Start=11981505><P class='tr'> 
<SYNC Start=11982505><P class='tr'>&nbsp;
<SYNC Start=11982745><P class='tr'> 
<SYNC Start=11985705><P class='tr'>&nbsp;
<SYNC Start=11985705><P class='tr'> 
<SYNC Start=11988985><P class='tr'>&nbsp;
<SYNC Start=11989765><P class='tr'> 
<SYNC Start=11992015><P class='tr'>&nbsp;
<SYNC Start=11993395><P class='tr'> 
<SYNC Start=11996195><P class='tr'>&nbsp;
<SYNC Start=11996695><P class='tr'> 
<SYNC Start=11999035><P class='tr'>&nbsp;
<SYNC Start=11999495><P class='tr'> 
<SYNC Start=12000585><P class='tr'>&nbsp;
<SYNC Start=12002325><P class='tr'> 
<SYNC Start=12003535><P class='tr'>&nbsp;
<SYNC Start=12003925><P class='tr'> 
<SYNC Start=12006305><P class='tr'>&nbsp;
<SYNC Start=12007585><P class='tr'> 
<SYNC Start=12008775><P class='tr'>&nbsp;
<SYNC Start=12009975><P class='tr'> 
<SYNC Start=12010975><P class='tr'>&nbsp;
<SYNC Start=12011635><P class='tr'> 
<SYNC Start=12014235><P class='tr'>&nbsp;
<SYNC Start=12014355><P class='tr'> 
<SYNC Start=12016575><P class='tr'>&nbsp;
<SYNC Start=12016885><P class='tr'> 
<SYNC Start=12019915><P class='tr'>&nbsp;
<SYNC Start=12020015><P class='tr'> 
<SYNC Start=12023135><P class='tr'>&nbsp;
<SYNC Start=12023135><P class='tr'> 
<SYNC Start=12025105><P class='tr'>&nbsp;
<SYNC Start=12026335><P class='tr'> 
<SYNC Start=12027565><P class='tr'>&nbsp;
<SYNC Start=12028445><P class='tr'> 
<SYNC Start=12030665><P class='tr'>&nbsp;
<SYNC Start=12031005><P class='tr'> 
<SYNC Start=12032255><P class='tr'>&nbsp;
<SYNC Start=12032945><P class='tr'> 
<SYNC Start=12035185><P class='tr'>&nbsp;
<SYNC Start=12035945><P class='tr'> 
<SYNC Start=12038375><P class='tr'>&nbsp;
<SYNC Start=12040885><P class='tr'> 
<SYNC Start=12043855><P class='tr'>&nbsp;
<SYNC Start=12044675><P class='tr'> 
<SYNC Start=12047615><P class='tr'>&nbsp;
<SYNC Start=12050485><P class='tr'> 
<SYNC Start=12053435><P class='tr'>&nbsp;
<SYNC Start=12053435><P class='tr'> 
<SYNC Start=12054435><P class='tr'>&nbsp;
<SYNC Start=12054865><P class='tr'> 
<SYNC Start=12057665><P class='tr'>&nbsp;
<SYNC Start=12059075><P class='tr'> 
<SYNC Start=12062535><P class='tr'>&nbsp;
<SYNC Start=12063165><P class='tr'> 
<SYNC Start=12066355><P class='tr'>&nbsp;
<SYNC Start=12066355><P class='tr'> 
<SYNC Start=12067435><P class='tr'>&nbsp;
<SYNC Start=12069235><P class='tr'> 
<SYNC Start=12072135><P class='tr'>&nbsp;
<SYNC Start=12072475><P class='tr'> 
<SYNC Start=12075815><P class='tr'>&nbsp;
<SYNC Start=12076135><P class='tr'> 
<SYNC Start=12078925><P class='tr'>&nbsp;
<SYNC Start=12078925><P class='tr'> 
<SYNC Start=12081815><P class='tr'>&nbsp;
<SYNC Start=12081815><P class='tr'> 
<SYNC Start=12084655><P class='tr'>&nbsp;
<SYNC Start=12084655><P class='tr'> 
<SYNC Start=12087765><P class='tr'>&nbsp;
<SYNC Start=12087915><P class='tr'> 
<SYNC Start=12090335><P class='tr'>&nbsp;
<SYNC Start=12090725><P class='tr'> 
<SYNC Start=12093735><P class='tr'>&nbsp;
<SYNC Start=12093735><P class='tr'> 
<SYNC Start=12096805><P class='tr'>&nbsp;
<SYNC Start=12096805><P class='tr'> 
<SYNC Start=12099175><P class='tr'>&nbsp;
<SYNC Start=12099675><P class='tr'> 
<SYNC Start=12102265><P class='tr'>&nbsp;
<SYNC Start=12102265><P class='tr'> 
<SYNC Start=12104845><P class='tr'>&nbsp;
<SYNC Start=12104845><P class='tr'> 
<SYNC Start=12107825><P class='tr'>&nbsp;
<SYNC Start=12107825><P class='tr'> 
<SYNC Start=12110925><P class='tr'>&nbsp;
<SYNC Start=12111015><P class='tr'> 
<SYNC Start=12114485><P class='tr'>&nbsp;
<SYNC Start=12114675><P class='tr'> 
<SYNC Start=12117895><P class='tr'>&nbsp;
<SYNC Start=12117995><P class='tr'> 
<SYNC Start=12120715><P class='tr'>&nbsp;
<SYNC Start=12120715><P class='tr'> 
<SYNC Start=12122605><P class='tr'>&nbsp;
<SYNC Start=12122915><P class='tr'> 
<SYNC Start=12124805><P class='tr'>&nbsp;
<SYNC Start=12125295><P class='tr'> 
<SYNC Start=12127685><P class='tr'>&nbsp;
<SYNC Start=12127685><P class='tr'> 
<SYNC Start=12130685><P class='tr'>&nbsp;
<SYNC Start=12130685><P class='tr'> 
<SYNC Start=12131685><P class='tr'>&nbsp;
<SYNC Start=12131955><P class='tr'> 
<SYNC Start=12134985><P class='tr'>&nbsp;
<SYNC Start=12134985><P class='tr'> 
<SYNC Start=12138135><P class='tr'>&nbsp;
<SYNC Start=12138135><P class='tr'> 
<SYNC Start=12141465><P class='tr'>&nbsp;
<SYNC Start=12141465><P class='tr'> 
<SYNC Start=12144375><P class='tr'>&nbsp;
<SYNC Start=12144375><P class='tr'> 
<SYNC Start=12147425><P class='tr'>&nbsp;
<SYNC Start=12147425><P class='tr'> 
<SYNC Start=12150325><P class='tr'>&nbsp;
<SYNC Start=12150325><P class='tr'> 
<SYNC Start=12153285><P class='tr'>&nbsp;
<SYNC Start=12153285><P class='tr'> 
<SYNC Start=12156775><P class='tr'>&nbsp;
<SYNC Start=12157765><P class='tr'> 
<SYNC Start=12160695><P class='tr'>&nbsp;
<SYNC Start=12160695><P class='tr'> 
<SYNC Start=12163665><P class='tr'>&nbsp;
<SYNC Start=12163665><P class='tr'> 
<SYNC Start=12165365><P class='tr'>&nbsp;
<SYNC Start=12165825><P class='tr'> 
<SYNC Start=12169215><P class='tr'>&nbsp;
<SYNC Start=12169215><P class='tr'> 
<SYNC Start=12171955><P class='tr'>&nbsp;
<SYNC Start=12171955><P class='tr'> 
<SYNC Start=12175115><P class='tr'>&nbsp;
<SYNC Start=12175275><P class='tr'> 
<SYNC Start=12178135><P class='tr'>&nbsp;
<SYNC Start=12178955><P class='tr'> 
<SYNC Start=12181865><P class='tr'>&nbsp;
<SYNC Start=12181865><P class='tr'> 
<SYNC Start=12184635><P class='tr'>&nbsp;
<SYNC Start=12184635><P class='tr'> 
<SYNC Start=12187665><P class='tr'>&nbsp;
<SYNC Start=12187665><P class='tr'> 
<SYNC Start=12188895><P class='tr'>&nbsp;
<SYNC Start=12189875><P class='tr'> 
<SYNC Start=12192795><P class='tr'>&nbsp;
<SYNC Start=12193135><P class='tr'> 
<SYNC Start=12195905><P class='tr'>&nbsp;
<SYNC Start=12195905><P class='tr'> 
<SYNC Start=12197065><P class='tr'>&nbsp;
<SYNC Start=12198175><P class='tr'> 
<SYNC Start=12199785><P class='tr'>&nbsp;
<SYNC Start=12201015><P class='tr'> 
<SYNC Start=12202805><P class='tr'>&nbsp;
<SYNC Start=12203565><P class='tr'> 
<SYNC Start=12206785><P class='tr'>&nbsp;
<SYNC Start=12207255><P class='tr'> 
<SYNC Start=12210565><P class='tr'>&nbsp;
<SYNC Start=12210985><P class='tr'> 
<SYNC Start=12213375><P class='tr'>&nbsp;
<SYNC Start=12213675><P class='tr'> 
<SYNC Start=12216045><P class='tr'>&nbsp;
<SYNC Start=12216555><P class='tr'> 
<SYNC Start=12219685><P class='tr'>&nbsp;
<SYNC Start=12220365><P class='tr'> 
<SYNC Start=12222455><P class='tr'>&nbsp;
<SYNC Start=12223705><P class='tr'> 
<SYNC Start=12226725><P class='tr'>&nbsp;
<SYNC Start=12227665><P class='tr'> 
<SYNC Start=12230745><P class='tr'>&nbsp;
<SYNC Start=12230745><P class='tr'> 
<SYNC Start=12233425><P class='tr'>&nbsp;
<SYNC Start=12233425><P class='tr'> 
<SYNC Start=12236535><P class='tr'>&nbsp;
<SYNC Start=12236805><P class='tr'> 
<SYNC Start=12237955><P class='tr'>&nbsp;
<SYNC Start=12238295><P class='tr'> 
<SYNC Start=12241355><P class='tr'>&nbsp;
<SYNC Start=12241355><P class='tr'> 
<SYNC Start=12244215><P class='tr'>&nbsp;
<SYNC Start=12244475><P class='tr'> 
<SYNC Start=12246445><P class='tr'>&nbsp;
<SYNC Start=12247925><P class='tr'> 
<SYNC Start=12250775><P class='tr'>&nbsp;
<SYNC Start=12251225><P class='tr'> 
<SYNC Start=12254395><P class='tr'>&nbsp;
<SYNC Start=12254395><P class='tr'> 
<SYNC Start=12257215><P class='tr'>&nbsp;
<SYNC Start=12257215><P class='tr'> 
<SYNC Start=12259945><P class='tr'>&nbsp;
<SYNC Start=12260445><P class='tr'> 
<SYNC Start=12263395><P class='tr'>&nbsp;
<SYNC Start=12263395><P class='tr'> 
<SYNC Start=12266355><P class='tr'>&nbsp;
<SYNC Start=12266355><P class='tr'> 
<SYNC Start=12269415><P class='tr'>&nbsp;
<SYNC Start=12269415><P class='tr'> 
<SYNC Start=12272505><P class='tr'>&nbsp;
<SYNC Start=12272825><P class='tr'> 
<SYNC Start=12276275><P class='tr'>&nbsp;
<SYNC Start=12276605><P class='tr'> 
<SYNC Start=12277605><P class='tr'>&nbsp;
<SYNC Start=12277805><P class='tr'> 
<SYNC Start=12280775><P class='tr'>&nbsp;
<SYNC Start=12280775><P class='tr'> 
<SYNC Start=12283595><P class='tr'>&nbsp;
<SYNC Start=12284095><P class='tr'> 
<SYNC Start=12287435><P class='tr'>&nbsp;
<SYNC Start=12287535><P class='tr'> 
<SYNC Start=12290365><P class='tr'>&nbsp;
<SYNC Start=12290365><P class='tr'> 
<SYNC Start=12291365><P class='tr'>&nbsp;
<SYNC Start=12292215><P class='tr'> 
<SYNC Start=12294475><P class='tr'>&nbsp;
<SYNC Start=12295215><P class='tr'> 
<SYNC Start=12298445><P class='tr'>&nbsp;
<SYNC Start=12298485><P class='tr'> 
<SYNC Start=12299485><P class='tr'>&nbsp;
<SYNC Start=12300435><P class='tr'> 
<SYNC Start=12301435><P class='tr'>&nbsp;
<SYNC Start=12302825><P class='tr'> 
<SYNC Start=12305185><P class='tr'>&nbsp;
<SYNC Start=12305865><P class='tr'> 
<SYNC Start=12307885><P class='tr'>&nbsp;
<SYNC Start=12308165><P class='tr'> 
<SYNC Start=12310615><P class='tr'>&nbsp;
<SYNC Start=12310925><P class='tr'> 
<SYNC Start=12313785><P class='tr'>&nbsp;
<SYNC Start=12315035><P class='tr'> 
<SYNC Start=12318035><P class='tr'>&nbsp;
<SYNC Start=12318035><P class='tr'> 
<SYNC Start=12319035><P class='tr'>&nbsp;
<SYNC Start=12319175><P class='tr'> 
<SYNC Start=12322255><P class='tr'>&nbsp;
<SYNC Start=12322255><P class='tr'> 
<SYNC Start=12324805><P class='tr'>&nbsp;
<SYNC Start=12324805><P class='tr'> 
<SYNC Start=12328035><P class='tr'>&nbsp;
<SYNC Start=12328105><P class='tr'> 
<SYNC Start=12331005><P class='tr'>&nbsp;
<SYNC Start=12331925><P class='tr'> 
<SYNC Start=12335005><P class='tr'>&nbsp;
<SYNC Start=12335005><P class='tr'> 
<SYNC Start=12336445><P class='tr'>&nbsp;
<SYNC Start=12336915><P class='tr'> 
<SYNC Start=12340075><P class='tr'>&nbsp;
<SYNC Start=12340075><P class='tr'> 
<SYNC Start=12342915><P class='tr'>&nbsp;
<SYNC Start=12342915><P class='tr'> 
<SYNC Start=12345305><P class='tr'>&nbsp;
<SYNC Start=12345955><P class='tr'> 
<SYNC Start=12348765><P class='tr'>&nbsp;
<SYNC Start=12348765><P class='tr'> 
<SYNC Start=12351485><P class='tr'>&nbsp;
<SYNC Start=12351955><P class='tr'> 
<SYNC Start=12354345><P class='tr'>&nbsp;
<SYNC Start=12355335><P class='tr'> 
<SYNC Start=12357475><P class='tr'>&nbsp;
<SYNC Start=12357475><P class='tr'> 
<SYNC Start=12360615><P class='tr'>&nbsp;
<SYNC Start=12360615><P class='tr'> 
<SYNC Start=12363635><P class='tr'>&nbsp;
<SYNC Start=12363635><P class='tr'> 
<SYNC Start=12366675><P class='tr'>&nbsp;
<SYNC Start=12366675><P class='tr'> 
<SYNC Start=12368035><P class='tr'>&nbsp;
<SYNC Start=12368455><P class='tr'> 
<SYNC Start=12371025><P class='tr'>&nbsp;
<SYNC Start=12372345><P class='tr'> 
<SYNC Start=12373345><P class='tr'>&nbsp;
<SYNC Start=12373785><P class='tr'> 
<SYNC Start=12376955><P class='tr'>&nbsp;
<SYNC Start=12376955><P class='tr'> 
<SYNC Start=12379685><P class='tr'>&nbsp;
<SYNC Start=12379685><P class='tr'> 
<SYNC Start=12382845><P class='tr'>&nbsp;
<SYNC Start=12383295><P class='tr'> 
<SYNC Start=12385035><P class='tr'>&nbsp;
<SYNC Start=12385525><P class='tr'> 
<SYNC Start=12388615><P class='tr'>&nbsp;
<SYNC Start=12388615><P class='tr'> 
<SYNC Start=12391575><P class='tr'>&nbsp;
<SYNC Start=12391575><P class='tr'> 
<SYNC Start=12394655><P class='tr'>&nbsp;
<SYNC Start=12394655><P class='tr'> 
<SYNC Start=12395655><P class='tr'>&nbsp;
<SYNC Start=12396265><P class='tr'> 
<SYNC Start=12397265><P class='tr'>&nbsp;
<SYNC Start=12397655><P class='tr'> 
<SYNC Start=12400355><P class='tr'>&nbsp;
<SYNC Start=12400355><P class='tr'> 
<SYNC Start=12403115><P class='tr'>&nbsp;
<SYNC Start=12403115><P class='tr'> 
<SYNC Start=12406575><P class='tr'>&nbsp;
<SYNC Start=12406595><P class='tr'> 
<SYNC Start=12410045><P class='tr'>&nbsp;
<SYNC Start=12410405><P class='tr'> 
<SYNC Start=12413695><P class='tr'>&nbsp;
<SYNC Start=12413695><P class='tr'> 
<SYNC Start=12416635><P class='tr'>&nbsp;
<SYNC Start=12416635><P class='tr'> 
<SYNC Start=12419515><P class='tr'>&nbsp;
<SYNC Start=12419515><P class='tr'> 
<SYNC Start=12422185><P class='tr'>&nbsp;
<SYNC Start=12422185><P class='tr'> 
<SYNC Start=12425175><P class='tr'>&nbsp;
<SYNC Start=12425175><P class='tr'> 
<SYNC Start=12426485><P class='tr'>&nbsp;
<SYNC Start=12428785><P class='tr'> 
<SYNC Start=12430125><P class='tr'>&nbsp;
<SYNC Start=12431315><P class='tr'> 
<SYNC Start=12433245><P class='tr'>&nbsp;
<SYNC Start=12435465><P class='tr'> 
<SYNC Start=12437815><P class='tr'>&nbsp;
<SYNC Start=12437815><P class='tr'> 
<SYNC Start=12440205><P class='tr'>&nbsp;
<SYNC Start=12440415><P class='tr'> 
<SYNC Start=12443885><P class='tr'>&nbsp;
<SYNC Start=12443905><P class='tr'> 
<SYNC Start=12446695><P class='tr'>&nbsp;
<SYNC Start=12446695><P class='tr'> 
<SYNC Start=12448855><P class='tr'>&nbsp;
<SYNC Start=12449915><P class='tr'> 
<SYNC Start=12452635><P class='tr'>&nbsp;
<SYNC Start=12453045><P class='tr'> 
<SYNC Start=12456095><P class='tr'>&nbsp;
<SYNC Start=12456095><P class='tr'> 
<SYNC Start=12457105><P class='tr'>&nbsp;
<SYNC Start=12458125><P class='tr'> 
<SYNC Start=12461265><P class='tr'>&nbsp;
<SYNC Start=12461265><P class='tr'> 
<SYNC Start=12464255><P class='tr'>&nbsp;
<SYNC Start=12464585><P class='tr'> 
<SYNC Start=12466785><P class='tr'>&nbsp;
<SYNC Start=12468065><P class='tr'> 
<SYNC Start=12469715><P class='tr'>&nbsp;
<SYNC Start=12470895><P class='tr'> 
<SYNC Start=12473895><P class='tr'>&nbsp;
<SYNC Start=12473895><P class='tr'> 
<SYNC Start=12475095><P class='tr'>&nbsp;
<SYNC Start=12475535><P class='tr'> 
<SYNC Start=12477705><P class='tr'>&nbsp;
<SYNC Start=12478375><P class='tr'> 
<SYNC Start=12481405><P class='tr'>&nbsp;
<SYNC Start=12481405><P class='tr'> 
<SYNC Start=12483435><P class='tr'>&nbsp;
<SYNC Start=12483435><P class='tr'> 
<SYNC Start=12485685><P class='tr'>&nbsp;
<SYNC Start=12486085><P class='tr'> 
<SYNC Start=12488905><P class='tr'>&nbsp;
<SYNC Start=12488905><P class='tr'> 
<SYNC Start=12490065><P class='tr'>&nbsp;
<SYNC Start=12490385><P class='tr'> 
<SYNC Start=12491385><P class='tr'>&nbsp;
<SYNC Start=12491465><P class='tr'> 
<SYNC Start=12494175><P class='tr'>&nbsp;
<SYNC Start=12494705><P class='tr'> 
<SYNC Start=12496385><P class='tr'>&nbsp;
<SYNC Start=12496695><P class='tr'> 
<SYNC Start=12499915><P class='tr'>&nbsp;
<SYNC Start=12500335><P class='tr'> 
<SYNC Start=12501335><P class='tr'>&nbsp;
<SYNC Start=12501345><P class='tr'> 
<SYNC Start=12504135><P class='tr'>&nbsp;
<SYNC Start=12504135><P class='tr'> 
<SYNC Start=12505265><P class='tr'>&nbsp;
<SYNC Start=12505575><P class='tr'> 
<SYNC Start=12508195><P class='tr'>&nbsp;
<SYNC Start=12508195><P class='tr'> 
<SYNC Start=12510935><P class='tr'>&nbsp;
<SYNC Start=12510935><P class='tr'> 
<SYNC Start=12513995><P class='tr'>&nbsp;
<SYNC Start=12513995><P class='tr'> 
<SYNC Start=12516665><P class='tr'>&nbsp;
<SYNC Start=12516665><P class='tr'> 
<SYNC Start=12519445><P class='tr'>&nbsp;
<SYNC Start=12519445><P class='tr'> 
<SYNC Start=12522615><P class='tr'>&nbsp;
<SYNC Start=12523075><P class='tr'> 
<SYNC Start=12524845><P class='tr'>&nbsp;
<SYNC Start=12525195><P class='tr'> 
<SYNC Start=12527875><P class='tr'>&nbsp;
<SYNC Start=12529625><P class='tr'> 
<SYNC Start=12532735><P class='tr'>&nbsp;
<SYNC Start=12532735><P class='tr'> 
<SYNC Start=12535845><P class='tr'>&nbsp;
<SYNC Start=12535945><P class='tr'> 
<SYNC Start=12539335><P class='tr'>&nbsp;
<SYNC Start=12539335><P class='tr'> 
<SYNC Start=12542395><P class='tr'>&nbsp;
<SYNC Start=12542395><P class='tr'> 
<SYNC Start=12545245><P class='tr'>&nbsp;
<SYNC Start=12545245><P class='tr'> 
<SYNC Start=12547495><P class='tr'>&nbsp;
<SYNC Start=12548015><P class='tr'> 
<SYNC Start=12551225><P class='tr'>&nbsp;
<SYNC Start=12551335><P class='tr'> 
<SYNC Start=12554265><P class='tr'>&nbsp;
<SYNC Start=12554265><P class='tr'> 
<SYNC Start=12556515><P class='tr'>&nbsp;
<SYNC Start=12556965><P class='tr'> 
<SYNC Start=12559935><P class='tr'>&nbsp;
<SYNC Start=12559935><P class='tr'> 
<SYNC Start=12561335><P class='tr'>&nbsp;
<SYNC Start=12561745><P class='tr'> 
<SYNC Start=12564465><P class='tr'>&nbsp;
<SYNC Start=12564465><P class='tr'> 
<SYNC Start=12567625><P class='tr'>&nbsp;
<SYNC Start=12568815><P class='tr'> 
<SYNC Start=12569865><P class='tr'>&nbsp;
<SYNC Start=12570765><P class='tr'> 
<SYNC Start=12573485><P class='tr'>&nbsp;
<SYNC Start=12574275><P class='tr'> 
<SYNC Start=12577535><P class='tr'>&nbsp;
<SYNC Start=12577535><P class='tr'> 
<SYNC Start=12580655><P class='tr'>&nbsp;
<SYNC Start=12580655><P class='tr'> 
<SYNC Start=12582355><P class='tr'>&nbsp;
<SYNC Start=12582675><P class='tr'> 
<SYNC Start=12585115><P class='tr'>&nbsp;
<SYNC Start=12585445><P class='tr'> 
<SYNC Start=12587895><P class='tr'>&nbsp;
<SYNC Start=12587895><P class='tr'> 
<SYNC Start=12590905><P class='tr'>&nbsp;
<SYNC Start=12590905><P class='tr'> 
<SYNC Start=12593465><P class='tr'>&nbsp;
<SYNC Start=12593465><P class='tr'> 
<SYNC Start=12596655><P class='tr'>&nbsp;
<SYNC Start=12596655><P class='tr'> 
<SYNC Start=12600055><P class='tr'>&nbsp;
<SYNC Start=12600115><P class='tr'> 
<SYNC Start=12603105><P class='tr'>&nbsp;
<SYNC Start=12603105><P class='tr'> 
<SYNC Start=12606055><P class='tr'>&nbsp;
<SYNC Start=12606055><P class='tr'> 
<SYNC Start=12609115><P class='tr'>&nbsp;
<SYNC Start=12609115><P class='tr'> 
<SYNC Start=12611525><P class='tr'>&nbsp;
<SYNC Start=12612525><P class='tr'> 
<SYNC Start=12614765><P class='tr'>&nbsp;
<SYNC Start=12615195><P class='tr'> 
<SYNC Start=12618095><P class='tr'>&nbsp;
<SYNC Start=12618095><P class='tr'> 
<SYNC Start=12619095><P class='tr'>&nbsp;
<SYNC Start=12619415><P class='tr'> 
<SYNC Start=12622225><P class='tr'>&nbsp;
<SYNC Start=12622795><P class='tr'> 
<SYNC Start=12626045><P class='tr'>&nbsp;
<SYNC Start=12626045><P class='tr'> 
<SYNC Start=12627085><P class='tr'>&nbsp;
<SYNC Start=12627665><P class='tr'> 
<SYNC Start=12630515><P class='tr'>&nbsp;
<SYNC Start=12630515><P class='tr'> 
<SYNC Start=12631945><P class='tr'>&nbsp;
<SYNC Start=12632725><P class='tr'> 
<SYNC Start=12633845><P class='tr'>&nbsp;
<SYNC Start=12635555><P class='tr'> 
<SYNC Start=12638785><P class='tr'>&nbsp;
<SYNC Start=12639745><P class='tr'> 
<SYNC Start=12641845><P class='tr'>&nbsp;
<SYNC Start=12642735><P class='tr'> 
<SYNC Start=12645705><P class='tr'>&nbsp;
<SYNC Start=12645705><P class='tr'> 
<SYNC Start=12648915><P class='tr'>&nbsp;
<SYNC Start=12648915><P class='tr'> 
<SYNC Start=12651685><P class='tr'>&nbsp;
<SYNC Start=12651685><P class='tr'> 
<SYNC Start=12653905><P class='tr'>&nbsp;
<SYNC Start=12654575><P class='tr'> 
<SYNC Start=12656385><P class='tr'>&nbsp;
<SYNC Start=12656725><P class='tr'> 
<SYNC Start=12659765><P class='tr'>&nbsp;
<SYNC Start=12659765><P class='tr'> 
<SYNC Start=12662835><P class='tr'>&nbsp;
<SYNC Start=12662835><P class='tr'> 
<SYNC Start=12663725><P class='tr'>&nbsp;
<SYNC Start=12663725><P class='tr'> 
<SYNC Start=12666615><P class='tr'>&nbsp;
<SYNC Start=12666615><P class='tr'> 
<SYNC Start=12669485><P class='tr'>&nbsp;
<SYNC Start=12669485><P class='tr'> 
<SYNC Start=12672265><P class='tr'>&nbsp;
<SYNC Start=12672265><P class='tr'> 
<SYNC Start=12674565><P class='tr'>&nbsp;
<SYNC Start=12675345><P class='tr'> 
<SYNC Start=12678385><P class='tr'>&nbsp;
<SYNC Start=12678385><P class='tr'> 
<SYNC Start=12681365><P class='tr'>&nbsp;
<SYNC Start=12681365><P class='tr'> 
<SYNC Start=12684085><P class='tr'>&nbsp;
<SYNC Start=12684865><P class='tr'> 
<SYNC Start=12687855><P class='tr'>&nbsp;
<SYNC Start=12688375><P class='tr'> 
<SYNC Start=12690845><P class='tr'>&nbsp;
<SYNC Start=12690845><P class='tr'> 
<SYNC Start=12693775><P class='tr'>&nbsp;
<SYNC Start=12693965><P class='tr'> 
<SYNC Start=12695525><P class='tr'>&nbsp;
<SYNC Start=12695995><P class='tr'> 
<SYNC Start=12697425><P class='tr'>&nbsp;
<SYNC Start=12697935><P class='tr'> 
<SYNC Start=12700875><P class='tr'>&nbsp;
<SYNC Start=12700875><P class='tr'> 
<SYNC Start=12704305><P class='tr'>&nbsp;
<SYNC Start=12704945><P class='tr'> 
<SYNC Start=12707755><P class='tr'>&nbsp;
<SYNC Start=12708695><P class='tr'> 
<SYNC Start=12710045><P class='tr'>&nbsp;
<SYNC Start=12711545><P class='tr'> 
<SYNC Start=12713485><P class='tr'>&nbsp;
<SYNC Start=12713485><P class='tr'> 
<SYNC Start=12716955><P class='tr'>&nbsp;
<SYNC Start=12717215><P class='tr'> 
<SYNC Start=12718215><P class='tr'>&nbsp;
<SYNC Start=12718485><P class='tr'> 
<SYNC Start=12721115><P class='tr'>&nbsp;
<SYNC Start=12722305><P class='tr'> 
<SYNC Start=12723305><P class='tr'>&nbsp;
<SYNC Start=12724065><P class='tr'> 
<SYNC Start=12725755><P class='tr'>&nbsp;
<SYNC Start=12726295><P class='tr'> 
<SYNC Start=12729215><P class='tr'>&nbsp;
<SYNC Start=12729215><P class='tr'> 
<SYNC Start=12731115><P class='tr'>&nbsp;
<SYNC Start=12731605><P class='tr'> 
<SYNC Start=12732995><P class='tr'>&nbsp;
<SYNC Start=12733555><P class='tr'> 
<SYNC Start=12737015><P class='tr'>&nbsp;
<SYNC Start=12738225><P class='tr'> 
<SYNC Start=12741005><P class='tr'>&nbsp;
<SYNC Start=12741005><P class='tr'> 
<SYNC Start=12743575><P class='tr'>&nbsp;
<SYNC Start=12743575><P class='tr'> 
<SYNC Start=12746545><P class='tr'>&nbsp;
<SYNC Start=12746545><P class='tr'> 
<SYNC Start=12749395><P class='tr'>&nbsp;
<SYNC Start=12749395><P class='tr'> 
<SYNC Start=12750395><P class='tr'>&nbsp;
<SYNC Start=12751005><P class='tr'> 
<SYNC Start=12752235><P class='tr'>&nbsp;
<SYNC Start=12752855><P class='tr'> 
<SYNC Start=12755635><P class='tr'>&nbsp;
<SYNC Start=12756705><P class='tr'> 
<SYNC Start=12758945><P class='tr'>&nbsp;
<SYNC Start=12759915><P class='tr'> 
<SYNC Start=12763395><P class='tr'>&nbsp;
<SYNC Start=12764865><P class='tr'> 
<SYNC Start=12766085><P class='tr'>&nbsp;
<SYNC Start=12766515><P class='tr'> 
<SYNC Start=12767815><P class='tr'>&nbsp;
<SYNC Start=12768535><P class='tr'> 
<SYNC Start=12771375><P class='tr'>&nbsp;
<SYNC Start=12772255><P class='tr'> 
<SYNC Start=12775255><P class='tr'>&nbsp;
<SYNC Start=12775255><P class='tr'> 
<SYNC Start=12776255><P class='tr'>&nbsp;
<SYNC Start=12777945><P class='tr'> 
<SYNC Start=12778945><P class='tr'>&nbsp;
<SYNC Start=12779255><P class='tr'> 
<SYNC Start=12782605><P class='tr'>&nbsp;
<SYNC Start=12782895><P class='tr'> 
<SYNC Start=12785725><P class='tr'>&nbsp;
<SYNC Start=12785725><P class='tr'> 
<SYNC Start=12789045><P class='tr'>&nbsp;
<SYNC Start=12789355><P class='tr'> 
<SYNC Start=12792435><P class='tr'>&nbsp;
<SYNC Start=12792435><P class='tr'> 
<SYNC Start=12794935><P class='tr'>&nbsp;
<SYNC Start=12795515><P class='tr'> 
<SYNC Start=12798515><P class='tr'>&nbsp;
<SYNC Start=12798515><P class='tr'> 
<SYNC Start=12801445><P class='tr'>&nbsp;
<SYNC Start=12801445><P class='tr'> 
<SYNC Start=12804155><P class='tr'>&nbsp;
<SYNC Start=12804225><P class='tr'> 
<SYNC Start=12807675><P class='tr'>&nbsp;
<SYNC Start=12808335><P class='tr'> 
<SYNC Start=12811345><P class='tr'>&nbsp;
<SYNC Start=12811345><P class='tr'> 
<SYNC Start=12812345><P class='tr'>&nbsp;
<SYNC Start=12813075><P class='tr'> 
<SYNC Start=12814075><P class='tr'>&nbsp;
<SYNC Start=12815255><P class='tr'> 
<SYNC Start=12816255><P class='tr'>&nbsp;
<SYNC Start=12817145><P class='tr'> 
<SYNC Start=12819545><P class='tr'>&nbsp;
<SYNC Start=12820605><P class='tr'> 
<SYNC Start=12822705><P class='tr'>&nbsp;
<SYNC Start=12823605><P class='tr'> 
<SYNC Start=12826455><P class='tr'>&nbsp;
<SYNC Start=12826455><P class='tr'> 
<SYNC Start=12829325><P class='tr'>&nbsp;
<SYNC Start=12829325><P class='tr'> 
<SYNC Start=12830325><P class='tr'>&nbsp;
<SYNC Start=12830665><P class='tr'> 
<SYNC Start=12833695><P class='tr'>&nbsp;
<SYNC Start=12833695><P class='tr'> 
<SYNC Start=12836855><P class='tr'>&nbsp;
<SYNC Start=12836855><P class='tr'> 
<SYNC Start=12839455><P class='tr'>&nbsp;
<SYNC Start=12839455><P class='tr'> 
<SYNC Start=12842385><P class='tr'>&nbsp;
<SYNC Start=12842385><P class='tr'> 
<SYNC Start=12845045><P class='tr'>&nbsp;
<SYNC Start=12845435><P class='tr'> 
<SYNC Start=12848475><P class='tr'>&nbsp;
<SYNC Start=12848475><P class='tr'> 
<SYNC Start=12849475><P class='tr'>&nbsp;
<SYNC Start=12851555><P class='tr'> 
<SYNC Start=12854965><P class='tr'>&nbsp;
<SYNC Start=12854965><P class='tr'> 
<SYNC Start=12857985><P class='tr'>&nbsp;
<SYNC Start=12857985><P class='tr'> 
<SYNC Start=12859335><P class='tr'>&nbsp;
<SYNC Start=12860375><P class='tr'> 
<SYNC Start=12863385><P class='tr'>&nbsp;
<SYNC Start=12863385><P class='tr'> 
<SYNC Start=12866315><P class='tr'>&nbsp;
<SYNC Start=12866775><P class='tr'> 
<SYNC Start=12868875><P class='tr'>&nbsp;
<SYNC Start=12870165><P class='tr'> 
<SYNC Start=12871185><P class='tr'>&nbsp;
<SYNC Start=12872095><P class='tr'> 
<SYNC Start=12874815><P class='tr'>&nbsp;
<SYNC Start=12875325><P class='tr'> 
<SYNC Start=12878375><P class='tr'>&nbsp;
<SYNC Start=12878375><P class='tr'> 
<SYNC Start=12879375><P class='tr'>&nbsp;
<SYNC Start=12881015><P class='tr'> 
<SYNC Start=12883345><P class='tr'>&nbsp;
<SYNC Start=12884345><P class='tr'> 
<SYNC Start=12885355><P class='tr'>&nbsp;
<SYNC Start=12887325><P class='tr'> 
<SYNC Start=12889675><P class='tr'>&nbsp;
<SYNC Start=12889675><P class='tr'> 
<SYNC Start=12892305><P class='tr'>&nbsp;
<SYNC Start=12893135><P class='tr'> 
<SYNC Start=12895165><P class='tr'>&nbsp;
<SYNC Start=12895715><P class='tr'> 
<SYNC Start=12898925><P class='tr'>&nbsp;
<SYNC Start=12898925><P class='tr'> 
<SYNC Start=12901335><P class='tr'>&nbsp;
<SYNC Start=12901335><P class='tr'> 
<SYNC Start=12904135><P class='tr'>&nbsp;
<SYNC Start=12904135><P class='tr'> 
<SYNC Start=12907305><P class='tr'>&nbsp;
<SYNC Start=12907365><P class='tr'> 
<SYNC Start=12910275><P class='tr'>&nbsp;
<SYNC Start=12911765><P class='tr'> 
<SYNC Start=12913205><P class='tr'>&nbsp;
<SYNC Start=12914285><P class='tr'> 
<SYNC Start=12917375><P class='tr'>&nbsp;
<SYNC Start=12918375><P class='tr'> 
<SYNC Start=12919945><P class='tr'>&nbsp;
<SYNC Start=12920835><P class='tr'> 
<SYNC Start=12922125><P class='tr'>&nbsp;
<SYNC Start=12923185><P class='tr'> 
<SYNC Start=12924185><P class='tr'>&nbsp;
<SYNC Start=12926255><P class='tr'> 
<SYNC Start=12927295><P class='tr'>&nbsp;
<SYNC Start=12928575><P class='tr'> 
<SYNC Start=12929575><P class='tr'>&nbsp;
<SYNC Start=12930325><P class='tr'> 
<SYNC Start=12933465><P class='tr'>&nbsp;
<SYNC Start=12934965><P class='tr'> 
<SYNC Start=12937365><P class='tr'>&nbsp;
<SYNC Start=12937365><P class='tr'> 
<SYNC Start=12939275><P class='tr'>&nbsp;
<SYNC Start=12939615><P class='tr'> 
<SYNC Start=12941985><P class='tr'>&nbsp;
<SYNC Start=12942625><P class='tr'> 
<SYNC Start=12944845><P class='tr'>&nbsp;
<SYNC Start=12945415><P class='tr'> 
<SYNC Start=12948095><P class='tr'>&nbsp;
<SYNC Start=12948095><P class='tr'> 
<SYNC Start=12951145><P class='tr'>&nbsp;
<SYNC Start=12951145><P class='tr'> 
<SYNC Start=12953735><P class='tr'>&nbsp;
<SYNC Start=12954425><P class='tr'> 
<SYNC Start=12957315><P class='tr'>&nbsp;
<SYNC Start=12957315><P class='tr'> 
<SYNC Start=12959525><P class='tr'>&nbsp;
<SYNC Start=12961375><P class='tr'> 
<SYNC Start=12962865><P class='tr'>&nbsp;
<SYNC Start=12963615><P class='tr'> 
<SYNC Start=12966475><P class='tr'>&nbsp;
<SYNC Start=12966475><P class='tr'> 
<SYNC Start=12967845><P class='tr'>&nbsp;
<SYNC Start=12968235><P class='tr'> 
<SYNC Start=12971085><P class='tr'>&nbsp;
<SYNC Start=12971085><P class='tr'> 
<SYNC Start=12973415><P class='tr'>&nbsp;
<SYNC Start=12973995><P class='tr'> 
<SYNC Start=12977095><P class='tr'>&nbsp;
<SYNC Start=12977095><P class='tr'> 
<SYNC Start=12980265><P class='tr'>&nbsp;
<SYNC Start=12980265><P class='tr'> 
<SYNC Start=12982935><P class='tr'>&nbsp;
<SYNC Start=12983015><P class='tr'> 
<SYNC Start=12985995><P class='tr'>&nbsp;
<SYNC Start=12985995><P class='tr'> 
<SYNC Start=12988895><P class='tr'>&nbsp;
<SYNC Start=12989395><P class='tr'> 
<SYNC Start=12990785><P class='tr'>&nbsp;
<SYNC Start=12991175><P class='tr'> 
<SYNC Start=12994005><P class='tr'>&nbsp;
<SYNC Start=12994815><P class='tr'> 
<SYNC Start=12997585><P class='tr'>&nbsp;
<SYNC Start=12998175><P class='tr'> 
<SYNC Start=13001255><P class='tr'>&nbsp;
<SYNC Start=13001255><P class='tr'> 
<SYNC Start=13004005><P class='tr'>&nbsp;
<SYNC Start=13004195><P class='tr'> 
<SYNC Start=13007235><P class='tr'>&nbsp;
<SYNC Start=13007235><P class='tr'> 
<SYNC Start=13009775><P class='tr'>&nbsp;
<SYNC Start=13009775><P class='tr'> 
<SYNC Start=13011075><P class='tr'>&nbsp;
<SYNC Start=13011685><P class='tr'> 
<SYNC Start=13013235><P class='tr'>&nbsp;
<SYNC Start=13013635><P class='tr'> 
<SYNC Start=13016535><P class='tr'>&nbsp;
<SYNC Start=13016535><P class='tr'> 
<SYNC Start=13018575><P class='tr'>&nbsp;
<SYNC Start=13019875><P class='tr'> 
<SYNC Start=13022905><P class='tr'>&nbsp;
<SYNC Start=13022905><P class='tr'> 
<SYNC Start=13026065><P class='tr'>&nbsp;
<SYNC Start=13026675><P class='tr'> 
<SYNC Start=13029635><P class='tr'>&nbsp;
<SYNC Start=13029905><P class='tr'> 
<SYNC Start=13031085><P class='tr'>&nbsp;
<SYNC Start=13031535><P class='tr'> 
<SYNC Start=13034575><P class='tr'>&nbsp;
<SYNC Start=13034575><P class='tr'> 
<SYNC Start=13037515><P class='tr'>&nbsp;
<SYNC Start=13037515><P class='tr'> 
<SYNC Start=13040545><P class='tr'>&nbsp;
<SYNC Start=13040545><P class='tr'> 
<SYNC Start=13041895><P class='tr'>&nbsp;
<SYNC Start=13042385><P class='tr'> 
<SYNC Start=13045325><P class='tr'>&nbsp;
<SYNC Start=13045555><P class='tr'> 
<SYNC Start=13048745><P class='tr'>&nbsp;
<SYNC Start=13049675><P class='tr'> 
<SYNC Start=13051095><P class='tr'>&nbsp;
<SYNC Start=13051735><P class='tr'> 
<SYNC Start=13054735><P class='tr'>&nbsp;
<SYNC Start=13054735><P class='tr'> 
<SYNC Start=13057825><P class='tr'>&nbsp;
<SYNC Start=13057825><P class='tr'> 
<SYNC Start=13060295><P class='tr'>&nbsp;
<SYNC Start=13060725><P class='tr'> 
<SYNC Start=13063265><P class='tr'>&nbsp;
<SYNC Start=13063525><P class='tr'> 
<SYNC Start=13066435><P class='tr'>&nbsp;
<SYNC Start=13066435><P class='tr'> 
<SYNC Start=13067735><P class='tr'>&nbsp;
<SYNC Start=13068285><P class='tr'> 
<SYNC Start=13071355><P class='tr'>&nbsp;
<SYNC Start=13071355><P class='tr'> 
<SYNC Start=13072575><P class='tr'>&nbsp;
<SYNC Start=13073545><P class='tr'> 
<SYNC Start=13076125><P class='tr'>&nbsp;
<SYNC Start=13076125><P class='tr'> 
<SYNC Start=13079165><P class='tr'>&nbsp;
<SYNC Start=13079165><P class='tr'> 
<SYNC Start=13080215><P class='tr'>&nbsp;
<SYNC Start=13080535><P class='tr'> 
<SYNC Start=13083915><P class='tr'>&nbsp;
<SYNC Start=13083955><P class='tr'> 
<SYNC Start=13086535><P class='tr'>&nbsp;
<SYNC Start=13086535><P class='tr'> 
<SYNC Start=13089545><P class='tr'>&nbsp;
<SYNC Start=13089545><P class='tr'> 
<SYNC Start=13091925><P class='tr'>&nbsp;
<SYNC Start=13091925><P class='tr'> 
<SYNC Start=13094785><P class='tr'>&nbsp;
<SYNC Start=13094785><P class='tr'> 
<SYNC Start=13096355><P class='tr'>&nbsp;
<SYNC Start=13096955><P class='tr'> 
<SYNC Start=13099915><P class='tr'>&nbsp;
<SYNC Start=13100165><P class='tr'> 
<SYNC Start=13102755><P class='tr'>&nbsp;
<SYNC Start=13102995><P class='tr'> 
<SYNC Start=13104115><P class='tr'>&nbsp;
<SYNC Start=13104585><P class='tr'> 
<SYNC Start=13106525><P class='tr'>&nbsp;
<SYNC Start=13107505><P class='tr'> 
<SYNC Start=13110845><P class='tr'>&nbsp;
<SYNC Start=13111025><P class='tr'> 
<SYNC Start=13112045><P class='tr'>&nbsp;
<SYNC Start=13112625><P class='tr'> 
<SYNC Start=13115635><P class='tr'>&nbsp;
<SYNC Start=13115635><P class='tr'> 
<SYNC Start=13119055><P class='tr'>&nbsp;
<SYNC Start=13119055><P class='tr'> 
<SYNC Start=13121725><P class='tr'>&nbsp;
<SYNC Start=13121725><P class='tr'> 
<SYNC Start=13124725><P class='tr'>&nbsp;
<SYNC Start=13124725><P class='tr'> 
<SYNC Start=13128175><P class='tr'>&nbsp;
<SYNC Start=13128415><P class='tr'> 
<SYNC Start=13131025><P class='tr'>&nbsp;
<SYNC Start=13131025><P class='tr'> 
<SYNC Start=13132865><P class='tr'>&nbsp;
<SYNC Start=13133285><P class='tr'> 
<SYNC Start=13135795><P class='tr'>&nbsp;
<SYNC Start=13136085><P class='tr'> 
<SYNC Start=13138175><P class='tr'>&nbsp;
<SYNC Start=13138745><P class='tr'> 
<SYNC Start=13139785><P class='tr'>&nbsp;
<SYNC Start=13140425><P class='tr'> 
<SYNC Start=13143355><P class='tr'>&nbsp;
<SYNC Start=13144055><P class='tr'> 
<SYNC Start=13147435><P class='tr'>&nbsp;
<SYNC Start=13147435><P class='tr'> 
<SYNC Start=13148965><P class='tr'>&nbsp;
<SYNC Start=13149595><P class='tr'> 
<SYNC Start=13152335><P class='tr'>&nbsp;
<SYNC Start=13152455><P class='tr'> 
<SYNC Start=13154395><P class='tr'>&nbsp;
<SYNC Start=13155035><P class='tr'> 
<SYNC Start=13157235><P class='tr'>&nbsp;
<SYNC Start=13157915><P class='tr'> 
<SYNC Start=13159415><P class='tr'>&nbsp;
<SYNC Start=13160355><P class='tr'> 
<SYNC Start=13163105><P class='tr'>&nbsp;
<SYNC Start=13163945><P class='tr'> 
<SYNC Start=13166955><P class='tr'>&nbsp;
<SYNC Start=13166955><P class='tr'> 
<SYNC Start=13167955><P class='tr'>&nbsp;
<SYNC Start=13168195><P class='tr'> 
<SYNC Start=13171465><P class='tr'>&nbsp;
<SYNC Start=13171525><P class='tr'> 
<SYNC Start=13174485><P class='tr'>&nbsp;
<SYNC Start=13174495><P class='tr'> 
<SYNC Start=13177935><P class='tr'>&nbsp;
<SYNC Start=13178145><P class='tr'> 
<SYNC Start=13181255><P class='tr'>&nbsp;
<SYNC Start=13181525><P class='tr'> 
<SYNC Start=13183405><P class='tr'>&nbsp;
<SYNC Start=13184645><P class='tr'> 
<SYNC Start=13187605><P class='tr'>&nbsp;
<SYNC Start=13187605><P class='tr'> 
<SYNC Start=13190465><P class='tr'>&nbsp;
<SYNC Start=13191105><P class='tr'> 
<SYNC Start=13193635><P class='tr'>&nbsp;
<SYNC Start=13199745><P class='tr'> 
<SYNC Start=13200745><P class='tr'>&nbsp;
<SYNC Start=13201015><P class='tr'> 
<SYNC Start=13202925><P class='tr'>&nbsp;
<SYNC Start=13204805><P class='tr'> 
<SYNC Start=13207605><P class='tr'>&nbsp;
<SYNC Start=13207605><P class='tr'> 
<SYNC Start=13208985><P class='tr'>&nbsp;
<SYNC Start=13214585><P class='tr'> 
<SYNC Start=13216715><P class='tr'>&nbsp;
<SYNC Start=13217355><P class='tr'> 
<SYNC Start=13218985><P class='tr'>&nbsp;
<SYNC Start=13222835><P class='tr'> 
<SYNC Start=13224045><P class='tr'>&nbsp;
<SYNC Start=13224365><P class='tr'> 
<SYNC Start=13226715><P class='tr'>&nbsp;
<SYNC Start=13227085><P class='tr'> 
<SYNC Start=13230005><P class='tr'>&nbsp;
<SYNC Start=13230005><P class='tr'> 
<SYNC Start=13231005><P class='tr'>&nbsp;
<SYNC Start=13231025><P class='tr'> 
<SYNC Start=13232165><P class='tr'>&nbsp;
<SYNC Start=13233315><P class='tr'> 
<SYNC Start=13234315><P class='tr'>&nbsp;
<SYNC Start=13235525><P class='tr'> 
<SYNC Start=13236525><P class='tr'>&nbsp;
<SYNC Start=13236645><P class='tr'> 
<SYNC Start=13239605><P class='tr'>&nbsp;
<SYNC Start=13239705><P class='tr'> 
<SYNC Start=13242955><P class='tr'>&nbsp;
<SYNC Start=13243135><P class='tr'> 
<SYNC Start=13244485><P class='tr'>&nbsp;
<SYNC Start=13245075><P class='tr'> 
<SYNC Start=13246655><P class='tr'>&nbsp;
<SYNC Start=13248575><P class='tr'> 
<SYNC Start=13249575><P class='tr'>&nbsp;
<SYNC Start=13251895><P class='tr'> 
<SYNC Start=13253315><P class='tr'>&nbsp;
<SYNC Start=13254505><P class='tr'> 
<SYNC Start=13256815><P class='tr'>&nbsp;
<SYNC Start=13257425><P class='tr'> 
<SYNC Start=13259125><P class='tr'>&nbsp;
<SYNC Start=13260325><P class='tr'> 
<SYNC Start=13263355><P class='tr'>&nbsp;
<SYNC Start=13263355><P class='tr'> 
<SYNC Start=13264355><P class='tr'>&nbsp;
<SYNC Start=13264935><P class='tr'> 
<SYNC Start=13265935><P class='tr'>&nbsp;
<SYNC Start=13266655><P class='tr'> 
<SYNC Start=13268465><P class='tr'>&nbsp;
<SYNC Start=13269345><P class='tr'> 
<SYNC Start=13272165><P class='tr'>&nbsp;
<SYNC Start=13275545><P class='tr'> 
<SYNC Start=13278245><P class='tr'>&nbsp;
<SYNC Start=13278245><P class='tr'> 
<SYNC Start=13279255><P class='tr'>&nbsp;
<SYNC Start=13281185><P class='tr'> 
<SYNC Start=13284055><P class='tr'>&nbsp;
<SYNC Start=13284425><P class='tr'> 
<SYNC Start=13286845><P class='tr'>&nbsp;
<SYNC Start=13286845><P class='tr'> 
<SYNC Start=13288515><P class='tr'>&nbsp;
<SYNC Start=13289005><P class='tr'> 
<SYNC Start=13292175><P class='tr'>&nbsp;
<SYNC Start=13292175><P class='tr'> 
<SYNC Start=13295535><P class='tr'>&nbsp;
<SYNC Start=13295625><P class='tr'> 
<SYNC Start=13298575><P class='tr'>&nbsp;
<SYNC Start=13298575><P class='tr'> 
<SYNC Start=13301525><P class='tr'>&nbsp;
<SYNC Start=13301525><P class='tr'> 
<SYNC Start=13302525><P class='tr'>&nbsp;
<SYNC Start=13302855><P class='tr'> 
<SYNC Start=13304715><P class='tr'>&nbsp;
<SYNC Start=13308165><P class='tr'> 
<SYNC Start=13311105><P class='tr'>&nbsp;
<SYNC Start=13311105><P class='tr'> 
<SYNC Start=13314135><P class='tr'>&nbsp;
<SYNC Start=13314135><P class='tr'> 
<SYNC Start=13316025><P class='tr'>&nbsp;
<SYNC Start=13316625><P class='tr'> 
<SYNC Start=13318295><P class='tr'>&nbsp;
<SYNC Start=13318915><P class='tr'> 
<SYNC Start=13319915><P class='tr'>&nbsp;
<SYNC Start=13320515><P class='tr'> 
<SYNC Start=13322475><P class='tr'>&nbsp;
<SYNC Start=13324875><P class='tr'> 
<SYNC Start=13327455><P class='tr'>&nbsp;
<SYNC Start=13328075><P class='tr'> 
<SYNC Start=13331095><P class='tr'>&nbsp;
<SYNC Start=13331375><P class='tr'> 
<SYNC Start=13334525><P class='tr'>&nbsp;
<SYNC Start=13334525><P class='tr'> 
<SYNC Start=13337565><P class='tr'>&nbsp;
<SYNC Start=13337565><P class='tr'> 
<SYNC Start=13340355><P class='tr'>&nbsp;
<SYNC Start=13340595><P class='tr'> 
<SYNC Start=13343635><P class='tr'>&nbsp;
<SYNC Start=13343635><P class='tr'> 
<SYNC Start=13346575><P class='tr'>&nbsp;
<SYNC Start=13346575><P class='tr'> 
<SYNC Start=13348335><P class='tr'>&nbsp;
<SYNC Start=13348415><P class='tr'> 
<SYNC Start=13351395><P class='tr'>&nbsp;
<SYNC Start=13351395><P class='tr'> 
<SYNC Start=13354185><P class='tr'>&nbsp;
<SYNC Start=13354185><P class='tr'> 
<SYNC Start=13355765><P class='tr'>&nbsp;
<SYNC Start=13357085><P class='tr'> 
<SYNC Start=13358085><P class='tr'>&nbsp;
<SYNC Start=13359095><P class='tr'> 
<SYNC Start=13360095><P class='tr'>&nbsp;
<SYNC Start=13360395><P class='tr'> 
<SYNC Start=13363115><P class='tr'>&nbsp;
<SYNC Start=13363275><P class='tr'> 
<SYNC Start=13364275><P class='tr'>&nbsp;
<SYNC Start=13365235><P class='tr'> 
<SYNC Start=13366875><P class='tr'>&nbsp;
<SYNC Start=13367715><P class='tr'> 
<SYNC Start=13370595><P class='tr'>&nbsp;
<SYNC Start=13370595><P class='tr'> 
<SYNC Start=13371785><P class='tr'>&nbsp;
<SYNC Start=13372185><P class='tr'> 
<SYNC Start=13374815><P class='tr'>&nbsp;
<SYNC Start=13375335><P class='tr'> 
<SYNC Start=13378175><P class='tr'>&nbsp;
<SYNC Start=13378605><P class='tr'> 
<SYNC Start=13381065><P class='tr'>&nbsp;
<SYNC Start=13381725><P class='tr'> 
<SYNC Start=13383525><P class='tr'>&nbsp;
<SYNC Start=13383905><P class='tr'> 
<SYNC Start=13386195><P class='tr'>&nbsp;
<SYNC Start=13386945><P class='tr'> 
<SYNC Start=13389645><P class='tr'>&nbsp;
<SYNC Start=13389645><P class='tr'> 
<SYNC Start=13391445><P class='tr'>&nbsp;
<SYNC Start=13391765><P class='tr'> 
<SYNC Start=13394835><P class='tr'>&nbsp;
<SYNC Start=13394835><P class='tr'> 
<SYNC Start=13398095><P class='tr'>&nbsp;
<SYNC Start=13398095><P class='tr'> 
<SYNC Start=13401155><P class='tr'>&nbsp;
<SYNC Start=13401155><P class='tr'> 
<SYNC Start=13403355><P class='tr'>&nbsp;
<SYNC Start=13403775><P class='tr'> 
<SYNC Start=13404775><P class='tr'>&nbsp;
<SYNC Start=13405635><P class='tr'> 
<SYNC Start=13408685><P class='tr'>&nbsp;
<SYNC Start=13408685><P class='tr'> 
<SYNC Start=13410275><P class='tr'>&nbsp;
<SYNC Start=13411145><P class='tr'> 
<SYNC Start=13414105><P class='tr'>&nbsp;
<SYNC Start=13414105><P class='tr'> 
<SYNC Start=13416125><P class='tr'>&nbsp;
<SYNC Start=13417185><P class='tr'> 
<SYNC Start=13418185><P class='tr'>&nbsp;
<SYNC Start=13418185><P class='tr'> 
<SYNC Start=13421495><P class='tr'>&nbsp;
<SYNC Start=13422385><P class='tr'> 
<SYNC Start=13425645><P class='tr'>&nbsp;
<SYNC Start=13425755><P class='tr'> 
<SYNC Start=13428705><P class='tr'>&nbsp;
<SYNC Start=13430565><P class='tr'> 
<SYNC Start=13433875><P class='tr'>&nbsp;
<SYNC Start=13434295><P class='tr'> 
<SYNC Start=13435295><P class='tr'>&nbsp;
<SYNC Start=13436185><P class='tr'> 
<SYNC Start=13438765><P class='tr'>&nbsp;
<SYNC Start=13439205><P class='tr'> 
<SYNC Start=13442305><P class='tr'>&nbsp;
<SYNC Start=13442305><P class='tr'> 
<SYNC Start=13445205><P class='tr'>&nbsp;
<SYNC Start=13445625><P class='tr'> 
<SYNC Start=13446625><P class='tr'>&nbsp;
<SYNC Start=13447265><P class='tr'> 
<SYNC Start=13450275><P class='tr'>&nbsp;
<SYNC Start=13450275><P class='tr'> 
<SYNC Start=13452515><P class='tr'>&nbsp;
<SYNC Start=13452515><P class='tr'> 
<SYNC Start=13455595><P class='tr'>&nbsp;
<SYNC Start=13455595><P class='tr'> 
<SYNC Start=13458575><P class='tr'>&nbsp;
<SYNC Start=13458575><P class='tr'> 
<SYNC Start=13459575><P class='tr'>&nbsp;
<SYNC Start=13459995><P class='tr'> 
<SYNC Start=13463015><P class='tr'>&nbsp;
<SYNC Start=13463015><P class='tr'> 
<SYNC Start=13466005><P class='tr'>&nbsp;
<SYNC Start=13466005><P class='tr'> 
<SYNC Start=13468635><P class='tr'>&nbsp;
<SYNC Start=13469705><P class='tr'> 
<SYNC Start=13470705><P class='tr'>&nbsp;
<SYNC Start=13472315><P class='tr'> 
<SYNC Start=13475005><P class='tr'>&nbsp;
<SYNC Start=13475005><P class='tr'> 
<SYNC Start=13477995><P class='tr'>&nbsp;
<SYNC Start=13477995><P class='tr'> 
<SYNC Start=13478995><P class='tr'>&nbsp;
<SYNC Start=13479105><P class='tr'> 
<SYNC Start=13481755><P class='tr'>&nbsp;
<SYNC Start=13482765><P class='tr'> 
<SYNC Start=13485185><P class='tr'>&nbsp;
<SYNC Start=13487195><P class='tr'> 
<SYNC Start=13488195><P class='tr'>&nbsp;
<SYNC Start=13489245><P class='tr'> 
<SYNC Start=13491215><P class='tr'>&nbsp;
<SYNC Start=13492285><P class='tr'> 
<SYNC Start=13494225><P class='tr'>&nbsp;
<SYNC Start=13495705><P class='tr'> 
<SYNC Start=13496705><P class='tr'>&nbsp;
<SYNC Start=13496945><P class='tr'> 
<SYNC Start=13499975><P class='tr'>&nbsp;
<SYNC Start=13499975><P class='tr'> 
<SYNC Start=13501065><P class='tr'>&nbsp;
<SYNC Start=13503715><P class='tr'> 
<SYNC Start=13506515><P class='tr'>&nbsp;
<SYNC Start=13506515><P class='tr'> 
<SYNC Start=13509185><P class='tr'>&nbsp;
<SYNC Start=13509185><P class='tr'> 
<SYNC Start=13512205><P class='tr'>&nbsp;
<SYNC Start=13512205><P class='tr'> 
<SYNC Start=13515285><P class='tr'>&nbsp;
<SYNC Start=13515285><P class='tr'> 
<SYNC Start=13518305><P class='tr'>&nbsp;
<SYNC Start=13518305><P class='tr'> 
<SYNC Start=13521295><P class='tr'>&nbsp;
<SYNC Start=13521295><P class='tr'> 
<SYNC Start=13524275><P class='tr'>&nbsp;
<SYNC Start=13524275><P class='tr'> 
<SYNC Start=13527295><P class='tr'>&nbsp;
<SYNC Start=13527295><P class='tr'> 
<SYNC Start=13528295><P class='tr'>&nbsp;
<SYNC Start=13528485><P class='tr'> 
<SYNC Start=13530575><P class='tr'>&nbsp;
<SYNC Start=13531085><P class='tr'> 
<SYNC Start=13534065><P class='tr'>&nbsp;
<SYNC Start=13534065><P class='tr'> 
<SYNC Start=13536205><P class='tr'>&nbsp;
<SYNC Start=13536665><P class='tr'> 
<SYNC Start=13539615><P class='tr'>&nbsp;
<SYNC Start=13539615><P class='tr'> 
<SYNC Start=13542715><P class='tr'>&nbsp;
<SYNC Start=13542715><P class='tr'> 
<SYNC Start=13545585><P class='tr'>&nbsp;
<SYNC Start=13545585><P class='tr'> 
<SYNC Start=13548345><P class='tr'>&nbsp;
<SYNC Start=13548525><P class='tr'> 
<SYNC Start=13550915><P class='tr'>&nbsp;
<SYNC Start=13551785><P class='tr'> 
<SYNC Start=13552785><P class='tr'>&nbsp;
<SYNC Start=13553685><P class='tr'> 
<SYNC Start=13556925><P class='tr'>&nbsp;
<SYNC Start=13556925><P class='tr'> 
<SYNC Start=13558515><P class='tr'>&nbsp;
<SYNC Start=13559315><P class='tr'> 
<SYNC Start=13562075><P class='tr'>&nbsp;
<SYNC Start=13562075><P class='tr'> 
<SYNC Start=13563085><P class='tr'>&nbsp;
<SYNC Start=13565185><P class='tr'> 
<SYNC Start=13566185><P class='tr'>&nbsp;
<SYNC Start=13566515><P class='tr'> 
<SYNC Start=13568555><P class='tr'>&nbsp;
<SYNC Start=13568555><P class='tr'> 
<SYNC Start=13571575><P class='tr'>&nbsp;
<SYNC Start=13571575><P class='tr'> 
<SYNC Start=13574505><P class='tr'>&nbsp;
<SYNC Start=13574585><P class='tr'> 
<SYNC Start=13577605><P class='tr'>&nbsp;
<SYNC Start=13577605><P class='tr'> 
<SYNC Start=13580695><P class='tr'>&nbsp;
<SYNC Start=13580695><P class='tr'> 
<SYNC Start=13583655><P class='tr'>&nbsp;
<SYNC Start=13583715><P class='tr'> 
<SYNC Start=13587025><P class='tr'>&nbsp;
<SYNC Start=13587335><P class='tr'> 
<SYNC Start=13590255><P class='tr'>&nbsp;
<SYNC Start=13590255><P class='tr'> 
<SYNC Start=13592885><P class='tr'>&nbsp;
<SYNC Start=13593485><P class='tr'> 
<SYNC Start=13596665><P class='tr'>&nbsp;
<SYNC Start=13596665><P class='tr'> 
<SYNC Start=13599545><P class='tr'>&nbsp;
<SYNC Start=13599545><P class='tr'> 
<SYNC Start=13601705><P class='tr'>&nbsp;
<SYNC Start=13603265><P class='tr'> 
<SYNC Start=13604865><P class='tr'>&nbsp;
<SYNC Start=13606025><P class='tr'> 
<SYNC Start=13609315><P class='tr'>&nbsp;
<SYNC Start=13609425><P class='tr'> 
<SYNC Start=13612475><P class='tr'>&nbsp;
<SYNC Start=13612575><P class='tr'> 
<SYNC Start=13615605><P class='tr'>&nbsp;
<SYNC Start=13615915><P class='tr'> 
<SYNC Start=13619335><P class='tr'>&nbsp;
<SYNC Start=13619625><P class='tr'> 
<SYNC Start=13620625><P class='tr'>&nbsp;
<SYNC Start=13620755><P class='tr'> 
<SYNC Start=13621875><P class='tr'>&nbsp;
<SYNC Start=13622495><P class='tr'> 
<SYNC Start=13624245><P class='tr'>&nbsp;
<SYNC Start=13625645><P class='tr'> 
<SYNC Start=13628655><P class='tr'>&nbsp;
<SYNC Start=13628655><P class='tr'> 
<SYNC Start=13631535><P class='tr'>&nbsp;
<SYNC Start=13631535><P class='tr'> 
<SYNC Start=13633595><P class='tr'>&nbsp;
<SYNC Start=13634045><P class='tr'> 
<SYNC Start=13635995><P class='tr'>&nbsp;
<SYNC Start=13636355><P class='tr'> 
<SYNC Start=13638995><P class='tr'>&nbsp;
<SYNC Start=13638995><P class='tr'> 
<SYNC Start=13642385><P class='tr'>&nbsp;
<SYNC Start=13643015><P class='tr'> 
<SYNC Start=13644015><P class='tr'>&nbsp;
<SYNC Start=13645075><P class='tr'> 
<SYNC Start=13647765><P class='tr'>&nbsp;
<SYNC Start=13647765><P class='tr'> 
<SYNC Start=13648985><P class='tr'>&nbsp;
<SYNC Start=13649315><P class='tr'> 
<SYNC Start=13650315><P class='tr'>&nbsp;
<SYNC Start=13650755><P class='tr'> 
<SYNC Start=13652865><P class='tr'>&nbsp;
<SYNC Start=13653355><P class='tr'> 
<SYNC Start=13654355><P class='tr'>&nbsp;
<SYNC Start=13655235><P class='tr'> 
<SYNC Start=13657465><P class='tr'>&nbsp;
<SYNC Start=13658105><P class='tr'> 
<SYNC Start=13659105><P class='tr'>&nbsp;
<SYNC Start=13660525><P class='tr'> 
<SYNC Start=13663705><P class='tr'>&nbsp;
<SYNC Start=13663705><P class='tr'> 
<SYNC Start=13665385><P class='tr'>&nbsp;
<SYNC Start=13666095><P class='tr'> 
<SYNC Start=13667125><P class='tr'>&nbsp;
<SYNC Start=13667515><P class='tr'> 
<SYNC Start=13670705><P class='tr'>&nbsp;
<SYNC Start=13670895><P class='tr'> 
<SYNC Start=13673715><P class='tr'>&nbsp;
<SYNC Start=13674355><P class='tr'> 
<SYNC Start=13676655><P class='tr'>&nbsp;
<SYNC Start=13677415><P class='tr'> 
<SYNC Start=13680215><P class='tr'>&nbsp;
<SYNC Start=13680315><P class='tr'> 
<SYNC Start=13683365><P class='tr'>&nbsp;
<SYNC Start=13683725><P class='tr'> 
<SYNC Start=13685855><P class='tr'>&nbsp;
<SYNC Start=13688435><P class='tr'> 
<SYNC Start=13691355><P class='tr'>&nbsp;
<SYNC Start=13692215><P class='tr'> 
<SYNC Start=13693845><P class='tr'>&nbsp;
<SYNC Start=13694335><P class='tr'> 
<SYNC Start=13696245><P class='tr'>&nbsp;
<SYNC Start=13697265><P class='tr'> 
<SYNC Start=13699665><P class='tr'>&nbsp;
<SYNC Start=13700735><P class='tr'> 
<SYNC Start=13702275><P class='tr'>&nbsp;
<SYNC Start=13704645><P class='tr'> 
<SYNC Start=13706385><P class='tr'>&nbsp;
<SYNC Start=13706955><P class='tr'> 
<SYNC Start=13708475><P class='tr'>&nbsp;
<SYNC Start=13708955><P class='tr'> 
<SYNC Start=13710665><P class='tr'>&nbsp;
<SYNC Start=13711145><P class='tr'> 
<SYNC Start=13713545><P class='tr'>&nbsp;
<SYNC Start=13713545><P class='tr'> 
<SYNC Start=13715435><P class='tr'>&nbsp;
<SYNC Start=13715495><P class='tr'> 
<SYNC Start=13718265><P class='tr'>&nbsp;
<SYNC Start=13718265><P class='tr'> 
<SYNC Start=13719265><P class='tr'>&nbsp;
<SYNC Start=13720435><P class='tr'> 
<SYNC Start=13723505><P class='tr'>&nbsp;
<SYNC Start=13724385><P class='tr'> 
<SYNC Start=13727115><P class='tr'>&nbsp;
<SYNC Start=13728185><P class='tr'> 
<SYNC Start=13731105><P class='tr'>&nbsp;
<SYNC Start=13731105><P class='tr'> 
<SYNC Start=13733835><P class='tr'>&nbsp;
<SYNC Start=13734365><P class='tr'> 
<SYNC Start=13735935><P class='tr'>&nbsp;
<SYNC Start=13736965><P class='tr'> 
<SYNC Start=13740225><P class='tr'>&nbsp;
<SYNC Start=13740435><P class='tr'> 
<SYNC Start=13742385><P class='tr'>&nbsp;
<SYNC Start=13743415><P class='tr'> 
<SYNC Start=13746115><P class='tr'>&nbsp;
<SYNC Start=13746475><P class='tr'> 
<SYNC Start=13749355><P class='tr'>&nbsp;
<SYNC Start=13749355><P class='tr'> 
<SYNC Start=13751915><P class='tr'>&nbsp;
<SYNC Start=13751915><P class='tr'> 
<SYNC Start=13754475><P class='tr'>&nbsp;
<SYNC Start=13754475><P class='tr'> 
<SYNC Start=13756145><P class='tr'>&nbsp;
<SYNC Start=13756465><P class='tr'> 
<SYNC Start=13758305><P class='tr'>&nbsp;
<SYNC Start=13759415><P class='tr'> 
<SYNC Start=13762535><P class='tr'>&nbsp;
<SYNC Start=13762535><P class='tr'> 
<SYNC Start=13765865><P class='tr'>&nbsp;
<SYNC Start=13765865><P class='tr'> 
<SYNC Start=13769015><P class='tr'>&nbsp;
<SYNC Start=13769015><P class='tr'> 
<SYNC Start=13772265><P class='tr'>&nbsp;
<SYNC Start=13772485><P class='tr'> 
<SYNC Start=13775495><P class='tr'>&nbsp;
<SYNC Start=13775495><P class='tr'> 
<SYNC Start=13778645><P class='tr'>&nbsp;
<SYNC Start=13778645><P class='tr'> 
<SYNC Start=13781745><P class='tr'>&nbsp;
<SYNC Start=13782915><P class='tr'> 
<SYNC Start=13784605><P class='tr'>&nbsp;
<SYNC Start=13785095><P class='tr'> 
<SYNC Start=13787935><P class='tr'>&nbsp;
<SYNC Start=13787935><P class='tr'> 
<SYNC Start=13790145><P class='tr'>&nbsp;
<SYNC Start=13790145><P class='tr'> 
<SYNC Start=13792155><P class='tr'>&nbsp;
<SYNC Start=13792985><P class='tr'> 
<SYNC Start=13795015><P class='tr'>&nbsp;
<SYNC Start=13795865><P class='tr'> 
<SYNC Start=13799045><P class='tr'>&nbsp;
<SYNC Start=13799105><P class='tr'> 
<SYNC Start=13802145><P class='tr'>&nbsp;
<SYNC Start=13802145><P class='tr'> 
<SYNC Start=13803145><P class='tr'>&nbsp;
<SYNC Start=13803355><P class='tr'> 
<SYNC Start=13804735><P class='tr'>&nbsp;
<SYNC Start=13805745><P class='tr'> 
<SYNC Start=13809095><P class='tr'>&nbsp;
<SYNC Start=13810985><P class='tr'> 
<SYNC Start=13813665><P class='tr'>&nbsp;
<SYNC Start=13819325><P class='tr'> 
<SYNC Start=13822575><P class='tr'>&nbsp;
<SYNC Start=13822575><P class='tr'> 
<SYNC Start=13824475><P class='tr'>&nbsp;
<SYNC Start=13824475><P class='tr'> 
<SYNC Start=13827145><P class='tr'>&nbsp;
<SYNC Start=13827145><P class='tr'> 
<SYNC Start=13829865><P class='tr'>&nbsp;
<SYNC Start=13829865><P class='tr'> 
<SYNC Start=13831385><P class='tr'>&nbsp;
<SYNC Start=13834765><P class='tr'> 
<SYNC Start=13836695><P class='tr'>&nbsp;
<SYNC Start=13836695><P class='tr'> 
<SYNC Start=13839555><P class='tr'>&nbsp;
<SYNC Start=13840605><P class='tr'> 
<SYNC Start=13841995><P class='tr'>&nbsp;
<SYNC Start=13843665><P class='tr'> 
<SYNC Start=13847075><P class='tr'>&nbsp;
<SYNC Start=13847135><P class='tr'> 
<SYNC Start=13850185><P class='tr'>&nbsp;
<SYNC Start=13850185><P class='tr'> 
<SYNC Start=13852555><P class='tr'>&nbsp;
<SYNC Start=13852555><P class='tr'> 
<SYNC Start=13855405><P class='tr'>&nbsp;
<SYNC Start=13855795><P class='tr'> 
<SYNC Start=13857535><P class='tr'>&nbsp;
<SYNC Start=13858235><P class='tr'> 
<SYNC Start=13860345><P class='tr'>&nbsp;
<SYNC Start=13860415><P class='tr'> 
<SYNC Start=13863225><P class='tr'>&nbsp;
<SYNC Start=13863225><P class='tr'> 
<SYNC Start=13866395><P class='tr'>&nbsp;
<SYNC Start=13866685><P class='tr'> 
<SYNC Start=13869775><P class='tr'>&nbsp;
<SYNC Start=13870045><P class='tr'> 
<SYNC Start=13873145><P class='tr'>&nbsp;
<SYNC Start=13873145><P class='tr'> 
<SYNC Start=13875505><P class='tr'>&nbsp;
<SYNC Start=13876085><P class='tr'> 
<SYNC Start=13878105><P class='tr'>&nbsp;
<SYNC Start=13880355><P class='tr'> 
<SYNC Start=13883345><P class='tr'>&nbsp;
<SYNC Start=13883345><P class='tr'> 
<SYNC Start=13884345><P class='tr'>&nbsp;
<SYNC Start=13885675><P class='tr'> 
<SYNC Start=13888735><P class='tr'>&nbsp;
<SYNC Start=13888915><P class='tr'> 
<SYNC Start=13892175><P class='tr'>&nbsp;
<SYNC Start=13892275><P class='tr'> 
<SYNC Start=13895565><P class='tr'>&nbsp;
<SYNC Start=13896755><P class='tr'> 
<SYNC Start=13900255><P class='tr'>&nbsp;
<SYNC Start=13900365><P class='tr'> 
<SYNC Start=13901365><P class='tr'>&nbsp;
<SYNC Start=13901735><P class='tr'> 
<SYNC Start=13904615><P class='tr'>&nbsp;
<SYNC Start=13905185><P class='tr'> 
<SYNC Start=13908145><P class='tr'>&nbsp;
<SYNC Start=13908335><P class='tr'> 
<SYNC Start=13911485><P class='tr'>&nbsp;
<SYNC Start=13911575><P class='tr'> 
<SYNC Start=13914375><P class='tr'>&nbsp;
<SYNC Start=13914375><P class='tr'> 
<SYNC Start=13917755><P class='tr'>&nbsp;
<SYNC Start=13918285><P class='tr'> 
<SYNC Start=13920885><P class='tr'>&nbsp;
<SYNC Start=13921695><P class='tr'> 
<SYNC Start=13924445><P class='tr'>&nbsp;
<SYNC Start=13924445><P class='tr'> 
<SYNC Start=13926905><P class='tr'>&nbsp;
<SYNC Start=13927235><P class='tr'> 
<SYNC Start=13930355><P class='tr'>&nbsp;
<SYNC Start=13930355><P class='tr'> 
<SYNC Start=13931405><P class='tr'>&nbsp;
<SYNC Start=13933105><P class='tr'> 
<SYNC Start=13935045><P class='tr'>&nbsp;
<SYNC Start=13936215><P class='tr'> 
<SYNC Start=13937215><P class='tr'>&nbsp;
<SYNC Start=13937685><P class='tr'> 
<SYNC Start=13938875><P class='tr'>&nbsp;
<SYNC Start=13939865><P class='tr'> 
<SYNC Start=13941615><P class='tr'>&nbsp;
<SYNC Start=13942695><P class='tr'> 
<SYNC Start=13945545><P class='tr'>&nbsp;
<SYNC Start=13945545><P class='tr'> 
<SYNC Start=13947745><P class='tr'>&nbsp;
<SYNC Start=13948905><P class='tr'> 
<SYNC Start=13951805><P class='tr'>&nbsp;
<SYNC Start=13952635><P class='tr'> 
<SYNC Start=13955665><P class='tr'>&nbsp;
<SYNC Start=13955665><P class='tr'> 
<SYNC Start=13958785><P class='tr'>&nbsp;
<SYNC Start=13958785><P class='tr'> 
<SYNC Start=13962285><P class='tr'>&nbsp;
<SYNC Start=13962515><P class='tr'> 
<SYNC Start=13965475><P class='tr'>&nbsp;
<SYNC Start=13965475><P class='tr'> 
<SYNC Start=13967825><P class='tr'>&nbsp;
<SYNC Start=13967825><P class='tr'> 
<SYNC Start=13969845><P class='tr'>&nbsp;
<SYNC Start=13970945><P class='tr'> 
<SYNC Start=13973905><P class='tr'>&nbsp;
<SYNC Start=13973905><P class='tr'> 
<SYNC Start=13976975><P class='tr'>&nbsp;
<SYNC Start=13976975><P class='tr'> 
<SYNC Start=13978035><P class='tr'>&nbsp;
<SYNC Start=13978645><P class='tr'> 
<SYNC Start=13981425><P class='tr'>&nbsp;
<SYNC Start=13981425><P class='tr'> 
<SYNC Start=13984605><P class='tr'>&nbsp;
<SYNC Start=13984605><P class='tr'> 
<SYNC Start=13986665><P class='tr'>&nbsp;
<SYNC Start=13987085><P class='tr'> 
<SYNC Start=13990125><P class='tr'>&nbsp;
<SYNC Start=13990125><P class='tr'> 
<SYNC Start=13993175><P class='tr'>&nbsp;
<SYNC Start=13993175><P class='tr'> 
<SYNC Start=13994175><P class='tr'>&nbsp;
<SYNC Start=13994365><P class='tr'> 
<SYNC Start=13997385><P class='tr'>&nbsp;
<SYNC Start=13997635><P class='tr'> 
<SYNC Start=14000755><P class='tr'>&nbsp;
<SYNC Start=14000755><P class='tr'> 
<SYNC Start=14002095><P class='tr'>&nbsp;
<SYNC Start=14002555><P class='tr'> 
<SYNC Start=14005355><P class='tr'>&nbsp;
<SYNC Start=14005355><P class='tr'> 
<SYNC Start=14006355><P class='tr'>&nbsp;
<SYNC Start=14006785><P class='tr'> 
<SYNC Start=14009835><P class='tr'>&nbsp;
<SYNC Start=14009835><P class='tr'> 
<SYNC Start=14010835><P class='tr'>&nbsp;
<SYNC Start=14011365><P class='tr'> 
<SYNC Start=14014425><P class='tr'>&nbsp;
<SYNC Start=14014595><P class='tr'> 
<SYNC Start=14018015><P class='tr'>&nbsp;
<SYNC Start=14018015><P class='tr'> 
<SYNC Start=14020895><P class='tr'>&nbsp;
<SYNC Start=14020895><P class='tr'> 
<SYNC Start=14023665><P class='tr'>&nbsp;
<SYNC Start=14023665><P class='tr'> 
<SYNC Start=14025865><P class='tr'>&nbsp;
<SYNC Start=14026515><P class='tr'> 
<SYNC Start=14029325><P class='tr'>&nbsp;
<SYNC Start=14029325><P class='tr'> 
<SYNC Start=14032475><P class='tr'>&nbsp;
<SYNC Start=14032705><P class='tr'> 
<SYNC Start=14035575><P class='tr'>&nbsp;
<SYNC Start=14036165><P class='tr'> 
<SYNC Start=14039625><P class='tr'>&nbsp;
<SYNC Start=14039955><P class='tr'> 
<SYNC Start=14042895><P class='tr'>&nbsp;
<SYNC Start=14042895><P class='tr'> 
<SYNC Start=14046225><P class='tr'>&nbsp;
<SYNC Start=14046225><P class='tr'> 
<SYNC Start=14049075><P class='tr'>&nbsp;
<SYNC Start=14049075><P class='tr'> 
<SYNC Start=14050075><P class='tr'>&nbsp;
<SYNC Start=14050555><P class='tr'> 
<SYNC Start=14053615><P class='tr'>&nbsp;
<SYNC Start=14053615><P class='tr'> 
<SYNC Start=14054615><P class='tr'>&nbsp;
<SYNC Start=14055805><P class='tr'> 
<SYNC Start=14058555><P class='tr'>&nbsp;
<SYNC Start=14058555><P class='tr'> 
<SYNC Start=14061365><P class='tr'>&nbsp;
<SYNC Start=14061365><P class='tr'> 
<SYNC Start=14064325><P class='tr'>&nbsp;
<SYNC Start=14064425><P class='tr'> 
<SYNC Start=14067695><P class='tr'>&nbsp;
<SYNC Start=14067745><P class='tr'> 
<SYNC Start=14070655><P class='tr'>&nbsp;
<SYNC Start=14070655><P class='tr'> 
<SYNC Start=14074045><P class='tr'>&nbsp;
<SYNC Start=14074145><P class='tr'> 
<SYNC Start=14077125><P class='tr'>&nbsp;
<SYNC Start=14077125><P class='tr'> 
<SYNC Start=14079965><P class='tr'>&nbsp;
<SYNC Start=14079965><P class='tr'> 
<SYNC Start=14081725><P class='tr'>&nbsp;
<SYNC Start=14082555><P class='tr'> 
<SYNC Start=14084925><P class='tr'>&nbsp;
<SYNC Start=14085765><P class='tr'> 
<SYNC Start=14087075><P class='tr'>&nbsp;
<SYNC Start=14087635><P class='tr'> 
<SYNC Start=14090615><P class='tr'>&nbsp;
<SYNC Start=14090615><P class='tr'> 
<SYNC Start=14091615><P class='tr'>&nbsp;
<SYNC Start=14091985><P class='tr'> 
<SYNC Start=14094915><P class='tr'>&nbsp;
<SYNC Start=14094915><P class='tr'> 
<SYNC Start=14097785><P class='tr'>&nbsp;
<SYNC Start=14097785><P class='tr'> 
<SYNC Start=14100765><P class='tr'>&nbsp;
<SYNC Start=14100765><P class='tr'> 
<SYNC Start=14103545><P class='tr'>&nbsp;
<SYNC Start=14103545><P class='tr'> 
<SYNC Start=14106485><P class='tr'>&nbsp;
<SYNC Start=14106695><P class='tr'> 
<SYNC Start=14109525><P class='tr'>&nbsp;
<SYNC Start=14109585><P class='tr'> 
<SYNC Start=14111865><P class='tr'>&nbsp;
<SYNC Start=14111865><P class='tr'> 
<SYNC Start=14114915><P class='tr'>&nbsp;
<SYNC Start=14116025><P class='tr'> 
<SYNC Start=14118855><P class='tr'>&nbsp;
<SYNC Start=14118855><P class='tr'> 
<SYNC Start=14120125><P class='tr'>&nbsp;
<SYNC Start=14120755><P class='tr'> 
<SYNC Start=14123605><P class='tr'>&nbsp;
<SYNC Start=14124365><P class='tr'> 
<SYNC Start=14127335><P class='tr'>&nbsp;
<SYNC Start=14127335><P class='tr'> 
<SYNC Start=14130465><P class='tr'>&nbsp;
<SYNC Start=14130465><P class='tr'> 
<SYNC Start=14132115><P class='tr'>&nbsp;
<SYNC Start=14132445><P class='tr'> 
<SYNC Start=14133445><P class='tr'>&nbsp;
<SYNC Start=14133825><P class='tr'> 
<SYNC Start=14135955><P class='tr'>&nbsp;
<SYNC Start=14136345><P class='tr'> 
<SYNC Start=14139325><P class='tr'>&nbsp;
<SYNC Start=14139325><P class='tr'> 
<SYNC Start=14142225><P class='tr'>&nbsp;
<SYNC Start=14142225><P class='tr'> 
<SYNC Start=14144495><P class='tr'>&nbsp;
<SYNC Start=14145705><P class='tr'> 
<SYNC Start=14148805><P class='tr'>&nbsp;
<SYNC Start=14148805><P class='tr'> 
<SYNC Start=14152085><P class='tr'>&nbsp;
<SYNC Start=14152085><P class='tr'> 
<SYNC Start=14154475><P class='tr'>&nbsp;
<SYNC Start=14156715><P class='tr'> 
<SYNC Start=14159935><P class='tr'>&nbsp;
<SYNC Start=14159935><P class='tr'> 
<SYNC Start=14162785><P class='tr'>&nbsp;
<SYNC Start=14162785><P class='tr'> 
<SYNC Start=14165735><P class='tr'>&nbsp;
<SYNC Start=14165735><P class='tr'> 
<SYNC Start=14166915><P class='tr'>&nbsp;
<SYNC Start=14167425><P class='tr'> 
<SYNC Start=14170605><P class='tr'>&nbsp;
<SYNC Start=14171285><P class='tr'> 
<SYNC Start=14172285><P class='tr'>&nbsp;
<SYNC Start=14173265><P class='tr'> 
<SYNC Start=14176055><P class='tr'>&nbsp;
<SYNC Start=14176055><P class='tr'> 
<SYNC Start=14179215><P class='tr'>&nbsp;
<SYNC Start=14179515><P class='tr'> 
<SYNC Start=14181845><P class='tr'>&nbsp;
<SYNC Start=14181845><P class='tr'> 
<SYNC Start=14185015><P class='tr'>&nbsp;
<SYNC Start=14185015><P class='tr'> 
<SYNC Start=14188295><P class='tr'>&nbsp;
<SYNC Start=14188705><P class='tr'> 
<SYNC Start=14191765><P class='tr'>&nbsp;
<SYNC Start=14191835><P class='tr'> 
<SYNC Start=14194345><P class='tr'>&nbsp;
<SYNC Start=14194345><P class='tr'> 
<SYNC Start=14197255><P class='tr'>&nbsp;
<SYNC Start=14197425><P class='tr'> 
<SYNC Start=14198425><P class='tr'>&nbsp;
<SYNC Start=14198615><P class='tr'> 
<SYNC Start=14201685><P class='tr'>&nbsp;
<SYNC Start=14201685><P class='tr'> 
<SYNC Start=14204575><P class='tr'>&nbsp;
<SYNC Start=14204625><P class='tr'> 
<SYNC Start=14207295><P class='tr'>&nbsp;
<SYNC Start=14208015><P class='tr'> 
<SYNC Start=14210565><P class='tr'>&nbsp;
<SYNC Start=14211585><P class='tr'> 
<SYNC Start=14213125><P class='tr'>&nbsp;
<SYNC Start=14213975><P class='tr'> 
<SYNC Start=14217105><P class='tr'>&nbsp;
<SYNC Start=14217375><P class='tr'> 
<SYNC Start=14219725><P class='tr'>&nbsp;
<SYNC Start=14219725><P class='tr'> 
<SYNC Start=14221695><P class='tr'>&nbsp;
<SYNC Start=14222415><P class='tr'> 
<SYNC Start=14224205><P class='tr'>&nbsp;
<SYNC Start=14225035><P class='tr'> 
<SYNC Start=14228245><P class='tr'>&nbsp;
<SYNC Start=14228245><P class='tr'> 
<SYNC Start=14231285><P class='tr'>&nbsp;
<SYNC Start=14231285><P class='tr'> 
<SYNC Start=14233815><P class='tr'>&nbsp;
<SYNC Start=14233815><P class='tr'> 
<SYNC Start=14236135><P class='tr'>&nbsp;
<SYNC Start=14237575><P class='tr'> 
<SYNC Start=14239505><P class='tr'>&nbsp;
<SYNC Start=14240025><P class='tr'> 
<SYNC Start=14242545><P class='tr'>&nbsp;
<SYNC Start=14244105><P class='tr'> 
<SYNC Start=14245975><P class='tr'>&nbsp;
<SYNC Start=14247975><P class='tr'> 
<SYNC Start=14249845><P class='tr'>&nbsp;
<SYNC Start=14251325><P class='tr'> 
<SYNC Start=14252325><P class='tr'>&nbsp;
<SYNC Start=14254385><P class='tr'> 
<SYNC Start=14255815><P class='tr'>&nbsp;
<SYNC Start=14256815><P class='tr'> 
<SYNC Start=14258285><P class='tr'>&nbsp;
<SYNC Start=14259485><P class='tr'> 
<SYNC Start=14261555><P class='tr'>&nbsp;
<SYNC Start=14262185><P class='tr'> 
<SYNC Start=14265315><P class='tr'>&nbsp;
<SYNC Start=14265965><P class='tr'> 
<SYNC Start=14267045><P class='tr'>&nbsp;
<SYNC Start=14267625><P class='tr'> 
<SYNC Start=14270315><P class='tr'>&nbsp;
<SYNC Start=14270315><P class='tr'> 
<SYNC Start=14273245><P class='tr'>&nbsp;
<SYNC Start=14273245><P class='tr'> 
<SYNC Start=14275885><P class='tr'>&nbsp;
<SYNC Start=14275885><P class='tr'> 
<SYNC Start=14278675><P class='tr'>&nbsp;
<SYNC Start=14278675><P class='tr'> 
<SYNC Start=14281175><P class='tr'>&nbsp;
<SYNC Start=14282105><P class='tr'> 
<SYNC Start=14283285><P class='tr'>&nbsp;
<SYNC Start=14284165><P class='tr'> 
<SYNC Start=14286065><P class='tr'>&nbsp;
<SYNC Start=14286805><P class='tr'> 
<SYNC Start=14289785><P class='tr'>&nbsp;
<SYNC Start=14289785><P class='tr'> 
<SYNC Start=14292815><P class='tr'>&nbsp;
<SYNC Start=14292815><P class='tr'> 
<SYNC Start=14293815><P class='tr'>&nbsp;
<SYNC Start=14293845><P class='tr'> 
<SYNC Start=14296705><P class='tr'>&nbsp;
<SYNC Start=14296705><P class='tr'> 
<SYNC Start=14299365><P class='tr'>&nbsp;
<SYNC Start=14299365><P class='tr'> 
<SYNC Start=14302545><P class='tr'>&nbsp;
<SYNC Start=14302545><P class='tr'> 
<SYNC Start=14303875><P class='tr'>&nbsp;
<SYNC Start=14304385><P class='tr'> 
<SYNC Start=14307575><P class='tr'>&nbsp;
<SYNC Start=14307575><P class='tr'> 
<SYNC Start=14310035><P class='tr'>&nbsp;
<SYNC Start=14310115><P class='tr'> 
<SYNC Start=14312935><P class='tr'>&nbsp;
<SYNC Start=14312935><P class='tr'> 
<SYNC Start=14315735><P class='tr'>&nbsp;
<SYNC Start=14315735><P class='tr'> 
<SYNC Start=14318735><P class='tr'>&nbsp;
<SYNC Start=14318735><P class='tr'> 
<SYNC Start=14319605><P class='tr'>&nbsp;
<SYNC Start=14319605><P class='tr'> 
<SYNC Start=14322195><P class='tr'>&nbsp;
<SYNC Start=14322195><P class='tr'> 
<SYNC Start=14324905><P class='tr'>&nbsp;
<SYNC Start=14324905><P class='tr'> 
<SYNC Start=14328025><P class='tr'>&nbsp;
<SYNC Start=14328735><P class='tr'> 
<SYNC Start=14329875><P class='tr'>&nbsp;
<SYNC Start=14330505><P class='tr'> 
<SYNC Start=14333125><P class='tr'>&nbsp;
<SYNC Start=14333125><P class='tr'> 
<SYNC Start=14336165><P class='tr'>&nbsp;
<SYNC Start=14336955><P class='tr'> 
<SYNC Start=14338015><P class='tr'>&nbsp;
<SYNC Start=14339045><P class='tr'> 
<SYNC Start=14340875><P class='tr'>&nbsp;
<SYNC Start=14341325><P class='tr'> 
<SYNC Start=14344365><P class='tr'>&nbsp;
<SYNC Start=14344365><P class='tr'> 
<SYNC Start=14346295><P class='tr'>&nbsp;
<SYNC Start=14346805><P class='tr'> 
<SYNC Start=14349915><P class='tr'>&nbsp;
<SYNC Start=14349915><P class='tr'> 
<SYNC Start=14350915><P class='tr'>&nbsp;
<SYNC Start=14351035><P class='tr'> 
<SYNC Start=14353685><P class='tr'>&nbsp;
<SYNC Start=14353685><P class='tr'> 
<SYNC Start=14357085><P class='tr'>&nbsp;
<SYNC Start=14357155><P class='tr'> 
<SYNC Start=14360475><P class='tr'>&nbsp;
<SYNC Start=14360625><P class='tr'> 
<SYNC Start=14363375><P class='tr'>&nbsp;
<SYNC Start=14363375><P class='tr'> 
<SYNC Start=14366055><P class='tr'>&nbsp;
<SYNC Start=14366055><P class='tr'> 
<SYNC Start=14367395><P class='tr'>&nbsp;
<SYNC Start=14367865><P class='tr'> 
<SYNC Start=14370945><P class='tr'>&nbsp;
<SYNC Start=14370945><P class='tr'> 
<SYNC Start=14371945><P class='tr'>&nbsp;
<SYNC Start=14372005><P class='tr'> 
<SYNC Start=14373835><P class='tr'>&nbsp;
<SYNC Start=14374315><P class='tr'> 
<SYNC Start=14377095><P class='tr'>&nbsp;
<SYNC Start=14377095><P class='tr'> 
<SYNC Start=14380435><P class='tr'>&nbsp;
<SYNC Start=14380915><P class='tr'> 
<SYNC Start=14381915><P class='tr'>&nbsp;
<SYNC Start=14382335><P class='tr'> 
<SYNC Start=14385365><P class='tr'>&nbsp;
<SYNC Start=14385365><P class='tr'> 
<SYNC Start=14387465><P class='tr'>&nbsp;
<SYNC Start=14388095><P class='tr'> 
<SYNC Start=14390925><P class='tr'>&nbsp;
<SYNC Start=14390925><P class='tr'> 
<SYNC Start=14394215><P class='tr'>&nbsp;
<SYNC Start=14394255><P class='tr'> 
<SYNC Start=14397265><P class='tr'>&nbsp;
<SYNC Start=14397265><P class='tr'> 
<SYNC Start=14400155><P class='tr'>&nbsp;
</body>
</sami>